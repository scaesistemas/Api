// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SCAE.Data.Context;

#nullable disable

namespace SCAE.Data.Migrations.ScaeApi
{
    [DbContext(typeof(ScaeApiContext))]
    [Migration("20250414172231_IntegracaoHokmaBradesco")]
    partial class IntegracaoHokmaBradesco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("almoxarifado", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.AlmoxarifadoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlmoxarifadoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("almoxarifadoitem", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.GrupoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("grupoproduto", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlmoxarifadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataHoraExecucao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Executada")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.ToTable("inventario", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.InventarioItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InventarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("InventarioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("inventarioitem", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlmoxarifadoItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Custo")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EmpreendimentoConsumidorId")
                        .HasColumnType("integer");

                    b.Property<int?>("EtapaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOrigemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoItemId");

                    b.HasIndex("EmpreendimentoConsumidorId");

                    b.HasIndex("EtapaId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("TipoId");

                    b.HasIndex("TipoOrigemId");

                    b.ToTable("movimentacao", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("EstoqueCritico")
                        .HasColumnType("numeric");

                    b.Property<decimal>("EstoqueMinimo")
                        .HasColumnType("numeric");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea");

                    b.Property<int>("GrupoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoCustoMedio")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UltimaCompraData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UltimaCompraFornecedorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UltimaCompraPreco")
                        .HasColumnType("numeric");

                    b.Property<int>("UnidadeMedidaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UltimaCompraFornecedorId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("produto", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Produto+ProdutoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("produtofornecedor", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Requisicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlmoxarifadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataHoraExecucao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<bool>("Executada")
                        .HasColumnType("boolean");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<string>("Solicitante")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("requisicao", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.RequisicaoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CustoMedio")
                        .HasColumnType("numeric");

                    b.Property<int>("EtapaId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<int>("RequisicaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnidadeMedidaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("RequisicaoId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("requisicaoitem", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.TipoMovimentacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipomovimentacao", "almoxarifado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Entrada"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Saída"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoproduto", "almoxarifado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Produto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Serviço"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("unidademedida", "almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoPrimeiroReajuste")
                        .HasColumnType("integer");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContratoAnteriorAditadoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataVencimentoOriginal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("IntervaloReajusteId")
                        .HasColumnType("integer");

                    b.Property<decimal>("JurosAmortizacao")
                        .HasColumnType("numeric");

                    b.Property<short>("MelhorDia")
                        .HasColumnType("smallint");

                    b.Property<int>("MesReajuste")
                        .HasColumnType("integer");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroProcessoJudicial")
                        .HasColumnType("text");

                    b.Property<decimal>("PercentualAdiministradora")
                        .HasColumnType("numeric");

                    b.Property<int>("PeriodicidadeReajuste")
                        .HasColumnType("integer");

                    b.Property<int>("PeriodicidadeRenovacao")
                        .HasColumnType("integer");

                    b.Property<int>("Prazo")
                        .HasColumnType("integer");

                    b.Property<int>("PrazoContratual")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PrimeiroVencimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("integer");

                    b.Property<bool>("Renovavel")
                        .HasColumnType("boolean");

                    b.Property<string>("Responsavel")
                        .HasColumnType("text");

                    b.Property<int>("Sequencia")
                        .HasColumnType("integer");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoAditamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAmortizacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoIndiceId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoProcessoJudicialId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoProdutoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UnidadePrincipalId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorComissaoCorretor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("ContratoAnteriorAditadoId");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("IntervaloReajusteId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoAditamentoId");

                    b.HasIndex("TipoAmortizacaoId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoId");

                    b.HasIndex("TipoIndiceId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TipoProcessoJudicialId");

                    b.HasIndex("TipoProdutoId");

                    b.HasIndex("UnidadePrincipalId");

                    b.ToTable("contrato", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.ToTable("contratocliente", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoCorretor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<int>("CorretorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<int>("QtdeParcela")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorFixo")
                        .HasColumnType("numeric");

                    b.Property<bool>("isPercentual")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("CorretorId");

                    b.ToTable("contratocorretor", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConteudoEditavel")
                        .HasColumnType("text");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<string>("DFourSignDocumentId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataCancelado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEnvioAssinatura")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFinalizado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataUploadDocumento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoId");

                    b.ToTable("contratodigital", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigitalDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoDigitalId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoDigitalId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("contratodigitaldocumento", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ModeloContratoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Conteudo")
                        .HasColumnType("text");

                    b.Property<bool>("IsPadraoSistema")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoId");

                    b.ToTable("modelocontratodigital", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Conteudo = "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body style=\"font-family: Arial, Helvetica, sans-serif;\">\r\n    <p style=\"text-align: center;\"><span style=\"font-size: 18pt;\"><em><strong>LOTEAMENTO</strong> </em>  {Empreendimento_Nome} </span></p>\r\n<hr />\r\n<p style=\"text-align: center;\"><span style=\"font-size: 14pt;\">CONTRATO PADR&Atilde;O DE PROMESSA DE COMPRA E VENDA</span></p>\r\n<p style=\"text-align: right;\">N&deg; {Contrato_Numero}  </p>\r\n<p><br />Por este instrumento particular, as partes contratantes devidamente qualificadas no quadro resumo abaixo, t&ecirc;m, entre si, justo e contratado a presente promessa de compra e venda de im&oacute;vel, nas condi&ccedil;&otilde;es abaixo:</p>\r\n<table style=\"border-collapse: collapse; width: 100%; height: 12481px; border-color: #000000; border-style: solid;\" border=\"1\">\r\n<tbody>\r\n<tr style=\"height: 49px;\">\r\n<td style=\"width: 98.5055%; height: 49px; text-align: center;\">QUADRO RESUMO</td>\r\n</tr>\r\n<tr style=\"height: 427px;\">\r\n<td style=\"width: 98.5055%; height: 427px;\">\r\n<p style=\"padding-left: 40px;\">A &ndash; DA QUALIFICA&Ccedil;&Atilde;O DAS PARTES:</p>\r\n<p style=\"padding-left: 40px;\">A1 &ndash; PROMITENTE VENDEDOR(A): {Empresa_Nome} , inscrita no CNPJ sob o n&ordm; {Empresa_CpfCnpj} , com sede &agrave; {Empresa_Logradouro} - n&ordm; {Empresa_Numero} , {Empresa_Bairro} , {Empresa_Municipio} , {Empresa_Estado} - {Empresa_Sigla_Estado} , CEP - {Empresa_Cep} neste ato representada por seu/sua s&oacute;cio(a)   {Socio_Nome} , {Socio_Nacionalidade} , {Socio_Profissao} , {Socio_EstadoCivil} se convive em uni&atilde;o est&aacute;vel, RG {Socio_Rg} , orgão expedidor {Socio_OrgaoExpedidor} , data de expedição {Socio_DataExpedicao} , CPF {Socio_CpfCnpj} , E-mail {Socio_Email} , telefone {Socio_Telefone} , {Socio_Logradouro} , {Socio_Municipio} , {Socio_Bairro} , {Socio_Estado} - {Socio_Sigla_Estado} , nos termos do Contrato Social e da Altera&ccedil;&atilde;o Contratual _______________________ &ordf;, datada de ___/___/___ , devidamente registrada   na  ______________________ sob   o   arquivamento   n &deg; _______________________ .</p>\r\n<p style=\"padding-left: 40px;\">A2 &ndash; PROMITENTE(S) COMPRADOR(A)(ES): {Cliente_Nome} , {Cliente_Nacionalidade} , {Cliente_Profissao} , {Cliente_EstadoCivil} , {Cliente_OrgaoExpedido} , data de expedi&ccedil;&atilde;o - {Cliente_DataExpedicao} , CPF - {Cliente_CpfCnpj} , e-mail - {Cliente_Email} , telefone - {Cliente_Telefone} , resid&ecirc;ncia e domic&iacute;lio - {Cliente_Logradouro} , N&ordm; {Cliente_Numero} - {Cliente_Municipio} , {Cliente_Estado} - {Cliente_Sigla_Estado} , e {Cliente2_Nome} , {Cliente2_Nacionalidade} , {Cliente2_Profissao} , {Cliente2_EstadoCivil} , {Cliente2_OrgaoExpedido} , data de nascimento {Cliente2_DataNascimento} , CPF {Cliente2_CpfCnpj} , e-mail {Cliente2_Email} , telefone {Cliente2_Telefone} , resid&ecirc;ncia e domic&iacute;lio , {Cliente2_Logradouro} , n° {Cliente2_Numero} , {Cliente2_Municipio} , {Cliente2_Estado} </p>\r\n<p style=\"padding-left: 40px;\">A3 &ndash; CORRETOR: {Corretor_Nome} , {Corretor_Nacionalidade} , {Corretor_Profissao} , {Corretor_EstadoCivil} , se convive em uni&atilde;o est&aacute;vel, identidade {Corretor_Rg} , &oacute;rg&atilde;o expedidor {Corretor_OrgaoExpedidor} , data de expedi&ccedil;&atilde;o {Corretor_DataExpedicao} , CPF {Corretor_CpfCnpj} , resid&ecirc;ncia {Corretor_Logradouro} , {Corretor_Numero} , {Corretor_Bairro} , {Corretor_Municipio} , {Cliente_Estado} -  {Cliente_Sigla_Estado}  .</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 210px;\">\r\n<td style=\"width: 98.5055%; height: 210px;\">\r\n<p style=\"padding-left: 40px;\">B &ndash; DA DESCRI&Ccedil;&Atilde;O DO IM&Oacute;VEL:</p>\r\n<p style=\"padding-left: 40px;\">Lote {Lote_Nome} , da quadra {Quadra_Nome} ( {Quadra_Nome_Extenso} ) , do loteamento {Empreendimento_Nome} , situado em {Lote_Bairro} , na zona urbana do primeiro distrito do Munic&iacute;pio de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} . Terreno com a   &aacute;rea  de {Lote_AreaTotal} m&sup2; ( {Lote_AreaTotalExtenso} ), com as seguintes medidas e confronta&ccedil;&otilde;es: {Lote_Frente} m ( {Lote_Frente_Extenso} METRO(S) QUADRADO(S) ) de   frente   para   a   Rua ______________________________________ , {Lote_Fundo} m ( {Lote_FundoExtenso} METRO(S) QUADRADO(S) ) de   fundos confrontando com {Lote_Confrontante_Fundo} , {Lote_LadoDireito} m ( {Lote_LadoDireitoExtenso} METRO(S) QUADRADO(S) ) na lateral direita confrontando com {Lote_Confrontante_LadoDireito} , e {Lote_LadoEsquerdo} m ( {Lote_LadoEsquerdoExtenso} METRO(S) QUADRADO(S) )  na   lateral esquerda   confrontando   com   {Lote_Confrontante_LadoEsquerdo} , devidamente   descrito   e   caracterizado   na   matr&iacute;cula   n&deg; {Lote_Matricula} , do Registro de Im&oacute;veis do Cart&oacute;rio do {Empreendimento_Cartorio} Of&iacute;cio de {Empreendimento_Cartorio_Cidade} &ndash; {Empreendimento_Cartorio_Sigla_Estado} .</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 126px;\">\r\n<td style=\"width: 98.5055%; height: 126px;\">\r\n<p style=\"padding-left: 40px;\">C &ndash; DA INEXIST&Ecirc;NCIA DE &Ocirc;NUS REAIS SOBRE O IM&Oacute;VEL:</p>\r\n<p style=\"padding-left: 40px;\">A  {Empresa_Nome} declara, sob pena de responsabilidade civil   e criminal,   que o   im&oacute;vel, descrito no item &ldquo;B&rdquo; acima, se encontra livre e desembara&ccedil;ado de   todo e qualquer &ocirc;nus real, judicial ou extrajudicial, que sobre o im&oacute;vel n&atilde;o h&aacute; d&eacute;bitos   relativos a taxas,   tributos,   tarifas  ou contribui&ccedil;&otilde;es,   bem como que   inexistem a&ccedil;&otilde;es reais e pessoais reipersecut&oacute;rias, relativas ao im&oacute;vel, e outros &ocirc;nus reais incidentes sobre o mesmo.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 168px;\">\r\n<td style=\"width: 98.5055%; height: 168px;\">\r\n<p style=\"padding-left: 40px;\">D &ndash; DO T&Iacute;TULO AQUISITIVO:</p>\r\n<p style=\"padding-left: 40px;\">A Gleba {Lote_Nome} , onde foi implementado o Loteamento {Lote_Nome} , foi adquirido pela {Empresa_Nome} nos termos da escritura de compra e venda, lavrada nas Notas do   Cart&oacute;rio do {Lote_Cartorio} Of&iacute;cio de {Lote_Cartorio_Municipio} &ndash; {Lote_Cartorio_Sigla_Estado} , no Livro {Lote_Livro} , fls. ____________ , ato n&ordm; ________________ , em ___/___/___ , registrada sob o n° ________________ da Matr&iacute;cula n&deg; {Lote_Matricula} , do Registro de Im&oacute;veis do Cart&oacute;rio do {Lote_Cartorio} Of&iacute;cio de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , com   posterior   averba&ccedil;&otilde;es   de retifica&ccedil;&atilde;o de &aacute;rea e de desmembramento, dando origem a Gleba 1 -A.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 210px;\">\r\n<td style=\"width: 98.5055%; height: 210px;\">\r\n<p style=\"padding-left: 40px;\">E &ndash; DA DENOMINA&Ccedil;&Atilde;O, SITUA&Ccedil;&Atilde;O E REGISTRO DO LOTEAMENTO:</p>\r\n<p style=\"padding-left: 40px;\">O projeto do loteamento {Lote_Nome} foi aprovado, com base na Lei Municipal n&deg; _______________________ , pela Secretaria Municipal de Obras, Urbanismo e Servi&ccedil;os P&uacute;blicos do Munic&iacute;pio de Cidade {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , atrav&eacute;s processo administrativo   n&ordm; ________________ ,   e registrado sob o n° ________________   da Matr&iacute;cula n&deg; {Lote_Matricula} , aos ___/___/___ , no Registro de Im&oacute;veis do  Cart&oacute;rio do {Lote_Cartorio} Of&iacute;cio de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , recebendo a inscri&ccedil;&atilde;o n&deg; _________________ . O projeto do loteamento foi devidamente executado e conclu&iacute;do conforme se verifica no Aceite de Obras,  expedido pela Secretaria Municipal de Obras, Urbanismo e Servi&ccedil;os P&uacute;blicos   do Munic&iacute;pio   de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} ,   aos   ____/____/___,   acompanhado do Laudo   de   Vistoria, que foi realizada no dia ___/___/___ , e ainda do Termo de Compromisso, firmado em ____/____/___, atrav&eacute;s do qual a  {Empresa_Nome}  assumiu a responsabilidade de ________________.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 364px;\">\r\n<td style=\"width: 98.5055%; height: 364px;\">\r\n<p style=\"padding-left: 40px;\">F &ndash; DO PRE&Ccedil;O, DO PRAZO, DA FORMA E DO LOCAL DO PAGAMENTO:</p>\r\n<p style=\"padding-left: 40px;\">F.1 &ndash; Valor à vista da promessa de compra venda: R$ {Valor_Total} ( {Valor_Total_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">F.2 &ndash; Entrada (sinal): R$ {Entrada_Valor} ( {Entrada_Valor_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">F.3 &ndash; Saldo devedor a ser parcelado: R$ {Financiamento_Valor} ( {Financiamento_Valor_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">F.4 &ndash; O saldo devedor ser&aacute; pago em  {Financiamento_QtdeParcela} ( {Financiamento_QtdeParcela_Extenso} ),  parcelas, mensais e sucessivas.</p>\r\n<p style=\"padding-left: 40px;\">F.5 &ndash; Valor da primeira parcela R$ {Financiamento_ValorParcela} ( {Financiamento_ValorParcela_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">F.6 &ndash; Data do vencimento da primeira parcela: {Financiamento_DataParcela} .</p>\r\n<p style=\"padding-left: 40px;\">F.7 &ndash; Vencimento das demais parcelas: No mesmo dia dos meses subsequentes.</p>\r\n<p style=\"padding-left: 40px;\">F.8 &ndash; Parcela intermedi&aacute;ria no valor de R$ {Intermediaria_ValorParcela} a vencer em {Intermediaria_DataParcela} .</p>\r\n<p style=\"padding-left: 40px;\">F.9 &ndash; Local de pagamento _________________________________ .</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 119px;\">\r\n<td style=\"width: 98.5055%; height: 119px;\">\r\n<p style=\"padding-left: 40px;\">G &ndash; &Iacute;NDICE DE CORRE&Ccedil;&Atilde;O MONET&Aacute;RIA:</p>\r\n<p style=\"padding-left: 40px;\">G.1 &ndash; Incidente sobre o d&eacute;bito em aberto {Indice} :.</p>\r\n<p style=\"padding-left: 40px;\">G.2 &ndash; Incidente sobre as presta&ccedil;&otilde;es vencidas e n&atilde;o pagas: {Indice} .</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 21px;\">\r\n<td style=\"width: 98.5055%; height: 21px; padding-left: 40px;\">H &ndash; DO SISTEMA DE AMORTIZA&Ccedil;&Atilde;O: {Tabela} .</td>\r\n</tr>\r\n<tr style=\"height: 154px;\">\r\n<td style=\"width: 98.5055%; height: 154px;\">\r\n<p style=\"padding-left: 40px;\">I &ndash; DA TAXA DE JUROS:</p>\r\n<p style=\"padding-left: 40px;\">I.1 &ndash; Incidentes sobre o d&eacute;bito em aberto (juros remunerat&oacute;rios) {Taxa_Remuneratorios} %.</p>\r\n<p style=\"padding-left: 40px;\">I.2 - Incidentes sobre as presta&ccedil;&otilde;es vencidas e n&atilde;o pagas (multa morat&oacute;rios) {Multa_Moratorios} %.</p>\r\n<p style=\"padding-left: 40px;\">I.3 - Incidentes sobre as prestações vencidas e não pagas (juros moratórios) {Juros_Moratorios} %.</p>\r\n<p style=\"padding-left: 40px;\">Se mensais ou anuais, se nominais ou efetivas, per&iacute;odo de incid&ecirc;ncia</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 21px;\">\r\n<td style=\"width: 98.5055%; height: 21px; padding-left: 40px;\">J &ndash; DA MULTA MORAT&Oacute;RIA: 2% sobre o valor do d&eacute;bito em atraso atualizado</td>\r\n</tr>\r\n<tr style=\"height: 84px;\">\r\n<td style=\"width: 98.5055%; height: 84px;\">\r\n<p style=\"padding-left: 40px;\">K &ndash; CL&Aacute;USULA PENAL:</p>\r\n<p style=\"padding-left: 40px;\">10% sobre o valor do d&eacute;bito em atraso atualizado, sendo exig&iacute;vel somente nos casos de interven&ccedil;&atilde;o judicial ou de mora superior a 03 (tr&ecirc;s) meses.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 140px;\">\r\n<td style=\"width: 98.5055%; height: 140px;\">\r\n<p style=\"padding-left: 40px;\">L &ndash; DA  CORRETAGEM:</p>\r\n<p style=\"padding-left: 40px;\">L.1 &ndash; Pre&ccedil;o total da corretagem: R$ {Valor_TotalCorretagem} ( {Valor_TotalCorretagem_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">L.2 &ndash; O valor da corretagem, acima informado, dever&aacute; ser pago &agrave; vista, no ato da assinatura do presente instrumento, em favor do CORRETOR, acima qualificado.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 126px;\">\r\n<td style=\"width: 98.5055%; height: 126px;\">\r\n<p style=\"padding-left: 40px;\">M &ndash; DA OBRIGA&Ccedil;&Atilde;O PELO PAGAMENTO  DOS IMPOSTOS E TAXAS INCIDENTES SOBRE O LOTE:</p>\r\n<p style=\"padding-left: 40px;\">Os tributos, impostos, tarifas e taxas eventualmente incidentes sobre o im&oacute;vel, referente &agrave; compet&ecirc;ncia fiscal anterior &agrave; data deste contrato, ser&aacute; de responsabilidade   da    {Empresa_Nome} .   Os tributos, impostos, tarifas e taxas incidentes sobre o im&oacute;vel, referente &agrave; compet&ecirc;ncia fiscal posterior &agrave; data deste contrato, inclusive, ser&aacute; de responsabilidade do  {Cliente_Nome} , que se compromete a pag&aacute;-los em dia.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 665px;\">\r\n<td style=\"width: 98.5055%; height: 665px;\">\r\n<p style=\"padding-left: 40px;\">N &ndash;   DAS   RESTRI&Ccedil;&Otilde;ES   URBAN&Iacute;STICAS   CONVENCIONAIS   DO   LOTEAMENTO,   SUPLETIVAS   DA   LEGISLA&Ccedil;&Atilde;O PERTINENTE:</p>\r\n<p style=\"padding-left: 40px;\">O {Cliente_Nome} somente poder&aacute; fazer edifica&ccedil;&otilde;es no im&oacute;vel ap&oacute;s a aprova&ccedil;&atilde;o pela   Prefeitura Municipal e somente se iniciar&atilde;o obras com o devido alvar&aacute; de licen&ccedil;a   para   a   constru&ccedil;&atilde;o,   a   qual   dever&aacute; respeitar as condi&ccedil;&otilde;es previstas na Licen&ccedil;a Ambiental de Instala&ccedil;&atilde;o do Loteamento n&ordm;  {Lote_Matricula} , emitida pela Prefeitura Municipal de Cidade {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , emitida em ___/___/___ , &agrave; qual estabelece serem   obriga&ccedil;&otilde;es do(a)(s) PROMITENTE(S) COMPRADORA)(ES):</p>\r\n<p style=\"padding-left: 40px;\">a) Condi&ccedil;&atilde;o a;<br />b) Condi&ccedil;&atilde;o b;<br />c) Condi&ccedil;&atilde;o c;<br />d) Condi&ccedil;&atilde;o d; </p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>1&deg; Al&eacute;m de   aprova&ccedil;&atilde;o e   licen&ccedil;a de   obras, pela   qual as constru&ccedil;&otilde;es devem atender   &agrave;s   exig&ecirc;ncias do Munic&iacute;pio, o {Cliente_Nome} se compromete ainda,   &agrave;s   suas   expensas,   realizar   constru&ccedil;&otilde;es   atendendo   os seguintes requisitos contratuais:</p>\r\n<p style=\"padding-left: 40px;\">Projeto aprovado pela Prefeitura Municipal de Cidade {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , com devida licen&ccedil;a de obras;</p>\r\n<p style=\"padding-left: 40px;\">Sugest&atilde;o b:  Ser em alvenaria com embo&ccedil;o, cobertura   de telha ou   laje,   em cimento armado,   com &aacute;rea constru&iacute;da m&iacute;nima de 45,00m&sup2;;<br />Sugest&atilde;o c:  Ter instalado um reservat&oacute;rio   de no   m&iacute;nimo   2.000 litros e caixa d&rsquo;&aacute;gua;  <br />Sugest&atilde;o d:  Ter   instalado fossa   s&eacute;ptica ou caixa de absor&ccedil;&atilde;o antes de ser feita a liga&ccedil;&atilde;o &agrave; rede da rua, liga&ccedil;&atilde;o essa feita com materiais de boa qualidade e de acordo com as orienta&ccedil;&otilde;es da empresa.</p>\r\n<p style=\"padding-left: 40px;\">Nenhuma responsabilidade caber&aacute; a {Empreendimento_Nome} no caso de quaisquer san&ccedil;&otilde;es das autoridades competentes em raz&atilde;o da inobserv&acirc;ncia   das   normas   pertinentes.  O {Cliente_Nome} responder&aacute; ainda pelos preju&iacute;zos das constru&ccedil;&otilde;es irregulares, mal planejadas ou mal executadas que realizar.</p>\r\n<p style=\"padding-left: 40px;\">O {Cliente_Nome} ficar&aacute; respons&aacute;vel civil e criminalmente caso promova a destrui&ccedil;&atilde;o, aproprie-se indevidamente ou fa&ccedil;a mau uso dos equipamentos urbanos implantados no empreendimento.</p>\r\n<p style=\"padding-left: 40px;\">O {Cliente_Nome} n&atilde;o poder&aacute;, sobre qualquer pretexto, fazer nem permitir que se fa&ccedil;a no im&oacute;vel, escava&ccedil;&otilde;es e trabalhos de olaria, nem tirar argila ou areia ou similares, obrigando-se a us&aacute;-lo para fins que n&atilde;o venham prejudicar o bem-estar, o sossego da   vizinhan&ccedil;a,   ou   meio   ambiente,   sendo   ainda   expressamente proibido: a cria&ccedil;&atilde;o de gado ou animais de grande porte no im&oacute;vel; a constru&ccedil;&atilde;o de barracos de madeira, para quaisquer   fins,   est&aacute;bulos,   currais   ou   semelhantes;   e   armazenamento   de   material   inflam&aacute;vel,   t&oacute;xico ou explosivo.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 486px;\">\r\n<td style=\"width: 98.5055%; height: 486px;\">\r\n<p style=\"padding-left: 40px;\">O &ndash; DAS CONSEQU&Ecirc;NCIAS DO DESFAZIMENTO DO CONTRATO:</p>\r\n<p style=\"padding-left: 40px;\">O.1 &ndash; MEDIANTE   RESOLU&Ccedil;&Atilde;O   CONTRATUAL   MOTIVADA   POR   INADIMPLEMENTO   DE   OBRIGA&Ccedil;&Otilde;ES   DA {Empreendimento_Nome} :</p>\r\n<p style=\"padding-left: 40px;\">Em caso de resolu&ccedil;&atilde;o contratual por   inadimplemento   de   obriga&ccedil;&atilde;o   do {Empresa_Nome} , os  valores pagos por este contrato ser&atilde;o restitu&iacute;dos, com a dedu&ccedil;&atilde;o dos valores correspondentes &agrave; frui&ccedil;&atilde;o do im&oacute;vel, equivalente a 0,75% (setenta e cinco cent&eacute;simos por cento) sobre o valor atualizado do contrato, cujo prazo ser&aacute; contado a partir da data da transmiss&atilde;o da posse do im&oacute;vel ao {Cliente_Nome} at&eacute;   sua restitui&ccedil;&atilde;o a {Empresa_Nome} . O   pagamento   da   restitui&ccedil;&atilde;o   ocorrer&aacute;   em   at&eacute;   12   (doze)   parcelas mensais, com in&iacute;cio ap&oacute;s a formaliza&ccedil;&atilde;o da rescis&atilde;o contratual.</p>\r\n<p style=\"padding-left: 40px;\">As benfeitorias necess&aacute;rias ou &uacute;teis realizadas no im&oacute;vel dever&atilde;o ser indenizadas , salvo as realizadas em desconformidade com o contrato ou a lei.</p>\r\n<p style=\"padding-left: 40px;\">A comprova&ccedil;&atilde;o da legaliza&ccedil;&atilde;o e de execu&ccedil;&atilde;o da   benfeitoria atendendo   a esses requisitos legais e contratuais dever&aacute; ser realizada pelo  {Cliente_Nome} , no prazo de 30 dias, atrav&eacute;s de: a) laudo   assinado   por engenheiro arquiteto; b)   projeto aprovado   e licenciado   c)   licen&ccedil;a   de   constru&ccedil;&atilde;o,   sob   pena   de   presun&ccedil;&atilde;o de n&atilde;o cumprirem os crit&eacute;rios e requisitos estabelecidos em lei.</p>\r\n<p> </p>\r\n<p> </p>\r\n<p style=\"text-align: center;\">___________________________________________________________</p>\r\n<p style=\"text-align: center;\">ASSINATURA DO(A) {Cliente_Nome} .</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 98.5055%; height: 154px;\">\r\n<p style=\"padding-left: 40px;\">O.2 &ndash; MEDIANTE DISTRATO OU MEDIANTE RESOLU&Ccedil;&Atilde;O CONTRATUAL MOTIVADA POR INADIMPLEMENTO DE OBRIGA&Ccedil;&Otilde;ES DO {Cliente_Nome}:</p>\r\n<p style=\"padding-left: 40px;\">N&atilde;o obstante o car&aacute;ter de irrevogabilidade e irretratabilidade, o presente contrato poder&aacute; ser distratado   pelas partes mediante comum acordo, bem como poder&aacute; ser   desfeito   mediante   resolu&ccedil;&atilde;o   contratual   por inadimplemento de obriga&ccedil;&otilde;es do  {Cliente_Nome} , sendo, em ambos os caso s, aplicado as penalidades e prazos abaixo.</p>\r\n<p style=\"padding-left: 40px;\">Em caso de resolu&ccedil;&atilde;o contratual por   fato   imputado   ao {Cliente_Nome} , respeitado   o   disposto no   &sect; 2&ordm; deste item, dever&atilde;o ser restitu&iacute;dos os   valores   pagos   por   ele,   atualizados   com   base   no   &iacute;ndice contratualmente estabelecido para a corre&ccedil;&atilde;o monet&aacute;ria das parcelas do pre&ccedil;o do   im&oacute;vel,   podendo   ser descontados dos valores pagos os seguintes itens:</p>\r\n<p style=\"padding-left: 40px;\">Os valores correspondentes &agrave; eventual frui&ccedil;&atilde;o do im&oacute;vel, at&eacute; o equivalente a 0,75%   (setenta   e   cinco cent&eacute;simos por cento) sobre o valor atualizado do contrato, cujo prazo ser&aacute; contado a partir da data da transmiss&atilde;o da posse do im&oacute;vel ao adquirente at&eacute; sua restitui&ccedil;&atilde;o ao loteador;<br />O montante devido por cl&aacute;usula penal e despesas administrativas, inclusive arras ou sinal, limitado a   um desconto de 10% (dez por cento) do valor atualizado do contrato;<br />Os encargos morat&oacute;rios relativos &agrave;s presta&ccedil;&otilde;es pagas em atraso pelo adquirente;</p>\r\n<p style=\"padding-left: 40px;\">Os d&eacute;bitos de impostos sobre a propriedade predial e territorial urbana, taxas e tarifas vinculadas ao   im&oacute;vel, bem como tributos, custas e emolumentos incidentes sobre a restitui&ccedil;&atilde;o e/ou rescis&atilde;o;<br />A comiss&atilde;o de corretagem, desde que integrada ao pre&ccedil;o do lote.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>1&deg; O pagamento da restitui&ccedil;&atilde;o ocorrer&aacute; em at&eacute; 12 (doze) parcelas mensais,   com   in&iacute;cio   ap&oacute;s   o   prazo   de car&ecirc;ncia de 12 meses ap&oacute;s a formaliza&ccedil;&atilde;o da rescis&atilde;o contratual.<br /><span style=\"font-weight: 400;\">&sect;</span>2&deg; Somente ser&aacute; efetuado registro do contrato de nova venda se   for   comprovado   o   in&iacute;cio   da restitui&ccedil;&atilde;o do valor pago pelo vendedor ao titular do registro cancelado na   forma   e   condi&ccedil;&otilde;es   pactuadas   no   distrato, dispensada essa comprova&ccedil;&atilde;o nos casos em que  o adquirente n&atilde;o for localizado ou n&atilde;o tiver se manifestado, nos termos do art. 32 desta Lei.</p>\r\n<p style=\"padding-left: 40px;\">O.2.3 - Se o {Empresa_Nome} , credor das presta&ccedil;&otilde;es, se recusar receb&ecirc; -las ou furtar-se ao   seu recebimento, ser&aacute; constitu&iacute;do em mora mediante notifica&ccedil;&atilde;o   do Oficial do   Registro   de   Im&oacute;veis para   vir   receber as import&acirc;ncias depositadas pelo {Cliente_Nome} no pr&oacute;prio   Registro   de   Im&oacute;veis.   Decorridos   15 (quinze) dias ap&oacute;s o recebimento da intima&ccedil;&atilde;o, considerar -se-&aacute; efetuado o pagamento, a menos que   o {Empresa_Nome} impugne   o   dep&oacute;sito   e,   alegando   inadimplemento   do {Cliente_Nome} , requeira a intima&ccedil;&atilde;o deste para os fins do disposto no art. 32 desta Lei n&deg; 6.766/79.</p>\r\n<p style=\"padding-left: 40px;\">Em qualquer   caso   de   rescis&atilde;o   por   inadimplemento   do {Cliente_Nome} ,   as benfeitori as   necess&aacute;rias ou &uacute;teis por ele levadas a efeito no im&oacute;vel dever&atilde;o ser indenizadas.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>1&ordm; - N&atilde;o ser&atilde;o indenizadas as benfeitorias feitas em desconformidade com o contrato ou com a lei.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>2&deg;   -   A   comprova&ccedil;&atilde;o   da   legaliza&ccedil;&atilde;o   e   de   execu&ccedil;&atilde;o   da   benfeitoria   atendendo   a   esses   requisitos   legais   e</p>\r\n<p style=\"padding-left: 40px;\">contratuais dever&aacute; ser realizada pelo  {Cliente_Nome}  , no prazo de   30 dias, atrav&eacute;s de: a) laudo   assinado por engenheiro arquiteto; b) projeto aprovado e licenciado c) licen&ccedil;a de constru&ccedil;&atilde;o, sob pena de presun&ccedil;&atilde;o de n&atilde;o cumprirem os crit&eacute;rios e requisitos estabelecidos em lei .</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>3&deg; No prazo de 60 (sessenta) dias, contado da constitui&ccedil;&atilde;o em mora, fica a {Empresa_Nome} , na hip&oacute;tese do caput desta cl&aacute;usula, obrigada a alienar   o   im&oacute;vel   mediante   leil&atilde;o   judicial   ou   extrajudicial,   nos termos da Lei n&ordm; 9.514, de 20 de novembro de 1997.</p>\r\n<p style=\"padding-left: 40px;\">Se ocorrer o cancelamento do registro por inadimplemento do contrato, e tiver sido realizado   o pagamento   de mais de 1/3 (um ter&ccedil;o) do pre&ccedil;o   ajustado, o   oficial do   registro de im&oacute;veis mencionar&aacute; esse   fato e   a quantia paga no ato do cancelamento, e somente ser&aacute; efetuado novo registro relativo ao mesmo lote, mediante apresenta&ccedil;&atilde;o do distrato assinado pelas partes   e   a   comprova&ccedil;&atilde;o   do   pagamento   da   parcela   &uacute;nica   ou   da primeira parcela do montante a ser restitu&iacute;do ao  {Cliente_Nome} , na forma do art. 32-A da Lei n&deg; 6.766/79, ao titular do registro cancelado, ou mediante dep&oacute;sito em dinheiro &agrave; sua disposi&ccedil;&atilde;o no registro de im&oacute;veis.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>1&ordm; Ocorrendo o dep&oacute;sito a que se refere este artigo, o Oficial   do Registro de   Im&oacute;veis   inti mar&aacute; o interessado para vir receb&ecirc;-lo no prazo de 10 (dez) dias, sob pena de ser devolvido ao depositante.<br /><span style=\"font-weight: 400;\">&sect;</span>2&ordm; No caso de n&atilde;o se encontrado o interessado, o Oficial do Registro de Im&oacute;veis depositar&aacute; quantia em estabelecimento de cr&eacute;dito, segundo a ordem prevista no inciso I do art. 666 do C&oacute;digo de   Processo Civil, em conta com incid&ecirc;ncia de juros e corre&ccedil;&atilde;o monet&aacute;ria.<br /><span style=\"font-weight: 400;\">&sect;</span>3&ordm; A obriga&ccedil;&atilde;o de comprova&ccedil;&atilde;o pr&eacute;via de pagamento da parcela &uacute;nica ou da primeira parcela como condi&ccedil;&atilde;o para efetiva&ccedil;&atilde;o de novo registro, prevista no caput desta cl&aacute;usula, poder&aacute; ser dispensada se as partes convencionarem de modo diverso e de forma expressa no documento de distrato por elas assinado.</p>\r\n<p style=\"padding-left: 40px;\"> </p>\r\n<p> </p>\r\n<p style=\"text-align: center;\">___________________________________________________________</p>\r\n<p style=\"text-align: center;\">ASSINATURA DO(A) {Cliente_Nome} .</p>\r\n<p style=\"text-align: center;\"> </p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 154px;\">\r\n<td style=\"width: 98.5055%; height: 154px;\">\r\n<p style=\"padding-left: 40px;\">P &ndash; DO LOCAL DA CELEBRA&Ccedil;&Atilde;O DO PRESENTE CONTRATO:</p>\r\n<p style=\"padding-left: 40px;\">O presente contrato &eacute; celebrado no lugar assinalado com X:</p>\r\n<p style=\"padding-left: 40px;\">(   ) Na sede ou no estabelecimento comercial da {Empresa_Nome};</p>\r\n<p style=\"padding-left: 40px;\">(   ) Fora da sede ou do estabelecimento comercial da {Empresa_Nome} ;</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 199px;\">\r\n<td style=\"width: 98.5055%; height: 199px;\">\r\n<p style=\"padding-left: 40px;\">Q &ndash; DO DIREITO DE ARREPENDIMENTO:</p>\r\n<p style=\"padding-left: 40px;\">Caso o contrato seja firmado em estandes de vendas e fora da sede da {Empresa_Nome} ou do seu estabelecimento comercial, o {Cliente_Nome} poder&aacute;,   no prazo   de   07 (sete)   dias   contados   da   data de assinatura deste contrato, exercer o seu direito de arrependimento, requerendo a desist&ecirc;ncia do presente contrato, por escrito, atrav&eacute;s de e-mail encaminhado para o endere&ccedil;o eletr&ocirc;nico ,</p>\r\n<p style=\"padding-left: 40px;\">ficando acordado que o valor eventualmente pago pelo {Cliente_Nome} ,   em   raz&atilde;o   do   presente contrato, a t&iacute;tulo de entrada (sinal) e corretagem ser&atilde;o devolvidos no prazo de at&eacute; 30 dias corridos.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 127px;\">\r\n<td style=\"width: 98.5055%; height: 127px;\">\r\n<p style=\"padding-left: 40px;\">R &ndash; DO PRAZO PARA QUITA&Ccedil;&Atilde;O DAS OBRIGA&Ccedil;&Otilde;ES PELO  {Cliente_Nome}  AP&Oacute;S A   OBTEN&Ccedil;&Atilde;O   DO TERMO DE VISTORIA DE OBRAS:</p>\r\n<p style=\"padding-left: 40px;\">Uma vez que as obras j&aacute; est&atilde;o conclu&iacute;das, ser&aacute; o mesmo prazo de financiamento constante neste contrato.</p>\r\n</td>\r\n</tr>\r\n<tr style=\"height: 434px;\">\r\n<td style=\"width: 98.5055%; height: 434px;\">\r\n<p> </p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA PRIMEIRA &ndash; DO EMPREENDIMENTO:</p>\r\n<p style=\"padding-left: 40px;\">1.1 &ndash; A {Empresa_Nome} , qualificada no item &ldquo;A.1&rdquo; do Quadro Resumo, doravante denominada {Cliente_Nome} , &eacute; legitima propriet&aacute;ria da GLEBA {Lote_Nome} , sito no lugar {Lote_Bairro} , zona urbana do primeiro distrito do munic&iacute;pio de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , com a &aacute;rea de {Lote_AreaTotal} m&sup2;, devidamente descrito e caracterizado na matr&iacute;cula n&ordm; {Empreendimento_Matricula} , do Registro de Im&oacute;veis anexo ao Cart&oacute;rio do  {Empreendimento_Cartorio} Of&iacute;cio de {Empreendimento_Cartorio_Cidade} &ndash; {Empreendimento_Cartorio_Sigla_Estado} .<br />1.2 &ndash; A &aacute;rea adquirida pela {Empresa_Nome} nos   termos   da escritura de compra e venda, lavrada nas Notas do Cart&oacute;rio do {Empreendimento_Cartorio} Of&iacute;cio de Cidade &ndash; {Empreendimento_Cartorio_Sigla_Estado} , no Livro {Lote_Livro} , fls. ________________ , ato n&ordm; _________________ ,   de ___/___/___ ,   registrada   sob o   R. ________________  da   matr&iacute;cula supracitada.<br />1.3 &ndash; Na &aacute;rea, a {Empresa_Nome} implementou o LOTEAMENTO  {Lote_Nome} , aprovado, com base na Lei Municipal n&deg; _______________________ , pela Secretaria Municipal de Obras, Urbanismo e Servi&ccedil;os P&uacute;blicos do Munic&iacute;pio   de   Cidade {Lote_Municipio} &ndash; {Lote_Sigla_Estado} ,   atrav&eacute;s   processo   administrativo   n&ordm;    ________________ ,   em ___/___/___ ,   e   registrado   no RGI,   da   Matr&iacute;cula   n&deg;  {Lote_Matricula} , aos ___/___/___ , no Registro de Im&oacute;veis do Cart&oacute;rio  do  ________________ Of&iacute;cio de {Lote_Municipio}  &ndash;  {Lote_Sigla_Estado} , recebendo a inscri&ccedil;&atilde;o   n&deg; ________________ .<br />1.4 &ndash; O projeto do loteamento foi devidamente executado e   conclu&iacute;do   conforme   se verifica   no   Aceite   de Obras, expedido pela Secretaria Municipal de Obras,   Urbanismo   e   Servi&ccedil;os   P&uacute;blicos   do Munic&iacute;pio de Cidade {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , aos  ___/___/___ , acompanhado do Laudo   de Vistoria, que foi realizada   no   dia    ___/___/___,   e   ainda   do   Termo de Compromisso, firmado   em    ___/___/___,   atrav&eacute;s do   qual   a    {Empresa_Nome}    assumiu   a   responsabilidade de _________________________________.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA SEGUNDA &ndash; DA PROMESSA DE COMPRA E VENDA:</p>\r\n<p style=\"padding-left: 40px;\">2.1 &ndash; Pelo presente instrumento e na melhor forma de direito a  {Empresa_Nome}  se compromete a vender ao  {Cliente_Nome} , qualificado no item &ldquo;A.2&rdquo; do Quadro Resumo, doravante denominado  {Cliente_Nome} , que, por sua vez,   se   compromete   a   comprar   o   im&oacute;vel descrito   e   caracterizado no item &ldquo;B&rdquo; do Quadro Resumo.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA TERCEIRA &ndash; DA TRANSMISS&Atilde;O DA POSSE:</p>\r\n<p style=\"padding-left: 40px;\">3.1 &ndash; A partir da data da assinatura deste contrato, a  {Empresa_Nome}  transfere ao  {Cliente_Nome}  a posse, uso, gozo e frui&ccedil;&atilde;o sobre o im&oacute;vel objeto deste contrato a t&iacute;tulo prec&aacute;rio, inclusive para os efeitos do que est&aacute; disposto na cl&aacute;usula 12.1, ficando este respons&aacute;vel pela conserva&ccedil;&atilde;o, limpeza e prote&ccedil;&atilde;o.<br />3.2 &ndash; O  {Cliente_Nome}  aceita incontestavelmente o estado atual do im&oacute;vel objeto deste contrato e da infraestrutura existente no loteamento. Est&aacute; ciente de que n&atilde;o compete a  {Empresa_Nome}  a realiza&ccedil;&atilde;o de quaisquer outras obras de infraestrutura, uma vez que todas &agrave;quelas exigidas pela Prefeitura Municipal de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} para a aprova&ccedil;&atilde;o do empreendimento e at&eacute; as prometidas em publicidade, j&aacute; foram executadas e devidamente comprovadas, isentando a  {Empresa_Nome}  de qualquer responsabilidade nos termos do art. 14, &sect; 3.&ordm;, I, Lei n.&ordm; 8.078/90.<br />3.3 &ndash; Fica estipulado que o pre&ccedil;o do im&oacute;vel objeto deste contrato tem por base o estado em que o mesmo se encontra, de forma que limpeza, aterro, terraplanagem ou quaisquer melhorias no im&oacute;vel, ficam por conta exclusiva do  {Cliente_Nome} .</p>\r\n<p style=\"padding-left: 40px;\">3.4 &ndash; O  {Cliente_Nome}  declara haver constatado que o im&oacute;vel objeto deste contrato, encontra-se com todos os marcos nos seus respectivos lugares, ficando qualquer nova medi&ccedil;&atilde;o ou marca&ccedil;&atilde;o que se fa&ccedil;a(m) necess&aacute;rias, sob sua inteira e exclusiva responsabilidade e expensas. Qualquer diferen&ccedil;a na metragem dever&aacute; ser comunicada por escrito a  {Empresa_Nome} , no prazo de 90 dias, e ser&aacute; compensada na base do pre&ccedil;o do im&oacute;vel, n&atilde;o se considerando diferen&ccedil;a de at&eacute; 5% (cinco por cento) conforme art. 500 do C&oacute;digo Civil. Ap&oacute;s esse prazo ser&aacute; dado como aceito o lote e n&atilde;o mais haver&aacute; direito &agrave; reclama&ccedil;&atilde;o.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA QUARTA &ndash; DA INEXIST&Ecirc;NCIA DE &Ocirc;NUS REAIS SOBRE O IM&Oacute;VEL:</p>\r\n<p style=\"padding-left: 40px;\">4.1 &ndash; A  {Empresa_Nome}  declara, sob pena   de   responsabilidade   civil   e   criminal,   que   o   im&oacute;vel, descrito no item &ldquo;B&rdquo; do Quadro Resumo, se encontra   livre   e   desembara&ccedil;ado de   todo e   qualquer   &ocirc;nus   real, judicial ou extrajudicial, que sobre o im&oacute;vel n&atilde;o   h&aacute;   d&eacute;bitos   relativos a   taxas,   tributos,   tarifas   ou contribui&ccedil;&otilde;es, bem como que inexistem a&ccedil;&otilde;es reais e pessoais reipersecut&oacute;rias,   relativas   ao   im&oacute;vel,   e   outros   &ocirc;nus   reais incidentes sobre o mesmo.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA QUINTA &ndash; DO PRE&Ccedil;O E DA FORMA DE PAGAMENTO:</p>\r\n<p style=\"padding-left: 40px;\">5.1 &ndash; O pre&ccedil;o total da presente promessa de compra e venda corresponde ao valor informado no item &ldquo;F.1&rdquo;</p>\r\n<p style=\"padding-left: 40px;\">do Quadro Resumo, cujo valor ser&aacute; pago em moeda corrente nacional da seguinte maneira:</p>\r\n<p style=\"padding-left: 40px;\">5.1.1 &ndash; No ato da assinatura do presente instrumento, a t&iacute;tulo de entrada (sinal) e princ&iacute;pio de pagamento, o  {Cliente_Nome}  pagou &agrave;  {Empresa_Nome}  o   valor   informado   n o   item   &ldquo;F.2&rdquo;   do   Quadro Resumo, por cujo recebimento a    {Empresa_Nome}  d&aacute; ao  {Cliente_Nome}  a   mais plena, rasa, geral e irrevog&aacute;vel quita&ccedil;&atilde;o.<br />5.1.2 &ndash; O saldo devedor, que corresponde ao valor informado no item &ldquo;F.3&rdquo; do Quadro Resumo, ser&aacute; pago no n&uacute;mero de parcelas, mensais e sucessivas, informado no item &ldquo;F.4&rdquo; do Quadro Resumo, vencendo a primeira parcela, com o valor informado no item &ldquo;F.5&rdquo; do Quadro Resumo, na data informada no item &ldquo;F.6&rdquo; do Quadro Resumo, e as demais no mesmo dia dos meses subsequentes, cujo pagamento se dar&aacute; no local informado no item &ldquo;F.8&rdquo; do Quadro Resumo.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA SEXTA &ndash; DO ENCARGO MENSAL:</p>\r\n<p style=\"padding-left: 40px;\">6.1 &ndash; O encargo mensal &eacute; composto pela parcela de Amortiza&ccedil;&atilde;o e Juros remunerat&oacute;rios, com pagamento at&eacute; a data do vencimento independentemente de aviso ou notifica&ccedil;&atilde;o e, se n&atilde;o existir o dia do vencimento nos meses subsequentes, a obriga&ccedil;&atilde;o vencer&aacute; no &uacute;ltimo dia daqueles meses e, se for em dia n&atilde;o &uacute;til, o pagamento dever&aacute; ser realizado no primeiro dia &uacute;til subsequente, sem acr&eacute;scimo.<br />6.2 &ndash; As parcelas de amortiza&ccedil;&atilde;o e juros remunerat&oacute;rios s&atilde;o recalculadas anualmente, na data de anivers&aacute;rio do contrato, sendo as de Amortiza&ccedil;&atilde;o atualizadas pelo &iacute;ndice estabelecido no item &ldquo;G.1&rdquo; do Quadro Resumo divulgado no m&ecirc;s anterior &agrave; atualiza&ccedil;&atilde;o e na forma da cl&aacute;usula s&eacute;tima, e as de juros remunerat&oacute;rios pela aplica&ccedil;&atilde;o da taxa de juros mensal prevista no item &ldquo;I.1&rdquo; do Quadro Resumo com base no saldo devedor atualizado.<br />6.3 &ndash; Fica assegurado ao  {Cliente_Nome}  o direito a 10% de desconto sobre o valor mensal da presta&ccedil;&atilde;o caso efetue o pagamento at&eacute; a data do vencimento e desde que mantenha atualizado seus meios de contato pessoal.<br />6.4 &ndash; Os encargos mensais ser&atilde;o pagos exclusivamente atrav&eacute;s de boletos banc&aacute;rios emitidos pela empresa Administradora respons&aacute;vel pelo contrato {Empresa_Nome} , inscrita no CNPJ sob o n&ordm; {Empresa_CpfCnpj} , com sede &agrave; endere&ccedil;o completo, CEP {Empresa_Cep} . O boleto banc&aacute;rio poder&aacute; ser obtido atrav&eacute;s dos canais de atendimento e dos seguintes meios de comunica&ccedil;&atilde;o: a) Telefone: {Cliente_Telefone} ; b) Endere&ccedil;o eletr&ocirc;nico:  {Cliente_Email} ; c) P&aacute;gina da internet para acesso &agrave; &aacute;rea restrita do sistema de controle deste contrato: https://scae.adm.br, cujo acesso se dar&aacute; inserindo como login: o e-mail cadastrado pelo  {Cliente_Nome}  e senha de acesso: n&uacute;mero do CPF do primeiro  {Cliente_Nome} .<br />6.5 &ndash; &Eacute; dever do  {Cliente_Nome}  certificar-se diretamente com a Administradora respons&aacute;vel pelo contrato a autenticidade de eventual comunica&ccedil;&atilde;o recebida acerca de mudan&ccedil;a de forma de pagamento, pagamentos n&atilde;o previstos neste contrato ou qualquer forma de comunica&ccedil;&atilde;o suspeita. A Administradora n&atilde;o se responsabilizar&aacute; por pagamentos feitos a terceiros por meio fraudulentos.<br />6.6 &ndash; Se obriga tamb&eacute;m o  {Cliente_Nome}  a remeter imediatamente quaisquer documentos por ele recebido que tenha como destinat&aacute;rio a  {Empresa_Nome}  ou a Administradora, sob pena de n&atilde;o o fazendo, arcar com todos os danos e &ocirc;nus decorrentes do ato.<br />6.7 &ndash; A quita&ccedil;&atilde;o do pagamento dos encargos mensais ficar&aacute; condicionada &agrave; comprova&ccedil;&atilde;o da compensa&ccedil;&atilde;o dos boletos, ou a confirma&ccedil;&atilde;o da transfer&ecirc;ncia banc&aacute;ria, ou qualquer outro meio de pagamento que porventura venha a ser disponibilizado pela  {Empresa_Nome} .</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA S&Eacute;TIMA &ndash; DA ATUALIZA&Ccedil;&Atilde;O DO SALDO DEVEDOR:</p>\r\n<p style=\"padding-left: 40px;\">7.1 &ndash; A atualiza&ccedil;&atilde;o do saldo devedor ocorrer&aacute; anualmente, na data de anivers&aacute;rio do contrato, pelo &iacute;ndice estabelecido</p>\r\n<p style=\"padding-left: 40px;\">no item &ldquo;G.1&rdquo; do Quadro Resumo, divulgado no m&ecirc;s anterior &agrave; atualiza&ccedil;&atilde;o.</p>\r\n<p style=\"padding-left: 40px;\">7.2 &ndash; Na data de vencimento do &uacute;ltimo encargo mensal, eventual saldo devedor residual dever&aacute; ser pago pelo  {Cliente_Nome} .</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA OITAVA &ndash; DO &Iacute;NDICE DE ATUALIZA&Ccedil;&Atilde;O:</p>\r\n<p style=\"padding-left: 40px;\">8.1 &ndash; A parcela de amortiza&ccedil;&atilde;o e o saldo devedor ser&atilde;o atualizados anualmente conforme a varia&ccedil;&atilde;o positiva acumulada no &iacute;ndice oficial do governo que melhor reflita a infla&ccedil;&atilde;o, sendo determinado pelas partes que a corre&ccedil;&atilde;o se far&aacute; pelo {Indice} , ou na sua falta o ________________ , ou na sua falta, outro &iacute;ndice de infla&ccedil;&atilde;o do Brasil que o substituir ou o que for determinado em legisla&ccedil;&atilde;o espec&iacute;fica, a ser escolhido pela  {Empresa_Nome} . N&atilde;o ser&atilde;o aplicadas varia&ccedil;&otilde;es negativas de corre&ccedil;&atilde;o.<br />8.2 &ndash; Na apura&ccedil;&atilde;o do saldo devedor para qualquer evento ser&aacute; aplicada a atualiza&ccedil;&atilde;o proporcional, pro rata die, no per&iacute;odo entre a data de anivers&aacute;rio do contrato ou a data da &uacute;ltima atualiza&ccedil;&atilde;o contratual do saldo devedor, se ocorrida ap&oacute;s o &uacute;ltimo anivers&aacute;rio do contrato, inclusive e a data do evento, exclusive.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA NONA &ndash; DO SISTEMA DE AMORTIZA&Ccedil;&Atilde;O:</p>\r\n<p style=\"padding-left: 40px;\">9.1 &ndash; O sistema de amortiza&ccedil;&atilde;o adotado pelas partes no presente contrato ser&aacute; o {Tabela} , atrav&eacute;s do qual a amortiza&ccedil;&atilde;o do saldo devedor ser&aacute; constante e os juros ser&atilde;o calculados sobre o saldo devedor atualizado.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA &ndash; DO INADIMPLEMENTO:</p>\r\n<p style=\"padding-left: 40px;\">10.1 &ndash; O atraso no pagamento de quaisquer dos encargos mensais, a partir do 1&deg; dia &uacute;til ap&oacute;s o vencimento, constituir&aacute; em mora o  {Cliente_Nome}  e acarretar&aacute; a perda do desconto previsto no item 6.3 da Cl&aacute;usula Sexta.<br />10.2 &ndash; A obriga&ccedil;&atilde;o em atraso ser&aacute; atualizada monetariamente pelo &iacute;ndice de atualiza&ccedil;&atilde;o do saldo devedor, proporcionalmente aos dias de atraso, da data de seu vencimento, inclusive, at&eacute; a do pagamento, exclusive. Sobre o valor atualizado incidir&atilde;o juros morat&oacute;rios e multa morat&oacute;ria na forma disposta nos itens abaixo:</p>\r\n<p style=\"padding-left: 40px;\">10.2.1 &ndash; Juros morat&oacute;rios &agrave; raz&atilde;o de {Juros_Moratorios} % ( {Juros_Moratorios_Extenso} ) por dia de atraso;</p>\r\n<p style=\"padding-left: 40px;\">10.2.2 &ndash; Multa morat&oacute;ria de {Multa_Moratorios} % ( {Multa_Moratorios_Extenso} ).</p>\r\n<p style=\"padding-left: 40px;\">10.3 &ndash; Eventual diferen&ccedil;a havida entre o valor pago e o valor devido no dia do pagamento do encargo mensal, dever&aacute; ser paga juntamente com o encargo mensal subsequente, do contr&aacute;rio, n&atilde;o exonera o  {Cliente_Nome} , da responsabilidade de liquidar tal obriga&ccedil;&atilde;o que ficar&aacute; constitu&iacute;do em mora para todos os efeitos legais e contratuais.<br />10.4 &ndash; Ocorrendo mais de um encargo vencido e n&atilde;o pago, o pagamento do &uacute;ltimo encargo n&atilde;o presume quita&ccedil;&atilde;o do(s) anterior(es).<br />10.5 &ndash; No ajuizamento de a&ccedil;&atilde;o para cobran&ccedil;a dos d&eacute;bitos em atraso ou liquida&ccedil;&atilde;o de obriga&ccedil;&otilde;es vencidas incidir&aacute;, al&eacute;m dos encargos acima referidos, cobran&ccedil;a de honor&aacute;rios de advogados nos termos do artigo 395 do C&oacute;digo Civil.<br />11 &ndash; CL&Aacute;USULA D&Eacute;CIMA PRIMEIRA &ndash; DA CONSTITUI&Ccedil;&Atilde;O EM MORA DO  {Cliente_Nome} :</p>\r\n<p style=\"padding-left: 40px;\">11.1 &ndash; Vencida e n&atilde;o pago o encargo mensal, o contrato ser&aacute; considerado rescindido 30 (trinta) dias depois de constitu&iacute;do em mora  {Cliente_Nome} .<br /><span style=\"font-weight: 400;\">&sect;</span>1&deg; Para os fins desta cl&aacute;usula o  {Cliente_Nome}  ser&aacute; intimado, a requerimento da  {Empresa_Nome} , pelo Oficial do Registro de Im&oacute;veis, a   satisfazer   os   encargos   mensais   vencidos   e   os   que   se vencerem at&eacute; a data do pagamento, os juros e multas convencionados e as custas de intima&ccedil;&atilde;o.<br /><span style=\"font-weight: 400;\">&sect;</span>2&deg; Purgada a mora, convalescer&aacute; o contrato.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>3&deg; Com a certid&atilde;o de n&atilde;o haver sido feito o pagamento em cart&oacute;rio, o   PROMITENTE VENDEDOR requerer&aacute; ao Oficial do Registro o cancelamento da averba&ccedil;&atilde;o.<br />12 &ndash; CL&Aacute;USULA D&Eacute;CIMA SEGUNDA &ndash; DA RESOLU&Ccedil;&Atilde;O CONTRATUAL MOTIVADA POR INADIMPLEMENTO DE OBRIGA&Ccedil;&Otilde;ES DA  {Empresa_Nome} :<br />12.1 &ndash; Em caso de resolu&ccedil;&atilde;o contratual por inadimplemento de   obriga&ccedil;&atilde;o   do   PROMITENTE   VENDEDOR,   os valores pagos por este contrato ser&atilde;o restitu&iacute;dos, com   a   dedu&ccedil;&atilde;o   dos   valores   correspondentes   &agrave;   frui&ccedil;&atilde;o   do im&oacute;vel, equivalente a   0,75% (setenta e cinco cent&eacute;simos   por   cento)   sobre o valor   atualizado do contrato, cujo prazo ser&aacute; contado a partir da data da transmiss&atilde;o da posse do im&oacute;vel ao  {Cliente_Nome}  at&eacute; sua restitui&ccedil;&atilde;o a  {Empresa_Nome} . O pagamento da restitui&ccedil;&atilde;o   ocorrer&aacute;   em at&eacute;   12 (doze) parcelas mensais, com in&iacute;cio ap&oacute;s a formaliza&ccedil;&atilde;o da rescis&atilde;o contratual.<br />12.2 &ndash; As benfeitorias necess&aacute;rias   ou   uteis   realizadas   no   im&oacute;vel dever&atilde;o   ser   indenizadas,   salvo   as realizadas em desconformidade com o contrato ou a lei.<br />13 &ndash; CL&Aacute;USULA D&Eacute;CIMA TERCEIRA &ndash; DO DISTRATO E DA RESOLU&Ccedil;&Atilde;O CONTRATUAL MOTIVADA POR INADIMPLEMENTO DE OBRIGA&Ccedil;&Otilde;ES DO  {Cliente_Nome} :<br />13.1 &ndash; N&atilde;o obstante o   car&aacute;ter   de   irrevogabilidade   e   irretratabilidade,   o   presente   contrato   poder&aacute;   ser distratado pelas   partes   mediante   comum acordo,   bem   como poder&aacute;   ser   desfeito   mediante resolu&ccedil;&atilde;o contratual por inadimplemento de obriga&ccedil;&otilde;es   do    {Cliente_Nome} ,   sendo,   em   ambos   os   casos,   aplicado   as penalidades e prazos abaixo.<br />13.2 &ndash; Em caso de resolu&ccedil;&atilde;o   contratual   por   fato   imputado   ao    {Cliente_Nome} ,   respeitado   o disposto no &sect; 2&ordm; deste item, dever&atilde;o ser restitu&iacute;dos os valores pagos por ele, atualizados com base no &iacute;ndice contratualmente estabelecido para a corre&ccedil;&atilde;o monet&aacute;ria das parcelas   do   pre&ccedil;o   do   im&oacute;vel,   podendo   ser descontados dos valores pagos os seguintes itens:</p>\r\n<p style=\"padding-left: 40px;\">a) Os valores correspondentes &agrave; eventual frui&ccedil;&atilde;o do im&oacute;vel, at&eacute; o   equivalente   a   0,75%   (setenta   e   cinco cent&eacute;simos por cento) sobre o valor atualizado do contrato, cujo prazo ser&aacute; contado a   partir   da   data   da transmiss&atilde;o da posse do im&oacute;vel ao  {Cliente_Nome}  at&eacute; sua restitui&ccedil;&atilde;o a  {Empresa_Nome} ;<br />b) O montante devido por cl&aacute;usula penal e   despesas   administrativas,   inclusive arras ou   sinal, limitado a   um desconto de 10% (dez por cento) do valor atualizado do contrato;<br />c) Os encargos morat&oacute;rios relativos &agrave;s presta&ccedil;&otilde;es pagas em atraso pelo  {Cliente_Nome} ;</p>\r\n<p style=\"padding-left: 40px;\"><br />d) Os d&eacute;bitos de impostos sobre a propriedade predial   e territorial urbana,   taxas e   tarifas   vinculadas ao im&oacute;vel, bem como tributos, custas e emolumentos incidentes sobre a restitui&ccedil;&atilde;o e/ou rescis&atilde;o;<br />e) A comiss&atilde;o de corretagem, desde que integrada ao pre&ccedil;o do lote.</p>\r\n<p style=\"padding-left: 40px;\"><br /><span style=\"font-weight: 400;\">&sect;</span>1&deg; O pagamento da restitui&ccedil;&atilde;o ocorrer&aacute; em at&eacute; 12 (doze) parcelas mensais, com in&iacute;cio ap&oacute;s o prazo de car&ecirc;ncia de 12 meses ap&oacute;s a formaliza&ccedil;&atilde;o da rescis&atilde;o contratual.<br /><span style=\"font-weight: 400;\">&sect;</span>2&deg; Somente ser&aacute; efetuado registro   do contrato de nova venda   se   for   comprovado   o   in&iacute;cio   da   restitui&ccedil;&atilde;o   do valor pago pelo vendedor ao titular do   registro   cancelado   na   forma   e   condi&ccedil;&otilde;es   pactuadas   no   distrato, dispensada essa comprova&ccedil;&atilde;o nos casos em que o   adquirente   n&atilde;o   for   localizado   ou   n&atilde;o   tiver   se   manifestado, nos termos do art. 32 desta Lei.<br />13.3 &ndash; Se a  {Empresa_Nome} , credor das presta&ccedil;&otilde;es, se recusar receb&ecirc;-las ou furtar-se ao seu recebimento, ser&aacute; constitu&iacute;do   em mora   mediante   notifica&ccedil;&atilde;o   do Oficial do   Registro   de   Im&oacute;veis para   vir   receber as import&acirc;ncias depositadas pelo  {Cliente_Nome}    no   pr&oacute;prio   Registro   de   Im&oacute;veis.   Decorridos   15 (quinze) dias ap&oacute;s o recebimento da intima&ccedil;&atilde;o, considerar -se-&aacute; efetuado o   pagamento,   a   menos   que   a  {Empresa_Nome}    impugne   o   dep&oacute;sito   e,   alegando   inadimplemento   do    {Cliente_Nome} , requeira a intima&ccedil;&atilde;o deste para os fins do disposto no art. 32 desta Lei n&deg; 6.766/79 .<br />13.4 &ndash; Em qualquer caso de rescis&atilde;o por inadimplemento do  {Cliente_Nome} ,   as   benfeitorias necess&aacute;rias ou &uacute;teis por ele levadas a efeito no   im&oacute;vel   dever&atilde;o   ser   indenizadas,   sendo   de   nenhum   efeito qualquer disposi&ccedil;&atilde;o contratual em contr&aacute;rio.<br /><span style=\"font-weight: 400;\">&sect;</span>1&ordm; N&atilde;o ser&atilde;o indenizadas as benfeitorias feitas em desconformidade com o contrato ou com a lei.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>2&deg; No prazo de 60 (sessenta) dias, contado da constitui&ccedil;&atilde;o em mora,   fica   a    {Empresa_Nome} ,   na hip&oacute;tese do caput desta cl&aacute;usula,   obrigada   a   alienar   o   im&oacute;vel   mediante   leil&atilde;o   judicial   ou   extrajudicial,   nos termos da Lei n&ordm; 9.514, de 20 de novembro de 1997.<br />13.5 &ndash; Se ocorrer o cancelamento do registro por inadimplemento do contrato, e tiver   sido   realizado   o pagamento de mais de 1/3 (um ter&ccedil;o) do pre&ccedil;o ajustado, o oficial do registro de im&oacute;veis mencionar&aacute; esse fato e a quantia paga no ato do cancelamento, e   somente   ser&aacute;   efetuado   novo   registro   relativo   ao   mesmo   lote, mediante apresenta&ccedil;&atilde;o do distrato assinado pelas partes e a comprova&ccedil;&atilde;o do pagamento da parcela &uacute;nica ou da primeira parcela do montante a ser restitu&iacute;do ao  {Cliente_Nome} , na forma do art. 32 -A da Lei n&deg; 6.766/79, ao titular do registro cancelado, ou mediante dep&oacute;sito em dinheiro &agrave; sua disposi&ccedil;&atilde;o   no registro   de im&oacute;veis.</p>\r\n<p style=\"padding-left: 40px;\"><span style=\"font-weight: 400;\">&sect;</span>1&ordm; Ocorrendo o dep&oacute;sito a que se refere este artigo, o Oficial do Registro de Im&oacute;veis intimar&aacute; o interessado para vir receb&ecirc;-lo no prazo de 10 (dez) dias, sob pena de ser devolvido ao depositante.<br /><span style=\"font-weight: 400;\">&sect;</span>2&ordm; No caso de n&atilde;o se encontrado o interessado, o Oficial do Registro de Im&oacute;veis deposita r&aacute; quantia em estabelecimento de   cr&eacute;dito, segundo a   ordem prevista   no inciso I do art. 666 do C&oacute;digo de   Processo Civil, em conta com incid&ecirc;ncia de juros e corre&ccedil;&atilde;o monet&aacute;ria.<br /><span style=\"font-weight: 400;\">&sect;</span>3&ordm; A obriga&ccedil;&atilde;o de comprova&ccedil;&atilde;o pr&eacute;via de pagamento da parcela &uacute;nica ou da primeir a parcela como condi&ccedil;&atilde;o para efetiva&ccedil;&atilde;o de novo registro, prevista no caput desta cl&aacute;usula, poder&aacute; ser dispensada se as   partes convencionarem de modo diverso e de forma expressa no documento de distrato por elas assinado.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA QUARTA &ndash; DA CORRETAGEM:</p>\r\n<p style=\"padding-left: 40px;\">14.1 &ndash; No ato da assinatura do presente   instrumento,   em   pagamento   ao   Servi&ccedil;o   de   Corretagem,   o  {Cliente_Nome}  pagou ao CORRETOR, qualificado no item &ldquo;A.3&rdquo; do Quadro   Resumo,   doravante denominado CORRETOR, o valor informado   no item &ldquo;K.1&rdquo; do   Quadro  Resumo, por   cujo recebimento o CORRETOR d&aacute; ao  {Cliente_Nome}  a mais plena, rasa, geral e irrevog&aacute;vel quita&ccedil;&atilde;o.</p>\r\n<p style=\"padding-left: 40px;\">15 &ndash; CL&Aacute;USULA D&Eacute;CIMA QUINTA &ndash; DAS RESTRI&Ccedil;&Otilde;ES URBAN&Iacute;STICAS CONVENCIONAIS DO   LOTEAMENTO, SUPLETIVAS DA LEGISLA&Ccedil;&Atilde;O PERTINENTE:<br />15.1 &ndash; O  {Cliente_Nome}  somente poder&aacute; fazer edifica&ccedil;&otilde;es no   im&oacute;vel   ap&oacute;s   a   aprova&ccedil;&atilde;o   pela Prefeitura Municipal e somente se iniciar&atilde;o obras com o devido   alvar&aacute;   de   licen&ccedil;a   para   a   constru&ccedil;&atilde;o,   a   qual dever&aacute; respeitar   as   condi&ccedil;&otilde;es   previstas   na   Licen&ccedil;a   Ambiental   de   Instala&ccedil;&atilde;o   do   Loteamento   n&ordm;    {Lote_Matricula} , emitida pela Prefeitura Municipal   de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , de ___/___/___ , &agrave;   qual   estabelece   serem obriga&ccedil;&otilde;es dos PROMITENTES COMPRADORES:<br />a) Condi&ccedil;&atilde;o a;<br />b) Condi&ccedil;&atilde;o b;<br />c) Condi&ccedil;&atilde;o c;<br />d) Condi&ccedil;&atilde;o d;<br /><span style=\"font-weight: 400;\">&sect;</span>1&deg; Al&eacute;m de aprova&ccedil;&atilde;o e licen&ccedil;a de obras, pela qual as constru&ccedil;&otilde;es devem atender &agrave;s exig&ecirc;ncias do Munic&iacute;pio, o  {Cliente_Nome}  se compromete ainda, &agrave;s suas expensas, realizar constru&ccedil;&otilde;es atendendo os seguintes requisitos:<br />a) Sugest&atilde;o a: Projeto aprovado pela Prefeitura Municipal de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} , com devida licen&ccedil;a de obras;b) Sugest&atilde;o b: Ser em alvenaria com embo&ccedil;o, cobertura   de telha ou   laje,   em cimento armado,   com &aacute;rea constru&iacute;da m&iacute;nima de 45,00m&sup2;;<br />c) Sugest&atilde;o c: Ter instalado um reservat&oacute;rio   de no   m&iacute;nimo   2.000 litros e caixa d&rsquo;&aacute;gua;  <br />d) Sugest&atilde;o d: Ter   instalado fossa   s&eacute;ptica ou caixa de absor&ccedil;&atilde;o antes de ser feita a liga&ccedil;&atilde;o &agrave; rede da rua, liga&ccedil;&atilde;o essa feita com materiais de boa qualidade e de acordo com as orienta&ccedil;&otilde;es da empresa.<br />15.2 &ndash; Nenhuma responsabilidade caber&aacute; a  {Empresa_Nome}  no caso de quaisquer san&ccedil;&otilde;es   das autoridades competentes em raz&atilde;o da inobserv&acirc;ncia das normas pertinentes.   O    {Cliente_Nome}  responder&aacute; ainda pelos preju&iacute;zos das constru&ccedil;&otilde;es irregulares, mal planejadas ou mal executadas que realizar.<br />15.3 &ndash; O  {Cliente_Nome}  ficar&aacute; respons&aacute;vel civil e criminalmente caso promova   a   destrui&ccedil;&atilde;o, aproprie-se indevidamente ou fa&ccedil;a mau uso dos equipamentos urbanos implantados no empreendimento.<br />15.4 &ndash; O  {Cliente_Nome}  n&atilde;o poder&aacute;, sobre qualquer pretexto, fazer nem permitir que se fa&ccedil;a no im&oacute;vel, escava&ccedil;&otilde;es e trabalhos de olaria, nem tirar   argila   ou ar eia ou   similares,   obrigando-se a us&aacute;-lo   para   fins que n&atilde;o venham prejudicar   o   bem-estar,   o   sossego   da   vizinhan&ccedil;a,   ou   meio   ambiente,   sendo   ainda expressamente proibido: a cria&ccedil;&atilde;o de gado ou animais de grande porte no im&oacute;vel; a constru&ccedil;&atilde;o de barracos de madeira,   para   quaisquer   fins,   est&aacute;bulos,   currais   ou   semelhantes;   e    armazenamento   de    material   inflam&aacute;vel, t&oacute;xico ou explosivo</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA SEXTA &ndash; DO DIREITO DE ARREPENDIMENTO:</p>\r\n<p style=\"padding-left: 40px;\">16.1 &ndash; Caso o contrato seja firmado em estandes de vendas e fora da sede da  {Empresa_Nome}  ou do seu estabelecimento comercial, o    {Cliente_Nome}    poder&aacute;,   no   prazo   de   07   (sete)   dias   contados   da data de assinatura deste contrato,   exercer   o   seu   direito   de   arrependimento,   requerendo   a   desist&ecirc;ncia   do presente contrato, por escrito, atrav&eacute;s de e-mail encaminhado para o endere&ccedil;o eletr&ocirc;nico {Empresa_Email} , ficando acordado que o valor eventualmente pago pelo  {Cliente_Nome} , em raz&atilde;o do presente contrato, a t&iacute;tulo de entrada   (sinal) e corretagem ser&atilde;o devolvidos no prazo de at&eacute; 30 dias corridos.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA S&Eacute;TIMA &ndash; DA OBRIGA&Ccedil;&Atilde;O PELO PAGAMENTO DOS IMPOSTOS E TAXAS INCIDENTES SOBRE O LOTE:</p>\r\n<p style=\"padding-left: 40px;\">17.1 &ndash; Os tributos, impostos, tarifas e taxas incidentes sobre o im&oacute;vel anteriormente &agrave; data deste contrato ser&aacute; de responsabilidade da  {Empresa_Nome} .<br />17.2 &ndash; Os tributos, impostos, tarifas e taxas incidentes sobre o im&oacute;vel posteriormente &agrave; data deste contrato ser&aacute; de responsabilidade do  {Cliente_Nome} , que se compromete a pag&aacute;-los em dia, sem multa, mesmo em nome da  {Empresa_Nome} , podendo a  {Empresa_Nome}  exigir comprova&ccedil;&atilde;o.<br />17.3 &ndash; O atraso no pagamento dos impostos, poder&aacute; ensejar no vencimento antecipado da d&iacute;vida ou no pagamento pela  {Empresa_Nome} , para posterior reembolso pelo  {Cliente_Nome} , atualizados monetariamente e acrescidos de juros morat&oacute;rios na forma da cl&aacute;usula 10.2.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA OITAVA &ndash; DA AMORTIZA&Ccedil;&Atilde;O EXTRAORDIN&Aacute;RIA</p>\r\n<p style=\"padding-left: 40px;\">18.1 &ndash; Fica assegurado ao  {Cliente_Nome} , a qualquer tempo, efetuar amortiza&ccedil;&otilde;es extraordin&aacute;rias para redu&ccedil;&atilde;o do valor dos encargos mensais ou do prazo do financiamento, sendo o abatimento da amortiza&ccedil;&atilde;o precedido da cobran&ccedil;a de juros remunerat&oacute;rios.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA D&Eacute;CIMA NONA &ndash; DA LIQUIDA&Ccedil;&Atilde;O ANTECIPADA</p>\r\n<p style=\"padding-left: 40px;\">19.1 &ndash; Fica assegurado ao {Cliente_Nome} , a qualquer tempo, efetuar a liquida&ccedil;&atilde;o antecipada da d&iacute;vida apurada pelo saldo devedor atualizado, acrescido de juros remunerat&oacute;rios.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA &ndash; DO VENCIMENTO ANTECIPADO DA D&Iacute;VIDA:</p>\r\n<p style=\"padding-left: 40px;\">20.1 &ndash; Ocorrer&aacute; o vencimento antecipado na d&iacute;vida nas seguintes hip&oacute;teses:</p>\r\n<p style=\"padding-left: 40px;\">a) Atraso a partir de 30 (trinta) dias no pagamento das obriga&ccedil;&otilde;es ou n&atilde;o pagamento dos tributos incidentes sobre o im&oacute;vel;</p>\r\n<p style=\"padding-left: 40px;\">b) Transfer&ecirc;ncia ou cess&atilde;o a terceiros, dos direitos e obriga&ccedil;&otilde;es deste contrato, sem autoriza&ccedil;&atilde;o da  {Empresa_Nome} </p>\r\n<p style=\"padding-left: 40px;\">c) Descumprimento das obriga&ccedil;&otilde;es estipuladas em lei ou neste contrato.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA PRIMEIRA &ndash; DA CESS&Atilde;O OU TRANSFER&Ecirc;NCIA:</p>\r\n<p style=\"padding-left: 40px;\">21.1 &ndash; O   presente   contrato   particular pode   ser   transferido por   simples   trespasse,   lan&ccedil;ado no   verso   das vias em poder das partes, ou por   instrumento em   separado,   declarando-se o   n&uacute;mero do registro do   loteamento, o valor da cess&atilde;o e a qualifica&ccedil;&atilde;o do cession&aacute;rio, para o devido registro, desde que quitado o im&oacute;vel.<br />21.1.1 &ndash; A cess&atilde;o independe da anu&ecirc;ncia da  {Empresa_Nome} ,   mas,   em rela&ccedil;&atilde;o a esta,   seus   efeitos   somente    se produzem depois de cientificada, por escrito, pelas partes ou quando registrada a cess&atilde;o.<br />21.1.2 &ndash; Uma vez registrada a cess&atilde;o, feita sem anu&ecirc;ncia da   {Empresa_Nome} , o Oficial do Registro dar-lhe-&aacute; ci&ecirc;ncia, por escrito, dentro de 10 (dez) dias.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA SEGUNDA &ndash; DA ESCRITURA DEFINITIVA:</p>\r\n<p style=\"padding-left: 40px;\">22.1 &ndash; No prazo m&aacute;ximo de 180 (cento e oitenta) dias ap&oacute;s o  {Cliente_Nome}  ter quitado o saldo devedor, ter&aacute; de providenciar a escritura definitiva, sendo que todas as despesas correr&atilde;o por conta do  {Cliente_Nome} , assim como todas as demais despesas decorrentes deste contrato, do Imposto de Transmiss&atilde;o, das averba&ccedil;&otilde;es, transcri&ccedil;&otilde;es, certid&otilde;es negativas, al&eacute;m de outras. Ap&oacute;s esse prazo, cessam as responsabilidades da Administradora referentes a este contrato.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA TERCEIRA &ndash; DA COMUNICA&Ccedil;&Atilde;O ENTRE AS PARTES:</p>\r\n<p style=\"padding-left: 40px;\">23.1 &ndash; A  {Empresa_Nome}  e o  {Cliente_Nome}  convencionam e mutuamente consentem que a comunica&ccedil;&atilde;o entre os mesmos ser&aacute; feita atrav&eacute;s da Administradora, acima qualificada, unicamente atrav&eacute;s dos canais de comunica&ccedil;&atilde;o por acima informados. Convencionam ainda que a comunica&ccedil;&atilde;o da  {Empresa_Nome}  com o  {Cliente_Nome}  poder&aacute; ser feita atrav&eacute;s do endere&ccedil;o postal, endere&ccedil;o eletr&ocirc;nico ou n&uacute;mero telef&ocirc;nico fornecido neste contrato.<br />23.2 &ndash; Para todos os efeitos do presente contrato, ser&aacute; considerada v&aacute;lida toda comunica&ccedil;&atilde;o realizada via postal ao endere&ccedil;o postal acima fornecido, ou enviada de forma eletr&ocirc;nica para o endere&ccedil;o eletr&ocirc;nico acima fornecido, ou ainda para o telefone acima fornecido atrav&eacute;s de mensagem de texto e/ou por aplicativos utilizados para comunica&ccedil;&atilde;o.<br />23.3 &ndash; O  {Cliente_Nome}  se obriga a comunicar imediatamente qualquer mudan&ccedil;a de endere&ccedil;o postal, endere&ccedil;o eletr&ocirc;nico ou telefone de contato &agrave; Administradora, at&eacute; a final liquida&ccedil;&atilde;o deste contrato, sob pena de valer qualquer aviso, notifica&ccedil;&atilde;o ou cobran&ccedil;a enviada por qualquer dos canais de comunica&ccedil;&atilde;o informados.<br />23.4 &ndash; A comunica&ccedil;&atilde;o deve ser feita de forma inequ&iacute;voca (atrav&eacute;s de identifica&ccedil;&atilde;o completa de nome, CPF e im&oacute;vel), atrav&eacute;s dos canais mencionados, ou atrav&eacute;s de altera&ccedil;&atilde;o dos dados pessoais do  {Cliente_Nome} , na sua &aacute;rea restrita, dentro do sistema de controle desse contrato mencionado no item 6.4 da cl&aacute;usula sexta deste contrato.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA QUARTA &ndash; DA POL&Iacute;TICA DE PRIVACIDADE E PROTE&Ccedil;&Atilde;O DE DADOS:</p>\r\n<p style=\"padding-left: 40px;\">24.1 &ndash; A  {Empresa_Nome}  se compromete com o fiel cumprimento &agrave; Lei Geral de Prote&ccedil;&atilde;o de Dados Pessoais (Lei n&ordm; 13.853/2019), por conta da qual se obriga a respeitar a privacidade do  {Cliente_Nome}  protegendo e mantendo em sigilo todos os dados pessoais fornecidos em fun&ccedil;&atilde;o deste contrato, salvo os casos em que seja obrigado, por autoridades p&uacute;blicas, a revelar tais informa&ccedil;&otilde;es a terceiros.<br />24.2 &ndash; Nos termos do artigo 10&ordm;, inciso I, da Lei Geral de Prote&ccedil;&atilde;o de Dados Pessoais, a  {Empresa_Nome}  diretamente ou atrav&eacute;s de seus prepostos, ostenta leg&iacute;timo interesse em armazenar, acessar, avaliar, modificar, transferir e comunicar, sob qualquer forma e por tempo indeterminado, todos e quaisquer contratos, termos aditivos, e-mails, cartas, pe&ccedil;as processuais, e demais documenta&ccedil;&otilde;es relativas ao objeto desta contrata&ccedil;&atilde;o.<br />24.3 &ndash; O tratamento dos dados do  {Cliente_Nome} , somente poder&aacute; ser feito para os fins determinados em Lei, e para a fiel execu&ccedil;&atilde;o do presente contrato, e tais opera&ccedil;&otilde;es de tratamento de dados ser&atilde;o sempre realizadas em apoio e promo&ccedil;&atilde;o &agrave;s atividades t&eacute;cnicas e intelectuais desenvolvidas internamente pela  {Empresa_Nome} , em especial para fins de comprova&ccedil;&atilde;o e defesa do cumprimento regular do presente contrato.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA QUINTA &ndash; DO CUMPRIMENTO DAS OBRIGA&Ccedil;&Otilde;ES CONTRATUAIS:</p>\r\n<p style=\"padding-left: 40px;\">25.1 &ndash; A toler&acirc;ncia pela  {Empresa_Nome}  no cumprimento das obriga&ccedil;&otilde;es contratuais n&atilde;o acarretar&aacute; o cancelamento das penalidades e poderes ora conferidos, que poder&atilde;o ser exercidos a qualquer tempo, sendo as obriga&ccedil;&otilde;es extensivas aos herdeiros/sucessores/cession&aacute;rios/promitentes cession&aacute;rios do  {Cliente_Nome} .</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA SEXTA &ndash; DA NOVA&Ccedil;&Atilde;O:</p>\r\n<p style=\"padding-left: 40px;\">26.1 &ndash; Nenhuma toler&acirc;ncia   ou   concess&atilde;o   por   parte   da    {Empresa_Nome}    incorrer&aacute;   em   nova&ccedil;&atilde;o, prevalecendo assim, todas as Cl&aacute;usulas e condi&ccedil;&otilde;es do presente contrato, que se faz em car&aacute;ter irrevog&aacute;vel e obrigat&oacute;rio &agrave;s partes, seus herdeiros ou sucessores. A efic&aacute;cia do presente contrato &eacute; subordinada a condi&ccedil;&atilde;o do pagamento i ntegral do pre&ccedil;o.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA S&Eacute;TIMA &ndash; DAS DISPOSI&Ccedil;&Otilde;ES FINAIS:</p>\r\n<p style=\"padding-left: 40px;\">27.1 &ndash; Fica acordado entre as partes que   em   hip&oacute;tese   alguma   a    {Empresa_Nome}    ser&aacute; respons&aacute;vel pela a&ccedil;&atilde;o, omiss&atilde;o ou neglig&ecirc;ncia por parte do Poder P&uacute;blico Constitu&iacute;do ou de terceiros, ainda que estes sejam clientes da empresa, na condi&ccedil;&atilde;o de Promitentes Compradores, bem como responder por perdas e   danos cujas causas n&atilde;o decorram direta ou indiretamente de sua a&ccedil;&atilde;o ou omiss&atilde;o.<br />27.2 &ndash; Caso a  {Empresa_Nome}  tenha que   recorrer   a   notifica&ccedil;&otilde;es,   cobran&ccedil;a   extrajudicial,   tribunal arbitral ou justi&ccedil;a para defesa de seus interesses,   todas   as   despesas   decorrentes   dessa   medida,   correr&atilde;o   por conta do  {Cliente_Nome} , inclusive honor&aacute;rios advocat&iacute;cios.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA OITAVA - AQUIESC&Ecirc;NCIA DO CONTE&Uacute;DO CONTRATUAL:</p>\r\n<p style=\"padding-left: 40px;\">28.1 &ndash; Ap&oacute;s exame de todas as cl&aacute;usulas e condi&ccedil;&otilde;es do aludido contrato, as partes declaram aceit&aacute;-lo como redigido e que o mesmo se encontra de acordo com o que foi previamente pactuado.</p>\r\n<p style=\"padding-left: 40px;\">CL&Aacute;USULA VIG&Eacute;SIMA NONA &ndash; DO ELEI&Ccedil;&Atilde;O DE FORO:</p>\r\n<p style=\"padding-left: 40px;\">29.1 &ndash; Fica eleito o foro da comarca de {Lote_Municipio} &ndash; {Lote_Sigla_Estado} para dirimir quest&otilde;es decorrentes do presente contrato.</p>\r\n<p style=\"padding-left: 40px;\">E por estarem de acordo com os termos e condi&ccedil;&otilde;es deste contrato, as partes assinam o presente em 3 (tr&ecirc;s) vias com as testemunhas.</p>\r\n<p> </p>\r\n<p style=\"text-align: center;\"><br /> {Empresa_Estado}  - {Empresa_Sigla_Estado} , ___/___/___ </p>\r\n<p style=\"text-align: center;\"> </p>\r\n<p style=\"text-align: center;\">____________________________________________________________________</p>\r\n<p style=\"text-align: center;\"> {Empresa_Nome} </p>\r\n<p style=\"text-align: center;\"> </p>\r\n<p style=\"text-align: center;\">____________________________________________________________________</p>\r\n<p style=\"text-align: center;\"> {Cliente_Nome} </p>\r\n<p style=\"text-align: center;\"> </p>\r\n<p style=\"text-align: center;\">____________________________________________________________________</p>\r\n<p style=\"text-align: center;\"> {Cliente2_Nome} </p>\r\n<p> </p>\r\n<p style=\"padding-left: 40px;\"><strong>Testemunhas:</strong></p>\r\n<p style=\"padding-left: 40px;\"> </p>\r\n<p style=\"text-align: left; padding-left: 40px;\">______________________________________    ______________________________________</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\n\r\n</body>\r\n</html>",
                            IsPadraoSistema = true,
                            Nome = "Modelo SCAE 1 - Compra e Venda",
                            TipoId = 1
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ModeloContratoDigitalEmpreendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("ModeloContratoDigitalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("ModeloContratoDigitalId");

                    b.ToTable("modelocontratodigitalempreendimento", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SignatarioContratoDigital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int>("ContratoDigitalId")
                        .HasColumnType("integer");

                    b.Property<string>("DFourSignKeySigner")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAssinaturaDocumento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataRegistroDFourSign")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAssinaturaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoDigitalId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoAssinaturaId");

                    b.ToTable("signatariocontratodigital", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SituacaoContratoDigital", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaocontratodigital", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Envio pendente"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aguardando signatários"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Aguardando assinaturas"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Finalizado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Arquivado"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Cancelado"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Editando"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Processando"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SituacaoEmailSignatario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaoemailsignatario", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Assinado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Pendente"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Não enviado"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.TipoAssinatura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoassinatura", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Assinar como parte"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Assinar como testemunha"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Assinar como avalista"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.TipoContratoDigital", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipocontratodigital", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Contratos de Compra e Venda"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aditivos"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Documentos Complementares"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("contratodocumento", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoObservacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("contratoobservacao", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoUnidadeAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("contratounidadeadicional", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoVistoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescricaoReparo")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("ValorReparo")
                        .HasColumnType("numeric");

                    b.Property<string>("Vistoriador")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("contratovistoria", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoVistoriaFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoVistoriaId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoVistoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("contratovistoriafoto", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.HistoricoSituacaoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historicosituacaocontrato", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.SituacaoContrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaocontrato", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Em andamento"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cobrança"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Jurídico"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Prejuízo"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Cancelado"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Quitado"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Aditado"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Com processo"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Pendente de aprovação"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Proposta devolvida"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.TipoAditamentoContrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoaditamento", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Acordo com possuidor"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Acordo com transferência"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Acordo judicial"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Acordo mediação"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Acordo simples"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Mediação com transferência"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Transferência"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Ajuste"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoOperacaoId");

                    b.ToTable("tipocontrato", "clientes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.TipoOperacaoContrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoOperacaocontrato", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Venda"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Locação"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Aditamento"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.TipoProdutoContrato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipocontratoproduto", "clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Imóvel"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Lote"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassificacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SituacaoId");

                    b.ToTable("orcamento", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("orcamentodocumento", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovado")
                        .HasColumnType("boolean");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("PrazoEntregaDias")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeDias")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("orcamentofornecedor", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("orcamentoitem", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoItemFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("OrcamentoItemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("OrcamentoItemId");

                    b.ToTable("orcamentoitem_fornecedor", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlmoxarifadoPadraoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoPadraoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("parametro", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Conferente")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DespesaId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Frete")
                        .HasColumnType("numeric");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<bool>("RecebidoPorXML")
                        .HasColumnType("boolean");

                    b.Property<int>("SituacaoFreteId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("SituacaoFreteId");

                    b.HasIndex("TipoId");

                    b.ToTable("pedido", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoClassificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaGerencialId")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("ContaGerencialId");

                    b.HasIndex("PedidoId");

                    b.ToTable("pedidoclassificacao", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("QuantidadeRecebida")
                        .HasColumnType("numeric");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SituacaoId");

                    b.ToTable("pedidoitem", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoXMLArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pedidoxmlarquivo", "compras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.SituacaoOrcamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.ToTable("situacaoorcamento", "compras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Em Análise"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Orçamento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pedido"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Concluída"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Cancelada"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.SituacaoPedido", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.ToTable("situacaopedido", "compras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Em Análise"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Orçamento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pedido"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Concluída"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Cancelada"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.SituacaoPedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.ToTable("situacaopedidoitem", "compras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Pendente"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Recebido Parcial"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Recebido Integral"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.Hidrometro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("NumeroHidrometro")
                        .HasColumnType("text");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ReceitaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("hidrometro", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.HidrometroUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HidrometroId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HidrometroId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("hidrometrounidade", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.MarcacaoAgua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Consumo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAfericao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("HidrometroId")
                        .HasColumnType("integer");

                    b.Property<int>("Leitura")
                        .HasColumnType("integer");

                    b.Property<int?>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("HidrometroId");

                    b.HasIndex("ParcelaId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("marcacaoagua", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.QualidadeAgua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("qualidadeagua", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.TabelaValorConsumoAgua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsPrincipal")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tabelavalorconsumoagua", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.TabelaValorConsumoAguaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FaixaConsumoFinal")
                        .HasColumnType("integer");

                    b.Property<int>("FaixaConsumoInicial")
                        .HasColumnType("integer");

                    b.Property<bool>("IsValorFixo")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("TabelaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("TabelaId");

                    b.ToTable("tabelavalorconsumoaguaitem", "controleagua");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.ConfrontanteAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("confrontanteadicional", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Empreendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short>("AjusteIndice")
                        .HasColumnType("smallint");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<int?>("EmpresaAdministradoraId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("FotoPrincipal")
                        .HasColumnType("bytea");

                    b.Property<string>("Kml")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("PercentualAdiministradora")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PercentualCorretor")
                        .HasColumnType("numeric");

                    b.Property<int?>("PlanoPagamentoModeloId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaAdministradoraId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PlanoPagamentoModeloId");

                    b.HasIndex("TipoId");

                    b.ToTable("empreendimento", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("empreendimentodocumento", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("empreendimentofoto", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoProprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Participacao")
                        .HasColumnType("numeric");

                    b.Property<int>("ProprietarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("empreendimento_proprietario", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpresaArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("empresaarquivo", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("grupo", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Imovel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alugado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataVencimentoAutorizacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Exclusivo")
                        .HasColumnType("boolean");

                    b.Property<bool>("Financiavel")
                        .HasColumnType("boolean");

                    b.Property<bool>("NaPlanta")
                        .HasColumnType("boolean");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("boolean");

                    b.Property<bool>("Placa")
                        .HasColumnType("boolean");

                    b.Property<int?>("SeguradoraId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoImovelId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorAluguel")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("SeguradoraId");

                    b.HasIndex("TipoImovelId");

                    b.HasIndex("UnidadeId")
                        .IsUnique();

                    b.ToTable("imovel", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Jazigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId")
                        .IsUnique();

                    b.ToTable("Jazigo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.LadoAdicional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int?>("LoteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("LoteId");

                    b.ToTable("ladoadicional", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId")
                        .IsUnique();

                    b.ToTable("lote", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColunaFunilId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<int?>("CorretorId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataCadastroPreReserva")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataCadastroReserva")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEnvioAprovacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("LeadId")
                        .HasColumnType("integer");

                    b.Property<int?>("MotivoCancelamentoReservaId")
                        .HasColumnType("integer");

                    b.Property<int>("PosicaoFunil")
                        .HasColumnType("integer");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoReservaId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColunaFunilId");

                    b.HasIndex("ContratoId")
                        .IsUnique();

                    b.HasIndex("CorretorId");

                    b.HasIndex("LeadId");

                    b.HasIndex("MotivoCancelamentoReservaId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoReservaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("reserva", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.ReservaObservacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("ReservaId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("reservaobservacao", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.SituacaoReserva", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaoreserva", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Em andamento"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aguardando aprovação da venda"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Vendido"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Cancelado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Proposta devolvida"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.SituacaoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaounidade", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Disponível"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Indisponível"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Vendido"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Reservado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Invadido"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Penhorado"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Caucionado"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.TipoEmpreendimento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("tipoempreendimento", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Loteamento"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Prédio/Torre"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Condomínio/Conjunto"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Cemitério"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.TipoGrupo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("tipogrupo", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Quadra"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Andar"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.TipoImovel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoimovel", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Casa"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Apartamento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Quitinete"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Flat"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Loft"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Galpão"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.TipoReserva", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tiporeserva", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Reserva Padrão"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Pré-reserva"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.TipoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("tipounidade", "empreendimento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Lote"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Imóvel"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Jazigo"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AbastecimentoAgua")
                        .HasColumnType("text");

                    b.Property<int?>("AdministradoraId")
                        .HasColumnType("integer");

                    b.Property<bool>("AtualizarComPlanoPagamentoModelo")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<int?>("ConstrutoraId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("DestinoLixo")
                        .HasColumnType("text");

                    b.Property<string>("Edificacao")
                        .HasColumnType("text");

                    b.Property<string>("EnergiaEletrica")
                        .HasColumnType("text");

                    b.Property<string>("EscoamentoSanitario")
                        .HasColumnType("text");

                    b.Property<string>("FormaAquisicaoUnidade")
                        .HasColumnType("text");

                    b.Property<int>("GrupoId")
                        .HasColumnType("integer");

                    b.Property<string>("Iptu")
                        .HasColumnType("text");

                    b.Property<string>("KmlId")
                        .HasColumnType("text");

                    b.Property<int?>("ModeloPlanoPagamentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Ocupacoes")
                        .HasColumnType("integer");

                    b.Property<decimal>("PercentualIndicacao")
                        .HasColumnType("numeric");

                    b.Property<bool>("RegularizacaoFundiaria")
                        .HasColumnType("boolean");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TaxaAdmMensal")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorIndicacao")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AdministradoraId");

                    b.HasIndex("ConstrutoraId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("ModeloPlanoPagamentoId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoId");

                    b.ToTable("unidade", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("unidadefoto", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeProprietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Participacao")
                        .HasColumnType("numeric");

                    b.Property<int>("ProprietarioId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProprietarioId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("unidade_proprietario", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeVicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<int>("VicioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.HasIndex("VicioId");

                    b.ToTable("unidadevicio", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Vicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("TipoUnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoUnidadeId");

                    b.ToTable("vicio", "empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAntecipacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PrimeiraParcelaAjustadaId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeParcelasAmortizadas")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaldoAmortizacaoPreAntecipacao")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoAntecipacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorAmortizado")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ParcelaId")
                        .IsUnique();

                    b.HasIndex("TipoAntecipacaoId");

                    b.ToTable("antecipacaoamortizacao", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacaoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AntecipacaoAmortizacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorParcelaPosAmortizacao")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AntecipacaoAmortizacaoId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("antecipacaoamortizacaoitem", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoComprovante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacaoAntecipacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEmissaoComprovante")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Documento")
                        .HasColumnType("bytea");

                    b.Property<bool>("IsQuitacao")
                        .HasColumnType("boolean");

                    b.Property<string>("Protocolo")
                        .HasColumnType("text");

                    b.Property<int>("ReceitaParcelaId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaParcelaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("antecipacaocomprovante", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ArquivoRemessaDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("RemessaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RemessaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("arquivoremessadocumento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Site")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("banco", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CentroCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("CentroCustoPaiId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoPaiId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("centrodecusto", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CertificadoBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Conteudo")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("DataValidacaoFinal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataValidacaoInicial")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Formato")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.ToTable("CertificadoBanco");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CondicaoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("Intervalo")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int>("Parcelas")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("condicaopagamento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("integer");

                    b.Property<long>("BoletoSequencia")
                        .HasColumnType("bigint");

                    b.Property<string>("Carteira")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("text");

                    b.Property<string>("ClienteDesde")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("CodWorkerSpace")
                        .HasColumnType("text");

                    b.Property<string>("CodigoAssociacaoZoop")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("CodigoCedente")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("CodigoTokenZoop")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("CodigoZoop")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<DateTime?>("DataUploadCertificado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DigitoAgencia")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("DigitoCarteira")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("DigitoCedente")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("DigitoConta")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("GeraBoleto")
                        .HasColumnType("boolean");

                    b.Property<bool>("GerarBoletoComPix")
                        .HasColumnType("boolean");

                    b.Property<string>("Instrucao1")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao2")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao3")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<bool>("IsPoupanca")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyDictKey")
                        .HasColumnType("text");

                    b.Property<string>("KeyTypeDict")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCertificado")
                        .HasColumnType("text");

                    b.Property<string>("NumeroAgencia")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("NumeroConta")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Posto")
                        .HasColumnType("text");

                    b.Property<int>("RemessaSequencia")
                        .HasColumnType("integer");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("numeric");

                    b.Property<string>("SenhaCertificado")
                        .HasColumnType("text");

                    b.Property<string>("TokenAcesso")
                        .HasColumnType("text");

                    b.Property<string>("TxIdSantander")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("contacorrente", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrenteGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("TipoGatewayId");

                    b.ToTable("contacorrentegateway", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrenteSplit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPercentual")
                        .HasColumnType("boolean");

                    b.Property<int>("ParametroGatewayId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("ParametroGatewayId");

                    b.ToTable("contacorrentesplit", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaGerencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("ContaGerencialPaiId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("char");

                    b.HasKey("Id");

                    b.HasIndex("ContaGerencialPaiId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("contagerencial", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveDfe")
                        .HasMaxLength(44)
                        .HasColumnType("character varying(44)");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsMultiplosPedidos")
                        .HasColumnType("boolean");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaldoPreAditamento")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("OrigemId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoId");

                    b.ToTable("despesa", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaBaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Automatica")
                        .HasColumnType("boolean");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<bool>("Conciliado")
                        .HasColumnType("boolean");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<string>("FitId")
                        .HasColumnType("text");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Juros")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Multa")
                        .HasColumnType("numeric");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ParcelaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("despesabaixa", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaBaixaComprovante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DespesaBaixaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DespesaBaixaId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("despesabaixacomprovante", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaClassificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaGerencialId")
                        .HasColumnType("integer");

                    b.Property<int>("DespesaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("ContaGerencialId");

                    b.HasIndex("DespesaId");

                    b.ToTable("despesaclassificacao", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DespesaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("despesadocumento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DespesaId")
                        .HasColumnType("integer");

                    b.Property<string>("LinhaDigitavelBoleto")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("Parcela")
                        .HasColumnType("integer");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("SituacaoId");

                    b.ToTable("despesaparcela", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("formapagamento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Indice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Acumulado")
                        .HasColumnType("numeric");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<bool>("AplicarIndiceNegativo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("AvulsoMensal")
                        .HasColumnType("numeric");

                    b.Property<int>("CodigoLigacao")
                        .HasColumnType("integer");

                    b.Property<byte>("Dia")
                        .HasColumnType("smallint");

                    b.Property<bool>("Executado")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Mensal")
                        .HasColumnType("numeric");

                    b.Property<byte>("Mes")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoIndiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoIndiceId");

                    b.ToTable("indice", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.IntervaloReajuste", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("intervaloreajuste", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Anual"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Mensal"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.LayoutCobranca", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("layoutcobranca", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Seu boleto está disponível (10 dias antes)"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Seu boleto está disponível (3 dias antes)"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pagamento atrasado (3 dias depois)"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Pagamento atrasado (10 dias depois)"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Pagamento atrasado (17 dias depois)"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Pagamento atrasado (26 dias depois)"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Pagamento atrasado (32 dias depois)"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Pagamento atrasado (46 dias depois)"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Pagamento atrasado (62 dias depois)"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Pagamento atrasado (74 dias depois)"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Pagamento atrasado (88 dias depois)"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Pagamento atrasado (94 dias depois)"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Pagamento a vencer"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Pagamento vencido"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.OrigemDespesa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("origemdespesa", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Contrato"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Documentação"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Financeiro"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Pedido de Compra"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Serviço"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CentroCustoReceitaId")
                        .HasColumnType("integer");

                    b.Property<int?>("CentroCustoReceitalId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContaGerenciaReceitalId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContaGerencialReceitaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("DescontoAditamento")
                        .HasColumnType("numeric");

                    b.Property<bool>("DesmarcarBoletosCobrancasAutomaticas")
                        .HasColumnType("boolean");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("JurosAditamento")
                        .HasColumnType("numeric");

                    b.Property<decimal>("JurosAmortizacao")
                        .HasColumnType("numeric");

                    b.Property<int?>("TipoAmortizacaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoReceitaId");

                    b.HasIndex("ContaGerencialReceitaId");

                    b.HasIndex("EmpresaId")
                        .IsUnique()
                        .HasDatabaseName("IX_parametro_EmpresaId1");

                    b.HasIndex("TipoAmortizacaoId");

                    b.ToTable("parametro", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ParametroCobranca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Dias")
                        .HasColumnType("integer");

                    b.Property<bool>("EnviarSms")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnviarWhatsapp")
                        .HasColumnType("boolean");

                    b.Property<int>("LayoutCobrancaId")
                        .HasColumnType("integer");

                    b.Property<int>("ParametroId")
                        .HasColumnType("integer");

                    b.Property<bool>("PosVencimento")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("LayoutCobrancaId");

                    b.HasIndex("ParametroId");

                    b.ToTable("parametrocobranca", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ParametroGatway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Instrucao1")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao2")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao3")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int>("ParametroId")
                        .HasColumnType("integer");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean");

                    b.Property<decimal>("TaxaBoleto")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<bool>("isGerado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ParametroId");

                    b.HasIndex("TipoId");

                    b.ToTable("parametrogatway", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<int>("IntervaloReajusteId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDFIFixo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("JurosTabela")
                        .HasColumnType("numeric");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<decimal>("SeguroDFI")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SeguroMPI")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxaBoleto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxaGestao")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoAmortizacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAnoInicioReajusteId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoIndiceId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoMesReajusteId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoValorTotalId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorMetroQuadrado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("IntervaloReajusteId");

                    b.HasIndex("TipoAmortizacaoId");

                    b.HasIndex("TipoAnoInicioReajusteId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoIndiceId");

                    b.HasIndex("TipoMesReajusteId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TipoValorTotalId");

                    b.ToTable("planopagamentomodelo", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<int>("IntervaloReajusteId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDFIFixo")
                        .HasColumnType("boolean");

                    b.Property<decimal>("JurosTabela")
                        .HasColumnType("numeric");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<decimal>("SeguroDFI")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SeguroMPI")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxaBoleto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxaGestao")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoAmortizacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAnoInicioReajusteId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoIndiceId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoMesReajusteId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoValorTotalId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorMetroQuadrado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("IntervaloReajusteId");

                    b.HasIndex("TipoAmortizacaoId");

                    b.HasIndex("TipoAnoInicioReajusteId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoIndiceId");

                    b.HasIndex("TipoMesReajusteId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TipoValorTotalId");

                    b.HasIndex("UnidadeId")
                        .IsUnique();

                    b.ToTable("planopagamentounidade", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoAnoInicioReajuste", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoanoinicioreajuste", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ano do contrato"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "1 ano após o contrato"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "2 anos após o contrato"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "3 anos após o contrato"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipointervaloparcelas", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mensal"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Quinzenal"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Bimestral"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Trimestral"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Quadrimestral"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Semestral"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Anual"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoMesReajuste", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipomesreajuste", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Mês do Contrato"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "1ª Parcela de Entrada"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "1ª Parcela do Financiamento"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "1 Mês Antes do Contrato"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "2 Meses Antes do Contrato"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "3 Meses Antes do Contrato"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "1 Mês Depois do Contrato"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "2 Meses Depois do Contrato"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "3 Meses Depois do Contrato"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoplanopagamento", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "M²"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Valor Fixo"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "% Valor Total"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("GerarBoletoAutomatico")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReajustavel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReceitaAgua")
                        .HasColumnType("boolean");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<bool>("RealizarCobrancaAutomatica")
                        .HasColumnType("boolean");

                    b.Property<decimal>("SaldoPreAditamento")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoId");

                    b.HasIndex("TipoOperacaoId");

                    b.ToTable("receita", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaBaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Automatica")
                        .HasColumnType("boolean");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<decimal>("CorrecaoMonetaria")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Juros")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Multa")
                        .HasColumnType("numeric");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TransacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ParcelaId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TransacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("receitabaixa", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaBaixaComprovante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaBaixaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaBaixaId")
                        .IsUnique();

                    b.ToTable("receitabaixacomprovante", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaClassificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaGerencialId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("ContaGerencialId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("receitaclassificacao", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("receitadocumento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgrupadorId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amortizacao")
                        .HasColumnType("numeric");

                    b.Property<int?>("AntecipadorId")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoMovimentoRetorno")
                        .HasColumnType("text");

                    b.Property<string>("CodigoZoop")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<bool>("Conciliado")
                        .HasColumnType("boolean");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<string>("ContratoNumeroSequencia")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<decimal>("CorrecaoSaldo")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DataEnvioCobranca")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEnvioCobrancaSms")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataEnvioCobrancaWhatsapp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataRemessa")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataVencimentoOriginal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Instrucao1")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao2")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Instrucao3")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<bool>("IsAgrupador")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAntecipador")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Juros")
                        .HasColumnType("numeric");

                    b.Property<string>("LinhaDigitavelBoleto")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("NossoNumero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("Parcela")
                        .HasColumnType("integer");

                    b.Property<string>("ParcelasAgrupadasNumero")
                        .HasColumnType("text");

                    b.Property<string>("QrCode")
                        .HasColumnType("text");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("integer");

                    b.Property<int?>("Remessa")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaldoAmortizacaoFimPeriodoCorrigido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoAmortizacaoInicioPeriodoCorrigido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaldoAmortizacaoPeriodoOriginal")
                        .HasColumnType("numeric");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoServicoId")
                        .HasColumnType("integer");

                    b.Property<string>("UrlBoleto")
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AgrupadorId");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TipoServicoId");

                    b.ToTable("receitaparcela", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaTransacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BancoNumero")
                        .HasColumnType("text");

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int?>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<bool>("CriadoPorUmReajusteIndice")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataRemessa")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Juros")
                        .HasColumnType("numeric");

                    b.Property<string>("LinhaDigitavelBoleto")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<decimal>("Multa")
                        .HasColumnType("numeric");

                    b.Property<string>("NossoNumero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer");

                    b.Property<string>("QrCode")
                        .HasColumnType("text");

                    b.Property<string>("ReferenceIdBoleto")
                        .HasColumnType("text");

                    b.Property<int?>("RemessaId")
                        .HasColumnType("integer");

                    b.Property<int>("SituacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TaxaBoleto")
                        .HasColumnType("numeric");

                    b.Property<int?>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoOperacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoStatusTransacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("UrlBoleto")
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioBoletoGeradoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioTransacaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ParcelaId");

                    b.HasIndex("RemessaId");

                    b.HasIndex("SituacaoId");

                    b.HasIndex("TipoGatewayId");

                    b.HasIndex("TipoOperacaoId");

                    b.HasIndex("TipoStatusTransacaoId");

                    b.HasIndex("UsuarioBoletoGeradoId");

                    b.HasIndex("UsuarioTransacaoId");

                    b.ToTable("receitatransacao", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReguaCobranca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("reguacobranca", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReguaCobrancaEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaximoDiasVencido")
                        .HasColumnType("integer");

                    b.Property<int>("MinimoDiasVencido")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int>("ReguaCobrancaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReguaCobrancaId");

                    b.ToTable("reguacobrancaetapa", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Remessa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsProcessado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("NumeroSequencia")
                        .HasColumnType("integer");

                    b.Property<int>("TipoCnab")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("TipoId");

                    b.ToTable("remessa", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.RetornoBancario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Documento")
                        .HasColumnType("bytea");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("retornobancario", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.SituacaoDespesaParcela", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaodespesaparcela", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cancelado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pago"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Pago Parcialmente"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.SituacaoReceitaParcela", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaoreceitaparcela", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cancelado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pago"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Pago Parcialmente"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Aditado"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Amortizado"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Amortizado Pendente"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Pendente de aprovação"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoAmortizacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoAmortizacao", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Padrão"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "PRICE"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "SAC"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoAntecipacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoantecipacao", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Reduzir valor das parcelas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Reduzir prazo do contrato"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoDespesa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipodespesa", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Título"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Título de Crédito"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Título Recorrente"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("tipodocumento", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoGateway", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipogateway", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Zoop"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "GalaxPay"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Safra"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Asaas"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "ContaPay"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Hokma"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoIndice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoindice", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "IGP-M (FGV)"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "INCC (FGV)"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "INPC (IBGE)"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "PARCELAS FIXAS"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "SALÁRIO MÍNIMO"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "UFIR"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "IPCA"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoOperacaofinanceira", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fintech"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Banco Arquivo"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Banco Integrado"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoReceita", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tiporeceita", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Financiamento"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Crédito"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Entrada"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Honorários"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Intermediária"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Serviço"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoRemessa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tiporemessa", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Registrar"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cancelar"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoServicoParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("tiposervico", "financeiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoStatusTransacao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipotransacao", "financeiro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Criação de parcela"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Edição de parcela"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Reajuste de índice"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Baixa"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Baixa Webhook"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Baixa Worker"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Baixa cancelada"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Baixa importada"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Emissão de boleto"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Boleto cancelado normal"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Boleto cancelado forçado"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Amortização"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CorretorId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAgendamento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("LeadId")
                        .HasColumnType("integer");

                    b.Property<bool>("Realizado")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoAtendimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CorretorId");

                    b.HasIndex("LeadId");

                    b.HasIndex("TipoAtendimentoId");

                    b.ToTable("atendimento", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("ColunaFunilPaiId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Posicao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColunaFunilPaiId");

                    b.ToTable("colunafunil", "geral");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Ativo = true,
                            Descricao = "Fase que envolve a preparação para o contato inicial com o potencial cliente.",
                            Nome = "Pré-atendimento",
                            Posicao = 1
                        },
                        new
                        {
                            Id = -2,
                            Ativo = true,
                            Descricao = "Contato inicial feito com leads que ainda não demonstraram um interesse ativo ou específico em comprar um terreno.",
                            Nome = "Atendimento Frio",
                            Posicao = 2
                        },
                        new
                        {
                            Id = -3,
                            Ativo = true,
                            Descricao = "Leads que mostraram interesse ativo e possuem uma intenção de compra mais imediata.",
                            Nome = "Atendimento Quente",
                            Posicao = 3
                        },
                        new
                        {
                            Id = -4,
                            Ativo = true,
                            Descricao = "Organizar visitas aos terrenos de interesse.",
                            Nome = "Visita",
                            Posicao = 4
                        },
                        new
                        {
                            Id = -5,
                            Ativo = true,
                            Descricao = "Após a seleção de um terreno, procede-se com a análise de crédito do cliente para garantir a viabilidade financeira da compra.",
                            Nome = "Reservas",
                            Posicao = 5
                        },
                        new
                        {
                            Id = -6,
                            Ativo = true,
                            Descricao = "Elaboração e apresentação de uma proposta formal de compra ao cliente.",
                            Nome = "Proposta",
                            Posicao = 6
                        },
                        new
                        {
                            Id = -7,
                            Ativo = true,
                            ColunaFunilPaiId = -6,
                            Descricao = " A proposta foi elaborada e está pronta para ser enviada ao cliente.",
                            Nome = "Proposta Preparada",
                            Posicao = 1
                        },
                        new
                        {
                            Id = -8,
                            Ativo = true,
                            ColunaFunilPaiId = -6,
                            Descricao = ": A proposta foi enviada ao cliente e está aguardando resposta.",
                            Nome = "Proposta Enviada",
                            Posicao = 2
                        },
                        new
                        {
                            Id = -9,
                            Ativo = true,
                            ColunaFunilPaiId = -6,
                            Descricao = "Estão ocorrendo negociações ativas com o cliente sobre termos da proposta.",
                            Nome = "Negociação",
                            Posicao = 3
                        },
                        new
                        {
                            Id = -10,
                            Ativo = true,
                            ColunaFunilPaiId = -6,
                            Descricao = "O cliente aceitou a proposta, e o processo está pronto para avançar para a etapa de elaboração do contrato.",
                            Nome = "Proposta Aceita",
                            Posicao = 4
                        },
                        new
                        {
                            Id = -11,
                            Ativo = true,
                            Descricao = "Fase subdividida em etapas detalhadas que acompanham o processo de formalização do contrato de compra.",
                            Nome = "Contrato",
                            Posicao = 7
                        },
                        new
                        {
                            Id = -12,
                            Ativo = true,
                            ColunaFunilPaiId = -11,
                            Descricao = "Preparação do contrato com base na proposta aceita.",
                            Nome = "Elaborando Contrato",
                            Posicao = 1
                        },
                        new
                        {
                            Id = -13,
                            Ativo = true,
                            ColunaFunilPaiId = -11,
                            Descricao = " Envio do contrato ao cliente para revisão.",
                            Nome = "Contrato Emitido",
                            Posicao = 2
                        },
                        new
                        {
                            Id = -14,
                            Ativo = true,
                            ColunaFunilPaiId = -11,
                            Descricao = "Cliente assina o contrato e retorna.",
                            Nome = "Contrato Assinado pelo Cliente",
                            Posicao = 3
                        },
                        new
                        {
                            Id = -15,
                            Ativo = true,
                            ColunaFunilPaiId = -11,
                            Descricao = "Todas as partes envolvidas assinam o contrato, formalizando a venda.",
                            Nome = "Contrato Assinado por Todos",
                            Posicao = 4
                        },
                        new
                        {
                            Id = -16,
                            Ativo = true,
                            Descricao = "Registra-se a perda da venda caso o cliente decida não prosseguir em qualquer etapa do processo.",
                            Nome = "Venda Perdida",
                            Posicao = 8
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.ComoLeadContactou", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("comoleadcontactou", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Não informado pelo vendedor"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Whatsapp"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Telefone"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Visita na sede"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Rede social"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Corretores"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Imobiliária"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Email"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Site"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Plantão de vendas"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.ComoLeadNosEncontrou", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("comoleadnosencontrou", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Não informado pelo vendedor"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Outdoor fora do empreendimento"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Rádio"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Outdoor / Placa / Faixa no Empreendimento"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Faixa horizontal fora do empreendimento"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Indicação de terceiros"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Jornais / Revistas / Mala Direta Impressa"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Plantão de vendas"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Propaganda volante (sonora)"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Propaganda (Flyer e folders)"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Site"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Telemarketing"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Visita no empreendimento"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Mala direta digital (E-mail)"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Televisão"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Corretores"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Imobiliárias"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Outros"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Propaganda (Sonora, Flyer e Folders)"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Marketing Digital"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Facebook"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Twitter (X)"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Instagram"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Youtube"
                        },
                        new
                        {
                            Id = 26,
                            Nome = "TikTok"
                        },
                        new
                        {
                            Id = 27,
                            Nome = "Linkedin"
                        },
                        new
                        {
                            Id = 28,
                            Nome = "GoogleAds"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.GrauInteresse", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("grauinteresse", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Quente"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Frio"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.HistoricoLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColunaFunilId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("LeadId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColunaFunilId");

                    b.HasIndex("LeadId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("historicolead", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColunaFunilId")
                        .HasColumnType("integer");

                    b.Property<int>("ComoLeadContactouId")
                        .HasColumnType("integer");

                    b.Property<int>("ComoLeadNosEncontrouId")
                        .HasColumnType("integer");

                    b.Property<int?>("CorretorResponsavelId")
                        .HasColumnType("integer");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataInsercaoFunil")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataUltimaInteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataVinculoCorretor")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<int?>("GrauInteresseId")
                        .HasColumnType("integer");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<int>("PosicaoFunil")
                        .HasColumnType("integer");

                    b.Property<string>("TelefonePrincipal")
                        .HasColumnType("text");

                    b.Property<string>("TelefoneSecundario")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ColunaFunilId");

                    b.HasIndex("ComoLeadContactouId");

                    b.HasIndex("ComoLeadNosEncontrouId");

                    b.HasIndex("CorretorResponsavelId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("GrauInteresseId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("OrigemId");

                    b.ToTable("lead", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.MotivoCancelamentoReserva", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("motivocancelamentoreserva", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Não informado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Imóvel vendido"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Achou caro"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Valor da parcela alta"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Valor da entrada alta"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Taxa de juros alta"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Entrada e parcela alta"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Proposta recusada"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Não deu retorno"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Comprou em outro local (Concorrente)"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Comprou outro imovel"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Por ser condomínio ou loteamento fechado"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Obras não concluídas"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Dimensões do imóvel"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Localização do imóvel"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Topografia do imóvel"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Não conseguiu financiar"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Não enquadrou no MCMV"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Sem oferta do imóvel"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Vendas não Iniciadas"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Outros motivos"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Interesse em lote comercial"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Sem interesse na compra"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Expirado"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.OrigemLead", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.ToTable("origemlead", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Corretor - Manual"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Empresa - Manual"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.TipoAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.ToTable("tipoatendimento", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Email"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Ligação"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Observação"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Visita"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Whatsapp"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Cartorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("cartorio", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpreendimentoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("empreendimentopessoa", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("ContratoSocialLtdaId")
                        .HasColumnType("integer");

                    b.Property<string>("CpfCnpj")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<int?>("FotoDocumentoResponsavelId")
                        .HasColumnType("integer");

                    b.Property<bool>("GerarHokma")
                        .HasColumnType("boolean");

                    b.Property<bool>("GerarZoop")
                        .HasColumnType("boolean");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("bytea");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<bool>("PessoaJuridica")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("RendaMensal")
                        .HasColumnType("numeric");

                    b.Property<int?>("SelfieResponsavelId")
                        .HasColumnType("integer");

                    b.Property<string>("SiteDaEmpresa")
                        .HasColumnType("text");

                    b.Property<string>("Telefone1")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("TipoDocumentoResponsavel")
                        .HasColumnType("text");

                    b.Property<int?>("TipoEmpresaId")
                        .HasColumnType("integer");

                    b.Property<int?>("VersoDocumentoResponsavelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoSocialLtdaId");

                    b.HasIndex("CpfCnpj")
                        .IsUnique();

                    b.HasIndex("FotoDocumentoResponsavelId");

                    b.HasIndex("SelfieResponsavelId");

                    b.HasIndex("TipoEmpresaId");

                    b.HasIndex("VersoDocumentoResponsavelId");

                    b.ToTable("empresa", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("empresaarquivounico", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpresaGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoGatewayId");

                    b.ToTable("empresagateway", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Estado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("estado", "geral");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Nome = "Exterior",
                            Uf = "EX"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Rondônia",
                            Uf = "RO"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Acre",
                            Uf = "AC"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Amazonas",
                            Uf = "AM"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Roraima",
                            Uf = "RR"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Pará",
                            Uf = "PA"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Amapá",
                            Uf = "AP"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Tocantins",
                            Uf = "TO"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Maranhão",
                            Uf = "MA"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Piauí",
                            Uf = "PI"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Ceará",
                            Uf = "CE"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Rio Grande do Norte",
                            Uf = "RN"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Paraíba",
                            Uf = "PB"
                        },
                        new
                        {
                            Id = 26,
                            Nome = "Pernambuco",
                            Uf = "PE"
                        },
                        new
                        {
                            Id = 27,
                            Nome = "Alagoas",
                            Uf = "AL"
                        },
                        new
                        {
                            Id = 28,
                            Nome = "Sergipe",
                            Uf = "SE"
                        },
                        new
                        {
                            Id = 29,
                            Nome = "Bahia",
                            Uf = "BA"
                        },
                        new
                        {
                            Id = 31,
                            Nome = "Minas Gerais",
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 32,
                            Nome = "Espírito Santo",
                            Uf = "ES"
                        },
                        new
                        {
                            Id = 33,
                            Nome = "Rio de Janeiro",
                            Uf = "RJ"
                        },
                        new
                        {
                            Id = 35,
                            Nome = "São Paulo",
                            Uf = "SP"
                        },
                        new
                        {
                            Id = 41,
                            Nome = "Paraná",
                            Uf = "PR"
                        },
                        new
                        {
                            Id = 42,
                            Nome = "Santa Catarina",
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 43,
                            Nome = "Rio Grande do Sul",
                            Uf = "RS"
                        },
                        new
                        {
                            Id = 50,
                            Nome = "Mato Grosso do Sul",
                            Uf = "MS"
                        },
                        new
                        {
                            Id = 51,
                            Nome = "Mato Grosso",
                            Uf = "MT"
                        },
                        new
                        {
                            Id = 52,
                            Nome = "Goiás",
                            Uf = "GO"
                        },
                        new
                        {
                            Id = 53,
                            Nome = "Distrito Federal",
                            Uf = "DF"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("estadocivil", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Solteiro(a)"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Casado(a)"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Viúvo(a)"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Divorciado(a)"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Separado(a) Judicialmente"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "União Estável"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.GrauParentesco", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("grauparentesco", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Pai"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Mãe"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Avô"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Avó"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Bisavô"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Bisavó"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Filho"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Filha"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Neto"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Neta"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Bisneto"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Bisneta"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Irmão"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Irmã"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Tio"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Tia"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Sobrinho"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Sobrinha"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Primo"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Prima"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Sogro"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Sogra"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Cunhado"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Cunhada"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Controle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("RegistroId")
                        .HasColumnType("integer");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("log", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PessoaPrefeituraId")
                        .HasColumnType("integer");

                    b.Property<string>("Ramal")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaPrefeituraId");

                    b.ToTable("pessoaprefeituracontato", "geral");

                    b.HasDiscriminator().HasValue("PessoaPrefeituraContato");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PessoaPrefeituraId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("TrocaEndereco")
                        .HasColumnType("boolean");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PessoaPrefeituraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pessoaprefeituradocumento", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Dependente")
                        .HasColumnType("boolean");

                    b.Property<int?>("EscolaridadeId")
                        .HasColumnType("integer");

                    b.Property<int>("GrauParentescoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("OrgaoExpedidor")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("PessoaPrefeituraId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfissaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RendaBruta")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RendaLiquida")
                        .HasColumnType("numeric");

                    b.Property<string>("Rg")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadeId");

                    b.HasIndex("GrauParentescoId");

                    b.HasIndex("PessoaPrefeituraId");

                    b.HasIndex("ProfissaoId");

                    b.ToTable("pessoaprefeiturafamiliar", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("PessoaPrefeituraId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PessoaPrefeituraId");

                    b.HasIndex("TipoGatewayId");

                    b.ToTable("pessoaprefeituragateway", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoAbastecimentoAgua", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoabastecimentoagua", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Carro Pipa"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cisterna"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Não Possui"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Poço/Nascente"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Rede Pública"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Outra"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoColetaLixo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipocoletalixo", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Céu Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Coletado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Enterrado"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Queimado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Não Possui"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoCondicaoMoradia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipocondicaomoradia", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Área de risco"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Boa (estruturalmente estável)"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Precária"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Regular (necessita de pequenas melhorias)"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEdificacaoMoradia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoedificacaomoradia", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Apartamento"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Barraco"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Casa térreo"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Construção em área de risco"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Construção em terreno irregular"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Construção mista"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Habitação coletiva"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Palafita"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Sobrado"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEnergiaMoradia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoenergiamoradia", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Relógio Comunitário"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Relógio Próprio"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sem Energia Elétrica"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Sem Relógio"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Gerador movido a combustível"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Rede Pública"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Geração própria (energia solar, eólica)"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Outro"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEsgotamentoSanitario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoesgotamentosanitario", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fossa rudimentar (sumidouro)"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fossa séptica"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Lançamento direto em rio ou curso d’água"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Não possui sistema de esgoto"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Rede pública de esgoto"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoMoradia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipomoradia", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Aluguel"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cedida"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Emprestada"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Invadida"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Mora com Amigos"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Mora com Parentes"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Mora em Instituições Beneficientes"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Ocupação irregular"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Própria"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Própria financiada"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Própria quitada"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Em processo de regularização fundiária (Reurb)"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Herança"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Sem Moradia Fixa"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Outra"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoMoradiaNova", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipomoradianova", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Lote Urbanizado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Casa construída"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Apartamento Novo"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Outra"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("municipio", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1100015,
                            EstadoId = 11,
                            Nome = "Alta Floresta DOeste"
                        },
                        new
                        {
                            Id = 1100379,
                            EstadoId = 11,
                            Nome = "Alto Alegre dos Parecis"
                        },
                        new
                        {
                            Id = 1100403,
                            EstadoId = 11,
                            Nome = "Alto Paraíso"
                        },
                        new
                        {
                            Id = 1100346,
                            EstadoId = 11,
                            Nome = "Alvorada DOeste"
                        },
                        new
                        {
                            Id = 1100023,
                            EstadoId = 11,
                            Nome = "Ariquemes"
                        },
                        new
                        {
                            Id = 1100452,
                            EstadoId = 11,
                            Nome = "Buritis"
                        },
                        new
                        {
                            Id = 1100031,
                            EstadoId = 11,
                            Nome = "Cabixi"
                        },
                        new
                        {
                            Id = 1100601,
                            EstadoId = 11,
                            Nome = "Cacaulândia"
                        },
                        new
                        {
                            Id = 1100049,
                            EstadoId = 11,
                            Nome = "Cacoal"
                        },
                        new
                        {
                            Id = 1100700,
                            EstadoId = 11,
                            Nome = "Campo Novo de Rondônia"
                        },
                        new
                        {
                            Id = 1100809,
                            EstadoId = 11,
                            Nome = "Candeias do Jamari"
                        },
                        new
                        {
                            Id = 1100908,
                            EstadoId = 11,
                            Nome = "Castanheiras"
                        },
                        new
                        {
                            Id = 1100056,
                            EstadoId = 11,
                            Nome = "Cerejeiras"
                        },
                        new
                        {
                            Id = 1100924,
                            EstadoId = 11,
                            Nome = "Chupinguaia"
                        },
                        new
                        {
                            Id = 1100064,
                            EstadoId = 11,
                            Nome = "Colorado do Oeste"
                        },
                        new
                        {
                            Id = 1100072,
                            EstadoId = 11,
                            Nome = "Corumbiara"
                        },
                        new
                        {
                            Id = 1100080,
                            EstadoId = 11,
                            Nome = "Costa Marques"
                        },
                        new
                        {
                            Id = 1100940,
                            EstadoId = 11,
                            Nome = "Cujubim"
                        },
                        new
                        {
                            Id = 1100098,
                            EstadoId = 11,
                            Nome = "Espigão DOeste"
                        },
                        new
                        {
                            Id = 1101005,
                            EstadoId = 11,
                            Nome = "Governador Jorge Teixeira"
                        },
                        new
                        {
                            Id = 1100106,
                            EstadoId = 11,
                            Nome = "Guajará-Mirim"
                        },
                        new
                        {
                            Id = 1101104,
                            EstadoId = 11,
                            Nome = "Itapuã do Oeste"
                        },
                        new
                        {
                            Id = 1100114,
                            EstadoId = 11,
                            Nome = "Jaru"
                        },
                        new
                        {
                            Id = 1100122,
                            EstadoId = 11,
                            Nome = "Ji-Paraná"
                        },
                        new
                        {
                            Id = 1100130,
                            EstadoId = 11,
                            Nome = "Machadinho DOeste"
                        },
                        new
                        {
                            Id = 1101203,
                            EstadoId = 11,
                            Nome = "Ministro Andreazza"
                        },
                        new
                        {
                            Id = 1101302,
                            EstadoId = 11,
                            Nome = "Mirante da Serra"
                        },
                        new
                        {
                            Id = 1101401,
                            EstadoId = 11,
                            Nome = "Monte Negro"
                        },
                        new
                        {
                            Id = 1100148,
                            EstadoId = 11,
                            Nome = "Nova Brasilândia DOeste"
                        },
                        new
                        {
                            Id = 1100338,
                            EstadoId = 11,
                            Nome = "Nova Mamoré"
                        },
                        new
                        {
                            Id = 1101435,
                            EstadoId = 11,
                            Nome = "Nova União"
                        },
                        new
                        {
                            Id = 1100502,
                            EstadoId = 11,
                            Nome = "Novo Horizonte do Oeste"
                        },
                        new
                        {
                            Id = 1100155,
                            EstadoId = 11,
                            Nome = "Ouro Preto do Oeste"
                        },
                        new
                        {
                            Id = 1101450,
                            EstadoId = 11,
                            Nome = "Parecis"
                        },
                        new
                        {
                            Id = 1100189,
                            EstadoId = 11,
                            Nome = "Pimenta Bueno"
                        },
                        new
                        {
                            Id = 1101468,
                            EstadoId = 11,
                            Nome = "Pimenteiras do Oeste"
                        },
                        new
                        {
                            Id = 1100205,
                            EstadoId = 11,
                            Nome = "Porto Velho"
                        },
                        new
                        {
                            Id = 1100254,
                            EstadoId = 11,
                            Nome = "Presidente Médici"
                        },
                        new
                        {
                            Id = 1101476,
                            EstadoId = 11,
                            Nome = "Primavera de Rondônia"
                        },
                        new
                        {
                            Id = 1100262,
                            EstadoId = 11,
                            Nome = "Rio Crespo"
                        },
                        new
                        {
                            Id = 1100288,
                            EstadoId = 11,
                            Nome = "Rolim de Moura"
                        },
                        new
                        {
                            Id = 1100296,
                            EstadoId = 11,
                            Nome = "Santa Luzia DOeste"
                        },
                        new
                        {
                            Id = 1101484,
                            EstadoId = 11,
                            Nome = "São Felipe DOeste"
                        },
                        new
                        {
                            Id = 1101492,
                            EstadoId = 11,
                            Nome = "São Francisco do Guaporé"
                        },
                        new
                        {
                            Id = 1100320,
                            EstadoId = 11,
                            Nome = "São Miguel do Guaporé"
                        },
                        new
                        {
                            Id = 1101500,
                            EstadoId = 11,
                            Nome = "Seringueiras"
                        },
                        new
                        {
                            Id = 1101559,
                            EstadoId = 11,
                            Nome = "Teixeirópolis"
                        },
                        new
                        {
                            Id = 1101609,
                            EstadoId = 11,
                            Nome = "Theobroma"
                        },
                        new
                        {
                            Id = 1101708,
                            EstadoId = 11,
                            Nome = "Urupá"
                        },
                        new
                        {
                            Id = 1101757,
                            EstadoId = 11,
                            Nome = "Vale do Anari"
                        },
                        new
                        {
                            Id = 1101807,
                            EstadoId = 11,
                            Nome = "Vale do Paraíso"
                        },
                        new
                        {
                            Id = 1100304,
                            EstadoId = 11,
                            Nome = "Vilhena"
                        },
                        new
                        {
                            Id = 1200013,
                            EstadoId = 12,
                            Nome = "Acrelândia"
                        },
                        new
                        {
                            Id = 1200054,
                            EstadoId = 12,
                            Nome = "Assis Brasil"
                        },
                        new
                        {
                            Id = 1200104,
                            EstadoId = 12,
                            Nome = "Brasiléia"
                        },
                        new
                        {
                            Id = 1200138,
                            EstadoId = 12,
                            Nome = "Bujari"
                        },
                        new
                        {
                            Id = 1200179,
                            EstadoId = 12,
                            Nome = "Capixaba"
                        },
                        new
                        {
                            Id = 1200203,
                            EstadoId = 12,
                            Nome = "Cruzeiro do Sul"
                        },
                        new
                        {
                            Id = 1200252,
                            EstadoId = 12,
                            Nome = "Epitaciolândia"
                        },
                        new
                        {
                            Id = 1200302,
                            EstadoId = 12,
                            Nome = "Feijó"
                        },
                        new
                        {
                            Id = 1200328,
                            EstadoId = 12,
                            Nome = "Jordão"
                        },
                        new
                        {
                            Id = 1200336,
                            EstadoId = 12,
                            Nome = "Mâncio Lima"
                        },
                        new
                        {
                            Id = 1200344,
                            EstadoId = 12,
                            Nome = "Manoel Urbano"
                        },
                        new
                        {
                            Id = 1200351,
                            EstadoId = 12,
                            Nome = "Marechal Thaumaturgo"
                        },
                        new
                        {
                            Id = 1200385,
                            EstadoId = 12,
                            Nome = "Plácido de Castro"
                        },
                        new
                        {
                            Id = 1200807,
                            EstadoId = 12,
                            Nome = "Porto Acre"
                        },
                        new
                        {
                            Id = 1200393,
                            EstadoId = 12,
                            Nome = "Porto Walter"
                        },
                        new
                        {
                            Id = 1200401,
                            EstadoId = 12,
                            Nome = "Rio Branco"
                        },
                        new
                        {
                            Id = 1200427,
                            EstadoId = 12,
                            Nome = "Rodrigues Alves"
                        },
                        new
                        {
                            Id = 1200435,
                            EstadoId = 12,
                            Nome = "Santa Rosa do Purus"
                        },
                        new
                        {
                            Id = 1200500,
                            EstadoId = 12,
                            Nome = "Sena Madureira"
                        },
                        new
                        {
                            Id = 1200450,
                            EstadoId = 12,
                            Nome = "Senador Guiomard"
                        },
                        new
                        {
                            Id = 1200609,
                            EstadoId = 12,
                            Nome = "Tarauacá"
                        },
                        new
                        {
                            Id = 1200708,
                            EstadoId = 12,
                            Nome = "Xapuri"
                        },
                        new
                        {
                            Id = 1300029,
                            EstadoId = 13,
                            Nome = "Alvarães"
                        },
                        new
                        {
                            Id = 1300060,
                            EstadoId = 13,
                            Nome = "Amaturá"
                        },
                        new
                        {
                            Id = 1300086,
                            EstadoId = 13,
                            Nome = "Anamã"
                        },
                        new
                        {
                            Id = 1300102,
                            EstadoId = 13,
                            Nome = "Anori"
                        },
                        new
                        {
                            Id = 1300144,
                            EstadoId = 13,
                            Nome = "Apuí"
                        },
                        new
                        {
                            Id = 1300201,
                            EstadoId = 13,
                            Nome = "Atalaia do Norte"
                        },
                        new
                        {
                            Id = 1300300,
                            EstadoId = 13,
                            Nome = "Autazes"
                        },
                        new
                        {
                            Id = 1300409,
                            EstadoId = 13,
                            Nome = "Barcelos"
                        },
                        new
                        {
                            Id = 1300508,
                            EstadoId = 13,
                            Nome = "Barreirinha"
                        },
                        new
                        {
                            Id = 1300607,
                            EstadoId = 13,
                            Nome = "Benjamin Constant"
                        },
                        new
                        {
                            Id = 1300631,
                            EstadoId = 13,
                            Nome = "Beruri"
                        },
                        new
                        {
                            Id = 1300680,
                            EstadoId = 13,
                            Nome = "Boa Vista do Ramos"
                        },
                        new
                        {
                            Id = 1300706,
                            EstadoId = 13,
                            Nome = "Boca do Acre"
                        },
                        new
                        {
                            Id = 1300805,
                            EstadoId = 13,
                            Nome = "Borba"
                        },
                        new
                        {
                            Id = 1300839,
                            EstadoId = 13,
                            Nome = "Caapiranga"
                        },
                        new
                        {
                            Id = 1300904,
                            EstadoId = 13,
                            Nome = "Canutama"
                        },
                        new
                        {
                            Id = 1301001,
                            EstadoId = 13,
                            Nome = "Carauari"
                        },
                        new
                        {
                            Id = 1301100,
                            EstadoId = 13,
                            Nome = "Careiro"
                        },
                        new
                        {
                            Id = 1301159,
                            EstadoId = 13,
                            Nome = "Careiro da Várzea"
                        },
                        new
                        {
                            Id = 1301209,
                            EstadoId = 13,
                            Nome = "Coari"
                        },
                        new
                        {
                            Id = 1301308,
                            EstadoId = 13,
                            Nome = "Codajás"
                        },
                        new
                        {
                            Id = 1301407,
                            EstadoId = 13,
                            Nome = "Eirunepé"
                        },
                        new
                        {
                            Id = 1301506,
                            EstadoId = 13,
                            Nome = "Envira"
                        },
                        new
                        {
                            Id = 1301605,
                            EstadoId = 13,
                            Nome = "Fonte Boa"
                        },
                        new
                        {
                            Id = 1301654,
                            EstadoId = 13,
                            Nome = "Guajará"
                        },
                        new
                        {
                            Id = 1301704,
                            EstadoId = 13,
                            Nome = "Humaitá"
                        },
                        new
                        {
                            Id = 1301803,
                            EstadoId = 13,
                            Nome = "Ipixuna"
                        },
                        new
                        {
                            Id = 1301852,
                            EstadoId = 13,
                            Nome = "Iranduba"
                        },
                        new
                        {
                            Id = 1301902,
                            EstadoId = 13,
                            Nome = "Itacoatiara"
                        },
                        new
                        {
                            Id = 1301951,
                            EstadoId = 13,
                            Nome = "Itamarati"
                        },
                        new
                        {
                            Id = 1302009,
                            EstadoId = 13,
                            Nome = "Itapiranga"
                        },
                        new
                        {
                            Id = 1302108,
                            EstadoId = 13,
                            Nome = "Japurá"
                        },
                        new
                        {
                            Id = 1302207,
                            EstadoId = 13,
                            Nome = "Juruá"
                        },
                        new
                        {
                            Id = 1302306,
                            EstadoId = 13,
                            Nome = "Jutaí"
                        },
                        new
                        {
                            Id = 1302405,
                            EstadoId = 13,
                            Nome = "Lábrea"
                        },
                        new
                        {
                            Id = 1302504,
                            EstadoId = 13,
                            Nome = "Manacapuru"
                        },
                        new
                        {
                            Id = 1302553,
                            EstadoId = 13,
                            Nome = "Manaquiri"
                        },
                        new
                        {
                            Id = 1302603,
                            EstadoId = 13,
                            Nome = "Manaus"
                        },
                        new
                        {
                            Id = 1302702,
                            EstadoId = 13,
                            Nome = "Manicoré"
                        },
                        new
                        {
                            Id = 1302801,
                            EstadoId = 13,
                            Nome = "Maraã"
                        },
                        new
                        {
                            Id = 1302900,
                            EstadoId = 13,
                            Nome = "Maués"
                        },
                        new
                        {
                            Id = 1303007,
                            EstadoId = 13,
                            Nome = "Nhamundá"
                        },
                        new
                        {
                            Id = 1303106,
                            EstadoId = 13,
                            Nome = "Nova Olinda do Norte"
                        },
                        new
                        {
                            Id = 1303205,
                            EstadoId = 13,
                            Nome = "Novo Airão"
                        },
                        new
                        {
                            Id = 1303304,
                            EstadoId = 13,
                            Nome = "Novo Aripuanã"
                        },
                        new
                        {
                            Id = 1303403,
                            EstadoId = 13,
                            Nome = "Parintins"
                        },
                        new
                        {
                            Id = 1303502,
                            EstadoId = 13,
                            Nome = "Pauini"
                        },
                        new
                        {
                            Id = 1303536,
                            EstadoId = 13,
                            Nome = "Presidente Figueiredo"
                        },
                        new
                        {
                            Id = 1303569,
                            EstadoId = 13,
                            Nome = "Rio Preto da Eva"
                        },
                        new
                        {
                            Id = 1303601,
                            EstadoId = 13,
                            Nome = "Santa Isabel do Rio Negro"
                        },
                        new
                        {
                            Id = 1303700,
                            EstadoId = 13,
                            Nome = "Santo Antônio do Içá"
                        },
                        new
                        {
                            Id = 1303809,
                            EstadoId = 13,
                            Nome = "São Gabriel da Cachoeira"
                        },
                        new
                        {
                            Id = 1303908,
                            EstadoId = 13,
                            Nome = "São Paulo de Olivença"
                        },
                        new
                        {
                            Id = 1303957,
                            EstadoId = 13,
                            Nome = "São Sebastião do Uatumã"
                        },
                        new
                        {
                            Id = 1304005,
                            EstadoId = 13,
                            Nome = "Silves"
                        },
                        new
                        {
                            Id = 1304062,
                            EstadoId = 13,
                            Nome = "Tabatinga"
                        },
                        new
                        {
                            Id = 1304104,
                            EstadoId = 13,
                            Nome = "Tapauá"
                        },
                        new
                        {
                            Id = 1304203,
                            EstadoId = 13,
                            Nome = "Tefé"
                        },
                        new
                        {
                            Id = 1304237,
                            EstadoId = 13,
                            Nome = "Tonantins"
                        },
                        new
                        {
                            Id = 1304260,
                            EstadoId = 13,
                            Nome = "Uarini"
                        },
                        new
                        {
                            Id = 1304302,
                            EstadoId = 13,
                            Nome = "Urucará"
                        },
                        new
                        {
                            Id = 1304401,
                            EstadoId = 13,
                            Nome = "Urucurituba"
                        },
                        new
                        {
                            Id = 1400050,
                            EstadoId = 14,
                            Nome = "Alto Alegre"
                        },
                        new
                        {
                            Id = 1400027,
                            EstadoId = 14,
                            Nome = "Amajari"
                        },
                        new
                        {
                            Id = 1400100,
                            EstadoId = 14,
                            Nome = "Boa Vista"
                        },
                        new
                        {
                            Id = 1400159,
                            EstadoId = 14,
                            Nome = "Bonfim"
                        },
                        new
                        {
                            Id = 1400175,
                            EstadoId = 14,
                            Nome = "Cantá"
                        },
                        new
                        {
                            Id = 1400209,
                            EstadoId = 14,
                            Nome = "Caracaraí"
                        },
                        new
                        {
                            Id = 1400233,
                            EstadoId = 14,
                            Nome = "Caroebe"
                        },
                        new
                        {
                            Id = 1400282,
                            EstadoId = 14,
                            Nome = "Iracema"
                        },
                        new
                        {
                            Id = 1400308,
                            EstadoId = 14,
                            Nome = "Mucajaí"
                        },
                        new
                        {
                            Id = 1400407,
                            EstadoId = 14,
                            Nome = "Normandia"
                        },
                        new
                        {
                            Id = 1400456,
                            EstadoId = 14,
                            Nome = "Pacaraima"
                        },
                        new
                        {
                            Id = 1400472,
                            EstadoId = 14,
                            Nome = "Rorainópolis"
                        },
                        new
                        {
                            Id = 1400506,
                            EstadoId = 14,
                            Nome = "São João da Baliza"
                        },
                        new
                        {
                            Id = 1400605,
                            EstadoId = 14,
                            Nome = "São Luiz"
                        },
                        new
                        {
                            Id = 1400704,
                            EstadoId = 14,
                            Nome = "Uiramutã"
                        },
                        new
                        {
                            Id = 1500107,
                            EstadoId = 15,
                            Nome = "Abaetetuba"
                        },
                        new
                        {
                            Id = 1500131,
                            EstadoId = 15,
                            Nome = "Abel Figueiredo"
                        },
                        new
                        {
                            Id = 1500206,
                            EstadoId = 15,
                            Nome = "Acará"
                        },
                        new
                        {
                            Id = 1500305,
                            EstadoId = 15,
                            Nome = "Afuá"
                        },
                        new
                        {
                            Id = 1500347,
                            EstadoId = 15,
                            Nome = "Água Azul do Norte"
                        },
                        new
                        {
                            Id = 1500404,
                            EstadoId = 15,
                            Nome = "Alenquer"
                        },
                        new
                        {
                            Id = 1500503,
                            EstadoId = 15,
                            Nome = "Almeirim"
                        },
                        new
                        {
                            Id = 1500602,
                            EstadoId = 15,
                            Nome = "Altamira"
                        },
                        new
                        {
                            Id = 1500701,
                            EstadoId = 15,
                            Nome = "Anajás"
                        },
                        new
                        {
                            Id = 1500800,
                            EstadoId = 15,
                            Nome = "Ananindeua"
                        },
                        new
                        {
                            Id = 1500859,
                            EstadoId = 15,
                            Nome = "Anapu"
                        },
                        new
                        {
                            Id = 1500909,
                            EstadoId = 15,
                            Nome = "Augusto Corrêa"
                        },
                        new
                        {
                            Id = 1500958,
                            EstadoId = 15,
                            Nome = "Aurora do Pará"
                        },
                        new
                        {
                            Id = 1501006,
                            EstadoId = 15,
                            Nome = "Aveiro"
                        },
                        new
                        {
                            Id = 1501105,
                            EstadoId = 15,
                            Nome = "Bagre"
                        },
                        new
                        {
                            Id = 1501204,
                            EstadoId = 15,
                            Nome = "Baião"
                        },
                        new
                        {
                            Id = 1501253,
                            EstadoId = 15,
                            Nome = "Bannach"
                        },
                        new
                        {
                            Id = 1501303,
                            EstadoId = 15,
                            Nome = "Barcarena"
                        },
                        new
                        {
                            Id = 1501402,
                            EstadoId = 15,
                            Nome = "Belém"
                        },
                        new
                        {
                            Id = 1501451,
                            EstadoId = 15,
                            Nome = "Belterra"
                        },
                        new
                        {
                            Id = 1501501,
                            EstadoId = 15,
                            Nome = "Benevides"
                        },
                        new
                        {
                            Id = 1501576,
                            EstadoId = 15,
                            Nome = "Bom Jesus do Tocantins"
                        },
                        new
                        {
                            Id = 1501600,
                            EstadoId = 15,
                            Nome = "Bonito"
                        },
                        new
                        {
                            Id = 1501709,
                            EstadoId = 15,
                            Nome = "Bragança"
                        },
                        new
                        {
                            Id = 1501725,
                            EstadoId = 15,
                            Nome = "Brasil Novo"
                        },
                        new
                        {
                            Id = 1501758,
                            EstadoId = 15,
                            Nome = "Brejo Grande do Araguaia"
                        },
                        new
                        {
                            Id = 1501782,
                            EstadoId = 15,
                            Nome = "Breu Branco"
                        },
                        new
                        {
                            Id = 1501808,
                            EstadoId = 15,
                            Nome = "Breves"
                        },
                        new
                        {
                            Id = 1501907,
                            EstadoId = 15,
                            Nome = "Bujaru"
                        },
                        new
                        {
                            Id = 1502004,
                            EstadoId = 15,
                            Nome = "Cachoeira do Arari"
                        },
                        new
                        {
                            Id = 1501956,
                            EstadoId = 15,
                            Nome = "Cachoeira do Piriá"
                        },
                        new
                        {
                            Id = 1502103,
                            EstadoId = 15,
                            Nome = "Cametá"
                        },
                        new
                        {
                            Id = 1502152,
                            EstadoId = 15,
                            Nome = "Canaã dos Carajás"
                        },
                        new
                        {
                            Id = 1502202,
                            EstadoId = 15,
                            Nome = "Capanema"
                        },
                        new
                        {
                            Id = 1502301,
                            EstadoId = 15,
                            Nome = "Capitão Poço"
                        },
                        new
                        {
                            Id = 1502400,
                            EstadoId = 15,
                            Nome = "Castanhal"
                        },
                        new
                        {
                            Id = 1502509,
                            EstadoId = 15,
                            Nome = "Chaves"
                        },
                        new
                        {
                            Id = 1502608,
                            EstadoId = 15,
                            Nome = "Colares"
                        },
                        new
                        {
                            Id = 1502707,
                            EstadoId = 15,
                            Nome = "Conceição do Araguaia"
                        },
                        new
                        {
                            Id = 1502756,
                            EstadoId = 15,
                            Nome = "Concórdia do Pará"
                        },
                        new
                        {
                            Id = 1502764,
                            EstadoId = 15,
                            Nome = "Cumaru do Norte"
                        },
                        new
                        {
                            Id = 1502772,
                            EstadoId = 15,
                            Nome = "Curionópolis"
                        },
                        new
                        {
                            Id = 1502806,
                            EstadoId = 15,
                            Nome = "Curralinho"
                        },
                        new
                        {
                            Id = 1502855,
                            EstadoId = 15,
                            Nome = "Curuá"
                        },
                        new
                        {
                            Id = 1502905,
                            EstadoId = 15,
                            Nome = "Curuçá"
                        },
                        new
                        {
                            Id = 1502939,
                            EstadoId = 15,
                            Nome = "Dom Eliseu"
                        },
                        new
                        {
                            Id = 1502954,
                            EstadoId = 15,
                            Nome = "Eldorado dos Carajás"
                        },
                        new
                        {
                            Id = 1503002,
                            EstadoId = 15,
                            Nome = "Faro"
                        },
                        new
                        {
                            Id = 1503044,
                            EstadoId = 15,
                            Nome = "Floresta do Araguaia"
                        },
                        new
                        {
                            Id = 1503077,
                            EstadoId = 15,
                            Nome = "Garrafão do Norte"
                        },
                        new
                        {
                            Id = 1503093,
                            EstadoId = 15,
                            Nome = "Goianésia do Pará"
                        },
                        new
                        {
                            Id = 1503101,
                            EstadoId = 15,
                            Nome = "Gurupá"
                        },
                        new
                        {
                            Id = 1503200,
                            EstadoId = 15,
                            Nome = "Igarapé-Açu"
                        },
                        new
                        {
                            Id = 1503309,
                            EstadoId = 15,
                            Nome = "Igarapé-Miri"
                        },
                        new
                        {
                            Id = 1503408,
                            EstadoId = 15,
                            Nome = "Inhangapi"
                        },
                        new
                        {
                            Id = 1503457,
                            EstadoId = 15,
                            Nome = "Ipixuna do Pará"
                        },
                        new
                        {
                            Id = 1503507,
                            EstadoId = 15,
                            Nome = "Irituia"
                        },
                        new
                        {
                            Id = 1503606,
                            EstadoId = 15,
                            Nome = "Itaituba"
                        },
                        new
                        {
                            Id = 1503705,
                            EstadoId = 15,
                            Nome = "Itupiranga"
                        },
                        new
                        {
                            Id = 1503754,
                            EstadoId = 15,
                            Nome = "Jacareacanga"
                        },
                        new
                        {
                            Id = 1503804,
                            EstadoId = 15,
                            Nome = "Jacundá"
                        },
                        new
                        {
                            Id = 1503903,
                            EstadoId = 15,
                            Nome = "Juruti"
                        },
                        new
                        {
                            Id = 1504000,
                            EstadoId = 15,
                            Nome = "Limoeiro do Ajuru"
                        },
                        new
                        {
                            Id = 1504059,
                            EstadoId = 15,
                            Nome = "Mãe do Rio"
                        },
                        new
                        {
                            Id = 1504109,
                            EstadoId = 15,
                            Nome = "Magalhães Barata"
                        },
                        new
                        {
                            Id = 1504208,
                            EstadoId = 15,
                            Nome = "Marabá"
                        },
                        new
                        {
                            Id = 1504307,
                            EstadoId = 15,
                            Nome = "Maracanã"
                        },
                        new
                        {
                            Id = 1504406,
                            EstadoId = 15,
                            Nome = "Marapanim"
                        },
                        new
                        {
                            Id = 1504422,
                            EstadoId = 15,
                            Nome = "Marituba"
                        },
                        new
                        {
                            Id = 1504455,
                            EstadoId = 15,
                            Nome = "Medicilândia"
                        },
                        new
                        {
                            Id = 1504505,
                            EstadoId = 15,
                            Nome = "Melgaço"
                        },
                        new
                        {
                            Id = 1504604,
                            EstadoId = 15,
                            Nome = "Mocajuba"
                        },
                        new
                        {
                            Id = 1504703,
                            EstadoId = 15,
                            Nome = "Moju"
                        },
                        new
                        {
                            Id = 1504752,
                            EstadoId = 15,
                            Nome = "Mojuí dos Campos"
                        },
                        new
                        {
                            Id = 1504802,
                            EstadoId = 15,
                            Nome = "Monte Alegre"
                        },
                        new
                        {
                            Id = 1504901,
                            EstadoId = 15,
                            Nome = "Muaná"
                        },
                        new
                        {
                            Id = 1504950,
                            EstadoId = 15,
                            Nome = "Nova Esperança do Piriá"
                        },
                        new
                        {
                            Id = 1504976,
                            EstadoId = 15,
                            Nome = "Nova Ipixuna"
                        },
                        new
                        {
                            Id = 1505007,
                            EstadoId = 15,
                            Nome = "Nova Timboteua"
                        },
                        new
                        {
                            Id = 1505031,
                            EstadoId = 15,
                            Nome = "Novo Progresso"
                        },
                        new
                        {
                            Id = 1505064,
                            EstadoId = 15,
                            Nome = "Novo Repartimento"
                        },
                        new
                        {
                            Id = 1505106,
                            EstadoId = 15,
                            Nome = "Óbidos"
                        },
                        new
                        {
                            Id = 1505205,
                            EstadoId = 15,
                            Nome = "Oeiras do Pará"
                        },
                        new
                        {
                            Id = 1505304,
                            EstadoId = 15,
                            Nome = "Oriximiná"
                        },
                        new
                        {
                            Id = 1505403,
                            EstadoId = 15,
                            Nome = "Ourém"
                        },
                        new
                        {
                            Id = 1505437,
                            EstadoId = 15,
                            Nome = "Ourilândia do Norte"
                        },
                        new
                        {
                            Id = 1505486,
                            EstadoId = 15,
                            Nome = "Pacajá"
                        },
                        new
                        {
                            Id = 1505494,
                            EstadoId = 15,
                            Nome = "Palestina do Pará"
                        },
                        new
                        {
                            Id = 1505502,
                            EstadoId = 15,
                            Nome = "Paragominas"
                        },
                        new
                        {
                            Id = 1505536,
                            EstadoId = 15,
                            Nome = "Parauapebas"
                        },
                        new
                        {
                            Id = 1505551,
                            EstadoId = 15,
                            Nome = "Pau DArco"
                        },
                        new
                        {
                            Id = 1505601,
                            EstadoId = 15,
                            Nome = "Peixe-Boi"
                        },
                        new
                        {
                            Id = 1505635,
                            EstadoId = 15,
                            Nome = "Piçarra"
                        },
                        new
                        {
                            Id = 1505650,
                            EstadoId = 15,
                            Nome = "Placas"
                        },
                        new
                        {
                            Id = 1505700,
                            EstadoId = 15,
                            Nome = "Ponta de Pedras"
                        },
                        new
                        {
                            Id = 1505809,
                            EstadoId = 15,
                            Nome = "Portel"
                        },
                        new
                        {
                            Id = 1505908,
                            EstadoId = 15,
                            Nome = "Porto de Moz"
                        },
                        new
                        {
                            Id = 1506005,
                            EstadoId = 15,
                            Nome = "Prainha"
                        },
                        new
                        {
                            Id = 1506104,
                            EstadoId = 15,
                            Nome = "Primavera"
                        },
                        new
                        {
                            Id = 1506112,
                            EstadoId = 15,
                            Nome = "Quatipuru"
                        },
                        new
                        {
                            Id = 1506138,
                            EstadoId = 15,
                            Nome = "Redenção"
                        },
                        new
                        {
                            Id = 1506161,
                            EstadoId = 15,
                            Nome = "Rio Maria"
                        },
                        new
                        {
                            Id = 1506187,
                            EstadoId = 15,
                            Nome = "Rondon do Pará"
                        },
                        new
                        {
                            Id = 1506195,
                            EstadoId = 15,
                            Nome = "Rurópolis"
                        },
                        new
                        {
                            Id = 1506203,
                            EstadoId = 15,
                            Nome = "Salinópolis"
                        },
                        new
                        {
                            Id = 1506302,
                            EstadoId = 15,
                            Nome = "Salvaterra"
                        },
                        new
                        {
                            Id = 1506351,
                            EstadoId = 15,
                            Nome = "Santa Bárbara do Pará"
                        },
                        new
                        {
                            Id = 1506401,
                            EstadoId = 15,
                            Nome = "Santa Cruz do Arari"
                        },
                        new
                        {
                            Id = 1506500,
                            EstadoId = 15,
                            Nome = "Santa Izabel do Pará"
                        },
                        new
                        {
                            Id = 1506559,
                            EstadoId = 15,
                            Nome = "Santa Luzia do Pará"
                        },
                        new
                        {
                            Id = 1506583,
                            EstadoId = 15,
                            Nome = "Santa Maria das Barreiras"
                        },
                        new
                        {
                            Id = 1506609,
                            EstadoId = 15,
                            Nome = "Santa Maria do Pará"
                        },
                        new
                        {
                            Id = 1506708,
                            EstadoId = 15,
                            Nome = "Santana do Araguaia"
                        },
                        new
                        {
                            Id = 1506807,
                            EstadoId = 15,
                            Nome = "Santarém"
                        },
                        new
                        {
                            Id = 1506906,
                            EstadoId = 15,
                            Nome = "Santarém Novo"
                        },
                        new
                        {
                            Id = 1507003,
                            EstadoId = 15,
                            Nome = "Santo Antônio do Tauá"
                        },
                        new
                        {
                            Id = 1507102,
                            EstadoId = 15,
                            Nome = "São Caetano de Odivelas"
                        },
                        new
                        {
                            Id = 1507151,
                            EstadoId = 15,
                            Nome = "São Domingos do Araguaia"
                        },
                        new
                        {
                            Id = 1507201,
                            EstadoId = 15,
                            Nome = "São Domingos do Capim"
                        },
                        new
                        {
                            Id = 1507300,
                            EstadoId = 15,
                            Nome = "São Félix do Xingu"
                        },
                        new
                        {
                            Id = 1507409,
                            EstadoId = 15,
                            Nome = "São Francisco do Pará"
                        },
                        new
                        {
                            Id = 1507458,
                            EstadoId = 15,
                            Nome = "São Geraldo do Araguaia"
                        },
                        new
                        {
                            Id = 1507466,
                            EstadoId = 15,
                            Nome = "São João da Ponta"
                        },
                        new
                        {
                            Id = 1507474,
                            EstadoId = 15,
                            Nome = "São João de Pirabas"
                        },
                        new
                        {
                            Id = 1507508,
                            EstadoId = 15,
                            Nome = "São João do Araguaia"
                        },
                        new
                        {
                            Id = 1507607,
                            EstadoId = 15,
                            Nome = "São Miguel do Guamá"
                        },
                        new
                        {
                            Id = 1507706,
                            EstadoId = 15,
                            Nome = "São Sebastião da Boa Vista"
                        },
                        new
                        {
                            Id = 1507755,
                            EstadoId = 15,
                            Nome = "Sapucaia"
                        },
                        new
                        {
                            Id = 1507805,
                            EstadoId = 15,
                            Nome = "Senador José Porfírio"
                        },
                        new
                        {
                            Id = 1507904,
                            EstadoId = 15,
                            Nome = "Soure"
                        },
                        new
                        {
                            Id = 1507953,
                            EstadoId = 15,
                            Nome = "Tailândia"
                        },
                        new
                        {
                            Id = 1507961,
                            EstadoId = 15,
                            Nome = "Terra Alta"
                        },
                        new
                        {
                            Id = 1507979,
                            EstadoId = 15,
                            Nome = "Terra Santa"
                        },
                        new
                        {
                            Id = 1508001,
                            EstadoId = 15,
                            Nome = "Tomé-Açu"
                        },
                        new
                        {
                            Id = 1508035,
                            EstadoId = 15,
                            Nome = "Tracuateua"
                        },
                        new
                        {
                            Id = 1508050,
                            EstadoId = 15,
                            Nome = "Trairão"
                        },
                        new
                        {
                            Id = 1508084,
                            EstadoId = 15,
                            Nome = "Tucumã"
                        },
                        new
                        {
                            Id = 1508100,
                            EstadoId = 15,
                            Nome = "Tucuruí"
                        },
                        new
                        {
                            Id = 1508126,
                            EstadoId = 15,
                            Nome = "Ulianópolis"
                        },
                        new
                        {
                            Id = 1508159,
                            EstadoId = 15,
                            Nome = "Uruará"
                        },
                        new
                        {
                            Id = 1508209,
                            EstadoId = 15,
                            Nome = "Vigia"
                        },
                        new
                        {
                            Id = 1508308,
                            EstadoId = 15,
                            Nome = "Viseu"
                        },
                        new
                        {
                            Id = 1508357,
                            EstadoId = 15,
                            Nome = "Vitória do Xingu"
                        },
                        new
                        {
                            Id = 1508407,
                            EstadoId = 15,
                            Nome = "Xinguara"
                        },
                        new
                        {
                            Id = 1600105,
                            EstadoId = 16,
                            Nome = "Amapá"
                        },
                        new
                        {
                            Id = 1600204,
                            EstadoId = 16,
                            Nome = "Calçoene"
                        },
                        new
                        {
                            Id = 1600212,
                            EstadoId = 16,
                            Nome = "Cutias"
                        },
                        new
                        {
                            Id = 1600238,
                            EstadoId = 16,
                            Nome = "Ferreira Gomes"
                        },
                        new
                        {
                            Id = 1600253,
                            EstadoId = 16,
                            Nome = "Itaubal"
                        },
                        new
                        {
                            Id = 1600279,
                            EstadoId = 16,
                            Nome = "Laranjal do Jari"
                        },
                        new
                        {
                            Id = 1600303,
                            EstadoId = 16,
                            Nome = "Macapá"
                        },
                        new
                        {
                            Id = 1600402,
                            EstadoId = 16,
                            Nome = "Mazagão"
                        },
                        new
                        {
                            Id = 1600501,
                            EstadoId = 16,
                            Nome = "Oiapoque"
                        },
                        new
                        {
                            Id = 1600154,
                            EstadoId = 16,
                            Nome = "Pedra Branca do Amapari"
                        },
                        new
                        {
                            Id = 1600535,
                            EstadoId = 16,
                            Nome = "Porto Grande"
                        },
                        new
                        {
                            Id = 1600550,
                            EstadoId = 16,
                            Nome = "Pracuúba"
                        },
                        new
                        {
                            Id = 1600600,
                            EstadoId = 16,
                            Nome = "Santana"
                        },
                        new
                        {
                            Id = 1600055,
                            EstadoId = 16,
                            Nome = "Serra do Navio"
                        },
                        new
                        {
                            Id = 1600709,
                            EstadoId = 16,
                            Nome = "Tartarugalzinho"
                        },
                        new
                        {
                            Id = 1600808,
                            EstadoId = 16,
                            Nome = "Vitória do Jari"
                        },
                        new
                        {
                            Id = 1700251,
                            EstadoId = 17,
                            Nome = "Abreulândia"
                        },
                        new
                        {
                            Id = 1700301,
                            EstadoId = 17,
                            Nome = "Aguiarnópolis"
                        },
                        new
                        {
                            Id = 1700350,
                            EstadoId = 17,
                            Nome = "Aliança do Tocantins"
                        },
                        new
                        {
                            Id = 1700400,
                            EstadoId = 17,
                            Nome = "Almas"
                        },
                        new
                        {
                            Id = 1700707,
                            EstadoId = 17,
                            Nome = "Alvorada"
                        },
                        new
                        {
                            Id = 1701002,
                            EstadoId = 17,
                            Nome = "Ananás"
                        },
                        new
                        {
                            Id = 1701051,
                            EstadoId = 17,
                            Nome = "Angico"
                        },
                        new
                        {
                            Id = 1701101,
                            EstadoId = 17,
                            Nome = "Aparecida do Rio Negro"
                        },
                        new
                        {
                            Id = 1701309,
                            EstadoId = 17,
                            Nome = "Aragominas"
                        },
                        new
                        {
                            Id = 1701903,
                            EstadoId = 17,
                            Nome = "Araguacema"
                        },
                        new
                        {
                            Id = 1702000,
                            EstadoId = 17,
                            Nome = "Araguaçu"
                        },
                        new
                        {
                            Id = 1702109,
                            EstadoId = 17,
                            Nome = "Araguaína"
                        },
                        new
                        {
                            Id = 1702158,
                            EstadoId = 17,
                            Nome = "Araguanã"
                        },
                        new
                        {
                            Id = 1702208,
                            EstadoId = 17,
                            Nome = "Araguatins"
                        },
                        new
                        {
                            Id = 1702307,
                            EstadoId = 17,
                            Nome = "Arapoema"
                        },
                        new
                        {
                            Id = 1702406,
                            EstadoId = 17,
                            Nome = "Arraias"
                        },
                        new
                        {
                            Id = 1702554,
                            EstadoId = 17,
                            Nome = "Augustinópolis"
                        },
                        new
                        {
                            Id = 1702703,
                            EstadoId = 17,
                            Nome = "Aurora do Tocantins"
                        },
                        new
                        {
                            Id = 1702901,
                            EstadoId = 17,
                            Nome = "Axixá do Tocantins"
                        },
                        new
                        {
                            Id = 1703008,
                            EstadoId = 17,
                            Nome = "Babaçulândia"
                        },
                        new
                        {
                            Id = 1703057,
                            EstadoId = 17,
                            Nome = "Bandeirantes do Tocantins"
                        },
                        new
                        {
                            Id = 1703073,
                            EstadoId = 17,
                            Nome = "Barra do Ouro"
                        },
                        new
                        {
                            Id = 1703107,
                            EstadoId = 17,
                            Nome = "Barrolândia"
                        },
                        new
                        {
                            Id = 1703206,
                            EstadoId = 17,
                            Nome = "Bernardo Sayão"
                        },
                        new
                        {
                            Id = 1703305,
                            EstadoId = 17,
                            Nome = "Bom Jesus do Tocantins"
                        },
                        new
                        {
                            Id = 1703602,
                            EstadoId = 17,
                            Nome = "Brasilândia do Tocantins"
                        },
                        new
                        {
                            Id = 1703701,
                            EstadoId = 17,
                            Nome = "Brejinho de Nazaré"
                        },
                        new
                        {
                            Id = 1703800,
                            EstadoId = 17,
                            Nome = "Buriti do Tocantins"
                        },
                        new
                        {
                            Id = 1703826,
                            EstadoId = 17,
                            Nome = "Cachoeirinha"
                        },
                        new
                        {
                            Id = 1703842,
                            EstadoId = 17,
                            Nome = "Campos Lindos"
                        },
                        new
                        {
                            Id = 1703867,
                            EstadoId = 17,
                            Nome = "Cariri do Tocantins"
                        },
                        new
                        {
                            Id = 1703883,
                            EstadoId = 17,
                            Nome = "Carmolândia"
                        },
                        new
                        {
                            Id = 1703891,
                            EstadoId = 17,
                            Nome = "Carrasco Bonito"
                        },
                        new
                        {
                            Id = 1703909,
                            EstadoId = 17,
                            Nome = "Caseara"
                        },
                        new
                        {
                            Id = 1704105,
                            EstadoId = 17,
                            Nome = "Centenário"
                        },
                        new
                        {
                            Id = 1705102,
                            EstadoId = 17,
                            Nome = "Chapada da Natividade"
                        },
                        new
                        {
                            Id = 1704600,
                            EstadoId = 17,
                            Nome = "Chapada de Areia"
                        },
                        new
                        {
                            Id = 1705508,
                            EstadoId = 17,
                            Nome = "Colinas do Tocantins"
                        },
                        new
                        {
                            Id = 1716703,
                            EstadoId = 17,
                            Nome = "Colméia"
                        },
                        new
                        {
                            Id = 1705557,
                            EstadoId = 17,
                            Nome = "Combinado"
                        },
                        new
                        {
                            Id = 1705607,
                            EstadoId = 17,
                            Nome = "Conceição do Tocantins"
                        },
                        new
                        {
                            Id = 1706001,
                            EstadoId = 17,
                            Nome = "Couto de Magalhães"
                        },
                        new
                        {
                            Id = 1706100,
                            EstadoId = 17,
                            Nome = "Cristalândia"
                        },
                        new
                        {
                            Id = 1706258,
                            EstadoId = 17,
                            Nome = "Crixás do Tocantins"
                        },
                        new
                        {
                            Id = 1706506,
                            EstadoId = 17,
                            Nome = "Darcinópolis"
                        },
                        new
                        {
                            Id = 1707009,
                            EstadoId = 17,
                            Nome = "Dianópolis"
                        },
                        new
                        {
                            Id = 1707108,
                            EstadoId = 17,
                            Nome = "Divinópolis do Tocantins"
                        },
                        new
                        {
                            Id = 1707207,
                            EstadoId = 17,
                            Nome = "Dois Irmãos do Tocantins"
                        },
                        new
                        {
                            Id = 1707306,
                            EstadoId = 17,
                            Nome = "Dueré"
                        },
                        new
                        {
                            Id = 1707405,
                            EstadoId = 17,
                            Nome = "Esperantina"
                        },
                        new
                        {
                            Id = 1707553,
                            EstadoId = 17,
                            Nome = "Fátima"
                        },
                        new
                        {
                            Id = 1707652,
                            EstadoId = 17,
                            Nome = "Figueirópolis"
                        },
                        new
                        {
                            Id = 1707702,
                            EstadoId = 17,
                            Nome = "Filadélfia"
                        },
                        new
                        {
                            Id = 1708205,
                            EstadoId = 17,
                            Nome = "Formoso do Araguaia"
                        },
                        new
                        {
                            Id = 1708254,
                            EstadoId = 17,
                            Nome = "Fortaleza do Tabocão"
                        },
                        new
                        {
                            Id = 1708304,
                            EstadoId = 17,
                            Nome = "Goianorte"
                        },
                        new
                        {
                            Id = 1709005,
                            EstadoId = 17,
                            Nome = "Goiatins"
                        },
                        new
                        {
                            Id = 1709302,
                            EstadoId = 17,
                            Nome = "Guaraí"
                        },
                        new
                        {
                            Id = 1709500,
                            EstadoId = 17,
                            Nome = "Gurupi"
                        },
                        new
                        {
                            Id = 1709807,
                            EstadoId = 17,
                            Nome = "Ipueiras"
                        },
                        new
                        {
                            Id = 1710508,
                            EstadoId = 17,
                            Nome = "Itacajá"
                        },
                        new
                        {
                            Id = 1710706,
                            EstadoId = 17,
                            Nome = "Itaguatins"
                        },
                        new
                        {
                            Id = 1710904,
                            EstadoId = 17,
                            Nome = "Itapiratins"
                        },
                        new
                        {
                            Id = 1711100,
                            EstadoId = 17,
                            Nome = "Itaporã do Tocantins"
                        },
                        new
                        {
                            Id = 1711506,
                            EstadoId = 17,
                            Nome = "Jaú do Tocantins"
                        },
                        new
                        {
                            Id = 1711803,
                            EstadoId = 17,
                            Nome = "Juarina"
                        },
                        new
                        {
                            Id = 1711902,
                            EstadoId = 17,
                            Nome = "Lagoa da Confusão"
                        },
                        new
                        {
                            Id = 1711951,
                            EstadoId = 17,
                            Nome = "Lagoa do Tocantins"
                        },
                        new
                        {
                            Id = 1712009,
                            EstadoId = 17,
                            Nome = "Lajeado"
                        },
                        new
                        {
                            Id = 1712157,
                            EstadoId = 17,
                            Nome = "Lavandeira"
                        },
                        new
                        {
                            Id = 1712405,
                            EstadoId = 17,
                            Nome = "Lizarda"
                        },
                        new
                        {
                            Id = 1712454,
                            EstadoId = 17,
                            Nome = "Luzinópolis"
                        },
                        new
                        {
                            Id = 1712504,
                            EstadoId = 17,
                            Nome = "Marianópolis do Tocantins"
                        },
                        new
                        {
                            Id = 1712702,
                            EstadoId = 17,
                            Nome = "Mateiros"
                        },
                        new
                        {
                            Id = 1712801,
                            EstadoId = 17,
                            Nome = "Maurilândia do Tocantins"
                        },
                        new
                        {
                            Id = 1713205,
                            EstadoId = 17,
                            Nome = "Miracema do Tocantins"
                        },
                        new
                        {
                            Id = 1713304,
                            EstadoId = 17,
                            Nome = "Miranorte"
                        },
                        new
                        {
                            Id = 1713601,
                            EstadoId = 17,
                            Nome = "Monte do Carmo"
                        },
                        new
                        {
                            Id = 1713700,
                            EstadoId = 17,
                            Nome = "Monte Santo do Tocantins"
                        },
                        new
                        {
                            Id = 1713957,
                            EstadoId = 17,
                            Nome = "Muricilândia"
                        },
                        new
                        {
                            Id = 1714203,
                            EstadoId = 17,
                            Nome = "Natividade"
                        },
                        new
                        {
                            Id = 1714302,
                            EstadoId = 17,
                            Nome = "Nazaré"
                        },
                        new
                        {
                            Id = 1714880,
                            EstadoId = 17,
                            Nome = "Nova Olinda"
                        },
                        new
                        {
                            Id = 1715002,
                            EstadoId = 17,
                            Nome = "Nova Rosalândia"
                        },
                        new
                        {
                            Id = 1715101,
                            EstadoId = 17,
                            Nome = "Novo Acordo"
                        },
                        new
                        {
                            Id = 1715150,
                            EstadoId = 17,
                            Nome = "Novo Alegre"
                        },
                        new
                        {
                            Id = 1715259,
                            EstadoId = 17,
                            Nome = "Novo Jardim"
                        },
                        new
                        {
                            Id = 1715507,
                            EstadoId = 17,
                            Nome = "Oliveira de Fátima"
                        },
                        new
                        {
                            Id = 1721000,
                            EstadoId = 17,
                            Nome = "Palmas"
                        },
                        new
                        {
                            Id = 1715705,
                            EstadoId = 17,
                            Nome = "Palmeirante"
                        },
                        new
                        {
                            Id = 1713809,
                            EstadoId = 17,
                            Nome = "Palmeiras do Tocantins"
                        },
                        new
                        {
                            Id = 1715754,
                            EstadoId = 17,
                            Nome = "Palmeirópolis"
                        },
                        new
                        {
                            Id = 1716109,
                            EstadoId = 17,
                            Nome = "Paraíso do Tocantins"
                        },
                        new
                        {
                            Id = 1716208,
                            EstadoId = 17,
                            Nome = "Paranã"
                        },
                        new
                        {
                            Id = 1716307,
                            EstadoId = 17,
                            Nome = "Pau DArco"
                        },
                        new
                        {
                            Id = 1716505,
                            EstadoId = 17,
                            Nome = "Pedro Afonso"
                        },
                        new
                        {
                            Id = 1716604,
                            EstadoId = 17,
                            Nome = "Peixe"
                        },
                        new
                        {
                            Id = 1716653,
                            EstadoId = 17,
                            Nome = "Pequizeiro"
                        },
                        new
                        {
                            Id = 1717008,
                            EstadoId = 17,
                            Nome = "Pindorama do Tocantins"
                        },
                        new
                        {
                            Id = 1717206,
                            EstadoId = 17,
                            Nome = "Piraquê"
                        },
                        new
                        {
                            Id = 1717503,
                            EstadoId = 17,
                            Nome = "Pium"
                        },
                        new
                        {
                            Id = 1717800,
                            EstadoId = 17,
                            Nome = "Ponte Alta do Bom Jesus"
                        },
                        new
                        {
                            Id = 1717909,
                            EstadoId = 17,
                            Nome = "Ponte Alta do Tocantins"
                        },
                        new
                        {
                            Id = 1718006,
                            EstadoId = 17,
                            Nome = "Porto Alegre do Tocantins"
                        },
                        new
                        {
                            Id = 1718204,
                            EstadoId = 17,
                            Nome = "Porto Nacional"
                        },
                        new
                        {
                            Id = 1718303,
                            EstadoId = 17,
                            Nome = "Praia Norte"
                        },
                        new
                        {
                            Id = 1718402,
                            EstadoId = 17,
                            Nome = "Presidente Kennedy"
                        },
                        new
                        {
                            Id = 1718451,
                            EstadoId = 17,
                            Nome = "Pugmil"
                        },
                        new
                        {
                            Id = 1718501,
                            EstadoId = 17,
                            Nome = "Recursolândia"
                        },
                        new
                        {
                            Id = 1718550,
                            EstadoId = 17,
                            Nome = "Riachinho"
                        },
                        new
                        {
                            Id = 1718659,
                            EstadoId = 17,
                            Nome = "Rio da Conceição"
                        },
                        new
                        {
                            Id = 1718709,
                            EstadoId = 17,
                            Nome = "Rio dos Bois"
                        },
                        new
                        {
                            Id = 1718758,
                            EstadoId = 17,
                            Nome = "Rio Sono"
                        },
                        new
                        {
                            Id = 1718808,
                            EstadoId = 17,
                            Nome = "Sampaio"
                        },
                        new
                        {
                            Id = 1718840,
                            EstadoId = 17,
                            Nome = "Sandolândia"
                        },
                        new
                        {
                            Id = 1718865,
                            EstadoId = 17,
                            Nome = "Santa Fé do Araguaia"
                        },
                        new
                        {
                            Id = 1718881,
                            EstadoId = 17,
                            Nome = "Santa Maria do Tocantins"
                        },
                        new
                        {
                            Id = 1718899,
                            EstadoId = 17,
                            Nome = "Santa Rita do Tocantins"
                        },
                        new
                        {
                            Id = 1718907,
                            EstadoId = 17,
                            Nome = "Santa Rosa do Tocantins"
                        },
                        new
                        {
                            Id = 1719004,
                            EstadoId = 17,
                            Nome = "Santa Tereza do Tocantins"
                        },
                        new
                        {
                            Id = 1720002,
                            EstadoId = 17,
                            Nome = "Santa Terezinha do Tocantins"
                        },
                        new
                        {
                            Id = 1720101,
                            EstadoId = 17,
                            Nome = "São Bento do Tocantins"
                        },
                        new
                        {
                            Id = 1720150,
                            EstadoId = 17,
                            Nome = "São Félix do Tocantins"
                        },
                        new
                        {
                            Id = 1720200,
                            EstadoId = 17,
                            Nome = "São Miguel do Tocantins"
                        },
                        new
                        {
                            Id = 1720259,
                            EstadoId = 17,
                            Nome = "São Salvador do Tocantins"
                        },
                        new
                        {
                            Id = 1720309,
                            EstadoId = 17,
                            Nome = "São Sebastião do Tocantins"
                        },
                        new
                        {
                            Id = 1720499,
                            EstadoId = 17,
                            Nome = "São Valério da Natividade"
                        },
                        new
                        {
                            Id = 1720655,
                            EstadoId = 17,
                            Nome = "Silvanópolis"
                        },
                        new
                        {
                            Id = 1720804,
                            EstadoId = 17,
                            Nome = "Sítio Novo do Tocantins"
                        },
                        new
                        {
                            Id = 1720853,
                            EstadoId = 17,
                            Nome = "Sucupira"
                        },
                        new
                        {
                            Id = 1720903,
                            EstadoId = 17,
                            Nome = "Taguatinga"
                        },
                        new
                        {
                            Id = 1720937,
                            EstadoId = 17,
                            Nome = "Taipas do Tocantins"
                        },
                        new
                        {
                            Id = 1720978,
                            EstadoId = 17,
                            Nome = "Talismã"
                        },
                        new
                        {
                            Id = 1721109,
                            EstadoId = 17,
                            Nome = "Tocantínia"
                        },
                        new
                        {
                            Id = 1721208,
                            EstadoId = 17,
                            Nome = "Tocantinópolis"
                        },
                        new
                        {
                            Id = 1721257,
                            EstadoId = 17,
                            Nome = "Tupirama"
                        },
                        new
                        {
                            Id = 1721307,
                            EstadoId = 17,
                            Nome = "Tupiratins"
                        },
                        new
                        {
                            Id = 1722081,
                            EstadoId = 17,
                            Nome = "Wanderlândia"
                        },
                        new
                        {
                            Id = 1722107,
                            EstadoId = 17,
                            Nome = "Xambioá"
                        },
                        new
                        {
                            Id = 2100055,
                            EstadoId = 21,
                            Nome = "Açailândia"
                        },
                        new
                        {
                            Id = 2100105,
                            EstadoId = 21,
                            Nome = "Afonso Cunha"
                        },
                        new
                        {
                            Id = 2100154,
                            EstadoId = 21,
                            Nome = "Água Doce do Maranhão"
                        },
                        new
                        {
                            Id = 2100204,
                            EstadoId = 21,
                            Nome = "Alcântara"
                        },
                        new
                        {
                            Id = 2100303,
                            EstadoId = 21,
                            Nome = "Aldeias Altas"
                        },
                        new
                        {
                            Id = 2100402,
                            EstadoId = 21,
                            Nome = "Altamira do Maranhão"
                        },
                        new
                        {
                            Id = 2100436,
                            EstadoId = 21,
                            Nome = "Alto Alegre do Maranhão"
                        },
                        new
                        {
                            Id = 2100477,
                            EstadoId = 21,
                            Nome = "Alto Alegre do Pindaré"
                        },
                        new
                        {
                            Id = 2100501,
                            EstadoId = 21,
                            Nome = "Alto Parnaíba"
                        },
                        new
                        {
                            Id = 2100550,
                            EstadoId = 21,
                            Nome = "Amapá do Maranhão"
                        },
                        new
                        {
                            Id = 2100600,
                            EstadoId = 21,
                            Nome = "Amarante do Maranhão"
                        },
                        new
                        {
                            Id = 2100709,
                            EstadoId = 21,
                            Nome = "Anajatuba"
                        },
                        new
                        {
                            Id = 2100808,
                            EstadoId = 21,
                            Nome = "Anapurus"
                        },
                        new
                        {
                            Id = 2100832,
                            EstadoId = 21,
                            Nome = "Apicum-Açu"
                        },
                        new
                        {
                            Id = 2100873,
                            EstadoId = 21,
                            Nome = "Araguanã"
                        },
                        new
                        {
                            Id = 2100907,
                            EstadoId = 21,
                            Nome = "Araioses"
                        },
                        new
                        {
                            Id = 2100956,
                            EstadoId = 21,
                            Nome = "Arame"
                        },
                        new
                        {
                            Id = 2101004,
                            EstadoId = 21,
                            Nome = "Arari"
                        },
                        new
                        {
                            Id = 2101103,
                            EstadoId = 21,
                            Nome = "Axixá"
                        },
                        new
                        {
                            Id = 2101202,
                            EstadoId = 21,
                            Nome = "Bacabal"
                        },
                        new
                        {
                            Id = 2101251,
                            EstadoId = 21,
                            Nome = "Bacabeira"
                        },
                        new
                        {
                            Id = 2101301,
                            EstadoId = 21,
                            Nome = "Bacuri"
                        },
                        new
                        {
                            Id = 2101350,
                            EstadoId = 21,
                            Nome = "Bacurituba"
                        },
                        new
                        {
                            Id = 2101400,
                            EstadoId = 21,
                            Nome = "Balsas"
                        },
                        new
                        {
                            Id = 2101509,
                            EstadoId = 21,
                            Nome = "Barão de Grajaú"
                        },
                        new
                        {
                            Id = 2101608,
                            EstadoId = 21,
                            Nome = "Barra do Corda"
                        },
                        new
                        {
                            Id = 2101707,
                            EstadoId = 21,
                            Nome = "Barreirinhas"
                        },
                        new
                        {
                            Id = 2101772,
                            EstadoId = 21,
                            Nome = "Bela Vista do Maranhão"
                        },
                        new
                        {
                            Id = 2101731,
                            EstadoId = 21,
                            Nome = "Belágua"
                        },
                        new
                        {
                            Id = 2101806,
                            EstadoId = 21,
                            Nome = "Benedito Leite"
                        },
                        new
                        {
                            Id = 2101905,
                            EstadoId = 21,
                            Nome = "Bequimão"
                        },
                        new
                        {
                            Id = 2101939,
                            EstadoId = 21,
                            Nome = "Bernardo do Mearim"
                        },
                        new
                        {
                            Id = 2101970,
                            EstadoId = 21,
                            Nome = "Boa Vista do Gurupi"
                        },
                        new
                        {
                            Id = 2102002,
                            EstadoId = 21,
                            Nome = "Bom Jardim"
                        },
                        new
                        {
                            Id = 2102036,
                            EstadoId = 21,
                            Nome = "Bom Jesus das Selvas"
                        },
                        new
                        {
                            Id = 2102077,
                            EstadoId = 21,
                            Nome = "Bom Lugar"
                        },
                        new
                        {
                            Id = 2102101,
                            EstadoId = 21,
                            Nome = "Brejo"
                        },
                        new
                        {
                            Id = 2102150,
                            EstadoId = 21,
                            Nome = "Brejo de Areia"
                        },
                        new
                        {
                            Id = 2102200,
                            EstadoId = 21,
                            Nome = "Buriti"
                        },
                        new
                        {
                            Id = 2102309,
                            EstadoId = 21,
                            Nome = "Buriti Bravo"
                        },
                        new
                        {
                            Id = 2102325,
                            EstadoId = 21,
                            Nome = "Buriticupu"
                        },
                        new
                        {
                            Id = 2102358,
                            EstadoId = 21,
                            Nome = "Buritirana"
                        },
                        new
                        {
                            Id = 2102374,
                            EstadoId = 21,
                            Nome = "Cachoeira Grande"
                        },
                        new
                        {
                            Id = 2102408,
                            EstadoId = 21,
                            Nome = "Cajapió"
                        },
                        new
                        {
                            Id = 2102507,
                            EstadoId = 21,
                            Nome = "Cajari"
                        },
                        new
                        {
                            Id = 2102556,
                            EstadoId = 21,
                            Nome = "Campestre do Maranhão"
                        },
                        new
                        {
                            Id = 2102606,
                            EstadoId = 21,
                            Nome = "Cândido Mendes"
                        },
                        new
                        {
                            Id = 2102705,
                            EstadoId = 21,
                            Nome = "Cantanhede"
                        },
                        new
                        {
                            Id = 2102754,
                            EstadoId = 21,
                            Nome = "Capinzal do Norte"
                        },
                        new
                        {
                            Id = 2102804,
                            EstadoId = 21,
                            Nome = "Carolina"
                        },
                        new
                        {
                            Id = 2102903,
                            EstadoId = 21,
                            Nome = "Carutapera"
                        },
                        new
                        {
                            Id = 2103000,
                            EstadoId = 21,
                            Nome = "Caxias"
                        },
                        new
                        {
                            Id = 2103109,
                            EstadoId = 21,
                            Nome = "Cedral"
                        },
                        new
                        {
                            Id = 2103125,
                            EstadoId = 21,
                            Nome = "Central do Maranhão"
                        },
                        new
                        {
                            Id = 2103158,
                            EstadoId = 21,
                            Nome = "Centro do Guilherme"
                        },
                        new
                        {
                            Id = 2103174,
                            EstadoId = 21,
                            Nome = "Centro Novo do Maranhão"
                        },
                        new
                        {
                            Id = 2103208,
                            EstadoId = 21,
                            Nome = "Chapadinha"
                        },
                        new
                        {
                            Id = 2103257,
                            EstadoId = 21,
                            Nome = "Cidelândia"
                        },
                        new
                        {
                            Id = 2103307,
                            EstadoId = 21,
                            Nome = "Codó"
                        },
                        new
                        {
                            Id = 2103406,
                            EstadoId = 21,
                            Nome = "Coelho Neto"
                        },
                        new
                        {
                            Id = 2103505,
                            EstadoId = 21,
                            Nome = "Colinas"
                        },
                        new
                        {
                            Id = 2103554,
                            EstadoId = 21,
                            Nome = "Conceição do Lago-Açu"
                        },
                        new
                        {
                            Id = 2103604,
                            EstadoId = 21,
                            Nome = "Coroatá"
                        },
                        new
                        {
                            Id = 2103703,
                            EstadoId = 21,
                            Nome = "Cururupu"
                        },
                        new
                        {
                            Id = 2103752,
                            EstadoId = 21,
                            Nome = "Davinópolis"
                        },
                        new
                        {
                            Id = 2103802,
                            EstadoId = 21,
                            Nome = "Dom Pedro"
                        },
                        new
                        {
                            Id = 2103901,
                            EstadoId = 21,
                            Nome = "Duque Bacelar"
                        },
                        new
                        {
                            Id = 2104008,
                            EstadoId = 21,
                            Nome = "Esperantinópolis"
                        },
                        new
                        {
                            Id = 2104057,
                            EstadoId = 21,
                            Nome = "Estreito"
                        },
                        new
                        {
                            Id = 2104073,
                            EstadoId = 21,
                            Nome = "Feira Nova do Maranhão"
                        },
                        new
                        {
                            Id = 2104081,
                            EstadoId = 21,
                            Nome = "Fernando Falcão"
                        },
                        new
                        {
                            Id = 2104099,
                            EstadoId = 21,
                            Nome = "Formosa da Serra Negra"
                        },
                        new
                        {
                            Id = 2104107,
                            EstadoId = 21,
                            Nome = "Fortaleza dos Nogueiras"
                        },
                        new
                        {
                            Id = 2104206,
                            EstadoId = 21,
                            Nome = "Fortuna"
                        },
                        new
                        {
                            Id = 2104305,
                            EstadoId = 21,
                            Nome = "Godofredo Viana"
                        },
                        new
                        {
                            Id = 2104404,
                            EstadoId = 21,
                            Nome = "Gonçalves Dias"
                        },
                        new
                        {
                            Id = 2104503,
                            EstadoId = 21,
                            Nome = "Governador Archer"
                        },
                        new
                        {
                            Id = 2104552,
                            EstadoId = 21,
                            Nome = "Governador Edison Lobão"
                        },
                        new
                        {
                            Id = 2104602,
                            EstadoId = 21,
                            Nome = "Governador Eugênio Barros"
                        },
                        new
                        {
                            Id = 2104628,
                            EstadoId = 21,
                            Nome = "Governador Luiz Rocha"
                        },
                        new
                        {
                            Id = 2104651,
                            EstadoId = 21,
                            Nome = "Governador Newton Bello"
                        },
                        new
                        {
                            Id = 2104677,
                            EstadoId = 21,
                            Nome = "Governador Nunes Freire"
                        },
                        new
                        {
                            Id = 2104701,
                            EstadoId = 21,
                            Nome = "Graça Aranha"
                        },
                        new
                        {
                            Id = 2104800,
                            EstadoId = 21,
                            Nome = "Grajaú"
                        },
                        new
                        {
                            Id = 2104909,
                            EstadoId = 21,
                            Nome = "Guimarães"
                        },
                        new
                        {
                            Id = 2105005,
                            EstadoId = 21,
                            Nome = "Humberto de Campos"
                        },
                        new
                        {
                            Id = 2105104,
                            EstadoId = 21,
                            Nome = "Icatu"
                        },
                        new
                        {
                            Id = 2105153,
                            EstadoId = 21,
                            Nome = "Igarapé do Meio"
                        },
                        new
                        {
                            Id = 2105203,
                            EstadoId = 21,
                            Nome = "Igarapé Grande"
                        },
                        new
                        {
                            Id = 2105302,
                            EstadoId = 21,
                            Nome = "Imperatriz"
                        },
                        new
                        {
                            Id = 2105351,
                            EstadoId = 21,
                            Nome = "Itaipava do Grajaú"
                        },
                        new
                        {
                            Id = 2105401,
                            EstadoId = 21,
                            Nome = "Itapecuru Mirim"
                        },
                        new
                        {
                            Id = 2105427,
                            EstadoId = 21,
                            Nome = "Itinga do Maranhão"
                        },
                        new
                        {
                            Id = 2105450,
                            EstadoId = 21,
                            Nome = "Jatobá"
                        },
                        new
                        {
                            Id = 2105476,
                            EstadoId = 21,
                            Nome = "Jenipapo dos Vieiras"
                        },
                        new
                        {
                            Id = 2105500,
                            EstadoId = 21,
                            Nome = "João Lisboa"
                        },
                        new
                        {
                            Id = 2105609,
                            EstadoId = 21,
                            Nome = "Joselândia"
                        },
                        new
                        {
                            Id = 2105658,
                            EstadoId = 21,
                            Nome = "Junco do Maranhão"
                        },
                        new
                        {
                            Id = 2105708,
                            EstadoId = 21,
                            Nome = "Lago da Pedra"
                        },
                        new
                        {
                            Id = 2105807,
                            EstadoId = 21,
                            Nome = "Lago do Junco"
                        },
                        new
                        {
                            Id = 2105948,
                            EstadoId = 21,
                            Nome = "Lago dos Rodrigues"
                        },
                        new
                        {
                            Id = 2105906,
                            EstadoId = 21,
                            Nome = "Lago Verde"
                        },
                        new
                        {
                            Id = 2105922,
                            EstadoId = 21,
                            Nome = "Lagoa do Mato"
                        },
                        new
                        {
                            Id = 2105963,
                            EstadoId = 21,
                            Nome = "Lagoa Grande do Maranhão"
                        },
                        new
                        {
                            Id = 2105989,
                            EstadoId = 21,
                            Nome = "Lajeado Novo"
                        },
                        new
                        {
                            Id = 2106003,
                            EstadoId = 21,
                            Nome = "Lima Campos"
                        },
                        new
                        {
                            Id = 2106102,
                            EstadoId = 21,
                            Nome = "Loreto"
                        },
                        new
                        {
                            Id = 2106201,
                            EstadoId = 21,
                            Nome = "Luís Domingues"
                        },
                        new
                        {
                            Id = 2106300,
                            EstadoId = 21,
                            Nome = "Magalhães de Almeida"
                        },
                        new
                        {
                            Id = 2106326,
                            EstadoId = 21,
                            Nome = "Maracaçumé"
                        },
                        new
                        {
                            Id = 2106359,
                            EstadoId = 21,
                            Nome = "Marajá do Sena"
                        },
                        new
                        {
                            Id = 2106375,
                            EstadoId = 21,
                            Nome = "Maranhãozinho"
                        },
                        new
                        {
                            Id = 2106409,
                            EstadoId = 21,
                            Nome = "Mata Roma"
                        },
                        new
                        {
                            Id = 2106508,
                            EstadoId = 21,
                            Nome = "Matinha"
                        },
                        new
                        {
                            Id = 2106607,
                            EstadoId = 21,
                            Nome = "Matões"
                        },
                        new
                        {
                            Id = 2106631,
                            EstadoId = 21,
                            Nome = "Matões do Norte"
                        },
                        new
                        {
                            Id = 2106672,
                            EstadoId = 21,
                            Nome = "Milagres do Maranhão"
                        },
                        new
                        {
                            Id = 2106706,
                            EstadoId = 21,
                            Nome = "Mirador"
                        },
                        new
                        {
                            Id = 2106755,
                            EstadoId = 21,
                            Nome = "Miranda do Norte"
                        },
                        new
                        {
                            Id = 2106805,
                            EstadoId = 21,
                            Nome = "Mirinzal"
                        },
                        new
                        {
                            Id = 2106904,
                            EstadoId = 21,
                            Nome = "Monção"
                        },
                        new
                        {
                            Id = 2107001,
                            EstadoId = 21,
                            Nome = "Montes Altos"
                        },
                        new
                        {
                            Id = 2107100,
                            EstadoId = 21,
                            Nome = "Morros"
                        },
                        new
                        {
                            Id = 2107209,
                            EstadoId = 21,
                            Nome = "Nina Rodrigues"
                        },
                        new
                        {
                            Id = 2107258,
                            EstadoId = 21,
                            Nome = "Nova Colinas"
                        },
                        new
                        {
                            Id = 2107308,
                            EstadoId = 21,
                            Nome = "Nova Iorque"
                        },
                        new
                        {
                            Id = 2107357,
                            EstadoId = 21,
                            Nome = "Nova Olinda do Maranhão"
                        },
                        new
                        {
                            Id = 2107407,
                            EstadoId = 21,
                            Nome = "Olho dÁgua das Cunhãs"
                        },
                        new
                        {
                            Id = 2107456,
                            EstadoId = 21,
                            Nome = "Olinda Nova do Maranhão"
                        },
                        new
                        {
                            Id = 2107506,
                            EstadoId = 21,
                            Nome = "Paço do Lumiar"
                        },
                        new
                        {
                            Id = 2107605,
                            EstadoId = 21,
                            Nome = "Palmeirândia"
                        },
                        new
                        {
                            Id = 2107704,
                            EstadoId = 21,
                            Nome = "Paraibano"
                        },
                        new
                        {
                            Id = 2107803,
                            EstadoId = 21,
                            Nome = "Parnarama"
                        },
                        new
                        {
                            Id = 2107902,
                            EstadoId = 21,
                            Nome = "Passagem Franca"
                        },
                        new
                        {
                            Id = 2108009,
                            EstadoId = 21,
                            Nome = "Pastos Bons"
                        },
                        new
                        {
                            Id = 2108058,
                            EstadoId = 21,
                            Nome = "Paulino Neves"
                        },
                        new
                        {
                            Id = 2108108,
                            EstadoId = 21,
                            Nome = "Paulo Ramos"
                        },
                        new
                        {
                            Id = 2108207,
                            EstadoId = 21,
                            Nome = "Pedreiras"
                        },
                        new
                        {
                            Id = 2108256,
                            EstadoId = 21,
                            Nome = "Pedro do Rosário"
                        },
                        new
                        {
                            Id = 2108306,
                            EstadoId = 21,
                            Nome = "Penalva"
                        },
                        new
                        {
                            Id = 2108405,
                            EstadoId = 21,
                            Nome = "Peri Mirim"
                        },
                        new
                        {
                            Id = 2108454,
                            EstadoId = 21,
                            Nome = "Peritoró"
                        },
                        new
                        {
                            Id = 2108504,
                            EstadoId = 21,
                            Nome = "Pindaré-Mirim"
                        },
                        new
                        {
                            Id = 2108603,
                            EstadoId = 21,
                            Nome = "Pinheiro"
                        },
                        new
                        {
                            Id = 2108702,
                            EstadoId = 21,
                            Nome = "Pio XII"
                        },
                        new
                        {
                            Id = 2108801,
                            EstadoId = 21,
                            Nome = "Pirapemas"
                        },
                        new
                        {
                            Id = 2108900,
                            EstadoId = 21,
                            Nome = "Poção de Pedras"
                        },
                        new
                        {
                            Id = 2109007,
                            EstadoId = 21,
                            Nome = "Porto Franco"
                        },
                        new
                        {
                            Id = 2109056,
                            EstadoId = 21,
                            Nome = "Porto Rico do Maranhão"
                        },
                        new
                        {
                            Id = 2109106,
                            EstadoId = 21,
                            Nome = "Presidente Dutra"
                        },
                        new
                        {
                            Id = 2109205,
                            EstadoId = 21,
                            Nome = "Presidente Juscelino"
                        },
                        new
                        {
                            Id = 2109239,
                            EstadoId = 21,
                            Nome = "Presidente Médici"
                        },
                        new
                        {
                            Id = 2109270,
                            EstadoId = 21,
                            Nome = "Presidente Sarney"
                        },
                        new
                        {
                            Id = 2109304,
                            EstadoId = 21,
                            Nome = "Presidente Vargas"
                        },
                        new
                        {
                            Id = 2109403,
                            EstadoId = 21,
                            Nome = "Primeira Cruz"
                        },
                        new
                        {
                            Id = 2109452,
                            EstadoId = 21,
                            Nome = "Raposa"
                        },
                        new
                        {
                            Id = 2109502,
                            EstadoId = 21,
                            Nome = "Riachão"
                        },
                        new
                        {
                            Id = 2109551,
                            EstadoId = 21,
                            Nome = "Ribamar Fiquene"
                        },
                        new
                        {
                            Id = 2109601,
                            EstadoId = 21,
                            Nome = "Rosário"
                        },
                        new
                        {
                            Id = 2109700,
                            EstadoId = 21,
                            Nome = "Sambaíba"
                        },
                        new
                        {
                            Id = 2109759,
                            EstadoId = 21,
                            Nome = "Santa Filomena do Maranhão"
                        },
                        new
                        {
                            Id = 2109809,
                            EstadoId = 21,
                            Nome = "Santa Helena"
                        },
                        new
                        {
                            Id = 2109908,
                            EstadoId = 21,
                            Nome = "Santa Inês"
                        },
                        new
                        {
                            Id = 2110005,
                            EstadoId = 21,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            Id = 2110039,
                            EstadoId = 21,
                            Nome = "Santa Luzia do Paruá"
                        },
                        new
                        {
                            Id = 2110104,
                            EstadoId = 21,
                            Nome = "Santa Quitéria do Maranhão"
                        },
                        new
                        {
                            Id = 2110203,
                            EstadoId = 21,
                            Nome = "Santa Rita"
                        },
                        new
                        {
                            Id = 2110237,
                            EstadoId = 21,
                            Nome = "Santana do Maranhão"
                        },
                        new
                        {
                            Id = 2110278,
                            EstadoId = 21,
                            Nome = "Santo Amaro do Maranhão"
                        },
                        new
                        {
                            Id = 2110302,
                            EstadoId = 21,
                            Nome = "Santo Antônio dos Lopes"
                        },
                        new
                        {
                            Id = 2110401,
                            EstadoId = 21,
                            Nome = "São Benedito do Rio Preto"
                        },
                        new
                        {
                            Id = 2110500,
                            EstadoId = 21,
                            Nome = "São Bento"
                        },
                        new
                        {
                            Id = 2110609,
                            EstadoId = 21,
                            Nome = "São Bernardo"
                        },
                        new
                        {
                            Id = 2110658,
                            EstadoId = 21,
                            Nome = "São Domingos do Azeitão"
                        },
                        new
                        {
                            Id = 2110708,
                            EstadoId = 21,
                            Nome = "São Domingos do Maranhão"
                        },
                        new
                        {
                            Id = 2110807,
                            EstadoId = 21,
                            Nome = "São Félix de Balsas"
                        },
                        new
                        {
                            Id = 2110856,
                            EstadoId = 21,
                            Nome = "São Francisco do Brejão"
                        },
                        new
                        {
                            Id = 2110906,
                            EstadoId = 21,
                            Nome = "São Francisco do Maranhão"
                        },
                        new
                        {
                            Id = 2111003,
                            EstadoId = 21,
                            Nome = "São João Batista"
                        },
                        new
                        {
                            Id = 2111029,
                            EstadoId = 21,
                            Nome = "São João do Carú"
                        },
                        new
                        {
                            Id = 2111052,
                            EstadoId = 21,
                            Nome = "São João do Paraíso"
                        },
                        new
                        {
                            Id = 2111078,
                            EstadoId = 21,
                            Nome = "São João do Soter"
                        },
                        new
                        {
                            Id = 2111102,
                            EstadoId = 21,
                            Nome = "São João dos Patos"
                        },
                        new
                        {
                            Id = 2111201,
                            EstadoId = 21,
                            Nome = "São José de Ribamar"
                        },
                        new
                        {
                            Id = 2111250,
                            EstadoId = 21,
                            Nome = "São José dos Basílios"
                        },
                        new
                        {
                            Id = 2111300,
                            EstadoId = 21,
                            Nome = "São Luís"
                        },
                        new
                        {
                            Id = 2111409,
                            EstadoId = 21,
                            Nome = "São Luís Gonzaga do Maranhão"
                        },
                        new
                        {
                            Id = 2111508,
                            EstadoId = 21,
                            Nome = "São Mateus do Maranhão"
                        },
                        new
                        {
                            Id = 2111532,
                            EstadoId = 21,
                            Nome = "São Pedro da Água Branca"
                        },
                        new
                        {
                            Id = 2111573,
                            EstadoId = 21,
                            Nome = "São Pedro dos Crentes"
                        },
                        new
                        {
                            Id = 2111607,
                            EstadoId = 21,
                            Nome = "São Raimundo das Mangabeiras"
                        },
                        new
                        {
                            Id = 2111631,
                            EstadoId = 21,
                            Nome = "São Raimundo do Doca Bezerra"
                        },
                        new
                        {
                            Id = 2111672,
                            EstadoId = 21,
                            Nome = "São Roberto"
                        },
                        new
                        {
                            Id = 2111706,
                            EstadoId = 21,
                            Nome = "São Vicente Ferrer"
                        },
                        new
                        {
                            Id = 2111722,
                            EstadoId = 21,
                            Nome = "Satubinha"
                        },
                        new
                        {
                            Id = 2111748,
                            EstadoId = 21,
                            Nome = "Senador Alexandre Costa"
                        },
                        new
                        {
                            Id = 2111763,
                            EstadoId = 21,
                            Nome = "Senador La Rocque"
                        },
                        new
                        {
                            Id = 2111789,
                            EstadoId = 21,
                            Nome = "Serrano do Maranhão"
                        },
                        new
                        {
                            Id = 2111805,
                            EstadoId = 21,
                            Nome = "Sítio Novo"
                        },
                        new
                        {
                            Id = 2111904,
                            EstadoId = 21,
                            Nome = "Sucupira do Norte"
                        },
                        new
                        {
                            Id = 2111953,
                            EstadoId = 21,
                            Nome = "Sucupira do Riachão"
                        },
                        new
                        {
                            Id = 2112001,
                            EstadoId = 21,
                            Nome = "Tasso Fragoso"
                        },
                        new
                        {
                            Id = 2112100,
                            EstadoId = 21,
                            Nome = "Timbiras"
                        },
                        new
                        {
                            Id = 2112209,
                            EstadoId = 21,
                            Nome = "Timon"
                        },
                        new
                        {
                            Id = 2112233,
                            EstadoId = 21,
                            Nome = "Trizidela do Vale"
                        },
                        new
                        {
                            Id = 2112274,
                            EstadoId = 21,
                            Nome = "Tufilândia"
                        },
                        new
                        {
                            Id = 2112308,
                            EstadoId = 21,
                            Nome = "Tuntum"
                        },
                        new
                        {
                            Id = 2112407,
                            EstadoId = 21,
                            Nome = "Turiaçu"
                        },
                        new
                        {
                            Id = 2112456,
                            EstadoId = 21,
                            Nome = "Turilândia"
                        },
                        new
                        {
                            Id = 2112506,
                            EstadoId = 21,
                            Nome = "Tutóia"
                        },
                        new
                        {
                            Id = 2112605,
                            EstadoId = 21,
                            Nome = "Urbano Santos"
                        },
                        new
                        {
                            Id = 2112704,
                            EstadoId = 21,
                            Nome = "Vargem Grande"
                        },
                        new
                        {
                            Id = 2112803,
                            EstadoId = 21,
                            Nome = "Viana"
                        },
                        new
                        {
                            Id = 2112852,
                            EstadoId = 21,
                            Nome = "Vila Nova dos Martírios"
                        },
                        new
                        {
                            Id = 2112902,
                            EstadoId = 21,
                            Nome = "Vitória do Mearim"
                        },
                        new
                        {
                            Id = 2113009,
                            EstadoId = 21,
                            Nome = "Vitorino Freire"
                        },
                        new
                        {
                            Id = 2114007,
                            EstadoId = 21,
                            Nome = "Zé Doca"
                        },
                        new
                        {
                            Id = 2200053,
                            EstadoId = 22,
                            Nome = "Acauã"
                        },
                        new
                        {
                            Id = 2200103,
                            EstadoId = 22,
                            Nome = "Agricolândia"
                        },
                        new
                        {
                            Id = 2200202,
                            EstadoId = 22,
                            Nome = "Água Branca"
                        },
                        new
                        {
                            Id = 2200251,
                            EstadoId = 22,
                            Nome = "Alagoinha do Piauí"
                        },
                        new
                        {
                            Id = 2200277,
                            EstadoId = 22,
                            Nome = "Alegrete do Piauí"
                        },
                        new
                        {
                            Id = 2200301,
                            EstadoId = 22,
                            Nome = "Alto Longá"
                        },
                        new
                        {
                            Id = 2200400,
                            EstadoId = 22,
                            Nome = "Altos"
                        },
                        new
                        {
                            Id = 2200459,
                            EstadoId = 22,
                            Nome = "Alvorada do Gurguéia"
                        },
                        new
                        {
                            Id = 2200509,
                            EstadoId = 22,
                            Nome = "Amarante"
                        },
                        new
                        {
                            Id = 2200608,
                            EstadoId = 22,
                            Nome = "Angical do Piauí"
                        },
                        new
                        {
                            Id = 2200707,
                            EstadoId = 22,
                            Nome = "Anísio de Abreu"
                        },
                        new
                        {
                            Id = 2200806,
                            EstadoId = 22,
                            Nome = "Antônio Almeida"
                        },
                        new
                        {
                            Id = 2200905,
                            EstadoId = 22,
                            Nome = "Aroazes"
                        },
                        new
                        {
                            Id = 2200954,
                            EstadoId = 22,
                            Nome = "Aroeiras do Itaim"
                        },
                        new
                        {
                            Id = 2201002,
                            EstadoId = 22,
                            Nome = "Arraial"
                        },
                        new
                        {
                            Id = 2201051,
                            EstadoId = 22,
                            Nome = "Assunção do Piauí"
                        },
                        new
                        {
                            Id = 2201101,
                            EstadoId = 22,
                            Nome = "Avelino Lopes"
                        },
                        new
                        {
                            Id = 2201150,
                            EstadoId = 22,
                            Nome = "Baixa Grande do Ribeiro"
                        },
                        new
                        {
                            Id = 2201176,
                            EstadoId = 22,
                            Nome = "Barra DAlcântara"
                        },
                        new
                        {
                            Id = 2201200,
                            EstadoId = 22,
                            Nome = "Barras"
                        },
                        new
                        {
                            Id = 2201309,
                            EstadoId = 22,
                            Nome = "Barreiras do Piauí"
                        },
                        new
                        {
                            Id = 2201408,
                            EstadoId = 22,
                            Nome = "Barro Duro"
                        },
                        new
                        {
                            Id = 2201507,
                            EstadoId = 22,
                            Nome = "Batalha"
                        },
                        new
                        {
                            Id = 2201556,
                            EstadoId = 22,
                            Nome = "Bela Vista do Piauí"
                        },
                        new
                        {
                            Id = 2201572,
                            EstadoId = 22,
                            Nome = "Belém do Piauí"
                        },
                        new
                        {
                            Id = 2201606,
                            EstadoId = 22,
                            Nome = "Beneditinos"
                        },
                        new
                        {
                            Id = 2201705,
                            EstadoId = 22,
                            Nome = "Bertolínia"
                        },
                        new
                        {
                            Id = 2201739,
                            EstadoId = 22,
                            Nome = "Betânia do Piauí"
                        },
                        new
                        {
                            Id = 2201770,
                            EstadoId = 22,
                            Nome = "Boa Hora"
                        },
                        new
                        {
                            Id = 2201804,
                            EstadoId = 22,
                            Nome = "Bocaina"
                        },
                        new
                        {
                            Id = 2201903,
                            EstadoId = 22,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            Id = 2201919,
                            EstadoId = 22,
                            Nome = "Bom Princípio do Piauí"
                        },
                        new
                        {
                            Id = 2201929,
                            EstadoId = 22,
                            Nome = "Bonfim do Piauí"
                        },
                        new
                        {
                            Id = 2201945,
                            EstadoId = 22,
                            Nome = "Boqueirão do Piauí"
                        },
                        new
                        {
                            Id = 2201960,
                            EstadoId = 22,
                            Nome = "Brasileira"
                        },
                        new
                        {
                            Id = 2201988,
                            EstadoId = 22,
                            Nome = "Brejo do Piauí"
                        },
                        new
                        {
                            Id = 2202000,
                            EstadoId = 22,
                            Nome = "Buriti dos Lopes"
                        },
                        new
                        {
                            Id = 2202026,
                            EstadoId = 22,
                            Nome = "Buriti dos Montes"
                        },
                        new
                        {
                            Id = 2202059,
                            EstadoId = 22,
                            Nome = "Cabeceiras do Piauí"
                        },
                        new
                        {
                            Id = 2202075,
                            EstadoId = 22,
                            Nome = "Cajazeiras do Piauí"
                        },
                        new
                        {
                            Id = 2202083,
                            EstadoId = 22,
                            Nome = "Cajueiro da Praia"
                        },
                        new
                        {
                            Id = 2202091,
                            EstadoId = 22,
                            Nome = "Caldeirão Grande do Piauí"
                        },
                        new
                        {
                            Id = 2202109,
                            EstadoId = 22,
                            Nome = "Campinas do Piauí"
                        },
                        new
                        {
                            Id = 2202117,
                            EstadoId = 22,
                            Nome = "Campo Alegre do Fidalgo"
                        },
                        new
                        {
                            Id = 2202133,
                            EstadoId = 22,
                            Nome = "Campo Grande do Piauí"
                        },
                        new
                        {
                            Id = 2202174,
                            EstadoId = 22,
                            Nome = "Campo Largo do Piauí"
                        },
                        new
                        {
                            Id = 2202208,
                            EstadoId = 22,
                            Nome = "Campo Maior"
                        },
                        new
                        {
                            Id = 2202251,
                            EstadoId = 22,
                            Nome = "Canavieira"
                        },
                        new
                        {
                            Id = 2202307,
                            EstadoId = 22,
                            Nome = "Canto do Buriti"
                        },
                        new
                        {
                            Id = 2202406,
                            EstadoId = 22,
                            Nome = "Capitão de Campos"
                        },
                        new
                        {
                            Id = 2202455,
                            EstadoId = 22,
                            Nome = "Capitão Gervásio Oliveira"
                        },
                        new
                        {
                            Id = 2202505,
                            EstadoId = 22,
                            Nome = "Caracol"
                        },
                        new
                        {
                            Id = 2202539,
                            EstadoId = 22,
                            Nome = "Caraúbas do Piauí"
                        },
                        new
                        {
                            Id = 2202554,
                            EstadoId = 22,
                            Nome = "Caridade do Piauí"
                        },
                        new
                        {
                            Id = 2202604,
                            EstadoId = 22,
                            Nome = "Castelo do Piauí"
                        },
                        new
                        {
                            Id = 2202653,
                            EstadoId = 22,
                            Nome = "Caxingó"
                        },
                        new
                        {
                            Id = 2202703,
                            EstadoId = 22,
                            Nome = "Cocal"
                        },
                        new
                        {
                            Id = 2202711,
                            EstadoId = 22,
                            Nome = "Cocal de Telha"
                        },
                        new
                        {
                            Id = 2202729,
                            EstadoId = 22,
                            Nome = "Cocal dos Alves"
                        },
                        new
                        {
                            Id = 2202737,
                            EstadoId = 22,
                            Nome = "Coivaras"
                        },
                        new
                        {
                            Id = 2202752,
                            EstadoId = 22,
                            Nome = "Colônia do Gurguéia"
                        },
                        new
                        {
                            Id = 2202778,
                            EstadoId = 22,
                            Nome = "Colônia do Piauí"
                        },
                        new
                        {
                            Id = 2202802,
                            EstadoId = 22,
                            Nome = "Conceição do Canindé"
                        },
                        new
                        {
                            Id = 2202851,
                            EstadoId = 22,
                            Nome = "Coronel José Dias"
                        },
                        new
                        {
                            Id = 2202901,
                            EstadoId = 22,
                            Nome = "Corrente"
                        },
                        new
                        {
                            Id = 2203008,
                            EstadoId = 22,
                            Nome = "Cristalândia do Piauí"
                        },
                        new
                        {
                            Id = 2203107,
                            EstadoId = 22,
                            Nome = "Cristino Castro"
                        },
                        new
                        {
                            Id = 2203206,
                            EstadoId = 22,
                            Nome = "Curimatá"
                        },
                        new
                        {
                            Id = 2203230,
                            EstadoId = 22,
                            Nome = "Currais"
                        },
                        new
                        {
                            Id = 2203271,
                            EstadoId = 22,
                            Nome = "Curral Novo do Piauí"
                        },
                        new
                        {
                            Id = 2203255,
                            EstadoId = 22,
                            Nome = "Curralinhos"
                        },
                        new
                        {
                            Id = 2203305,
                            EstadoId = 22,
                            Nome = "Demerval Lobão"
                        },
                        new
                        {
                            Id = 2203354,
                            EstadoId = 22,
                            Nome = "Dirceu Arcoverde"
                        },
                        new
                        {
                            Id = 2203404,
                            EstadoId = 22,
                            Nome = "Dom Expedito Lopes"
                        },
                        new
                        {
                            Id = 2203453,
                            EstadoId = 22,
                            Nome = "Dom Inocêncio"
                        },
                        new
                        {
                            Id = 2203420,
                            EstadoId = 22,
                            Nome = "Domingos Mourão"
                        },
                        new
                        {
                            Id = 2203503,
                            EstadoId = 22,
                            Nome = "Elesbão Veloso"
                        },
                        new
                        {
                            Id = 2203602,
                            EstadoId = 22,
                            Nome = "Eliseu Martins"
                        },
                        new
                        {
                            Id = 2203701,
                            EstadoId = 22,
                            Nome = "Esperantina"
                        },
                        new
                        {
                            Id = 2203750,
                            EstadoId = 22,
                            Nome = "Fartura do Piauí"
                        },
                        new
                        {
                            Id = 2203800,
                            EstadoId = 22,
                            Nome = "Flores do Piauí"
                        },
                        new
                        {
                            Id = 2203859,
                            EstadoId = 22,
                            Nome = "Floresta do Piauí"
                        },
                        new
                        {
                            Id = 2203909,
                            EstadoId = 22,
                            Nome = "Floriano"
                        },
                        new
                        {
                            Id = 2204006,
                            EstadoId = 22,
                            Nome = "Francinópolis"
                        },
                        new
                        {
                            Id = 2204105,
                            EstadoId = 22,
                            Nome = "Francisco Ayres"
                        },
                        new
                        {
                            Id = 2204154,
                            EstadoId = 22,
                            Nome = "Francisco Macedo"
                        },
                        new
                        {
                            Id = 2204204,
                            EstadoId = 22,
                            Nome = "Francisco Santos"
                        },
                        new
                        {
                            Id = 2204303,
                            EstadoId = 22,
                            Nome = "Fronteiras"
                        },
                        new
                        {
                            Id = 2204352,
                            EstadoId = 22,
                            Nome = "Geminiano"
                        },
                        new
                        {
                            Id = 2204402,
                            EstadoId = 22,
                            Nome = "Gilbués"
                        },
                        new
                        {
                            Id = 2204501,
                            EstadoId = 22,
                            Nome = "Guadalupe"
                        },
                        new
                        {
                            Id = 2204550,
                            EstadoId = 22,
                            Nome = "Guaribas"
                        },
                        new
                        {
                            Id = 2204600,
                            EstadoId = 22,
                            Nome = "Hugo Napoleão"
                        },
                        new
                        {
                            Id = 2204659,
                            EstadoId = 22,
                            Nome = "Ilha Grande"
                        },
                        new
                        {
                            Id = 2204709,
                            EstadoId = 22,
                            Nome = "Inhuma"
                        },
                        new
                        {
                            Id = 2204808,
                            EstadoId = 22,
                            Nome = "Ipiranga do Piauí"
                        },
                        new
                        {
                            Id = 2204907,
                            EstadoId = 22,
                            Nome = "Isaías Coelho"
                        },
                        new
                        {
                            Id = 2205003,
                            EstadoId = 22,
                            Nome = "Itainópolis"
                        },
                        new
                        {
                            Id = 2205102,
                            EstadoId = 22,
                            Nome = "Itaueira"
                        },
                        new
                        {
                            Id = 2205151,
                            EstadoId = 22,
                            Nome = "Jacobina do Piauí"
                        },
                        new
                        {
                            Id = 2205201,
                            EstadoId = 22,
                            Nome = "Jaicós"
                        },
                        new
                        {
                            Id = 2205250,
                            EstadoId = 22,
                            Nome = "Jardim do Mulato"
                        },
                        new
                        {
                            Id = 2205276,
                            EstadoId = 22,
                            Nome = "Jatobá do Piauí"
                        },
                        new
                        {
                            Id = 2205300,
                            EstadoId = 22,
                            Nome = "Jerumenha"
                        },
                        new
                        {
                            Id = 2205359,
                            EstadoId = 22,
                            Nome = "João Costa"
                        },
                        new
                        {
                            Id = 2205409,
                            EstadoId = 22,
                            Nome = "Joaquim Pires"
                        },
                        new
                        {
                            Id = 2205458,
                            EstadoId = 22,
                            Nome = "Joca Marques"
                        },
                        new
                        {
                            Id = 2205508,
                            EstadoId = 22,
                            Nome = "José de Freitas"
                        },
                        new
                        {
                            Id = 2205516,
                            EstadoId = 22,
                            Nome = "Juazeiro do Piauí"
                        },
                        new
                        {
                            Id = 2205524,
                            EstadoId = 22,
                            Nome = "Júlio Borges"
                        },
                        new
                        {
                            Id = 2205532,
                            EstadoId = 22,
                            Nome = "Jurema"
                        },
                        new
                        {
                            Id = 2205557,
                            EstadoId = 22,
                            Nome = "Lagoa Alegre"
                        },
                        new
                        {
                            Id = 2205573,
                            EstadoId = 22,
                            Nome = "Lagoa de São Francisco"
                        },
                        new
                        {
                            Id = 2205565,
                            EstadoId = 22,
                            Nome = "Lagoa do Barro do Piauí"
                        },
                        new
                        {
                            Id = 2205581,
                            EstadoId = 22,
                            Nome = "Lagoa do Piauí"
                        },
                        new
                        {
                            Id = 2205599,
                            EstadoId = 22,
                            Nome = "Lagoa do Sítio"
                        },
                        new
                        {
                            Id = 2205540,
                            EstadoId = 22,
                            Nome = "Lagoinha do Piauí"
                        },
                        new
                        {
                            Id = 2205607,
                            EstadoId = 22,
                            Nome = "Landri Sales"
                        },
                        new
                        {
                            Id = 2205706,
                            EstadoId = 22,
                            Nome = "Luís Correia"
                        },
                        new
                        {
                            Id = 2205805,
                            EstadoId = 22,
                            Nome = "Luzilândia"
                        },
                        new
                        {
                            Id = 2205854,
                            EstadoId = 22,
                            Nome = "Madeiro"
                        },
                        new
                        {
                            Id = 2205904,
                            EstadoId = 22,
                            Nome = "Manoel Emídio"
                        },
                        new
                        {
                            Id = 2205953,
                            EstadoId = 22,
                            Nome = "Marcolândia"
                        },
                        new
                        {
                            Id = 2206001,
                            EstadoId = 22,
                            Nome = "Marcos Parente"
                        },
                        new
                        {
                            Id = 2206050,
                            EstadoId = 22,
                            Nome = "Massapê do Piauí"
                        },
                        new
                        {
                            Id = 2206100,
                            EstadoId = 22,
                            Nome = "Matias Olímpio"
                        },
                        new
                        {
                            Id = 2206209,
                            EstadoId = 22,
                            Nome = "Miguel Alves"
                        },
                        new
                        {
                            Id = 2206308,
                            EstadoId = 22,
                            Nome = "Miguel Leão"
                        },
                        new
                        {
                            Id = 2206357,
                            EstadoId = 22,
                            Nome = "Milton Brandão"
                        },
                        new
                        {
                            Id = 2206407,
                            EstadoId = 22,
                            Nome = "Monsenhor Gil"
                        },
                        new
                        {
                            Id = 2206506,
                            EstadoId = 22,
                            Nome = "Monsenhor Hipólito"
                        },
                        new
                        {
                            Id = 2206605,
                            EstadoId = 22,
                            Nome = "Monte Alegre do Piauí"
                        },
                        new
                        {
                            Id = 2206654,
                            EstadoId = 22,
                            Nome = "Morro Cabeça no Tempo"
                        },
                        new
                        {
                            Id = 2206670,
                            EstadoId = 22,
                            Nome = "Morro do Chapéu do Piauí"
                        },
                        new
                        {
                            Id = 2206696,
                            EstadoId = 22,
                            Nome = "Murici dos Portelas"
                        },
                        new
                        {
                            Id = 2206704,
                            EstadoId = 22,
                            Nome = "Nazaré do Piauí"
                        },
                        new
                        {
                            Id = 2206720,
                            EstadoId = 22,
                            Nome = "Nazária"
                        },
                        new
                        {
                            Id = 2206753,
                            EstadoId = 22,
                            Nome = "Nossa Senhora de Nazaré"
                        },
                        new
                        {
                            Id = 2206803,
                            EstadoId = 22,
                            Nome = "Nossa Senhora dos Remédios"
                        },
                        new
                        {
                            Id = 2207959,
                            EstadoId = 22,
                            Nome = "Nova Santa Rita"
                        },
                        new
                        {
                            Id = 2206902,
                            EstadoId = 22,
                            Nome = "Novo Oriente do Piauí"
                        },
                        new
                        {
                            Id = 2206951,
                            EstadoId = 22,
                            Nome = "Novo Santo Antônio"
                        },
                        new
                        {
                            Id = 2207009,
                            EstadoId = 22,
                            Nome = "Oeiras"
                        },
                        new
                        {
                            Id = 2207108,
                            EstadoId = 22,
                            Nome = "Olho DÁgua do Piauí"
                        },
                        new
                        {
                            Id = 2207207,
                            EstadoId = 22,
                            Nome = "Padre Marcos"
                        },
                        new
                        {
                            Id = 2207306,
                            EstadoId = 22,
                            Nome = "Paes Landim"
                        },
                        new
                        {
                            Id = 2207355,
                            EstadoId = 22,
                            Nome = "Pajeú do Piauí"
                        },
                        new
                        {
                            Id = 2207405,
                            EstadoId = 22,
                            Nome = "Palmeira do Piauí"
                        },
                        new
                        {
                            Id = 2207504,
                            EstadoId = 22,
                            Nome = "Palmeirais"
                        },
                        new
                        {
                            Id = 2207553,
                            EstadoId = 22,
                            Nome = "Paquetá"
                        },
                        new
                        {
                            Id = 2207603,
                            EstadoId = 22,
                            Nome = "Parnaguá"
                        },
                        new
                        {
                            Id = 2207702,
                            EstadoId = 22,
                            Nome = "Parnaíba"
                        },
                        new
                        {
                            Id = 2207751,
                            EstadoId = 22,
                            Nome = "Passagem Franca do Piauí"
                        },
                        new
                        {
                            Id = 2207777,
                            EstadoId = 22,
                            Nome = "Patos do Piauí"
                        },
                        new
                        {
                            Id = 2207793,
                            EstadoId = 22,
                            Nome = "Pau DArco do Piauí"
                        },
                        new
                        {
                            Id = 2207801,
                            EstadoId = 22,
                            Nome = "Paulistana"
                        },
                        new
                        {
                            Id = 2207850,
                            EstadoId = 22,
                            Nome = "Pavussu"
                        },
                        new
                        {
                            Id = 2207900,
                            EstadoId = 22,
                            Nome = "Pedro II"
                        },
                        new
                        {
                            Id = 2207934,
                            EstadoId = 22,
                            Nome = "Pedro Laurentino"
                        },
                        new
                        {
                            Id = 2208007,
                            EstadoId = 22,
                            Nome = "Picos"
                        },
                        new
                        {
                            Id = 2208106,
                            EstadoId = 22,
                            Nome = "Pimenteiras"
                        },
                        new
                        {
                            Id = 2208205,
                            EstadoId = 22,
                            Nome = "Pio IX"
                        },
                        new
                        {
                            Id = 2208304,
                            EstadoId = 22,
                            Nome = "Piracuruca"
                        },
                        new
                        {
                            Id = 2208403,
                            EstadoId = 22,
                            Nome = "Piripiri"
                        },
                        new
                        {
                            Id = 2208502,
                            EstadoId = 22,
                            Nome = "Porto"
                        },
                        new
                        {
                            Id = 2208551,
                            EstadoId = 22,
                            Nome = "Porto Alegre do Piauí"
                        },
                        new
                        {
                            Id = 2208601,
                            EstadoId = 22,
                            Nome = "Prata do Piauí"
                        },
                        new
                        {
                            Id = 2208650,
                            EstadoId = 22,
                            Nome = "Queimada Nova"
                        },
                        new
                        {
                            Id = 2208700,
                            EstadoId = 22,
                            Nome = "Redenção do Gurguéia"
                        },
                        new
                        {
                            Id = 2208809,
                            EstadoId = 22,
                            Nome = "Regeneração"
                        },
                        new
                        {
                            Id = 2208858,
                            EstadoId = 22,
                            Nome = "Riacho Frio"
                        },
                        new
                        {
                            Id = 2208874,
                            EstadoId = 22,
                            Nome = "Ribeira do Piauí"
                        },
                        new
                        {
                            Id = 2208908,
                            EstadoId = 22,
                            Nome = "Ribeiro Gonçalves"
                        },
                        new
                        {
                            Id = 2209005,
                            EstadoId = 22,
                            Nome = "Rio Grande do Piauí"
                        },
                        new
                        {
                            Id = 2209104,
                            EstadoId = 22,
                            Nome = "Santa Cruz do Piauí"
                        },
                        new
                        {
                            Id = 2209153,
                            EstadoId = 22,
                            Nome = "Santa Cruz dos Milagres"
                        },
                        new
                        {
                            Id = 2209203,
                            EstadoId = 22,
                            Nome = "Santa Filomena"
                        },
                        new
                        {
                            Id = 2209302,
                            EstadoId = 22,
                            Nome = "Santa Luz"
                        },
                        new
                        {
                            Id = 2209377,
                            EstadoId = 22,
                            Nome = "Santa Rosa do Piauí"
                        },
                        new
                        {
                            Id = 2209351,
                            EstadoId = 22,
                            Nome = "Santana do Piauí"
                        },
                        new
                        {
                            Id = 2209401,
                            EstadoId = 22,
                            Nome = "Santo Antônio de Lisboa"
                        },
                        new
                        {
                            Id = 2209450,
                            EstadoId = 22,
                            Nome = "Santo Antônio dos Milagres"
                        },
                        new
                        {
                            Id = 2209500,
                            EstadoId = 22,
                            Nome = "Santo Inácio do Piauí"
                        },
                        new
                        {
                            Id = 2209559,
                            EstadoId = 22,
                            Nome = "São Braz do Piauí"
                        },
                        new
                        {
                            Id = 2209609,
                            EstadoId = 22,
                            Nome = "São Félix do Piauí"
                        },
                        new
                        {
                            Id = 2209658,
                            EstadoId = 22,
                            Nome = "São Francisco de Assis do Piauí"
                        },
                        new
                        {
                            Id = 2209708,
                            EstadoId = 22,
                            Nome = "São Francisco do Piauí"
                        },
                        new
                        {
                            Id = 2209757,
                            EstadoId = 22,
                            Nome = "São Gonçalo do Gurguéia"
                        },
                        new
                        {
                            Id = 2209807,
                            EstadoId = 22,
                            Nome = "São Gonçalo do Piauí"
                        },
                        new
                        {
                            Id = 2209856,
                            EstadoId = 22,
                            Nome = "São João da Canabrava"
                        },
                        new
                        {
                            Id = 2209872,
                            EstadoId = 22,
                            Nome = "São João da Fronteira"
                        },
                        new
                        {
                            Id = 2209906,
                            EstadoId = 22,
                            Nome = "São João da Serra"
                        },
                        new
                        {
                            Id = 2209955,
                            EstadoId = 22,
                            Nome = "São João da Varjota"
                        },
                        new
                        {
                            Id = 2209971,
                            EstadoId = 22,
                            Nome = "São João do Arraial"
                        },
                        new
                        {
                            Id = 2210003,
                            EstadoId = 22,
                            Nome = "São João do Piauí"
                        },
                        new
                        {
                            Id = 2210052,
                            EstadoId = 22,
                            Nome = "São José do Divino"
                        },
                        new
                        {
                            Id = 2210102,
                            EstadoId = 22,
                            Nome = "São José do Peixe"
                        },
                        new
                        {
                            Id = 2210201,
                            EstadoId = 22,
                            Nome = "São José do Piauí"
                        },
                        new
                        {
                            Id = 2210300,
                            EstadoId = 22,
                            Nome = "São Julião"
                        },
                        new
                        {
                            Id = 2210359,
                            EstadoId = 22,
                            Nome = "São Lourenço do Piauí"
                        },
                        new
                        {
                            Id = 2210375,
                            EstadoId = 22,
                            Nome = "São Luis do Piauí"
                        },
                        new
                        {
                            Id = 2210383,
                            EstadoId = 22,
                            Nome = "São Miguel da Baixa Grande"
                        },
                        new
                        {
                            Id = 2210391,
                            EstadoId = 22,
                            Nome = "São Miguel do Fidalgo"
                        },
                        new
                        {
                            Id = 2210409,
                            EstadoId = 22,
                            Nome = "São Miguel do Tapuio"
                        },
                        new
                        {
                            Id = 2210508,
                            EstadoId = 22,
                            Nome = "São Pedro do Piauí"
                        },
                        new
                        {
                            Id = 2210607,
                            EstadoId = 22,
                            Nome = "São Raimundo Nonato"
                        },
                        new
                        {
                            Id = 2210623,
                            EstadoId = 22,
                            Nome = "Sebastião Barros"
                        },
                        new
                        {
                            Id = 2210631,
                            EstadoId = 22,
                            Nome = "Sebastião Leal"
                        },
                        new
                        {
                            Id = 2210656,
                            EstadoId = 22,
                            Nome = "Sigefredo Pacheco"
                        },
                        new
                        {
                            Id = 2210706,
                            EstadoId = 22,
                            Nome = "Simões"
                        },
                        new
                        {
                            Id = 2210805,
                            EstadoId = 22,
                            Nome = "Simplício Mendes"
                        },
                        new
                        {
                            Id = 2210904,
                            EstadoId = 22,
                            Nome = "Socorro do Piauí"
                        },
                        new
                        {
                            Id = 2210938,
                            EstadoId = 22,
                            Nome = "Sussuapara"
                        },
                        new
                        {
                            Id = 2210953,
                            EstadoId = 22,
                            Nome = "Tamboril do Piauí"
                        },
                        new
                        {
                            Id = 2210979,
                            EstadoId = 22,
                            Nome = "Tanque do Piauí"
                        },
                        new
                        {
                            Id = 2211001,
                            EstadoId = 22,
                            Nome = "Teresina"
                        },
                        new
                        {
                            Id = 2211100,
                            EstadoId = 22,
                            Nome = "União"
                        },
                        new
                        {
                            Id = 2211209,
                            EstadoId = 22,
                            Nome = "Uruçuí"
                        },
                        new
                        {
                            Id = 2211308,
                            EstadoId = 22,
                            Nome = "Valença do Piauí"
                        },
                        new
                        {
                            Id = 2211357,
                            EstadoId = 22,
                            Nome = "Várzea Branca"
                        },
                        new
                        {
                            Id = 2211407,
                            EstadoId = 22,
                            Nome = "Várzea Grande"
                        },
                        new
                        {
                            Id = 2211506,
                            EstadoId = 22,
                            Nome = "Vera Mendes"
                        },
                        new
                        {
                            Id = 2211605,
                            EstadoId = 22,
                            Nome = "Vila Nova do Piauí"
                        },
                        new
                        {
                            Id = 2211704,
                            EstadoId = 22,
                            Nome = "Wall Ferraz"
                        },
                        new
                        {
                            Id = 2300101,
                            EstadoId = 23,
                            Nome = "Abaiara"
                        },
                        new
                        {
                            Id = 2300150,
                            EstadoId = 23,
                            Nome = "Acarape"
                        },
                        new
                        {
                            Id = 2300200,
                            EstadoId = 23,
                            Nome = "Acaraú"
                        },
                        new
                        {
                            Id = 2300309,
                            EstadoId = 23,
                            Nome = "Acopiara"
                        },
                        new
                        {
                            Id = 2300408,
                            EstadoId = 23,
                            Nome = "Aiuaba"
                        },
                        new
                        {
                            Id = 2300507,
                            EstadoId = 23,
                            Nome = "Alcântaras"
                        },
                        new
                        {
                            Id = 2300606,
                            EstadoId = 23,
                            Nome = "Altaneira"
                        },
                        new
                        {
                            Id = 2300705,
                            EstadoId = 23,
                            Nome = "Alto Santo"
                        },
                        new
                        {
                            Id = 2300754,
                            EstadoId = 23,
                            Nome = "Amontada"
                        },
                        new
                        {
                            Id = 2300804,
                            EstadoId = 23,
                            Nome = "Antonina do Norte"
                        },
                        new
                        {
                            Id = 2300903,
                            EstadoId = 23,
                            Nome = "Apuiarés"
                        },
                        new
                        {
                            Id = 2301000,
                            EstadoId = 23,
                            Nome = "Aquiraz"
                        },
                        new
                        {
                            Id = 2301109,
                            EstadoId = 23,
                            Nome = "Aracati"
                        },
                        new
                        {
                            Id = 2301208,
                            EstadoId = 23,
                            Nome = "Aracoiaba"
                        },
                        new
                        {
                            Id = 2301257,
                            EstadoId = 23,
                            Nome = "Ararendá"
                        },
                        new
                        {
                            Id = 2301307,
                            EstadoId = 23,
                            Nome = "Araripe"
                        },
                        new
                        {
                            Id = 2301406,
                            EstadoId = 23,
                            Nome = "Aratuba"
                        },
                        new
                        {
                            Id = 2301505,
                            EstadoId = 23,
                            Nome = "Arneiroz"
                        },
                        new
                        {
                            Id = 2301604,
                            EstadoId = 23,
                            Nome = "Assaré"
                        },
                        new
                        {
                            Id = 2301703,
                            EstadoId = 23,
                            Nome = "Aurora"
                        },
                        new
                        {
                            Id = 2301802,
                            EstadoId = 23,
                            Nome = "Baixio"
                        },
                        new
                        {
                            Id = 2301851,
                            EstadoId = 23,
                            Nome = "Banabuiú"
                        },
                        new
                        {
                            Id = 2301901,
                            EstadoId = 23,
                            Nome = "Barbalha"
                        },
                        new
                        {
                            Id = 2301950,
                            EstadoId = 23,
                            Nome = "Barreira"
                        },
                        new
                        {
                            Id = 2302008,
                            EstadoId = 23,
                            Nome = "Barro"
                        },
                        new
                        {
                            Id = 2302057,
                            EstadoId = 23,
                            Nome = "Barroquinha"
                        },
                        new
                        {
                            Id = 2302107,
                            EstadoId = 23,
                            Nome = "Baturité"
                        },
                        new
                        {
                            Id = 2302206,
                            EstadoId = 23,
                            Nome = "Beberibe"
                        },
                        new
                        {
                            Id = 2302305,
                            EstadoId = 23,
                            Nome = "Bela Cruz"
                        },
                        new
                        {
                            Id = 2302404,
                            EstadoId = 23,
                            Nome = "Boa Viagem"
                        },
                        new
                        {
                            Id = 2302503,
                            EstadoId = 23,
                            Nome = "Brejo Santo"
                        },
                        new
                        {
                            Id = 2302602,
                            EstadoId = 23,
                            Nome = "Camocim"
                        },
                        new
                        {
                            Id = 2302701,
                            EstadoId = 23,
                            Nome = "Campos Sales"
                        },
                        new
                        {
                            Id = 2302800,
                            EstadoId = 23,
                            Nome = "Canindé"
                        },
                        new
                        {
                            Id = 2302909,
                            EstadoId = 23,
                            Nome = "Capistrano"
                        },
                        new
                        {
                            Id = 2303006,
                            EstadoId = 23,
                            Nome = "Caridade"
                        },
                        new
                        {
                            Id = 2303105,
                            EstadoId = 23,
                            Nome = "Cariré"
                        },
                        new
                        {
                            Id = 2303204,
                            EstadoId = 23,
                            Nome = "Caririaçu"
                        },
                        new
                        {
                            Id = 2303303,
                            EstadoId = 23,
                            Nome = "Cariús"
                        },
                        new
                        {
                            Id = 2303402,
                            EstadoId = 23,
                            Nome = "Carnaubal"
                        },
                        new
                        {
                            Id = 2303501,
                            EstadoId = 23,
                            Nome = "Cascavel"
                        },
                        new
                        {
                            Id = 2303600,
                            EstadoId = 23,
                            Nome = "Catarina"
                        },
                        new
                        {
                            Id = 2303659,
                            EstadoId = 23,
                            Nome = "Catunda"
                        },
                        new
                        {
                            Id = 2303709,
                            EstadoId = 23,
                            Nome = "Caucaia"
                        },
                        new
                        {
                            Id = 2303808,
                            EstadoId = 23,
                            Nome = "Cedro"
                        },
                        new
                        {
                            Id = 2303907,
                            EstadoId = 23,
                            Nome = "Chaval"
                        },
                        new
                        {
                            Id = 2303931,
                            EstadoId = 23,
                            Nome = "Choró"
                        },
                        new
                        {
                            Id = 2303956,
                            EstadoId = 23,
                            Nome = "Chorozinho"
                        },
                        new
                        {
                            Id = 2304004,
                            EstadoId = 23,
                            Nome = "Coreaú"
                        },
                        new
                        {
                            Id = 2304103,
                            EstadoId = 23,
                            Nome = "Crateús"
                        },
                        new
                        {
                            Id = 2304202,
                            EstadoId = 23,
                            Nome = "Crato"
                        },
                        new
                        {
                            Id = 2304236,
                            EstadoId = 23,
                            Nome = "Croatá"
                        },
                        new
                        {
                            Id = 2304251,
                            EstadoId = 23,
                            Nome = "Cruz"
                        },
                        new
                        {
                            Id = 2304269,
                            EstadoId = 23,
                            Nome = "Deputado Irapuan Pinheiro"
                        },
                        new
                        {
                            Id = 2304277,
                            EstadoId = 23,
                            Nome = "Ererê"
                        },
                        new
                        {
                            Id = 2304285,
                            EstadoId = 23,
                            Nome = "Eusébio"
                        },
                        new
                        {
                            Id = 2304301,
                            EstadoId = 23,
                            Nome = "Farias Brito"
                        },
                        new
                        {
                            Id = 2304350,
                            EstadoId = 23,
                            Nome = "Forquilha"
                        },
                        new
                        {
                            Id = 2304400,
                            EstadoId = 23,
                            Nome = "Fortaleza"
                        },
                        new
                        {
                            Id = 2304459,
                            EstadoId = 23,
                            Nome = "Fortim"
                        },
                        new
                        {
                            Id = 2304509,
                            EstadoId = 23,
                            Nome = "Frecheirinha"
                        },
                        new
                        {
                            Id = 2304608,
                            EstadoId = 23,
                            Nome = "General Sampaio"
                        },
                        new
                        {
                            Id = 2304657,
                            EstadoId = 23,
                            Nome = "Graça"
                        },
                        new
                        {
                            Id = 2304707,
                            EstadoId = 23,
                            Nome = "Granja"
                        },
                        new
                        {
                            Id = 2304806,
                            EstadoId = 23,
                            Nome = "Granjeiro"
                        },
                        new
                        {
                            Id = 2304905,
                            EstadoId = 23,
                            Nome = "Groaíras"
                        },
                        new
                        {
                            Id = 2304954,
                            EstadoId = 23,
                            Nome = "Guaiúba"
                        },
                        new
                        {
                            Id = 2305001,
                            EstadoId = 23,
                            Nome = "Guaraciaba do Norte"
                        },
                        new
                        {
                            Id = 2305100,
                            EstadoId = 23,
                            Nome = "Guaramiranga"
                        },
                        new
                        {
                            Id = 2305209,
                            EstadoId = 23,
                            Nome = "Hidrolândia"
                        },
                        new
                        {
                            Id = 2305233,
                            EstadoId = 23,
                            Nome = "Horizonte"
                        },
                        new
                        {
                            Id = 2305266,
                            EstadoId = 23,
                            Nome = "Ibaretama"
                        },
                        new
                        {
                            Id = 2305308,
                            EstadoId = 23,
                            Nome = "Ibiapina"
                        },
                        new
                        {
                            Id = 2305332,
                            EstadoId = 23,
                            Nome = "Ibicuitinga"
                        },
                        new
                        {
                            Id = 2305357,
                            EstadoId = 23,
                            Nome = "Icapuí"
                        },
                        new
                        {
                            Id = 2305407,
                            EstadoId = 23,
                            Nome = "Icó"
                        },
                        new
                        {
                            Id = 2305506,
                            EstadoId = 23,
                            Nome = "Iguatu"
                        },
                        new
                        {
                            Id = 2305605,
                            EstadoId = 23,
                            Nome = "Independência"
                        },
                        new
                        {
                            Id = 2305654,
                            EstadoId = 23,
                            Nome = "Ipaporanga"
                        },
                        new
                        {
                            Id = 2305704,
                            EstadoId = 23,
                            Nome = "Ipaumirim"
                        },
                        new
                        {
                            Id = 2305803,
                            EstadoId = 23,
                            Nome = "Ipu"
                        },
                        new
                        {
                            Id = 2305902,
                            EstadoId = 23,
                            Nome = "Ipueiras"
                        },
                        new
                        {
                            Id = 2306009,
                            EstadoId = 23,
                            Nome = "Iracema"
                        },
                        new
                        {
                            Id = 2306108,
                            EstadoId = 23,
                            Nome = "Irauçuba"
                        },
                        new
                        {
                            Id = 2306207,
                            EstadoId = 23,
                            Nome = "Itaiçaba"
                        },
                        new
                        {
                            Id = 2306256,
                            EstadoId = 23,
                            Nome = "Itaitinga"
                        },
                        new
                        {
                            Id = 2306306,
                            EstadoId = 23,
                            Nome = "Itapajé**"
                        },
                        new
                        {
                            Id = 2306405,
                            EstadoId = 23,
                            Nome = "Itapipoca"
                        },
                        new
                        {
                            Id = 2306504,
                            EstadoId = 23,
                            Nome = "Itapiúna"
                        },
                        new
                        {
                            Id = 2306553,
                            EstadoId = 23,
                            Nome = "Itarema"
                        },
                        new
                        {
                            Id = 2306603,
                            EstadoId = 23,
                            Nome = "Itatira"
                        },
                        new
                        {
                            Id = 2306702,
                            EstadoId = 23,
                            Nome = "Jaguaretama"
                        },
                        new
                        {
                            Id = 2306801,
                            EstadoId = 23,
                            Nome = "Jaguaribara"
                        },
                        new
                        {
                            Id = 2306900,
                            EstadoId = 23,
                            Nome = "Jaguaribe"
                        },
                        new
                        {
                            Id = 2307007,
                            EstadoId = 23,
                            Nome = "Jaguaruana"
                        },
                        new
                        {
                            Id = 2307106,
                            EstadoId = 23,
                            Nome = "Jardim"
                        },
                        new
                        {
                            Id = 2307205,
                            EstadoId = 23,
                            Nome = "Jati"
                        },
                        new
                        {
                            Id = 2307254,
                            EstadoId = 23,
                            Nome = "Jijoca de Jericoacoara"
                        },
                        new
                        {
                            Id = 2307304,
                            EstadoId = 23,
                            Nome = "Juazeiro do Norte"
                        },
                        new
                        {
                            Id = 2307403,
                            EstadoId = 23,
                            Nome = "Jucás"
                        },
                        new
                        {
                            Id = 2307502,
                            EstadoId = 23,
                            Nome = "Lavras da Mangabeira"
                        },
                        new
                        {
                            Id = 2307601,
                            EstadoId = 23,
                            Nome = "Limoeiro do Norte"
                        },
                        new
                        {
                            Id = 2307635,
                            EstadoId = 23,
                            Nome = "Madalena"
                        },
                        new
                        {
                            Id = 2307650,
                            EstadoId = 23,
                            Nome = "Maracanaú"
                        },
                        new
                        {
                            Id = 2307700,
                            EstadoId = 23,
                            Nome = "Maranguape"
                        },
                        new
                        {
                            Id = 2307809,
                            EstadoId = 23,
                            Nome = "Marco"
                        },
                        new
                        {
                            Id = 2307908,
                            EstadoId = 23,
                            Nome = "Martinópole"
                        },
                        new
                        {
                            Id = 2308005,
                            EstadoId = 23,
                            Nome = "Massapê"
                        },
                        new
                        {
                            Id = 2308104,
                            EstadoId = 23,
                            Nome = "Mauriti"
                        },
                        new
                        {
                            Id = 2308203,
                            EstadoId = 23,
                            Nome = "Meruoca"
                        },
                        new
                        {
                            Id = 2308302,
                            EstadoId = 23,
                            Nome = "Milagres"
                        },
                        new
                        {
                            Id = 2308351,
                            EstadoId = 23,
                            Nome = "Milhã"
                        },
                        new
                        {
                            Id = 2308377,
                            EstadoId = 23,
                            Nome = "Miraíma"
                        },
                        new
                        {
                            Id = 2308401,
                            EstadoId = 23,
                            Nome = "Missão Velha"
                        },
                        new
                        {
                            Id = 2308500,
                            EstadoId = 23,
                            Nome = "Mombaça"
                        },
                        new
                        {
                            Id = 2308609,
                            EstadoId = 23,
                            Nome = "Monsenhor Tabosa"
                        },
                        new
                        {
                            Id = 2308708,
                            EstadoId = 23,
                            Nome = "Morada Nova"
                        },
                        new
                        {
                            Id = 2308807,
                            EstadoId = 23,
                            Nome = "Moraújo"
                        },
                        new
                        {
                            Id = 2308906,
                            EstadoId = 23,
                            Nome = "Morrinhos"
                        },
                        new
                        {
                            Id = 2309003,
                            EstadoId = 23,
                            Nome = "Mucambo"
                        },
                        new
                        {
                            Id = 2309102,
                            EstadoId = 23,
                            Nome = "Mulungu"
                        },
                        new
                        {
                            Id = 2309201,
                            EstadoId = 23,
                            Nome = "Nova Olinda"
                        },
                        new
                        {
                            Id = 2309300,
                            EstadoId = 23,
                            Nome = "Nova Russas"
                        },
                        new
                        {
                            Id = 2309409,
                            EstadoId = 23,
                            Nome = "Novo Oriente"
                        },
                        new
                        {
                            Id = 2309458,
                            EstadoId = 23,
                            Nome = "Ocara"
                        },
                        new
                        {
                            Id = 2309508,
                            EstadoId = 23,
                            Nome = "Orós"
                        },
                        new
                        {
                            Id = 2309607,
                            EstadoId = 23,
                            Nome = "Pacajus"
                        },
                        new
                        {
                            Id = 2309706,
                            EstadoId = 23,
                            Nome = "Pacatuba"
                        },
                        new
                        {
                            Id = 2309805,
                            EstadoId = 23,
                            Nome = "Pacoti"
                        },
                        new
                        {
                            Id = 2309904,
                            EstadoId = 23,
                            Nome = "Pacujá"
                        },
                        new
                        {
                            Id = 2310001,
                            EstadoId = 23,
                            Nome = "Palhano"
                        },
                        new
                        {
                            Id = 2310100,
                            EstadoId = 23,
                            Nome = "Palmácia"
                        },
                        new
                        {
                            Id = 2310209,
                            EstadoId = 23,
                            Nome = "Paracuru"
                        },
                        new
                        {
                            Id = 2310258,
                            EstadoId = 23,
                            Nome = "Paraipaba"
                        },
                        new
                        {
                            Id = 2310308,
                            EstadoId = 23,
                            Nome = "Parambu"
                        },
                        new
                        {
                            Id = 2310407,
                            EstadoId = 23,
                            Nome = "Paramoti"
                        },
                        new
                        {
                            Id = 2310506,
                            EstadoId = 23,
                            Nome = "Pedra Branca"
                        },
                        new
                        {
                            Id = 2310605,
                            EstadoId = 23,
                            Nome = "Penaforte"
                        },
                        new
                        {
                            Id = 2310704,
                            EstadoId = 23,
                            Nome = "Pentecoste"
                        },
                        new
                        {
                            Id = 2310803,
                            EstadoId = 23,
                            Nome = "Pereiro"
                        },
                        new
                        {
                            Id = 2310852,
                            EstadoId = 23,
                            Nome = "Pindoretama"
                        },
                        new
                        {
                            Id = 2310902,
                            EstadoId = 23,
                            Nome = "Piquet Carneiro"
                        },
                        new
                        {
                            Id = 2310951,
                            EstadoId = 23,
                            Nome = "Pires Ferreira"
                        },
                        new
                        {
                            Id = 2311009,
                            EstadoId = 23,
                            Nome = "Poranga"
                        },
                        new
                        {
                            Id = 2311108,
                            EstadoId = 23,
                            Nome = "Porteiras"
                        },
                        new
                        {
                            Id = 2311207,
                            EstadoId = 23,
                            Nome = "Potengi"
                        },
                        new
                        {
                            Id = 2311231,
                            EstadoId = 23,
                            Nome = "Potiretama"
                        },
                        new
                        {
                            Id = 2311264,
                            EstadoId = 23,
                            Nome = "Quiterianópolis"
                        },
                        new
                        {
                            Id = 2311306,
                            EstadoId = 23,
                            Nome = "Quixadá"
                        },
                        new
                        {
                            Id = 2311355,
                            EstadoId = 23,
                            Nome = "Quixelô"
                        },
                        new
                        {
                            Id = 2311405,
                            EstadoId = 23,
                            Nome = "Quixeramobim"
                        },
                        new
                        {
                            Id = 2311504,
                            EstadoId = 23,
                            Nome = "Quixeré"
                        },
                        new
                        {
                            Id = 2311603,
                            EstadoId = 23,
                            Nome = "Redenção"
                        },
                        new
                        {
                            Id = 2311702,
                            EstadoId = 23,
                            Nome = "Reriutaba"
                        },
                        new
                        {
                            Id = 2311801,
                            EstadoId = 23,
                            Nome = "Russas"
                        },
                        new
                        {
                            Id = 2311900,
                            EstadoId = 23,
                            Nome = "Saboeiro"
                        },
                        new
                        {
                            Id = 2311959,
                            EstadoId = 23,
                            Nome = "Salitre"
                        },
                        new
                        {
                            Id = 2312205,
                            EstadoId = 23,
                            Nome = "Santa Quitéria"
                        },
                        new
                        {
                            Id = 2312007,
                            EstadoId = 23,
                            Nome = "Santana do Acaraú"
                        },
                        new
                        {
                            Id = 2312106,
                            EstadoId = 23,
                            Nome = "Santana do Cariri"
                        },
                        new
                        {
                            Id = 2312304,
                            EstadoId = 23,
                            Nome = "São Benedito"
                        },
                        new
                        {
                            Id = 2312403,
                            EstadoId = 23,
                            Nome = "São Gonçalo do Amarante"
                        },
                        new
                        {
                            Id = 2312502,
                            EstadoId = 23,
                            Nome = "São João do Jaguaribe"
                        },
                        new
                        {
                            Id = 2312601,
                            EstadoId = 23,
                            Nome = "São Luís do Curu"
                        },
                        new
                        {
                            Id = 2312700,
                            EstadoId = 23,
                            Nome = "Senador Pompeu"
                        },
                        new
                        {
                            Id = 2312809,
                            EstadoId = 23,
                            Nome = "Senador Sá"
                        },
                        new
                        {
                            Id = 2312908,
                            EstadoId = 23,
                            Nome = "Sobral"
                        },
                        new
                        {
                            Id = 2313005,
                            EstadoId = 23,
                            Nome = "Solonópole"
                        },
                        new
                        {
                            Id = 2313104,
                            EstadoId = 23,
                            Nome = "Tabuleiro do Norte"
                        },
                        new
                        {
                            Id = 2313203,
                            EstadoId = 23,
                            Nome = "Tamboril"
                        },
                        new
                        {
                            Id = 2313252,
                            EstadoId = 23,
                            Nome = "Tarrafas"
                        },
                        new
                        {
                            Id = 2313302,
                            EstadoId = 23,
                            Nome = "Tauá"
                        },
                        new
                        {
                            Id = 2313351,
                            EstadoId = 23,
                            Nome = "Tejuçuoca"
                        },
                        new
                        {
                            Id = 2313401,
                            EstadoId = 23,
                            Nome = "Tianguá"
                        },
                        new
                        {
                            Id = 2313500,
                            EstadoId = 23,
                            Nome = "Trairi"
                        },
                        new
                        {
                            Id = 2313559,
                            EstadoId = 23,
                            Nome = "Tururu"
                        },
                        new
                        {
                            Id = 2313609,
                            EstadoId = 23,
                            Nome = "Ubajara"
                        },
                        new
                        {
                            Id = 2313708,
                            EstadoId = 23,
                            Nome = "Umari"
                        },
                        new
                        {
                            Id = 2313757,
                            EstadoId = 23,
                            Nome = "Umirim"
                        },
                        new
                        {
                            Id = 2313807,
                            EstadoId = 23,
                            Nome = "Uruburetama"
                        },
                        new
                        {
                            Id = 2313906,
                            EstadoId = 23,
                            Nome = "Uruoca"
                        },
                        new
                        {
                            Id = 2313955,
                            EstadoId = 23,
                            Nome = "Varjota"
                        },
                        new
                        {
                            Id = 2314003,
                            EstadoId = 23,
                            Nome = "Várzea Alegre"
                        },
                        new
                        {
                            Id = 2314102,
                            EstadoId = 23,
                            Nome = "Viçosa do Ceará"
                        },
                        new
                        {
                            Id = 2400109,
                            EstadoId = 24,
                            Nome = "Acari"
                        },
                        new
                        {
                            Id = 2400208,
                            EstadoId = 24,
                            Nome = "Açu"
                        },
                        new
                        {
                            Id = 2400307,
                            EstadoId = 24,
                            Nome = "Afonso Bezerra"
                        },
                        new
                        {
                            Id = 2400406,
                            EstadoId = 24,
                            Nome = "Água Nova"
                        },
                        new
                        {
                            Id = 2400505,
                            EstadoId = 24,
                            Nome = "Alexandria"
                        },
                        new
                        {
                            Id = 2400604,
                            EstadoId = 24,
                            Nome = "Almino Afonso"
                        },
                        new
                        {
                            Id = 2400703,
                            EstadoId = 24,
                            Nome = "Alto do Rodrigues"
                        },
                        new
                        {
                            Id = 2400802,
                            EstadoId = 24,
                            Nome = "Angicos"
                        },
                        new
                        {
                            Id = 2400901,
                            EstadoId = 24,
                            Nome = "Antônio Martins"
                        },
                        new
                        {
                            Id = 2401008,
                            EstadoId = 24,
                            Nome = "Apodi"
                        },
                        new
                        {
                            Id = 2401107,
                            EstadoId = 24,
                            Nome = "Areia Branca"
                        },
                        new
                        {
                            Id = 2401206,
                            EstadoId = 24,
                            Nome = "Arês"
                        },
                        new
                        {
                            Id = 2401305,
                            EstadoId = 24,
                            Nome = "Augusto Severo"
                        },
                        new
                        {
                            Id = 2401404,
                            EstadoId = 24,
                            Nome = "Baía Formosa"
                        },
                        new
                        {
                            Id = 2401453,
                            EstadoId = 24,
                            Nome = "Baraúna"
                        },
                        new
                        {
                            Id = 2401503,
                            EstadoId = 24,
                            Nome = "Barcelona"
                        },
                        new
                        {
                            Id = 2401602,
                            EstadoId = 24,
                            Nome = "Bento Fernandes"
                        },
                        new
                        {
                            Id = 2401651,
                            EstadoId = 24,
                            Nome = "Bodó"
                        },
                        new
                        {
                            Id = 2401701,
                            EstadoId = 24,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            Id = 2401800,
                            EstadoId = 24,
                            Nome = "Brejinho"
                        },
                        new
                        {
                            Id = 2401859,
                            EstadoId = 24,
                            Nome = "Caiçara do Norte"
                        },
                        new
                        {
                            Id = 2401909,
                            EstadoId = 24,
                            Nome = "Caiçara do Rio do Vento"
                        },
                        new
                        {
                            Id = 2402006,
                            EstadoId = 24,
                            Nome = "Caicó"
                        },
                        new
                        {
                            Id = 2402105,
                            EstadoId = 24,
                            Nome = "Campo Redondo"
                        },
                        new
                        {
                            Id = 2402204,
                            EstadoId = 24,
                            Nome = "Canguaretama"
                        },
                        new
                        {
                            Id = 2402303,
                            EstadoId = 24,
                            Nome = "Caraúbas"
                        },
                        new
                        {
                            Id = 2402402,
                            EstadoId = 24,
                            Nome = "Carnaúba dos Dantas"
                        },
                        new
                        {
                            Id = 2402501,
                            EstadoId = 24,
                            Nome = "Carnaubais"
                        },
                        new
                        {
                            Id = 2402600,
                            EstadoId = 24,
                            Nome = "Ceará-Mirim"
                        },
                        new
                        {
                            Id = 2402709,
                            EstadoId = 24,
                            Nome = "Cerro Corá"
                        },
                        new
                        {
                            Id = 2402808,
                            EstadoId = 24,
                            Nome = "Coronel Ezequiel"
                        },
                        new
                        {
                            Id = 2402907,
                            EstadoId = 24,
                            Nome = "Coronel João Pessoa"
                        },
                        new
                        {
                            Id = 2403004,
                            EstadoId = 24,
                            Nome = "Cruzeta"
                        },
                        new
                        {
                            Id = 2403103,
                            EstadoId = 24,
                            Nome = "Currais Novos"
                        },
                        new
                        {
                            Id = 2403202,
                            EstadoId = 24,
                            Nome = "Doutor Severiano"
                        },
                        new
                        {
                            Id = 2403301,
                            EstadoId = 24,
                            Nome = "Encanto"
                        },
                        new
                        {
                            Id = 2403400,
                            EstadoId = 24,
                            Nome = "Equador"
                        },
                        new
                        {
                            Id = 2403509,
                            EstadoId = 24,
                            Nome = "Espírito Santo"
                        },
                        new
                        {
                            Id = 2403608,
                            EstadoId = 24,
                            Nome = "Extremoz"
                        },
                        new
                        {
                            Id = 2403707,
                            EstadoId = 24,
                            Nome = "Felipe Guerra"
                        },
                        new
                        {
                            Id = 2403756,
                            EstadoId = 24,
                            Nome = "Fernando Pedroza"
                        },
                        new
                        {
                            Id = 2403806,
                            EstadoId = 24,
                            Nome = "Florânia"
                        },
                        new
                        {
                            Id = 2403905,
                            EstadoId = 24,
                            Nome = "Francisco Dantas"
                        },
                        new
                        {
                            Id = 2404002,
                            EstadoId = 24,
                            Nome = "Frutuoso Gomes"
                        },
                        new
                        {
                            Id = 2404101,
                            EstadoId = 24,
                            Nome = "Galinhos"
                        },
                        new
                        {
                            Id = 2404200,
                            EstadoId = 24,
                            Nome = "Goianinha"
                        },
                        new
                        {
                            Id = 2404309,
                            EstadoId = 24,
                            Nome = "Governador Dix-Sept Rosado"
                        },
                        new
                        {
                            Id = 2404408,
                            EstadoId = 24,
                            Nome = "Grossos"
                        },
                        new
                        {
                            Id = 2404507,
                            EstadoId = 24,
                            Nome = "Guamaré"
                        },
                        new
                        {
                            Id = 2404606,
                            EstadoId = 24,
                            Nome = "Ielmo Marinho"
                        },
                        new
                        {
                            Id = 2404705,
                            EstadoId = 24,
                            Nome = "Ipanguaçu"
                        },
                        new
                        {
                            Id = 2404804,
                            EstadoId = 24,
                            Nome = "Ipueira"
                        },
                        new
                        {
                            Id = 2404853,
                            EstadoId = 24,
                            Nome = "Itajá"
                        },
                        new
                        {
                            Id = 2404903,
                            EstadoId = 24,
                            Nome = "Itaú"
                        },
                        new
                        {
                            Id = 2405009,
                            EstadoId = 24,
                            Nome = "Jaçanã"
                        },
                        new
                        {
                            Id = 2405108,
                            EstadoId = 24,
                            Nome = "Jandaíra"
                        },
                        new
                        {
                            Id = 2405207,
                            EstadoId = 24,
                            Nome = "Janduís"
                        },
                        new
                        {
                            Id = 2405306,
                            EstadoId = 24,
                            Nome = "Januário Cicco"
                        },
                        new
                        {
                            Id = 2405405,
                            EstadoId = 24,
                            Nome = "Japi"
                        },
                        new
                        {
                            Id = 2405504,
                            EstadoId = 24,
                            Nome = "Jardim de Angicos"
                        },
                        new
                        {
                            Id = 2405603,
                            EstadoId = 24,
                            Nome = "Jardim de Piranhas"
                        },
                        new
                        {
                            Id = 2405702,
                            EstadoId = 24,
                            Nome = "Jardim do Seridó"
                        },
                        new
                        {
                            Id = 2405801,
                            EstadoId = 24,
                            Nome = "João Câmara"
                        },
                        new
                        {
                            Id = 2405900,
                            EstadoId = 24,
                            Nome = "João Dias"
                        },
                        new
                        {
                            Id = 2406007,
                            EstadoId = 24,
                            Nome = "José da Penha"
                        },
                        new
                        {
                            Id = 2406106,
                            EstadoId = 24,
                            Nome = "Jucurutu"
                        },
                        new
                        {
                            Id = 2406155,
                            EstadoId = 24,
                            Nome = "Jundiá"
                        },
                        new
                        {
                            Id = 2406205,
                            EstadoId = 24,
                            Nome = "Lagoa dAnta"
                        },
                        new
                        {
                            Id = 2406304,
                            EstadoId = 24,
                            Nome = "Lagoa de Pedras"
                        },
                        new
                        {
                            Id = 2406403,
                            EstadoId = 24,
                            Nome = "Lagoa de Velhos"
                        },
                        new
                        {
                            Id = 2406502,
                            EstadoId = 24,
                            Nome = "Lagoa Nova"
                        },
                        new
                        {
                            Id = 2406601,
                            EstadoId = 24,
                            Nome = "Lagoa Salgada"
                        },
                        new
                        {
                            Id = 2406700,
                            EstadoId = 24,
                            Nome = "Lajes"
                        },
                        new
                        {
                            Id = 2406809,
                            EstadoId = 24,
                            Nome = "Lajes Pintadas"
                        },
                        new
                        {
                            Id = 2406908,
                            EstadoId = 24,
                            Nome = "Lucrécia"
                        },
                        new
                        {
                            Id = 2407005,
                            EstadoId = 24,
                            Nome = "Luís Gomes"
                        },
                        new
                        {
                            Id = 2407104,
                            EstadoId = 24,
                            Nome = "Macaíba"
                        },
                        new
                        {
                            Id = 2407203,
                            EstadoId = 24,
                            Nome = "Macau"
                        },
                        new
                        {
                            Id = 2407252,
                            EstadoId = 24,
                            Nome = "Major Sales"
                        },
                        new
                        {
                            Id = 2407302,
                            EstadoId = 24,
                            Nome = "Marcelino Vieira"
                        },
                        new
                        {
                            Id = 2407401,
                            EstadoId = 24,
                            Nome = "Martins"
                        },
                        new
                        {
                            Id = 2407500,
                            EstadoId = 24,
                            Nome = "Maxaranguape"
                        },
                        new
                        {
                            Id = 2407609,
                            EstadoId = 24,
                            Nome = "Messias Targino"
                        },
                        new
                        {
                            Id = 2407708,
                            EstadoId = 24,
                            Nome = "Montanhas"
                        },
                        new
                        {
                            Id = 2407807,
                            EstadoId = 24,
                            Nome = "Monte Alegre"
                        },
                        new
                        {
                            Id = 2407906,
                            EstadoId = 24,
                            Nome = "Monte das Gameleiras"
                        },
                        new
                        {
                            Id = 2408003,
                            EstadoId = 24,
                            Nome = "Mossoró"
                        },
                        new
                        {
                            Id = 2408102,
                            EstadoId = 24,
                            Nome = "Natal"
                        },
                        new
                        {
                            Id = 2408201,
                            EstadoId = 24,
                            Nome = "Nísia Floresta"
                        },
                        new
                        {
                            Id = 2408300,
                            EstadoId = 24,
                            Nome = "Nova Cruz"
                        },
                        new
                        {
                            Id = 2408409,
                            EstadoId = 24,
                            Nome = "Olho-dÁgua do Borges"
                        },
                        new
                        {
                            Id = 2408508,
                            EstadoId = 24,
                            Nome = "Ouro Branco"
                        },
                        new
                        {
                            Id = 2408607,
                            EstadoId = 24,
                            Nome = "Paraná"
                        },
                        new
                        {
                            Id = 2408706,
                            EstadoId = 24,
                            Nome = "Paraú"
                        },
                        new
                        {
                            Id = 2408805,
                            EstadoId = 24,
                            Nome = "Parazinho"
                        },
                        new
                        {
                            Id = 2408904,
                            EstadoId = 24,
                            Nome = "Parelhas"
                        },
                        new
                        {
                            Id = 2403251,
                            EstadoId = 24,
                            Nome = "Parnamirim"
                        },
                        new
                        {
                            Id = 2409100,
                            EstadoId = 24,
                            Nome = "Passa e Fica"
                        },
                        new
                        {
                            Id = 2409209,
                            EstadoId = 24,
                            Nome = "Passagem"
                        },
                        new
                        {
                            Id = 2409308,
                            EstadoId = 24,
                            Nome = "Patu"
                        },
                        new
                        {
                            Id = 2409407,
                            EstadoId = 24,
                            Nome = "Pau dos Ferros"
                        },
                        new
                        {
                            Id = 2409506,
                            EstadoId = 24,
                            Nome = "Pedra Grande"
                        },
                        new
                        {
                            Id = 2409605,
                            EstadoId = 24,
                            Nome = "Pedra Preta"
                        },
                        new
                        {
                            Id = 2409704,
                            EstadoId = 24,
                            Nome = "Pedro Avelino"
                        },
                        new
                        {
                            Id = 2409803,
                            EstadoId = 24,
                            Nome = "Pedro Velho"
                        },
                        new
                        {
                            Id = 2409902,
                            EstadoId = 24,
                            Nome = "Pendências"
                        },
                        new
                        {
                            Id = 2410009,
                            EstadoId = 24,
                            Nome = "Pilões"
                        },
                        new
                        {
                            Id = 2410108,
                            EstadoId = 24,
                            Nome = "Poço Branco"
                        },
                        new
                        {
                            Id = 2410207,
                            EstadoId = 24,
                            Nome = "Portalegre"
                        },
                        new
                        {
                            Id = 2410256,
                            EstadoId = 24,
                            Nome = "Porto do Mangue"
                        },
                        new
                        {
                            Id = 2410306,
                            EstadoId = 24,
                            Nome = "Serra Caiada***"
                        },
                        new
                        {
                            Id = 2410405,
                            EstadoId = 24,
                            Nome = "Pureza"
                        },
                        new
                        {
                            Id = 2410504,
                            EstadoId = 24,
                            Nome = "Rafael Fernandes"
                        },
                        new
                        {
                            Id = 2410603,
                            EstadoId = 24,
                            Nome = "Rafael Godeiro"
                        },
                        new
                        {
                            Id = 2410702,
                            EstadoId = 24,
                            Nome = "Riacho da Cruz"
                        },
                        new
                        {
                            Id = 2410801,
                            EstadoId = 24,
                            Nome = "Riacho de Santana"
                        },
                        new
                        {
                            Id = 2410900,
                            EstadoId = 24,
                            Nome = "Riachuelo"
                        },
                        new
                        {
                            Id = 2408953,
                            EstadoId = 24,
                            Nome = "Rio do Fogo"
                        },
                        new
                        {
                            Id = 2411007,
                            EstadoId = 24,
                            Nome = "Rodolfo Fernandes"
                        },
                        new
                        {
                            Id = 2411106,
                            EstadoId = 24,
                            Nome = "Ruy Barbosa"
                        },
                        new
                        {
                            Id = 2411205,
                            EstadoId = 24,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            Id = 2409332,
                            EstadoId = 24,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            Id = 2411403,
                            EstadoId = 24,
                            Nome = "Santana do Matos"
                        },
                        new
                        {
                            Id = 2411429,
                            EstadoId = 24,
                            Nome = "Santana do Seridó"
                        },
                        new
                        {
                            Id = 2411502,
                            EstadoId = 24,
                            Nome = "Santo Antônio"
                        },
                        new
                        {
                            Id = 2411601,
                            EstadoId = 24,
                            Nome = "São Bento do Norte"
                        },
                        new
                        {
                            Id = 2411700,
                            EstadoId = 24,
                            Nome = "São Bento do Trairí"
                        },
                        new
                        {
                            Id = 2411809,
                            EstadoId = 24,
                            Nome = "São Fernando"
                        },
                        new
                        {
                            Id = 2411908,
                            EstadoId = 24,
                            Nome = "São Francisco do Oeste"
                        },
                        new
                        {
                            Id = 2412005,
                            EstadoId = 24,
                            Nome = "São Gonçalo do Amarante"
                        },
                        new
                        {
                            Id = 2412104,
                            EstadoId = 24,
                            Nome = "São João do Sabugi"
                        },
                        new
                        {
                            Id = 2412203,
                            EstadoId = 24,
                            Nome = "São José de Mipibu"
                        },
                        new
                        {
                            Id = 2412302,
                            EstadoId = 24,
                            Nome = "São José do Campestre"
                        },
                        new
                        {
                            Id = 2412401,
                            EstadoId = 24,
                            Nome = "São José do Seridó"
                        },
                        new
                        {
                            Id = 2412500,
                            EstadoId = 24,
                            Nome = "São Miguel"
                        },
                        new
                        {
                            Id = 2412559,
                            EstadoId = 24,
                            Nome = "São Miguel do Gostoso"
                        },
                        new
                        {
                            Id = 2412609,
                            EstadoId = 24,
                            Nome = "São Paulo do Potengi"
                        },
                        new
                        {
                            Id = 2412708,
                            EstadoId = 24,
                            Nome = "São Pedro"
                        },
                        new
                        {
                            Id = 2412807,
                            EstadoId = 24,
                            Nome = "São Rafael"
                        },
                        new
                        {
                            Id = 2412906,
                            EstadoId = 24,
                            Nome = "São Tomé"
                        },
                        new
                        {
                            Id = 2413003,
                            EstadoId = 24,
                            Nome = "São Vicente"
                        },
                        new
                        {
                            Id = 2413102,
                            EstadoId = 24,
                            Nome = "Senador Elói de Souza"
                        },
                        new
                        {
                            Id = 2413201,
                            EstadoId = 24,
                            Nome = "Senador Georgino Avelino"
                        },
                        new
                        {
                            Id = 2413300,
                            EstadoId = 24,
                            Nome = "Serra de São Bento"
                        },
                        new
                        {
                            Id = 2413359,
                            EstadoId = 24,
                            Nome = "Serra do Mel"
                        },
                        new
                        {
                            Id = 2413409,
                            EstadoId = 24,
                            Nome = "Serra Negra do Norte"
                        },
                        new
                        {
                            Id = 2413508,
                            EstadoId = 24,
                            Nome = "Serrinha"
                        },
                        new
                        {
                            Id = 2413557,
                            EstadoId = 24,
                            Nome = "Serrinha dos Pintos"
                        },
                        new
                        {
                            Id = 2413607,
                            EstadoId = 24,
                            Nome = "Severiano Melo"
                        },
                        new
                        {
                            Id = 2413706,
                            EstadoId = 24,
                            Nome = "Sítio Novo"
                        },
                        new
                        {
                            Id = 2413805,
                            EstadoId = 24,
                            Nome = "Taboleiro Grande"
                        },
                        new
                        {
                            Id = 2413904,
                            EstadoId = 24,
                            Nome = "Taipu"
                        },
                        new
                        {
                            Id = 2414001,
                            EstadoId = 24,
                            Nome = "Tangará"
                        },
                        new
                        {
                            Id = 2414100,
                            EstadoId = 24,
                            Nome = "Tenente Ananias"
                        },
                        new
                        {
                            Id = 2414159,
                            EstadoId = 24,
                            Nome = "Tenente Laurentino Cruz"
                        },
                        new
                        {
                            Id = 2411056,
                            EstadoId = 24,
                            Nome = "Tibau"
                        },
                        new
                        {
                            Id = 2414209,
                            EstadoId = 24,
                            Nome = "Tibau do Sul"
                        },
                        new
                        {
                            Id = 2414308,
                            EstadoId = 24,
                            Nome = "Timbaúba dos Batistas"
                        },
                        new
                        {
                            Id = 2414407,
                            EstadoId = 24,
                            Nome = "Touros"
                        },
                        new
                        {
                            Id = 2414456,
                            EstadoId = 24,
                            Nome = "Triunfo Potiguar"
                        },
                        new
                        {
                            Id = 2414506,
                            EstadoId = 24,
                            Nome = "Umarizal"
                        },
                        new
                        {
                            Id = 2414605,
                            EstadoId = 24,
                            Nome = "Upanema"
                        },
                        new
                        {
                            Id = 2414704,
                            EstadoId = 24,
                            Nome = "Várzea"
                        },
                        new
                        {
                            Id = 2414753,
                            EstadoId = 24,
                            Nome = "Venha-Ver"
                        },
                        new
                        {
                            Id = 2414803,
                            EstadoId = 24,
                            Nome = "Vera Cruz"
                        },
                        new
                        {
                            Id = 2414902,
                            EstadoId = 24,
                            Nome = "Viçosa"
                        },
                        new
                        {
                            Id = 2415008,
                            EstadoId = 24,
                            Nome = "Vila Flor"
                        },
                        new
                        {
                            Id = 2500106,
                            EstadoId = 25,
                            Nome = "Água Branca"
                        },
                        new
                        {
                            Id = 2500205,
                            EstadoId = 25,
                            Nome = "Aguiar"
                        },
                        new
                        {
                            Id = 2500304,
                            EstadoId = 25,
                            Nome = "Alagoa Grande"
                        },
                        new
                        {
                            Id = 2500403,
                            EstadoId = 25,
                            Nome = "Alagoa Nova"
                        },
                        new
                        {
                            Id = 2500502,
                            EstadoId = 25,
                            Nome = "Alagoinha"
                        },
                        new
                        {
                            Id = 2500536,
                            EstadoId = 25,
                            Nome = "Alcantil"
                        },
                        new
                        {
                            Id = 2500577,
                            EstadoId = 25,
                            Nome = "Algodão de Jandaíra"
                        },
                        new
                        {
                            Id = 2500601,
                            EstadoId = 25,
                            Nome = "Alhandra"
                        },
                        new
                        {
                            Id = 2500734,
                            EstadoId = 25,
                            Nome = "Amparo"
                        },
                        new
                        {
                            Id = 2500775,
                            EstadoId = 25,
                            Nome = "Aparecida"
                        },
                        new
                        {
                            Id = 2500809,
                            EstadoId = 25,
                            Nome = "Araçagi"
                        },
                        new
                        {
                            Id = 2500908,
                            EstadoId = 25,
                            Nome = "Arara"
                        },
                        new
                        {
                            Id = 2501005,
                            EstadoId = 25,
                            Nome = "Araruna"
                        },
                        new
                        {
                            Id = 2501104,
                            EstadoId = 25,
                            Nome = "Areia"
                        },
                        new
                        {
                            Id = 2501153,
                            EstadoId = 25,
                            Nome = "Areia de Baraúnas"
                        },
                        new
                        {
                            Id = 2501203,
                            EstadoId = 25,
                            Nome = "Areial"
                        },
                        new
                        {
                            Id = 2501302,
                            EstadoId = 25,
                            Nome = "Aroeiras"
                        },
                        new
                        {
                            Id = 2501351,
                            EstadoId = 25,
                            Nome = "Assunção"
                        },
                        new
                        {
                            Id = 2501401,
                            EstadoId = 25,
                            Nome = "Baía da Traição"
                        },
                        new
                        {
                            Id = 2501500,
                            EstadoId = 25,
                            Nome = "Bananeiras"
                        },
                        new
                        {
                            Id = 2501534,
                            EstadoId = 25,
                            Nome = "Baraúna"
                        },
                        new
                        {
                            Id = 2501609,
                            EstadoId = 25,
                            Nome = "Barra de Santa Rosa"
                        },
                        new
                        {
                            Id = 2501575,
                            EstadoId = 25,
                            Nome = "Barra de Santana"
                        },
                        new
                        {
                            Id = 2501708,
                            EstadoId = 25,
                            Nome = "Barra de São Miguel"
                        },
                        new
                        {
                            Id = 2501807,
                            EstadoId = 25,
                            Nome = "Bayeux"
                        },
                        new
                        {
                            Id = 2501906,
                            EstadoId = 25,
                            Nome = "Belém"
                        },
                        new
                        {
                            Id = 2502003,
                            EstadoId = 25,
                            Nome = "Belém do Brejo do Cruz"
                        },
                        new
                        {
                            Id = 2502052,
                            EstadoId = 25,
                            Nome = "Bernardino Batista"
                        },
                        new
                        {
                            Id = 2502102,
                            EstadoId = 25,
                            Nome = "Boa Ventura"
                        },
                        new
                        {
                            Id = 2502151,
                            EstadoId = 25,
                            Nome = "Boa Vista"
                        },
                        new
                        {
                            Id = 2502201,
                            EstadoId = 25,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            Id = 2502300,
                            EstadoId = 25,
                            Nome = "Bom Sucesso"
                        },
                        new
                        {
                            Id = 2502409,
                            EstadoId = 25,
                            Nome = "Bonito de Santa Fé"
                        },
                        new
                        {
                            Id = 2502508,
                            EstadoId = 25,
                            Nome = "Boqueirão"
                        },
                        new
                        {
                            Id = 2502706,
                            EstadoId = 25,
                            Nome = "Borborema"
                        },
                        new
                        {
                            Id = 2502805,
                            EstadoId = 25,
                            Nome = "Brejo do Cruz"
                        },
                        new
                        {
                            Id = 2502904,
                            EstadoId = 25,
                            Nome = "Brejo dos Santos"
                        },
                        new
                        {
                            Id = 2503001,
                            EstadoId = 25,
                            Nome = "Caaporã"
                        },
                        new
                        {
                            Id = 2503100,
                            EstadoId = 25,
                            Nome = "Cabaceiras"
                        },
                        new
                        {
                            Id = 2503209,
                            EstadoId = 25,
                            Nome = "Cabedelo"
                        },
                        new
                        {
                            Id = 2503308,
                            EstadoId = 25,
                            Nome = "Cachoeira dos Índios"
                        },
                        new
                        {
                            Id = 2503407,
                            EstadoId = 25,
                            Nome = "Cacimba de Areia"
                        },
                        new
                        {
                            Id = 2503506,
                            EstadoId = 25,
                            Nome = "Cacimba de Dentro"
                        },
                        new
                        {
                            Id = 2503555,
                            EstadoId = 25,
                            Nome = "Cacimbas"
                        },
                        new
                        {
                            Id = 2503605,
                            EstadoId = 25,
                            Nome = "Caiçara"
                        },
                        new
                        {
                            Id = 2503704,
                            EstadoId = 25,
                            Nome = "Cajazeiras"
                        },
                        new
                        {
                            Id = 2503753,
                            EstadoId = 25,
                            Nome = "Cajazeirinhas"
                        },
                        new
                        {
                            Id = 2503803,
                            EstadoId = 25,
                            Nome = "Caldas Brandão"
                        },
                        new
                        {
                            Id = 2503902,
                            EstadoId = 25,
                            Nome = "Camalaú"
                        },
                        new
                        {
                            Id = 2504009,
                            EstadoId = 25,
                            Nome = "Campina Grande"
                        },
                        new
                        {
                            Id = 2504033,
                            EstadoId = 25,
                            Nome = "Capim"
                        },
                        new
                        {
                            Id = 2504074,
                            EstadoId = 25,
                            Nome = "Caraúbas"
                        },
                        new
                        {
                            Id = 2504108,
                            EstadoId = 25,
                            Nome = "Carrapateira"
                        },
                        new
                        {
                            Id = 2504157,
                            EstadoId = 25,
                            Nome = "Casserengue"
                        },
                        new
                        {
                            Id = 2504207,
                            EstadoId = 25,
                            Nome = "Catingueira"
                        },
                        new
                        {
                            Id = 2504306,
                            EstadoId = 25,
                            Nome = "Catolé do Rocha"
                        },
                        new
                        {
                            Id = 2504355,
                            EstadoId = 25,
                            Nome = "Caturité"
                        },
                        new
                        {
                            Id = 2504405,
                            EstadoId = 25,
                            Nome = "Conceição"
                        },
                        new
                        {
                            Id = 2504504,
                            EstadoId = 25,
                            Nome = "Condado"
                        },
                        new
                        {
                            Id = 2504603,
                            EstadoId = 25,
                            Nome = "Conde"
                        },
                        new
                        {
                            Id = 2504702,
                            EstadoId = 25,
                            Nome = "Congo"
                        },
                        new
                        {
                            Id = 2504801,
                            EstadoId = 25,
                            Nome = "Coremas"
                        },
                        new
                        {
                            Id = 2504850,
                            EstadoId = 25,
                            Nome = "Coxixola"
                        },
                        new
                        {
                            Id = 2504900,
                            EstadoId = 25,
                            Nome = "Cruz do Espírito Santo"
                        },
                        new
                        {
                            Id = 2505006,
                            EstadoId = 25,
                            Nome = "Cubati"
                        },
                        new
                        {
                            Id = 2505105,
                            EstadoId = 25,
                            Nome = "Cuité"
                        },
                        new
                        {
                            Id = 2505238,
                            EstadoId = 25,
                            Nome = "Cuité de Mamanguape"
                        },
                        new
                        {
                            Id = 2505204,
                            EstadoId = 25,
                            Nome = "Cuitegi"
                        },
                        new
                        {
                            Id = 2505279,
                            EstadoId = 25,
                            Nome = "Curral de Cima"
                        },
                        new
                        {
                            Id = 2505303,
                            EstadoId = 25,
                            Nome = "Curral Velho"
                        },
                        new
                        {
                            Id = 2505352,
                            EstadoId = 25,
                            Nome = "Damião"
                        },
                        new
                        {
                            Id = 2505402,
                            EstadoId = 25,
                            Nome = "Desterro"
                        },
                        new
                        {
                            Id = 2505600,
                            EstadoId = 25,
                            Nome = "Diamante"
                        },
                        new
                        {
                            Id = 2505709,
                            EstadoId = 25,
                            Nome = "Dona Inês"
                        },
                        new
                        {
                            Id = 2505808,
                            EstadoId = 25,
                            Nome = "Duas Estradas"
                        },
                        new
                        {
                            Id = 2505907,
                            EstadoId = 25,
                            Nome = "Emas"
                        },
                        new
                        {
                            Id = 2506004,
                            EstadoId = 25,
                            Nome = "Esperança"
                        },
                        new
                        {
                            Id = 2506103,
                            EstadoId = 25,
                            Nome = "Fagundes"
                        },
                        new
                        {
                            Id = 2506202,
                            EstadoId = 25,
                            Nome = "Frei Martinho"
                        },
                        new
                        {
                            Id = 2506251,
                            EstadoId = 25,
                            Nome = "Gado Bravo"
                        },
                        new
                        {
                            Id = 2506301,
                            EstadoId = 25,
                            Nome = "Guarabira"
                        },
                        new
                        {
                            Id = 2506400,
                            EstadoId = 25,
                            Nome = "Gurinhém"
                        },
                        new
                        {
                            Id = 2506509,
                            EstadoId = 25,
                            Nome = "Gurjão"
                        },
                        new
                        {
                            Id = 2506608,
                            EstadoId = 25,
                            Nome = "Ibiara"
                        },
                        new
                        {
                            Id = 2502607,
                            EstadoId = 25,
                            Nome = "Igaracy"
                        },
                        new
                        {
                            Id = 2506707,
                            EstadoId = 25,
                            Nome = "Imaculada"
                        },
                        new
                        {
                            Id = 2506806,
                            EstadoId = 25,
                            Nome = "Ingá"
                        },
                        new
                        {
                            Id = 2506905,
                            EstadoId = 25,
                            Nome = "Itabaiana"
                        },
                        new
                        {
                            Id = 2507002,
                            EstadoId = 25,
                            Nome = "Itaporanga"
                        },
                        new
                        {
                            Id = 2507101,
                            EstadoId = 25,
                            Nome = "Itapororoca"
                        },
                        new
                        {
                            Id = 2507200,
                            EstadoId = 25,
                            Nome = "Itatuba"
                        },
                        new
                        {
                            Id = 2507309,
                            EstadoId = 25,
                            Nome = "Jacaraú"
                        },
                        new
                        {
                            Id = 2507408,
                            EstadoId = 25,
                            Nome = "Jericó"
                        },
                        new
                        {
                            Id = 2507507,
                            EstadoId = 25,
                            Nome = "João Pessoa"
                        },
                        new
                        {
                            Id = 2513653,
                            EstadoId = 25,
                            Nome = "Joca Claudino"
                        },
                        new
                        {
                            Id = 2507606,
                            EstadoId = 25,
                            Nome = "Juarez Távora"
                        },
                        new
                        {
                            Id = 2507705,
                            EstadoId = 25,
                            Nome = "Juazeirinho"
                        },
                        new
                        {
                            Id = 2507804,
                            EstadoId = 25,
                            Nome = "Junco do Seridó"
                        },
                        new
                        {
                            Id = 2507903,
                            EstadoId = 25,
                            Nome = "Juripiranga"
                        },
                        new
                        {
                            Id = 2508000,
                            EstadoId = 25,
                            Nome = "Juru"
                        },
                        new
                        {
                            Id = 2508109,
                            EstadoId = 25,
                            Nome = "Lagoa"
                        },
                        new
                        {
                            Id = 2508208,
                            EstadoId = 25,
                            Nome = "Lagoa de Dentro"
                        },
                        new
                        {
                            Id = 2508307,
                            EstadoId = 25,
                            Nome = "Lagoa Seca"
                        },
                        new
                        {
                            Id = 2508406,
                            EstadoId = 25,
                            Nome = "Lastro"
                        },
                        new
                        {
                            Id = 2508505,
                            EstadoId = 25,
                            Nome = "Livramento"
                        },
                        new
                        {
                            Id = 2508554,
                            EstadoId = 25,
                            Nome = "Logradouro"
                        },
                        new
                        {
                            Id = 2508604,
                            EstadoId = 25,
                            Nome = "Lucena"
                        },
                        new
                        {
                            Id = 2508703,
                            EstadoId = 25,
                            Nome = "Mãe dÁgua"
                        },
                        new
                        {
                            Id = 2508802,
                            EstadoId = 25,
                            Nome = "Malta"
                        },
                        new
                        {
                            Id = 2508901,
                            EstadoId = 25,
                            Nome = "Mamanguape"
                        },
                        new
                        {
                            Id = 2509008,
                            EstadoId = 25,
                            Nome = "Manaíra"
                        },
                        new
                        {
                            Id = 2509057,
                            EstadoId = 25,
                            Nome = "Marcação"
                        },
                        new
                        {
                            Id = 2509107,
                            EstadoId = 25,
                            Nome = "Mari"
                        },
                        new
                        {
                            Id = 2509156,
                            EstadoId = 25,
                            Nome = "Marizópolis"
                        },
                        new
                        {
                            Id = 2509206,
                            EstadoId = 25,
                            Nome = "Massaranduba"
                        },
                        new
                        {
                            Id = 2509305,
                            EstadoId = 25,
                            Nome = "Mataraca"
                        },
                        new
                        {
                            Id = 2509339,
                            EstadoId = 25,
                            Nome = "Matinhas"
                        },
                        new
                        {
                            Id = 2509370,
                            EstadoId = 25,
                            Nome = "Mato Grosso"
                        },
                        new
                        {
                            Id = 2509396,
                            EstadoId = 25,
                            Nome = "Maturéia"
                        },
                        new
                        {
                            Id = 2509404,
                            EstadoId = 25,
                            Nome = "Mogeiro"
                        },
                        new
                        {
                            Id = 2509503,
                            EstadoId = 25,
                            Nome = "Montadas"
                        },
                        new
                        {
                            Id = 2509602,
                            EstadoId = 25,
                            Nome = "Monte Horebe"
                        },
                        new
                        {
                            Id = 2509701,
                            EstadoId = 25,
                            Nome = "Monteiro"
                        },
                        new
                        {
                            Id = 2509800,
                            EstadoId = 25,
                            Nome = "Mulungu"
                        },
                        new
                        {
                            Id = 2509909,
                            EstadoId = 25,
                            Nome = "Natuba"
                        },
                        new
                        {
                            Id = 2510006,
                            EstadoId = 25,
                            Nome = "Nazarezinho"
                        },
                        new
                        {
                            Id = 2510105,
                            EstadoId = 25,
                            Nome = "Nova Floresta"
                        },
                        new
                        {
                            Id = 2510204,
                            EstadoId = 25,
                            Nome = "Nova Olinda"
                        },
                        new
                        {
                            Id = 2510303,
                            EstadoId = 25,
                            Nome = "Nova Palmeira"
                        },
                        new
                        {
                            Id = 2510402,
                            EstadoId = 25,
                            Nome = "Olho dÁgua"
                        },
                        new
                        {
                            Id = 2510501,
                            EstadoId = 25,
                            Nome = "Olivedos"
                        },
                        new
                        {
                            Id = 2510600,
                            EstadoId = 25,
                            Nome = "Ouro Velho"
                        },
                        new
                        {
                            Id = 2510659,
                            EstadoId = 25,
                            Nome = "Parari"
                        },
                        new
                        {
                            Id = 2510709,
                            EstadoId = 25,
                            Nome = "Passagem"
                        },
                        new
                        {
                            Id = 2510808,
                            EstadoId = 25,
                            Nome = "Patos"
                        },
                        new
                        {
                            Id = 2510907,
                            EstadoId = 25,
                            Nome = "Paulista"
                        },
                        new
                        {
                            Id = 2511004,
                            EstadoId = 25,
                            Nome = "Pedra Branca"
                        },
                        new
                        {
                            Id = 2511103,
                            EstadoId = 25,
                            Nome = "Pedra Lavrada"
                        },
                        new
                        {
                            Id = 2511202,
                            EstadoId = 25,
                            Nome = "Pedras de Fogo"
                        },
                        new
                        {
                            Id = 2512721,
                            EstadoId = 25,
                            Nome = "Pedro Régis"
                        },
                        new
                        {
                            Id = 2511301,
                            EstadoId = 25,
                            Nome = "Piancó"
                        },
                        new
                        {
                            Id = 2511400,
                            EstadoId = 25,
                            Nome = "Picuí"
                        },
                        new
                        {
                            Id = 2511509,
                            EstadoId = 25,
                            Nome = "Pilar"
                        },
                        new
                        {
                            Id = 2511608,
                            EstadoId = 25,
                            Nome = "Pilões"
                        },
                        new
                        {
                            Id = 2511707,
                            EstadoId = 25,
                            Nome = "Pilõezinhos"
                        },
                        new
                        {
                            Id = 2511806,
                            EstadoId = 25,
                            Nome = "Pirpirituba"
                        },
                        new
                        {
                            Id = 2511905,
                            EstadoId = 25,
                            Nome = "Pitimbu"
                        },
                        new
                        {
                            Id = 2512002,
                            EstadoId = 25,
                            Nome = "Pocinhos"
                        },
                        new
                        {
                            Id = 2512036,
                            EstadoId = 25,
                            Nome = "Poço Dantas"
                        },
                        new
                        {
                            Id = 2512077,
                            EstadoId = 25,
                            Nome = "Poço de José de Moura"
                        },
                        new
                        {
                            Id = 2512101,
                            EstadoId = 25,
                            Nome = "Pombal"
                        },
                        new
                        {
                            Id = 2512200,
                            EstadoId = 25,
                            Nome = "Prata"
                        },
                        new
                        {
                            Id = 2512309,
                            EstadoId = 25,
                            Nome = "Princesa Isabel"
                        },
                        new
                        {
                            Id = 2512408,
                            EstadoId = 25,
                            Nome = "Puxinanã"
                        },
                        new
                        {
                            Id = 2512507,
                            EstadoId = 25,
                            Nome = "Queimadas"
                        },
                        new
                        {
                            Id = 2512606,
                            EstadoId = 25,
                            Nome = "Quixabá"
                        },
                        new
                        {
                            Id = 2512705,
                            EstadoId = 25,
                            Nome = "Remígio"
                        },
                        new
                        {
                            Id = 2512747,
                            EstadoId = 25,
                            Nome = "Riachão"
                        },
                        new
                        {
                            Id = 2512754,
                            EstadoId = 25,
                            Nome = "Riachão do Bacamarte"
                        },
                        new
                        {
                            Id = 2512762,
                            EstadoId = 25,
                            Nome = "Riachão do Poço"
                        },
                        new
                        {
                            Id = 2512788,
                            EstadoId = 25,
                            Nome = "Riacho de Santo Antônio"
                        },
                        new
                        {
                            Id = 2512804,
                            EstadoId = 25,
                            Nome = "Riacho dos Cavalos"
                        },
                        new
                        {
                            Id = 2512903,
                            EstadoId = 25,
                            Nome = "Rio Tinto"
                        },
                        new
                        {
                            Id = 2513000,
                            EstadoId = 25,
                            Nome = "Salgadinho"
                        },
                        new
                        {
                            Id = 2513109,
                            EstadoId = 25,
                            Nome = "Salgado de São Félix"
                        },
                        new
                        {
                            Id = 2513158,
                            EstadoId = 25,
                            Nome = "Santa Cecília"
                        },
                        new
                        {
                            Id = 2513208,
                            EstadoId = 25,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            Id = 2513307,
                            EstadoId = 25,
                            Nome = "Santa Helena"
                        },
                        new
                        {
                            Id = 2513356,
                            EstadoId = 25,
                            Nome = "Santa Inês"
                        },
                        new
                        {
                            Id = 2513406,
                            EstadoId = 25,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            Id = 2513703,
                            EstadoId = 25,
                            Nome = "Santa Rita"
                        },
                        new
                        {
                            Id = 2513802,
                            EstadoId = 25,
                            Nome = "Santa Teresinha"
                        },
                        new
                        {
                            Id = 2513505,
                            EstadoId = 25,
                            Nome = "Santana de Mangueira"
                        },
                        new
                        {
                            Id = 2513604,
                            EstadoId = 25,
                            Nome = "Santana dos Garrotes"
                        },
                        new
                        {
                            Id = 2513851,
                            EstadoId = 25,
                            Nome = "Santo André"
                        },
                        new
                        {
                            Id = 2513927,
                            EstadoId = 25,
                            Nome = "São Bentinho"
                        },
                        new
                        {
                            Id = 2513901,
                            EstadoId = 25,
                            Nome = "São Bento"
                        },
                        new
                        {
                            Id = 2513968,
                            EstadoId = 25,
                            Nome = "São Domingos de Pombal"
                        },
                        new
                        {
                            Id = 2513943,
                            EstadoId = 25,
                            Nome = "São Domingos do Cariri"
                        },
                        new
                        {
                            Id = 2513984,
                            EstadoId = 25,
                            Nome = "São Francisco"
                        },
                        new
                        {
                            Id = 2514008,
                            EstadoId = 25,
                            Nome = "São João do Cariri"
                        },
                        new
                        {
                            Id = 2500700,
                            EstadoId = 25,
                            Nome = "São João do Rio do Peixe"
                        },
                        new
                        {
                            Id = 2514107,
                            EstadoId = 25,
                            Nome = "São João do Tigre"
                        },
                        new
                        {
                            Id = 2514206,
                            EstadoId = 25,
                            Nome = "São José da Lagoa Tapada"
                        },
                        new
                        {
                            Id = 2514305,
                            EstadoId = 25,
                            Nome = "São José de Caiana"
                        },
                        new
                        {
                            Id = 2514404,
                            EstadoId = 25,
                            Nome = "São José de Espinharas"
                        },
                        new
                        {
                            Id = 2514503,
                            EstadoId = 25,
                            Nome = "São José de Piranhas"
                        },
                        new
                        {
                            Id = 2514552,
                            EstadoId = 25,
                            Nome = "São José de Princesa"
                        },
                        new
                        {
                            Id = 2514602,
                            EstadoId = 25,
                            Nome = "São José do Bonfim"
                        },
                        new
                        {
                            Id = 2514651,
                            EstadoId = 25,
                            Nome = "São José do Brejo do Cruz"
                        },
                        new
                        {
                            Id = 2514701,
                            EstadoId = 25,
                            Nome = "São José do Sabugi"
                        },
                        new
                        {
                            Id = 2514800,
                            EstadoId = 25,
                            Nome = "São José dos Cordeiros"
                        },
                        new
                        {
                            Id = 2514453,
                            EstadoId = 25,
                            Nome = "São José dos Ramos"
                        },
                        new
                        {
                            Id = 2514909,
                            EstadoId = 25,
                            Nome = "São Mamede"
                        },
                        new
                        {
                            Id = 2515005,
                            EstadoId = 25,
                            Nome = "São Miguel de Taipu"
                        },
                        new
                        {
                            Id = 2515104,
                            EstadoId = 25,
                            Nome = "São Sebastião de Lagoa de Roça"
                        },
                        new
                        {
                            Id = 2515203,
                            EstadoId = 25,
                            Nome = "São Sebastião do Umbuzeiro"
                        },
                        new
                        {
                            Id = 2515302,
                            EstadoId = 25,
                            Nome = "Sapé"
                        },
                        new
                        {
                            Id = 2515401,
                            EstadoId = 25,
                            Nome = "Seridó"
                        },
                        new
                        {
                            Id = 2515500,
                            EstadoId = 25,
                            Nome = "Serra Branca"
                        },
                        new
                        {
                            Id = 2515609,
                            EstadoId = 25,
                            Nome = "Serra da Raiz"
                        },
                        new
                        {
                            Id = 2515708,
                            EstadoId = 25,
                            Nome = "Serra Grande"
                        },
                        new
                        {
                            Id = 2515807,
                            EstadoId = 25,
                            Nome = "Serra Redonda"
                        },
                        new
                        {
                            Id = 2515906,
                            EstadoId = 25,
                            Nome = "Serraria"
                        },
                        new
                        {
                            Id = 2515930,
                            EstadoId = 25,
                            Nome = "Sertãozinho"
                        },
                        new
                        {
                            Id = 2515971,
                            EstadoId = 25,
                            Nome = "Sobrado"
                        },
                        new
                        {
                            Id = 2516003,
                            EstadoId = 25,
                            Nome = "Solânea"
                        },
                        new
                        {
                            Id = 2516102,
                            EstadoId = 25,
                            Nome = "Soledade"
                        },
                        new
                        {
                            Id = 2516151,
                            EstadoId = 25,
                            Nome = "Sossêgo"
                        },
                        new
                        {
                            Id = 2516201,
                            EstadoId = 25,
                            Nome = "Sousa"
                        },
                        new
                        {
                            Id = 2516300,
                            EstadoId = 25,
                            Nome = "Sumé"
                        },
                        new
                        {
                            Id = 2516409,
                            EstadoId = 25,
                            Nome = "Tacima"
                        },
                        new
                        {
                            Id = 2516508,
                            EstadoId = 25,
                            Nome = "Taperoá"
                        },
                        new
                        {
                            Id = 2516607,
                            EstadoId = 25,
                            Nome = "Tavares"
                        },
                        new
                        {
                            Id = 2516706,
                            EstadoId = 25,
                            Nome = "Teixeira"
                        },
                        new
                        {
                            Id = 2516755,
                            EstadoId = 25,
                            Nome = "Tenório"
                        },
                        new
                        {
                            Id = 2516805,
                            EstadoId = 25,
                            Nome = "Triunfo"
                        },
                        new
                        {
                            Id = 2516904,
                            EstadoId = 25,
                            Nome = "Uiraúna"
                        },
                        new
                        {
                            Id = 2517001,
                            EstadoId = 25,
                            Nome = "Umbuzeiro"
                        },
                        new
                        {
                            Id = 2517100,
                            EstadoId = 25,
                            Nome = "Várzea"
                        },
                        new
                        {
                            Id = 2517209,
                            EstadoId = 25,
                            Nome = "Vieirópolis"
                        },
                        new
                        {
                            Id = 2505501,
                            EstadoId = 25,
                            Nome = "Vista Serrana"
                        },
                        new
                        {
                            Id = 2517407,
                            EstadoId = 25,
                            Nome = "Zabelê"
                        },
                        new
                        {
                            Id = 2600054,
                            EstadoId = 26,
                            Nome = "Abreu e Lima"
                        },
                        new
                        {
                            Id = 2600104,
                            EstadoId = 26,
                            Nome = "Afogados da Ingazeira"
                        },
                        new
                        {
                            Id = 2600203,
                            EstadoId = 26,
                            Nome = "Afrânio"
                        },
                        new
                        {
                            Id = 2600302,
                            EstadoId = 26,
                            Nome = "Agrestina"
                        },
                        new
                        {
                            Id = 2600401,
                            EstadoId = 26,
                            Nome = "Água Preta"
                        },
                        new
                        {
                            Id = 2600500,
                            EstadoId = 26,
                            Nome = "Águas Belas"
                        },
                        new
                        {
                            Id = 2600609,
                            EstadoId = 26,
                            Nome = "Alagoinha"
                        },
                        new
                        {
                            Id = 2600708,
                            EstadoId = 26,
                            Nome = "Aliança"
                        },
                        new
                        {
                            Id = 2600807,
                            EstadoId = 26,
                            Nome = "Altinho"
                        },
                        new
                        {
                            Id = 2600906,
                            EstadoId = 26,
                            Nome = "Amaraji"
                        },
                        new
                        {
                            Id = 2601003,
                            EstadoId = 26,
                            Nome = "Angelim"
                        },
                        new
                        {
                            Id = 2601052,
                            EstadoId = 26,
                            Nome = "Araçoiaba"
                        },
                        new
                        {
                            Id = 2601102,
                            EstadoId = 26,
                            Nome = "Araripina"
                        },
                        new
                        {
                            Id = 2601201,
                            EstadoId = 26,
                            Nome = "Arcoverde"
                        },
                        new
                        {
                            Id = 2601300,
                            EstadoId = 26,
                            Nome = "Barra de Guabiraba"
                        },
                        new
                        {
                            Id = 2601409,
                            EstadoId = 26,
                            Nome = "Barreiros"
                        },
                        new
                        {
                            Id = 2601508,
                            EstadoId = 26,
                            Nome = "Belém de Maria"
                        },
                        new
                        {
                            Id = 2601607,
                            EstadoId = 26,
                            Nome = "Belém de São Francisco"
                        },
                        new
                        {
                            Id = 2601706,
                            EstadoId = 26,
                            Nome = "Belo Jardim"
                        },
                        new
                        {
                            Id = 2601805,
                            EstadoId = 26,
                            Nome = "Betânia"
                        },
                        new
                        {
                            Id = 2601904,
                            EstadoId = 26,
                            Nome = "Bezerros"
                        },
                        new
                        {
                            Id = 2602001,
                            EstadoId = 26,
                            Nome = "Bodocó"
                        },
                        new
                        {
                            Id = 2602100,
                            EstadoId = 26,
                            Nome = "Bom Conselho"
                        },
                        new
                        {
                            Id = 2602209,
                            EstadoId = 26,
                            Nome = "Bom Jardim"
                        },
                        new
                        {
                            Id = 2602308,
                            EstadoId = 26,
                            Nome = "Bonito"
                        },
                        new
                        {
                            Id = 2602407,
                            EstadoId = 26,
                            Nome = "Brejão"
                        },
                        new
                        {
                            Id = 2602506,
                            EstadoId = 26,
                            Nome = "Brejinho"
                        },
                        new
                        {
                            Id = 2602605,
                            EstadoId = 26,
                            Nome = "Brejo da Madre de Deus"
                        },
                        new
                        {
                            Id = 2602704,
                            EstadoId = 26,
                            Nome = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2602803,
                            EstadoId = 26,
                            Nome = "Buíque"
                        },
                        new
                        {
                            Id = 2602902,
                            EstadoId = 26,
                            Nome = "Cabo de Santo Agostinho"
                        },
                        new
                        {
                            Id = 2603009,
                            EstadoId = 26,
                            Nome = "Cabrobó"
                        },
                        new
                        {
                            Id = 2603108,
                            EstadoId = 26,
                            Nome = "Cachoeirinha"
                        },
                        new
                        {
                            Id = 2603207,
                            EstadoId = 26,
                            Nome = "Caetés"
                        },
                        new
                        {
                            Id = 2603306,
                            EstadoId = 26,
                            Nome = "Calçado"
                        },
                        new
                        {
                            Id = 2603405,
                            EstadoId = 26,
                            Nome = "Calumbi"
                        },
                        new
                        {
                            Id = 2603454,
                            EstadoId = 26,
                            Nome = "Camaragibe"
                        },
                        new
                        {
                            Id = 2603504,
                            EstadoId = 26,
                            Nome = "Camocim de São Félix"
                        },
                        new
                        {
                            Id = 2603603,
                            EstadoId = 26,
                            Nome = "Camutanga"
                        },
                        new
                        {
                            Id = 2603702,
                            EstadoId = 26,
                            Nome = "Canhotinho"
                        },
                        new
                        {
                            Id = 2603801,
                            EstadoId = 26,
                            Nome = "Capoeiras"
                        },
                        new
                        {
                            Id = 2603900,
                            EstadoId = 26,
                            Nome = "Carnaíba"
                        },
                        new
                        {
                            Id = 2603926,
                            EstadoId = 26,
                            Nome = "Carnaubeira da Penha"
                        },
                        new
                        {
                            Id = 2604007,
                            EstadoId = 26,
                            Nome = "Carpina"
                        },
                        new
                        {
                            Id = 2604106,
                            EstadoId = 26,
                            Nome = "Caruaru"
                        },
                        new
                        {
                            Id = 2604155,
                            EstadoId = 26,
                            Nome = "Casinhas"
                        },
                        new
                        {
                            Id = 2604205,
                            EstadoId = 26,
                            Nome = "Catende"
                        },
                        new
                        {
                            Id = 2604304,
                            EstadoId = 26,
                            Nome = "Cedro"
                        },
                        new
                        {
                            Id = 2604403,
                            EstadoId = 26,
                            Nome = "Chã de Alegria"
                        },
                        new
                        {
                            Id = 2604502,
                            EstadoId = 26,
                            Nome = "Chã Grande"
                        },
                        new
                        {
                            Id = 2604601,
                            EstadoId = 26,
                            Nome = "Condado"
                        },
                        new
                        {
                            Id = 2604700,
                            EstadoId = 26,
                            Nome = "Correntes"
                        },
                        new
                        {
                            Id = 2604809,
                            EstadoId = 26,
                            Nome = "Cortês"
                        },
                        new
                        {
                            Id = 2604908,
                            EstadoId = 26,
                            Nome = "Cumaru"
                        },
                        new
                        {
                            Id = 2605004,
                            EstadoId = 26,
                            Nome = "Cupira"
                        },
                        new
                        {
                            Id = 2605103,
                            EstadoId = 26,
                            Nome = "Custódia"
                        },
                        new
                        {
                            Id = 2605152,
                            EstadoId = 26,
                            Nome = "Dormentes"
                        },
                        new
                        {
                            Id = 2605202,
                            EstadoId = 26,
                            Nome = "Escada"
                        },
                        new
                        {
                            Id = 2605301,
                            EstadoId = 26,
                            Nome = "Exu"
                        },
                        new
                        {
                            Id = 2605400,
                            EstadoId = 26,
                            Nome = "Feira Nova"
                        },
                        new
                        {
                            Id = 2605459,
                            EstadoId = 26,
                            Nome = "Fernando de Noronha"
                        },
                        new
                        {
                            Id = 2605509,
                            EstadoId = 26,
                            Nome = "Ferreiros"
                        },
                        new
                        {
                            Id = 2605608,
                            EstadoId = 26,
                            Nome = "Flores"
                        },
                        new
                        {
                            Id = 2605707,
                            EstadoId = 26,
                            Nome = "Floresta"
                        },
                        new
                        {
                            Id = 2605806,
                            EstadoId = 26,
                            Nome = "Frei Miguelinho"
                        },
                        new
                        {
                            Id = 2605905,
                            EstadoId = 26,
                            Nome = "Gameleira"
                        },
                        new
                        {
                            Id = 2606002,
                            EstadoId = 26,
                            Nome = "Garanhuns"
                        },
                        new
                        {
                            Id = 2606101,
                            EstadoId = 26,
                            Nome = "Glória do Goitá"
                        },
                        new
                        {
                            Id = 2606200,
                            EstadoId = 26,
                            Nome = "Goiana"
                        },
                        new
                        {
                            Id = 2606309,
                            EstadoId = 26,
                            Nome = "Granito"
                        },
                        new
                        {
                            Id = 2606408,
                            EstadoId = 26,
                            Nome = "Gravatá"
                        },
                        new
                        {
                            Id = 2606507,
                            EstadoId = 26,
                            Nome = "Iati"
                        },
                        new
                        {
                            Id = 2606606,
                            EstadoId = 26,
                            Nome = "Ibimirim"
                        },
                        new
                        {
                            Id = 2606705,
                            EstadoId = 26,
                            Nome = "Ibirajuba"
                        },
                        new
                        {
                            Id = 2606804,
                            EstadoId = 26,
                            Nome = "Igarassu"
                        },
                        new
                        {
                            Id = 2606903,
                            EstadoId = 26,
                            Nome = "Iguaraci"
                        },
                        new
                        {
                            Id = 2607604,
                            EstadoId = 26,
                            Nome = "Ilha de Itamaracá"
                        },
                        new
                        {
                            Id = 2607000,
                            EstadoId = 26,
                            Nome = "Inajá"
                        },
                        new
                        {
                            Id = 2607109,
                            EstadoId = 26,
                            Nome = "Ingazeira"
                        },
                        new
                        {
                            Id = 2607208,
                            EstadoId = 26,
                            Nome = "Ipojuca"
                        },
                        new
                        {
                            Id = 2607307,
                            EstadoId = 26,
                            Nome = "Ipubi"
                        },
                        new
                        {
                            Id = 2607406,
                            EstadoId = 26,
                            Nome = "Itacuruba"
                        },
                        new
                        {
                            Id = 2607505,
                            EstadoId = 26,
                            Nome = "Itaíba"
                        },
                        new
                        {
                            Id = 2607653,
                            EstadoId = 26,
                            Nome = "Itambé"
                        },
                        new
                        {
                            Id = 2607703,
                            EstadoId = 26,
                            Nome = "Itapetim"
                        },
                        new
                        {
                            Id = 2607752,
                            EstadoId = 26,
                            Nome = "Itapissuma"
                        },
                        new
                        {
                            Id = 2607802,
                            EstadoId = 26,
                            Nome = "Itaquitinga"
                        },
                        new
                        {
                            Id = 2607901,
                            EstadoId = 26,
                            Nome = "Jaboatão dos Guararapes"
                        },
                        new
                        {
                            Id = 2607950,
                            EstadoId = 26,
                            Nome = "Jaqueira"
                        },
                        new
                        {
                            Id = 2608008,
                            EstadoId = 26,
                            Nome = "Jataúba"
                        },
                        new
                        {
                            Id = 2608057,
                            EstadoId = 26,
                            Nome = "Jatobá"
                        },
                        new
                        {
                            Id = 2608107,
                            EstadoId = 26,
                            Nome = "João Alfredo"
                        },
                        new
                        {
                            Id = 2608206,
                            EstadoId = 26,
                            Nome = "Joaquim Nabuco"
                        },
                        new
                        {
                            Id = 2608255,
                            EstadoId = 26,
                            Nome = "Jucati"
                        },
                        new
                        {
                            Id = 2608305,
                            EstadoId = 26,
                            Nome = "Jupi"
                        },
                        new
                        {
                            Id = 2608404,
                            EstadoId = 26,
                            Nome = "Jurema"
                        },
                        new
                        {
                            Id = 2608453,
                            EstadoId = 26,
                            Nome = "Lagoa do Carro"
                        },
                        new
                        {
                            Id = 2608503,
                            EstadoId = 26,
                            Nome = "Lagoa do Itaenga"
                        },
                        new
                        {
                            Id = 2608602,
                            EstadoId = 26,
                            Nome = "Lagoa do Ouro"
                        },
                        new
                        {
                            Id = 2608701,
                            EstadoId = 26,
                            Nome = "Lagoa dos Gatos"
                        },
                        new
                        {
                            Id = 2608750,
                            EstadoId = 26,
                            Nome = "Lagoa Grande"
                        },
                        new
                        {
                            Id = 2608800,
                            EstadoId = 26,
                            Nome = "Lajedo"
                        },
                        new
                        {
                            Id = 2608909,
                            EstadoId = 26,
                            Nome = "Limoeiro"
                        },
                        new
                        {
                            Id = 2609006,
                            EstadoId = 26,
                            Nome = "Macaparana"
                        },
                        new
                        {
                            Id = 2609105,
                            EstadoId = 26,
                            Nome = "Machados"
                        },
                        new
                        {
                            Id = 2609154,
                            EstadoId = 26,
                            Nome = "Manari"
                        },
                        new
                        {
                            Id = 2609204,
                            EstadoId = 26,
                            Nome = "Maraial"
                        },
                        new
                        {
                            Id = 2609303,
                            EstadoId = 26,
                            Nome = "Mirandiba"
                        },
                        new
                        {
                            Id = 2614303,
                            EstadoId = 26,
                            Nome = "Moreilândia"
                        },
                        new
                        {
                            Id = 2609402,
                            EstadoId = 26,
                            Nome = "Moreno"
                        },
                        new
                        {
                            Id = 2609501,
                            EstadoId = 26,
                            Nome = "Nazaré da Mata"
                        },
                        new
                        {
                            Id = 2609600,
                            EstadoId = 26,
                            Nome = "Olinda"
                        },
                        new
                        {
                            Id = 2609709,
                            EstadoId = 26,
                            Nome = "Orobó"
                        },
                        new
                        {
                            Id = 2609808,
                            EstadoId = 26,
                            Nome = "Orocó"
                        },
                        new
                        {
                            Id = 2609907,
                            EstadoId = 26,
                            Nome = "Ouricuri"
                        },
                        new
                        {
                            Id = 2610004,
                            EstadoId = 26,
                            Nome = "Palmares"
                        },
                        new
                        {
                            Id = 2610103,
                            EstadoId = 26,
                            Nome = "Palmeirina"
                        },
                        new
                        {
                            Id = 2610202,
                            EstadoId = 26,
                            Nome = "Panelas"
                        },
                        new
                        {
                            Id = 2610301,
                            EstadoId = 26,
                            Nome = "Paranatama"
                        },
                        new
                        {
                            Id = 2610400,
                            EstadoId = 26,
                            Nome = "Parnamirim"
                        },
                        new
                        {
                            Id = 2610509,
                            EstadoId = 26,
                            Nome = "Passira"
                        },
                        new
                        {
                            Id = 2610608,
                            EstadoId = 26,
                            Nome = "Paudalho"
                        },
                        new
                        {
                            Id = 2610707,
                            EstadoId = 26,
                            Nome = "Paulista"
                        },
                        new
                        {
                            Id = 2610806,
                            EstadoId = 26,
                            Nome = "Pedra"
                        },
                        new
                        {
                            Id = 2610905,
                            EstadoId = 26,
                            Nome = "Pesqueira"
                        },
                        new
                        {
                            Id = 2611002,
                            EstadoId = 26,
                            Nome = "Petrolândia"
                        },
                        new
                        {
                            Id = 2611101,
                            EstadoId = 26,
                            Nome = "Petrolina"
                        },
                        new
                        {
                            Id = 2611200,
                            EstadoId = 26,
                            Nome = "Poção"
                        },
                        new
                        {
                            Id = 2611309,
                            EstadoId = 26,
                            Nome = "Pombos"
                        },
                        new
                        {
                            Id = 2611408,
                            EstadoId = 26,
                            Nome = "Primavera"
                        },
                        new
                        {
                            Id = 2611507,
                            EstadoId = 26,
                            Nome = "Quipapá"
                        },
                        new
                        {
                            Id = 2611533,
                            EstadoId = 26,
                            Nome = "Quixaba"
                        },
                        new
                        {
                            Id = 2611606,
                            EstadoId = 26,
                            Nome = "Recife"
                        },
                        new
                        {
                            Id = 2611705,
                            EstadoId = 26,
                            Nome = "Riacho das Almas"
                        },
                        new
                        {
                            Id = 2611804,
                            EstadoId = 26,
                            Nome = "Ribeirão"
                        },
                        new
                        {
                            Id = 2611903,
                            EstadoId = 26,
                            Nome = "Rio Formoso"
                        },
                        new
                        {
                            Id = 2612000,
                            EstadoId = 26,
                            Nome = "Sairé"
                        },
                        new
                        {
                            Id = 2612109,
                            EstadoId = 26,
                            Nome = "Salgadinho"
                        },
                        new
                        {
                            Id = 2612208,
                            EstadoId = 26,
                            Nome = "Salgueiro"
                        },
                        new
                        {
                            Id = 2612307,
                            EstadoId = 26,
                            Nome = "Saloá"
                        },
                        new
                        {
                            Id = 2612406,
                            EstadoId = 26,
                            Nome = "Sanharó"
                        },
                        new
                        {
                            Id = 2612455,
                            EstadoId = 26,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            Id = 2612471,
                            EstadoId = 26,
                            Nome = "Santa Cruz da Baixa Verde"
                        },
                        new
                        {
                            Id = 2612505,
                            EstadoId = 26,
                            Nome = "Santa Cruz do Capibaribe"
                        },
                        new
                        {
                            Id = 2612554,
                            EstadoId = 26,
                            Nome = "Santa Filomena"
                        },
                        new
                        {
                            Id = 2612604,
                            EstadoId = 26,
                            Nome = "Santa Maria da Boa Vista"
                        },
                        new
                        {
                            Id = 2612703,
                            EstadoId = 26,
                            Nome = "Santa Maria do Cambucá"
                        },
                        new
                        {
                            Id = 2612802,
                            EstadoId = 26,
                            Nome = "Santa Terezinha"
                        },
                        new
                        {
                            Id = 2612901,
                            EstadoId = 26,
                            Nome = "São Benedito do Sul"
                        },
                        new
                        {
                            Id = 2613008,
                            EstadoId = 26,
                            Nome = "São Bento do Una"
                        },
                        new
                        {
                            Id = 2613107,
                            EstadoId = 26,
                            Nome = "São Caitano"
                        },
                        new
                        {
                            Id = 2613206,
                            EstadoId = 26,
                            Nome = "São João"
                        },
                        new
                        {
                            Id = 2613305,
                            EstadoId = 26,
                            Nome = "São Joaquim do Monte"
                        },
                        new
                        {
                            Id = 2613404,
                            EstadoId = 26,
                            Nome = "São José da Coroa Grande"
                        },
                        new
                        {
                            Id = 2613503,
                            EstadoId = 26,
                            Nome = "São José do Belmonte"
                        },
                        new
                        {
                            Id = 2613602,
                            EstadoId = 26,
                            Nome = "São José do Egito"
                        },
                        new
                        {
                            Id = 2613701,
                            EstadoId = 26,
                            Nome = "São Lourenço da Mata"
                        },
                        new
                        {
                            Id = 2613800,
                            EstadoId = 26,
                            Nome = "São Vicente Ferrer"
                        },
                        new
                        {
                            Id = 2613909,
                            EstadoId = 26,
                            Nome = "Serra Talhada"
                        },
                        new
                        {
                            Id = 2614006,
                            EstadoId = 26,
                            Nome = "Serrita"
                        },
                        new
                        {
                            Id = 2614105,
                            EstadoId = 26,
                            Nome = "Sertânia"
                        },
                        new
                        {
                            Id = 2614204,
                            EstadoId = 26,
                            Nome = "Sirinhaém"
                        },
                        new
                        {
                            Id = 2614402,
                            EstadoId = 26,
                            Nome = "Solidão"
                        },
                        new
                        {
                            Id = 2614501,
                            EstadoId = 26,
                            Nome = "Surubim"
                        },
                        new
                        {
                            Id = 2614600,
                            EstadoId = 26,
                            Nome = "Tabira"
                        },
                        new
                        {
                            Id = 2614709,
                            EstadoId = 26,
                            Nome = "Tacaimbó"
                        },
                        new
                        {
                            Id = 2614808,
                            EstadoId = 26,
                            Nome = "Tacaratu"
                        },
                        new
                        {
                            Id = 2614857,
                            EstadoId = 26,
                            Nome = "Tamandaré"
                        },
                        new
                        {
                            Id = 2615003,
                            EstadoId = 26,
                            Nome = "Taquaritinga do Norte"
                        },
                        new
                        {
                            Id = 2615102,
                            EstadoId = 26,
                            Nome = "Terezinha"
                        },
                        new
                        {
                            Id = 2615201,
                            EstadoId = 26,
                            Nome = "Terra Nova"
                        },
                        new
                        {
                            Id = 2615300,
                            EstadoId = 26,
                            Nome = "Timbaúba"
                        },
                        new
                        {
                            Id = 2615409,
                            EstadoId = 26,
                            Nome = "Toritama"
                        },
                        new
                        {
                            Id = 2615508,
                            EstadoId = 26,
                            Nome = "Tracunhaém"
                        },
                        new
                        {
                            Id = 2615607,
                            EstadoId = 26,
                            Nome = "Trindade"
                        },
                        new
                        {
                            Id = 2615706,
                            EstadoId = 26,
                            Nome = "Triunfo"
                        },
                        new
                        {
                            Id = 2615805,
                            EstadoId = 26,
                            Nome = "Tupanatinga"
                        },
                        new
                        {
                            Id = 2615904,
                            EstadoId = 26,
                            Nome = "Tuparetama"
                        },
                        new
                        {
                            Id = 2616001,
                            EstadoId = 26,
                            Nome = "Venturosa"
                        },
                        new
                        {
                            Id = 2616100,
                            EstadoId = 26,
                            Nome = "Verdejante"
                        },
                        new
                        {
                            Id = 2616183,
                            EstadoId = 26,
                            Nome = "Vertente do Lério"
                        },
                        new
                        {
                            Id = 2616209,
                            EstadoId = 26,
                            Nome = "Vertentes"
                        },
                        new
                        {
                            Id = 2616308,
                            EstadoId = 26,
                            Nome = "Vicência"
                        },
                        new
                        {
                            Id = 2616407,
                            EstadoId = 26,
                            Nome = "Vitória de Santo Antão"
                        },
                        new
                        {
                            Id = 2616506,
                            EstadoId = 26,
                            Nome = "Xexéu"
                        },
                        new
                        {
                            Id = 2700102,
                            EstadoId = 27,
                            Nome = "Água Branca"
                        },
                        new
                        {
                            Id = 2700201,
                            EstadoId = 27,
                            Nome = "Anadia"
                        },
                        new
                        {
                            Id = 2700300,
                            EstadoId = 27,
                            Nome = "Arapiraca"
                        },
                        new
                        {
                            Id = 2700409,
                            EstadoId = 27,
                            Nome = "Atalaia"
                        },
                        new
                        {
                            Id = 2700508,
                            EstadoId = 27,
                            Nome = "Barra de Santo Antônio"
                        },
                        new
                        {
                            Id = 2700607,
                            EstadoId = 27,
                            Nome = "Barra de São Miguel"
                        },
                        new
                        {
                            Id = 2700706,
                            EstadoId = 27,
                            Nome = "Batalha"
                        },
                        new
                        {
                            Id = 2700805,
                            EstadoId = 27,
                            Nome = "Belém"
                        },
                        new
                        {
                            Id = 2700904,
                            EstadoId = 27,
                            Nome = "Belo Monte"
                        },
                        new
                        {
                            Id = 2701001,
                            EstadoId = 27,
                            Nome = "Boca da Mata"
                        },
                        new
                        {
                            Id = 2701100,
                            EstadoId = 27,
                            Nome = "Branquinha"
                        },
                        new
                        {
                            Id = 2701209,
                            EstadoId = 27,
                            Nome = "Cacimbinhas"
                        },
                        new
                        {
                            Id = 2701308,
                            EstadoId = 27,
                            Nome = "Cajueiro"
                        },
                        new
                        {
                            Id = 2701357,
                            EstadoId = 27,
                            Nome = "Campestre"
                        },
                        new
                        {
                            Id = 2701407,
                            EstadoId = 27,
                            Nome = "Campo Alegre"
                        },
                        new
                        {
                            Id = 2701506,
                            EstadoId = 27,
                            Nome = "Campo Grande"
                        },
                        new
                        {
                            Id = 2701605,
                            EstadoId = 27,
                            Nome = "Canapi"
                        },
                        new
                        {
                            Id = 2701704,
                            EstadoId = 27,
                            Nome = "Capela"
                        },
                        new
                        {
                            Id = 2701803,
                            EstadoId = 27,
                            Nome = "Carneiros"
                        },
                        new
                        {
                            Id = 2701902,
                            EstadoId = 27,
                            Nome = "Chã Preta"
                        },
                        new
                        {
                            Id = 2702009,
                            EstadoId = 27,
                            Nome = "Coité do Nóia"
                        },
                        new
                        {
                            Id = 2702108,
                            EstadoId = 27,
                            Nome = "Colônia Leopoldina"
                        },
                        new
                        {
                            Id = 2702207,
                            EstadoId = 27,
                            Nome = "Coqueiro Seco"
                        },
                        new
                        {
                            Id = 2702306,
                            EstadoId = 27,
                            Nome = "Coruripe"
                        },
                        new
                        {
                            Id = 2702355,
                            EstadoId = 27,
                            Nome = "Craíbas"
                        },
                        new
                        {
                            Id = 2702405,
                            EstadoId = 27,
                            Nome = "Delmiro Gouveia"
                        },
                        new
                        {
                            Id = 2702504,
                            EstadoId = 27,
                            Nome = "Dois Riachos"
                        },
                        new
                        {
                            Id = 2702553,
                            EstadoId = 27,
                            Nome = "Estrela de Alagoas"
                        },
                        new
                        {
                            Id = 2702603,
                            EstadoId = 27,
                            Nome = "Feira Grande"
                        },
                        new
                        {
                            Id = 2702702,
                            EstadoId = 27,
                            Nome = "Feliz Deserto"
                        },
                        new
                        {
                            Id = 2702801,
                            EstadoId = 27,
                            Nome = "Flexeiras"
                        },
                        new
                        {
                            Id = 2702900,
                            EstadoId = 27,
                            Nome = "Girau do Ponciano"
                        },
                        new
                        {
                            Id = 2703007,
                            EstadoId = 27,
                            Nome = "Ibateguara"
                        },
                        new
                        {
                            Id = 2703106,
                            EstadoId = 27,
                            Nome = "Igaci"
                        },
                        new
                        {
                            Id = 2703205,
                            EstadoId = 27,
                            Nome = "Igreja Nova"
                        },
                        new
                        {
                            Id = 2703304,
                            EstadoId = 27,
                            Nome = "Inhapi"
                        },
                        new
                        {
                            Id = 2703403,
                            EstadoId = 27,
                            Nome = "Jacaré dos Homens"
                        },
                        new
                        {
                            Id = 2703502,
                            EstadoId = 27,
                            Nome = "Jacuípe"
                        },
                        new
                        {
                            Id = 2703601,
                            EstadoId = 27,
                            Nome = "Japaratinga"
                        },
                        new
                        {
                            Id = 2703700,
                            EstadoId = 27,
                            Nome = "Jaramataia"
                        },
                        new
                        {
                            Id = 2703759,
                            EstadoId = 27,
                            Nome = "Jequiá da Praia"
                        },
                        new
                        {
                            Id = 2703809,
                            EstadoId = 27,
                            Nome = "Joaquim Gomes"
                        },
                        new
                        {
                            Id = 2703908,
                            EstadoId = 27,
                            Nome = "Jundiá"
                        },
                        new
                        {
                            Id = 2704005,
                            EstadoId = 27,
                            Nome = "Junqueiro"
                        },
                        new
                        {
                            Id = 2704104,
                            EstadoId = 27,
                            Nome = "Lagoa da Canoa"
                        },
                        new
                        {
                            Id = 2704203,
                            EstadoId = 27,
                            Nome = "Limoeiro de Anadia"
                        },
                        new
                        {
                            Id = 2704302,
                            EstadoId = 27,
                            Nome = "Maceió"
                        },
                        new
                        {
                            Id = 2704401,
                            EstadoId = 27,
                            Nome = "Major Isidoro"
                        },
                        new
                        {
                            Id = 2704906,
                            EstadoId = 27,
                            Nome = "Mar Vermelho"
                        },
                        new
                        {
                            Id = 2704500,
                            EstadoId = 27,
                            Nome = "Maragogi"
                        },
                        new
                        {
                            Id = 2704609,
                            EstadoId = 27,
                            Nome = "Maravilha"
                        },
                        new
                        {
                            Id = 2704708,
                            EstadoId = 27,
                            Nome = "Marechal Deodoro"
                        },
                        new
                        {
                            Id = 2704807,
                            EstadoId = 27,
                            Nome = "Maribondo"
                        },
                        new
                        {
                            Id = 2705002,
                            EstadoId = 27,
                            Nome = "Mata Grande"
                        },
                        new
                        {
                            Id = 2705101,
                            EstadoId = 27,
                            Nome = "Matriz de Camaragibe"
                        },
                        new
                        {
                            Id = 2705200,
                            EstadoId = 27,
                            Nome = "Messias"
                        },
                        new
                        {
                            Id = 2705309,
                            EstadoId = 27,
                            Nome = "Minador do Negrão"
                        },
                        new
                        {
                            Id = 2705408,
                            EstadoId = 27,
                            Nome = "Monteirópolis"
                        },
                        new
                        {
                            Id = 2705507,
                            EstadoId = 27,
                            Nome = "Murici"
                        },
                        new
                        {
                            Id = 2705606,
                            EstadoId = 27,
                            Nome = "Novo Lino"
                        },
                        new
                        {
                            Id = 2705705,
                            EstadoId = 27,
                            Nome = "Olho dÁgua das Flores"
                        },
                        new
                        {
                            Id = 2705804,
                            EstadoId = 27,
                            Nome = "Olho dÁgua do Casado"
                        },
                        new
                        {
                            Id = 2705903,
                            EstadoId = 27,
                            Nome = "Olho dÁgua Grande"
                        },
                        new
                        {
                            Id = 2706000,
                            EstadoId = 27,
                            Nome = "Olivença"
                        },
                        new
                        {
                            Id = 2706109,
                            EstadoId = 27,
                            Nome = "Ouro Branco"
                        },
                        new
                        {
                            Id = 2706208,
                            EstadoId = 27,
                            Nome = "Palestina"
                        },
                        new
                        {
                            Id = 2706307,
                            EstadoId = 27,
                            Nome = "Palmeira dos Índios"
                        },
                        new
                        {
                            Id = 2706406,
                            EstadoId = 27,
                            Nome = "Pão de Açúcar"
                        },
                        new
                        {
                            Id = 2706422,
                            EstadoId = 27,
                            Nome = "Pariconha"
                        },
                        new
                        {
                            Id = 2706448,
                            EstadoId = 27,
                            Nome = "Paripueira"
                        },
                        new
                        {
                            Id = 2706505,
                            EstadoId = 27,
                            Nome = "Passo de Camaragibe"
                        },
                        new
                        {
                            Id = 2706604,
                            EstadoId = 27,
                            Nome = "Paulo Jacinto"
                        },
                        new
                        {
                            Id = 2706703,
                            EstadoId = 27,
                            Nome = "Penedo"
                        },
                        new
                        {
                            Id = 2706802,
                            EstadoId = 27,
                            Nome = "Piaçabuçu"
                        },
                        new
                        {
                            Id = 2706901,
                            EstadoId = 27,
                            Nome = "Pilar"
                        },
                        new
                        {
                            Id = 2707008,
                            EstadoId = 27,
                            Nome = "Pindoba"
                        },
                        new
                        {
                            Id = 2707107,
                            EstadoId = 27,
                            Nome = "Piranhas"
                        },
                        new
                        {
                            Id = 2707206,
                            EstadoId = 27,
                            Nome = "Poço das Trincheiras"
                        },
                        new
                        {
                            Id = 2707305,
                            EstadoId = 27,
                            Nome = "Porto Calvo"
                        },
                        new
                        {
                            Id = 2707404,
                            EstadoId = 27,
                            Nome = "Porto de Pedras"
                        },
                        new
                        {
                            Id = 2707503,
                            EstadoId = 27,
                            Nome = "Porto Real do Colégio"
                        },
                        new
                        {
                            Id = 2707602,
                            EstadoId = 27,
                            Nome = "Quebrangulo"
                        },
                        new
                        {
                            Id = 2707701,
                            EstadoId = 27,
                            Nome = "Rio Largo"
                        },
                        new
                        {
                            Id = 2707800,
                            EstadoId = 27,
                            Nome = "Roteiro"
                        },
                        new
                        {
                            Id = 2707909,
                            EstadoId = 27,
                            Nome = "Santa Luzia do Norte"
                        },
                        new
                        {
                            Id = 2708006,
                            EstadoId = 27,
                            Nome = "Santana do Ipanema"
                        },
                        new
                        {
                            Id = 2708105,
                            EstadoId = 27,
                            Nome = "Santana do Mundaú"
                        },
                        new
                        {
                            Id = 2708204,
                            EstadoId = 27,
                            Nome = "São Brás"
                        },
                        new
                        {
                            Id = 2708303,
                            EstadoId = 27,
                            Nome = "São José da Laje"
                        },
                        new
                        {
                            Id = 2708402,
                            EstadoId = 27,
                            Nome = "São José da Tapera"
                        },
                        new
                        {
                            Id = 2708501,
                            EstadoId = 27,
                            Nome = "São Luís do Quitunde"
                        },
                        new
                        {
                            Id = 2708600,
                            EstadoId = 27,
                            Nome = "São Miguel dos Campos"
                        },
                        new
                        {
                            Id = 2708709,
                            EstadoId = 27,
                            Nome = "São Miguel dos Milagres"
                        },
                        new
                        {
                            Id = 2708808,
                            EstadoId = 27,
                            Nome = "São Sebastião"
                        },
                        new
                        {
                            Id = 2708907,
                            EstadoId = 27,
                            Nome = "Satuba"
                        },
                        new
                        {
                            Id = 2708956,
                            EstadoId = 27,
                            Nome = "Senador Rui Palmeira"
                        },
                        new
                        {
                            Id = 2709004,
                            EstadoId = 27,
                            Nome = "Tanque dArca"
                        },
                        new
                        {
                            Id = 2709103,
                            EstadoId = 27,
                            Nome = "Taquarana"
                        },
                        new
                        {
                            Id = 2709152,
                            EstadoId = 27,
                            Nome = "Teotônio Vilela"
                        },
                        new
                        {
                            Id = 2709202,
                            EstadoId = 27,
                            Nome = "Traipu"
                        },
                        new
                        {
                            Id = 2709301,
                            EstadoId = 27,
                            Nome = "União dos Palmares"
                        },
                        new
                        {
                            Id = 2709400,
                            EstadoId = 27,
                            Nome = "Viçosa"
                        },
                        new
                        {
                            Id = 2800100,
                            EstadoId = 28,
                            Nome = "Amparo de São Francisco"
                        },
                        new
                        {
                            Id = 2800209,
                            EstadoId = 28,
                            Nome = "Aquidabã"
                        },
                        new
                        {
                            Id = 2800308,
                            EstadoId = 28,
                            Nome = "Aracaju"
                        },
                        new
                        {
                            Id = 2800407,
                            EstadoId = 28,
                            Nome = "Arauá"
                        },
                        new
                        {
                            Id = 2800506,
                            EstadoId = 28,
                            Nome = "Areia Branca"
                        },
                        new
                        {
                            Id = 2800605,
                            EstadoId = 28,
                            Nome = "Barra dos Coqueiros"
                        },
                        new
                        {
                            Id = 2800670,
                            EstadoId = 28,
                            Nome = "Boquim"
                        },
                        new
                        {
                            Id = 2800704,
                            EstadoId = 28,
                            Nome = "Brejo Grande"
                        },
                        new
                        {
                            Id = 2801009,
                            EstadoId = 28,
                            Nome = "Campo do Brito"
                        },
                        new
                        {
                            Id = 2801108,
                            EstadoId = 28,
                            Nome = "Canhoba"
                        },
                        new
                        {
                            Id = 2801207,
                            EstadoId = 28,
                            Nome = "Canindé de São Francisco"
                        },
                        new
                        {
                            Id = 2801306,
                            EstadoId = 28,
                            Nome = "Capela"
                        },
                        new
                        {
                            Id = 2801405,
                            EstadoId = 28,
                            Nome = "Carira"
                        },
                        new
                        {
                            Id = 2801504,
                            EstadoId = 28,
                            Nome = "Carmópolis"
                        },
                        new
                        {
                            Id = 2801603,
                            EstadoId = 28,
                            Nome = "Cedro de São João"
                        },
                        new
                        {
                            Id = 2801702,
                            EstadoId = 28,
                            Nome = "Cristinápolis"
                        },
                        new
                        {
                            Id = 2801900,
                            EstadoId = 28,
                            Nome = "Cumbe"
                        },
                        new
                        {
                            Id = 2802007,
                            EstadoId = 28,
                            Nome = "Divina Pastora"
                        },
                        new
                        {
                            Id = 2802106,
                            EstadoId = 28,
                            Nome = "Estância"
                        },
                        new
                        {
                            Id = 2802205,
                            EstadoId = 28,
                            Nome = "Feira Nova"
                        },
                        new
                        {
                            Id = 2802304,
                            EstadoId = 28,
                            Nome = "Frei Paulo"
                        },
                        new
                        {
                            Id = 2802403,
                            EstadoId = 28,
                            Nome = "Gararu"
                        },
                        new
                        {
                            Id = 2802502,
                            EstadoId = 28,
                            Nome = "General Maynard"
                        },
                        new
                        {
                            Id = 2802601,
                            EstadoId = 28,
                            Nome = "Gracho Cardoso"
                        },
                        new
                        {
                            Id = 2802700,
                            EstadoId = 28,
                            Nome = "Ilha das Flores"
                        },
                        new
                        {
                            Id = 2802809,
                            EstadoId = 28,
                            Nome = "Indiaroba"
                        },
                        new
                        {
                            Id = 2802908,
                            EstadoId = 28,
                            Nome = "Itabaiana"
                        },
                        new
                        {
                            Id = 2803005,
                            EstadoId = 28,
                            Nome = "Itabaianinha"
                        },
                        new
                        {
                            Id = 2803104,
                            EstadoId = 28,
                            Nome = "Itabi"
                        },
                        new
                        {
                            Id = 2803203,
                            EstadoId = 28,
                            Nome = "Itaporanga dAjuda"
                        },
                        new
                        {
                            Id = 2803302,
                            EstadoId = 28,
                            Nome = "Japaratuba"
                        },
                        new
                        {
                            Id = 2803401,
                            EstadoId = 28,
                            Nome = "Japoatã"
                        },
                        new
                        {
                            Id = 2803500,
                            EstadoId = 28,
                            Nome = "Lagarto"
                        },
                        new
                        {
                            Id = 2803609,
                            EstadoId = 28,
                            Nome = "Laranjeiras"
                        },
                        new
                        {
                            Id = 2803708,
                            EstadoId = 28,
                            Nome = "Macambira"
                        },
                        new
                        {
                            Id = 2803807,
                            EstadoId = 28,
                            Nome = "Malhada dos Bois"
                        },
                        new
                        {
                            Id = 2803906,
                            EstadoId = 28,
                            Nome = "Malhador"
                        },
                        new
                        {
                            Id = 2804003,
                            EstadoId = 28,
                            Nome = "Maruim"
                        },
                        new
                        {
                            Id = 2804102,
                            EstadoId = 28,
                            Nome = "Moita Bonita"
                        },
                        new
                        {
                            Id = 2804201,
                            EstadoId = 28,
                            Nome = "Monte Alegre de Sergipe"
                        },
                        new
                        {
                            Id = 2804300,
                            EstadoId = 28,
                            Nome = "Muribeca"
                        },
                        new
                        {
                            Id = 2804409,
                            EstadoId = 28,
                            Nome = "Neópolis"
                        },
                        new
                        {
                            Id = 2804458,
                            EstadoId = 28,
                            Nome = "Nossa Senhora Aparecida"
                        },
                        new
                        {
                            Id = 2804508,
                            EstadoId = 28,
                            Nome = "Nossa Senhora da Glória"
                        },
                        new
                        {
                            Id = 2804607,
                            EstadoId = 28,
                            Nome = "Nossa Senhora das Dores"
                        },
                        new
                        {
                            Id = 2804706,
                            EstadoId = 28,
                            Nome = "Nossa Senhora de Lourdes"
                        },
                        new
                        {
                            Id = 2804805,
                            EstadoId = 28,
                            Nome = "Nossa Senhora do Socorro"
                        },
                        new
                        {
                            Id = 2804904,
                            EstadoId = 28,
                            Nome = "Pacatuba"
                        },
                        new
                        {
                            Id = 2805000,
                            EstadoId = 28,
                            Nome = "Pedra Mole"
                        },
                        new
                        {
                            Id = 2805109,
                            EstadoId = 28,
                            Nome = "Pedrinhas"
                        },
                        new
                        {
                            Id = 2805208,
                            EstadoId = 28,
                            Nome = "Pinhão"
                        },
                        new
                        {
                            Id = 2805307,
                            EstadoId = 28,
                            Nome = "Pirambu"
                        },
                        new
                        {
                            Id = 2805406,
                            EstadoId = 28,
                            Nome = "Poço Redondo"
                        },
                        new
                        {
                            Id = 2805505,
                            EstadoId = 28,
                            Nome = "Poço Verde"
                        },
                        new
                        {
                            Id = 2805604,
                            EstadoId = 28,
                            Nome = "Porto da Folha"
                        },
                        new
                        {
                            Id = 2805703,
                            EstadoId = 28,
                            Nome = "Propriá"
                        },
                        new
                        {
                            Id = 2805802,
                            EstadoId = 28,
                            Nome = "Riachão do Dantas"
                        },
                        new
                        {
                            Id = 2805901,
                            EstadoId = 28,
                            Nome = "Riachuelo"
                        },
                        new
                        {
                            Id = 2806008,
                            EstadoId = 28,
                            Nome = "Ribeirópolis"
                        },
                        new
                        {
                            Id = 2806107,
                            EstadoId = 28,
                            Nome = "Rosário do Catete"
                        },
                        new
                        {
                            Id = 2806206,
                            EstadoId = 28,
                            Nome = "Salgado"
                        },
                        new
                        {
                            Id = 2806305,
                            EstadoId = 28,
                            Nome = "Santa Luzia do Itanhy"
                        },
                        new
                        {
                            Id = 2806503,
                            EstadoId = 28,
                            Nome = "Santa Rosa de Lima"
                        },
                        new
                        {
                            Id = 2806404,
                            EstadoId = 28,
                            Nome = "Santana do São Francisco"
                        },
                        new
                        {
                            Id = 2806602,
                            EstadoId = 28,
                            Nome = "Santo Amaro das Brotas"
                        },
                        new
                        {
                            Id = 2806701,
                            EstadoId = 28,
                            Nome = "São Cristóvão"
                        },
                        new
                        {
                            Id = 2806800,
                            EstadoId = 28,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            Id = 2806909,
                            EstadoId = 28,
                            Nome = "São Francisco"
                        },
                        new
                        {
                            Id = 2807006,
                            EstadoId = 28,
                            Nome = "São Miguel do Aleixo"
                        },
                        new
                        {
                            Id = 2807105,
                            EstadoId = 28,
                            Nome = "Simão Dias"
                        },
                        new
                        {
                            Id = 2807204,
                            EstadoId = 28,
                            Nome = "Siriri"
                        },
                        new
                        {
                            Id = 2807303,
                            EstadoId = 28,
                            Nome = "Telha"
                        },
                        new
                        {
                            Id = 2807402,
                            EstadoId = 28,
                            Nome = "Tobias Barreto"
                        },
                        new
                        {
                            Id = 2807501,
                            EstadoId = 28,
                            Nome = "Tomar do Geru"
                        },
                        new
                        {
                            Id = 2807600,
                            EstadoId = 28,
                            Nome = "Umbaúba"
                        },
                        new
                        {
                            Id = 2900108,
                            EstadoId = 29,
                            Nome = "Abaíra"
                        },
                        new
                        {
                            Id = 2900207,
                            EstadoId = 29,
                            Nome = "Abaré"
                        },
                        new
                        {
                            Id = 2900306,
                            EstadoId = 29,
                            Nome = "Acajutiba"
                        },
                        new
                        {
                            Id = 2900355,
                            EstadoId = 29,
                            Nome = "Adustina"
                        },
                        new
                        {
                            Id = 2900405,
                            EstadoId = 29,
                            Nome = "Água Fria"
                        },
                        new
                        {
                            Id = 2900603,
                            EstadoId = 29,
                            Nome = "Aiquara"
                        },
                        new
                        {
                            Id = 2900702,
                            EstadoId = 29,
                            Nome = "Alagoinhas"
                        },
                        new
                        {
                            Id = 2900801,
                            EstadoId = 29,
                            Nome = "Alcobaça"
                        },
                        new
                        {
                            Id = 2900900,
                            EstadoId = 29,
                            Nome = "Almadina"
                        },
                        new
                        {
                            Id = 2901007,
                            EstadoId = 29,
                            Nome = "Amargosa"
                        },
                        new
                        {
                            Id = 2901106,
                            EstadoId = 29,
                            Nome = "Amélia Rodrigues"
                        },
                        new
                        {
                            Id = 2901155,
                            EstadoId = 29,
                            Nome = "América Dourada"
                        },
                        new
                        {
                            Id = 2901205,
                            EstadoId = 29,
                            Nome = "Anagé"
                        },
                        new
                        {
                            Id = 2901304,
                            EstadoId = 29,
                            Nome = "Andaraí"
                        },
                        new
                        {
                            Id = 2901353,
                            EstadoId = 29,
                            Nome = "Andorinha"
                        },
                        new
                        {
                            Id = 2901403,
                            EstadoId = 29,
                            Nome = "Angical"
                        },
                        new
                        {
                            Id = 2901502,
                            EstadoId = 29,
                            Nome = "Anguera"
                        },
                        new
                        {
                            Id = 2901601,
                            EstadoId = 29,
                            Nome = "Antas"
                        },
                        new
                        {
                            Id = 2901700,
                            EstadoId = 29,
                            Nome = "Antônio Cardoso"
                        },
                        new
                        {
                            Id = 2901809,
                            EstadoId = 29,
                            Nome = "Antônio Gonçalves"
                        },
                        new
                        {
                            Id = 2901908,
                            EstadoId = 29,
                            Nome = "Aporá"
                        },
                        new
                        {
                            Id = 2901957,
                            EstadoId = 29,
                            Nome = "Apuarema"
                        },
                        new
                        {
                            Id = 2902054,
                            EstadoId = 29,
                            Nome = "Araças"
                        },
                        new
                        {
                            Id = 2902005,
                            EstadoId = 29,
                            Nome = "Aracatu"
                        },
                        new
                        {
                            Id = 2902104,
                            EstadoId = 29,
                            Nome = "Araci"
                        },
                        new
                        {
                            Id = 2902203,
                            EstadoId = 29,
                            Nome = "Aramari"
                        },
                        new
                        {
                            Id = 2902252,
                            EstadoId = 29,
                            Nome = "Arataca"
                        },
                        new
                        {
                            Id = 2902302,
                            EstadoId = 29,
                            Nome = "Aratuípe"
                        },
                        new
                        {
                            Id = 2902401,
                            EstadoId = 29,
                            Nome = "Aurelino Leal"
                        },
                        new
                        {
                            Id = 2902500,
                            EstadoId = 29,
                            Nome = "Baianópolis"
                        },
                        new
                        {
                            Id = 2902609,
                            EstadoId = 29,
                            Nome = "Baixa Grande"
                        },
                        new
                        {
                            Id = 2902658,
                            EstadoId = 29,
                            Nome = "Banzaê"
                        },
                        new
                        {
                            Id = 2902708,
                            EstadoId = 29,
                            Nome = "Barra"
                        },
                        new
                        {
                            Id = 2902807,
                            EstadoId = 29,
                            Nome = "Barra da Estiva"
                        },
                        new
                        {
                            Id = 2902906,
                            EstadoId = 29,
                            Nome = "Barra do Choça"
                        },
                        new
                        {
                            Id = 2903003,
                            EstadoId = 29,
                            Nome = "Barra do Mendes"
                        },
                        new
                        {
                            Id = 2903102,
                            EstadoId = 29,
                            Nome = "Barra do Rocha"
                        },
                        new
                        {
                            Id = 2903201,
                            EstadoId = 29,
                            Nome = "Barreiras"
                        },
                        new
                        {
                            Id = 2903235,
                            EstadoId = 29,
                            Nome = "Barro Alto"
                        },
                        new
                        {
                            Id = 2903300,
                            EstadoId = 29,
                            Nome = "Barro Preto"
                        },
                        new
                        {
                            Id = 2903276,
                            EstadoId = 29,
                            Nome = "Barrocas"
                        },
                        new
                        {
                            Id = 2903409,
                            EstadoId = 29,
                            Nome = "Belmonte"
                        },
                        new
                        {
                            Id = 2903508,
                            EstadoId = 29,
                            Nome = "Belo Campo"
                        },
                        new
                        {
                            Id = 2903607,
                            EstadoId = 29,
                            Nome = "Biritinga"
                        },
                        new
                        {
                            Id = 2903706,
                            EstadoId = 29,
                            Nome = "Boa Nova"
                        },
                        new
                        {
                            Id = 2903805,
                            EstadoId = 29,
                            Nome = "Boa Vista do Tupim"
                        },
                        new
                        {
                            Id = 2903904,
                            EstadoId = 29,
                            Nome = "Bom Jesus da Lapa"
                        },
                        new
                        {
                            Id = 2903953,
                            EstadoId = 29,
                            Nome = "Bom Jesus da Serra"
                        },
                        new
                        {
                            Id = 2904001,
                            EstadoId = 29,
                            Nome = "Boninal"
                        },
                        new
                        {
                            Id = 2904050,
                            EstadoId = 29,
                            Nome = "Bonito"
                        },
                        new
                        {
                            Id = 2904100,
                            EstadoId = 29,
                            Nome = "Boquira"
                        },
                        new
                        {
                            Id = 2904209,
                            EstadoId = 29,
                            Nome = "Botuporã"
                        },
                        new
                        {
                            Id = 2904308,
                            EstadoId = 29,
                            Nome = "Brejões"
                        },
                        new
                        {
                            Id = 2904407,
                            EstadoId = 29,
                            Nome = "Brejolândia"
                        },
                        new
                        {
                            Id = 2904506,
                            EstadoId = 29,
                            Nome = "Brotas de Macaúbas"
                        },
                        new
                        {
                            Id = 2904605,
                            EstadoId = 29,
                            Nome = "Brumado"
                        },
                        new
                        {
                            Id = 2904704,
                            EstadoId = 29,
                            Nome = "Buerarema"
                        },
                        new
                        {
                            Id = 2904753,
                            EstadoId = 29,
                            Nome = "Buritirama"
                        },
                        new
                        {
                            Id = 2904803,
                            EstadoId = 29,
                            Nome = "Caatiba"
                        },
                        new
                        {
                            Id = 2904852,
                            EstadoId = 29,
                            Nome = "Cabaceiras do Paraguaçu"
                        },
                        new
                        {
                            Id = 2904902,
                            EstadoId = 29,
                            Nome = "Cachoeira"
                        },
                        new
                        {
                            Id = 2905008,
                            EstadoId = 29,
                            Nome = "Caculé"
                        },
                        new
                        {
                            Id = 2905107,
                            EstadoId = 29,
                            Nome = "Caém"
                        },
                        new
                        {
                            Id = 2905156,
                            EstadoId = 29,
                            Nome = "Caetanos"
                        },
                        new
                        {
                            Id = 2905206,
                            EstadoId = 29,
                            Nome = "Caetité"
                        },
                        new
                        {
                            Id = 2905305,
                            EstadoId = 29,
                            Nome = "Cafarnaum"
                        },
                        new
                        {
                            Id = 2905404,
                            EstadoId = 29,
                            Nome = "Cairu"
                        },
                        new
                        {
                            Id = 2905503,
                            EstadoId = 29,
                            Nome = "Caldeirão Grande"
                        },
                        new
                        {
                            Id = 2905602,
                            EstadoId = 29,
                            Nome = "Camacan"
                        },
                        new
                        {
                            Id = 2905701,
                            EstadoId = 29,
                            Nome = "Camaçari"
                        },
                        new
                        {
                            Id = 2905800,
                            EstadoId = 29,
                            Nome = "Camamu"
                        },
                        new
                        {
                            Id = 2905909,
                            EstadoId = 29,
                            Nome = "Campo Alegre de Lourdes"
                        },
                        new
                        {
                            Id = 2906006,
                            EstadoId = 29,
                            Nome = "Campo Formoso"
                        },
                        new
                        {
                            Id = 2906105,
                            EstadoId = 29,
                            Nome = "Canápolis"
                        },
                        new
                        {
                            Id = 2906204,
                            EstadoId = 29,
                            Nome = "Canarana"
                        },
                        new
                        {
                            Id = 2906303,
                            EstadoId = 29,
                            Nome = "Canavieiras"
                        },
                        new
                        {
                            Id = 2906402,
                            EstadoId = 29,
                            Nome = "Candeal"
                        },
                        new
                        {
                            Id = 2906501,
                            EstadoId = 29,
                            Nome = "Candeias"
                        },
                        new
                        {
                            Id = 2906600,
                            EstadoId = 29,
                            Nome = "Candiba"
                        },
                        new
                        {
                            Id = 2906709,
                            EstadoId = 29,
                            Nome = "Cândido Sales"
                        },
                        new
                        {
                            Id = 2906808,
                            EstadoId = 29,
                            Nome = "Cansanção"
                        },
                        new
                        {
                            Id = 2906824,
                            EstadoId = 29,
                            Nome = "Canudos"
                        },
                        new
                        {
                            Id = 2906857,
                            EstadoId = 29,
                            Nome = "Capela do Alto Alegre"
                        },
                        new
                        {
                            Id = 2906873,
                            EstadoId = 29,
                            Nome = "Capim Grosso"
                        },
                        new
                        {
                            Id = 2906899,
                            EstadoId = 29,
                            Nome = "Caraíbas"
                        },
                        new
                        {
                            Id = 2906907,
                            EstadoId = 29,
                            Nome = "Caravelas"
                        },
                        new
                        {
                            Id = 2907004,
                            EstadoId = 29,
                            Nome = "Cardeal da Silva"
                        },
                        new
                        {
                            Id = 2907103,
                            EstadoId = 29,
                            Nome = "Carinhanha"
                        },
                        new
                        {
                            Id = 2907202,
                            EstadoId = 29,
                            Nome = "Casa Nova"
                        },
                        new
                        {
                            Id = 2907301,
                            EstadoId = 29,
                            Nome = "Castro Alves"
                        },
                        new
                        {
                            Id = 2907400,
                            EstadoId = 29,
                            Nome = "Catolândia"
                        },
                        new
                        {
                            Id = 2907509,
                            EstadoId = 29,
                            Nome = "Catu"
                        },
                        new
                        {
                            Id = 2907558,
                            EstadoId = 29,
                            Nome = "Caturama"
                        },
                        new
                        {
                            Id = 2907608,
                            EstadoId = 29,
                            Nome = "Central"
                        },
                        new
                        {
                            Id = 2907707,
                            EstadoId = 29,
                            Nome = "Chorrochó"
                        },
                        new
                        {
                            Id = 2907806,
                            EstadoId = 29,
                            Nome = "Cícero Dantas"
                        },
                        new
                        {
                            Id = 2907905,
                            EstadoId = 29,
                            Nome = "Cipó"
                        },
                        new
                        {
                            Id = 2908002,
                            EstadoId = 29,
                            Nome = "Coaraci"
                        },
                        new
                        {
                            Id = 2908101,
                            EstadoId = 29,
                            Nome = "Cocos"
                        },
                        new
                        {
                            Id = 2908200,
                            EstadoId = 29,
                            Nome = "Conceição da Feira"
                        },
                        new
                        {
                            Id = 2908309,
                            EstadoId = 29,
                            Nome = "Conceição do Almeida"
                        },
                        new
                        {
                            Id = 2908408,
                            EstadoId = 29,
                            Nome = "Conceição do Coité"
                        },
                        new
                        {
                            Id = 2908507,
                            EstadoId = 29,
                            Nome = "Conceição do Jacuípe"
                        },
                        new
                        {
                            Id = 2908606,
                            EstadoId = 29,
                            Nome = "Conde"
                        },
                        new
                        {
                            Id = 2908705,
                            EstadoId = 29,
                            Nome = "Condeúba"
                        },
                        new
                        {
                            Id = 2908804,
                            EstadoId = 29,
                            Nome = "Contendas do Sincorá"
                        },
                        new
                        {
                            Id = 2908903,
                            EstadoId = 29,
                            Nome = "Coração de Maria"
                        },
                        new
                        {
                            Id = 2909000,
                            EstadoId = 29,
                            Nome = "Cordeiros"
                        },
                        new
                        {
                            Id = 2909109,
                            EstadoId = 29,
                            Nome = "Coribe"
                        },
                        new
                        {
                            Id = 2909208,
                            EstadoId = 29,
                            Nome = "Coronel João Sá"
                        },
                        new
                        {
                            Id = 2909307,
                            EstadoId = 29,
                            Nome = "Correntina"
                        },
                        new
                        {
                            Id = 2909406,
                            EstadoId = 29,
                            Nome = "Cotegipe"
                        },
                        new
                        {
                            Id = 2909505,
                            EstadoId = 29,
                            Nome = "Cravolândia"
                        },
                        new
                        {
                            Id = 2909604,
                            EstadoId = 29,
                            Nome = "Crisópolis"
                        },
                        new
                        {
                            Id = 2909703,
                            EstadoId = 29,
                            Nome = "Cristópolis"
                        },
                        new
                        {
                            Id = 2909802,
                            EstadoId = 29,
                            Nome = "Cruz das Almas"
                        },
                        new
                        {
                            Id = 2909901,
                            EstadoId = 29,
                            Nome = "Curaçá"
                        },
                        new
                        {
                            Id = 2910008,
                            EstadoId = 29,
                            Nome = "Dário Meira"
                        },
                        new
                        {
                            Id = 2910057,
                            EstadoId = 29,
                            Nome = "Dias dÁvila"
                        },
                        new
                        {
                            Id = 2910107,
                            EstadoId = 29,
                            Nome = "Dom Basílio"
                        },
                        new
                        {
                            Id = 2910206,
                            EstadoId = 29,
                            Nome = "Dom Macedo Costa"
                        },
                        new
                        {
                            Id = 2910305,
                            EstadoId = 29,
                            Nome = "Elísio Medrado"
                        },
                        new
                        {
                            Id = 2910404,
                            EstadoId = 29,
                            Nome = "Encruzilhada"
                        },
                        new
                        {
                            Id = 2910503,
                            EstadoId = 29,
                            Nome = "Entre Rios"
                        },
                        new
                        {
                            Id = 2900504,
                            EstadoId = 29,
                            Nome = "Érico Cardoso"
                        },
                        new
                        {
                            Id = 2910602,
                            EstadoId = 29,
                            Nome = "Esplanada"
                        },
                        new
                        {
                            Id = 2910701,
                            EstadoId = 29,
                            Nome = "Euclides da Cunha"
                        },
                        new
                        {
                            Id = 2910727,
                            EstadoId = 29,
                            Nome = "Eunápolis"
                        },
                        new
                        {
                            Id = 2910750,
                            EstadoId = 29,
                            Nome = "Fátima"
                        },
                        new
                        {
                            Id = 2910776,
                            EstadoId = 29,
                            Nome = "Feira da Mata"
                        },
                        new
                        {
                            Id = 2910800,
                            EstadoId = 29,
                            Nome = "Feira de Santana"
                        },
                        new
                        {
                            Id = 2910859,
                            EstadoId = 29,
                            Nome = "Filadélfia"
                        },
                        new
                        {
                            Id = 2910909,
                            EstadoId = 29,
                            Nome = "Firmino Alves"
                        },
                        new
                        {
                            Id = 2911006,
                            EstadoId = 29,
                            Nome = "Floresta Azul"
                        },
                        new
                        {
                            Id = 2911105,
                            EstadoId = 29,
                            Nome = "Formosa do Rio Preto"
                        },
                        new
                        {
                            Id = 2911204,
                            EstadoId = 29,
                            Nome = "Gandu"
                        },
                        new
                        {
                            Id = 2911253,
                            EstadoId = 29,
                            Nome = "Gavião"
                        },
                        new
                        {
                            Id = 2911303,
                            EstadoId = 29,
                            Nome = "Gentio do Ouro"
                        },
                        new
                        {
                            Id = 2911402,
                            EstadoId = 29,
                            Nome = "Glória"
                        },
                        new
                        {
                            Id = 2911501,
                            EstadoId = 29,
                            Nome = "Gongogi"
                        },
                        new
                        {
                            Id = 2911600,
                            EstadoId = 29,
                            Nome = "Governador Mangabeira"
                        },
                        new
                        {
                            Id = 2911659,
                            EstadoId = 29,
                            Nome = "Guajeru"
                        },
                        new
                        {
                            Id = 2911709,
                            EstadoId = 29,
                            Nome = "Guanambi"
                        },
                        new
                        {
                            Id = 2911808,
                            EstadoId = 29,
                            Nome = "Guaratinga"
                        },
                        new
                        {
                            Id = 2911857,
                            EstadoId = 29,
                            Nome = "Heliópolis"
                        },
                        new
                        {
                            Id = 2911907,
                            EstadoId = 29,
                            Nome = "Iaçu"
                        },
                        new
                        {
                            Id = 2912004,
                            EstadoId = 29,
                            Nome = "Ibiassucê"
                        },
                        new
                        {
                            Id = 2912103,
                            EstadoId = 29,
                            Nome = "Ibicaraí"
                        },
                        new
                        {
                            Id = 2912202,
                            EstadoId = 29,
                            Nome = "Ibicoara"
                        },
                        new
                        {
                            Id = 2912301,
                            EstadoId = 29,
                            Nome = "Ibicuí"
                        },
                        new
                        {
                            Id = 2912400,
                            EstadoId = 29,
                            Nome = "Ibipeba"
                        },
                        new
                        {
                            Id = 2912509,
                            EstadoId = 29,
                            Nome = "Ibipitanga"
                        },
                        new
                        {
                            Id = 2912608,
                            EstadoId = 29,
                            Nome = "Ibiquera"
                        },
                        new
                        {
                            Id = 2912707,
                            EstadoId = 29,
                            Nome = "Ibirapitanga"
                        },
                        new
                        {
                            Id = 2912806,
                            EstadoId = 29,
                            Nome = "Ibirapuã"
                        },
                        new
                        {
                            Id = 2912905,
                            EstadoId = 29,
                            Nome = "Ibirataia"
                        },
                        new
                        {
                            Id = 2913002,
                            EstadoId = 29,
                            Nome = "Ibitiara"
                        },
                        new
                        {
                            Id = 2913101,
                            EstadoId = 29,
                            Nome = "Ibititá"
                        },
                        new
                        {
                            Id = 2913200,
                            EstadoId = 29,
                            Nome = "Ibotirama"
                        },
                        new
                        {
                            Id = 2913309,
                            EstadoId = 29,
                            Nome = "Ichu"
                        },
                        new
                        {
                            Id = 2913408,
                            EstadoId = 29,
                            Nome = "Igaporã"
                        },
                        new
                        {
                            Id = 2913457,
                            EstadoId = 29,
                            Nome = "Igrapiúna"
                        },
                        new
                        {
                            Id = 2913507,
                            EstadoId = 29,
                            Nome = "Iguaí"
                        },
                        new
                        {
                            Id = 2913606,
                            EstadoId = 29,
                            Nome = "Ilhéus"
                        },
                        new
                        {
                            Id = 2913705,
                            EstadoId = 29,
                            Nome = "Inhambupe"
                        },
                        new
                        {
                            Id = 2913804,
                            EstadoId = 29,
                            Nome = "Ipecaetá"
                        },
                        new
                        {
                            Id = 2913903,
                            EstadoId = 29,
                            Nome = "Ipiaú"
                        },
                        new
                        {
                            Id = 2914000,
                            EstadoId = 29,
                            Nome = "Ipirá"
                        },
                        new
                        {
                            Id = 2914109,
                            EstadoId = 29,
                            Nome = "Ipupiara"
                        },
                        new
                        {
                            Id = 2914208,
                            EstadoId = 29,
                            Nome = "Irajuba"
                        },
                        new
                        {
                            Id = 2914307,
                            EstadoId = 29,
                            Nome = "Iramaia"
                        },
                        new
                        {
                            Id = 2914406,
                            EstadoId = 29,
                            Nome = "Iraquara"
                        },
                        new
                        {
                            Id = 2914505,
                            EstadoId = 29,
                            Nome = "Irará"
                        },
                        new
                        {
                            Id = 2914604,
                            EstadoId = 29,
                            Nome = "Irecê"
                        },
                        new
                        {
                            Id = 2914653,
                            EstadoId = 29,
                            Nome = "Itabela"
                        },
                        new
                        {
                            Id = 2914703,
                            EstadoId = 29,
                            Nome = "Itaberaba"
                        },
                        new
                        {
                            Id = 2914802,
                            EstadoId = 29,
                            Nome = "Itabuna"
                        },
                        new
                        {
                            Id = 2914901,
                            EstadoId = 29,
                            Nome = "Itacaré"
                        },
                        new
                        {
                            Id = 2915007,
                            EstadoId = 29,
                            Nome = "Itaeté"
                        },
                        new
                        {
                            Id = 2915106,
                            EstadoId = 29,
                            Nome = "Itagi"
                        },
                        new
                        {
                            Id = 2915205,
                            EstadoId = 29,
                            Nome = "Itagibá"
                        },
                        new
                        {
                            Id = 2915304,
                            EstadoId = 29,
                            Nome = "Itagimirim"
                        },
                        new
                        {
                            Id = 2915353,
                            EstadoId = 29,
                            Nome = "Itaguaçu da Bahia"
                        },
                        new
                        {
                            Id = 2915403,
                            EstadoId = 29,
                            Nome = "Itaju do Colônia"
                        },
                        new
                        {
                            Id = 2915502,
                            EstadoId = 29,
                            Nome = "Itajuípe"
                        },
                        new
                        {
                            Id = 2915601,
                            EstadoId = 29,
                            Nome = "Itamaraju"
                        },
                        new
                        {
                            Id = 2915700,
                            EstadoId = 29,
                            Nome = "Itamari"
                        },
                        new
                        {
                            Id = 2915809,
                            EstadoId = 29,
                            Nome = "Itambé"
                        },
                        new
                        {
                            Id = 2915908,
                            EstadoId = 29,
                            Nome = "Itanagra"
                        },
                        new
                        {
                            Id = 2916005,
                            EstadoId = 29,
                            Nome = "Itanhém"
                        },
                        new
                        {
                            Id = 2916104,
                            EstadoId = 29,
                            Nome = "Itaparica"
                        },
                        new
                        {
                            Id = 2916203,
                            EstadoId = 29,
                            Nome = "Itapé"
                        },
                        new
                        {
                            Id = 2916302,
                            EstadoId = 29,
                            Nome = "Itapebi"
                        },
                        new
                        {
                            Id = 2916401,
                            EstadoId = 29,
                            Nome = "Itapetinga"
                        },
                        new
                        {
                            Id = 2916500,
                            EstadoId = 29,
                            Nome = "Itapicuru"
                        },
                        new
                        {
                            Id = 2916609,
                            EstadoId = 29,
                            Nome = "Itapitanga"
                        },
                        new
                        {
                            Id = 2916708,
                            EstadoId = 29,
                            Nome = "Itaquara"
                        },
                        new
                        {
                            Id = 2916807,
                            EstadoId = 29,
                            Nome = "Itarantim"
                        },
                        new
                        {
                            Id = 2916856,
                            EstadoId = 29,
                            Nome = "Itatim"
                        },
                        new
                        {
                            Id = 2916906,
                            EstadoId = 29,
                            Nome = "Itiruçu"
                        },
                        new
                        {
                            Id = 2917003,
                            EstadoId = 29,
                            Nome = "Itiúba"
                        },
                        new
                        {
                            Id = 2917102,
                            EstadoId = 29,
                            Nome = "Itororó"
                        },
                        new
                        {
                            Id = 2917201,
                            EstadoId = 29,
                            Nome = "Ituaçu"
                        },
                        new
                        {
                            Id = 2917300,
                            EstadoId = 29,
                            Nome = "Ituberá"
                        },
                        new
                        {
                            Id = 2917334,
                            EstadoId = 29,
                            Nome = "Iuiú"
                        },
                        new
                        {
                            Id = 2917359,
                            EstadoId = 29,
                            Nome = "Jaborandi"
                        },
                        new
                        {
                            Id = 2917409,
                            EstadoId = 29,
                            Nome = "Jacaraci"
                        },
                        new
                        {
                            Id = 2917508,
                            EstadoId = 29,
                            Nome = "Jacobina"
                        },
                        new
                        {
                            Id = 2917607,
                            EstadoId = 29,
                            Nome = "Jaguaquara"
                        },
                        new
                        {
                            Id = 2917706,
                            EstadoId = 29,
                            Nome = "Jaguarari"
                        },
                        new
                        {
                            Id = 2917805,
                            EstadoId = 29,
                            Nome = "Jaguaripe"
                        },
                        new
                        {
                            Id = 2917904,
                            EstadoId = 29,
                            Nome = "Jandaíra"
                        },
                        new
                        {
                            Id = 2918001,
                            EstadoId = 29,
                            Nome = "Jequié"
                        },
                        new
                        {
                            Id = 2918100,
                            EstadoId = 29,
                            Nome = "Jeremoabo"
                        },
                        new
                        {
                            Id = 2918209,
                            EstadoId = 29,
                            Nome = "Jiquiriçá"
                        },
                        new
                        {
                            Id = 2918308,
                            EstadoId = 29,
                            Nome = "Jitaúna"
                        },
                        new
                        {
                            Id = 2918357,
                            EstadoId = 29,
                            Nome = "João Dourado"
                        },
                        new
                        {
                            Id = 2918407,
                            EstadoId = 29,
                            Nome = "Juazeiro"
                        },
                        new
                        {
                            Id = 2918456,
                            EstadoId = 29,
                            Nome = "Jucuruçu"
                        },
                        new
                        {
                            Id = 2918506,
                            EstadoId = 29,
                            Nome = "Jussara"
                        },
                        new
                        {
                            Id = 2918555,
                            EstadoId = 29,
                            Nome = "Jussari"
                        },
                        new
                        {
                            Id = 2918605,
                            EstadoId = 29,
                            Nome = "Jussiape"
                        },
                        new
                        {
                            Id = 2918704,
                            EstadoId = 29,
                            Nome = "Lafaiete Coutinho"
                        },
                        new
                        {
                            Id = 2918753,
                            EstadoId = 29,
                            Nome = "Lagoa Real"
                        },
                        new
                        {
                            Id = 2918803,
                            EstadoId = 29,
                            Nome = "Laje"
                        },
                        new
                        {
                            Id = 2918902,
                            EstadoId = 29,
                            Nome = "Lajedão"
                        },
                        new
                        {
                            Id = 2919009,
                            EstadoId = 29,
                            Nome = "Lajedinho"
                        },
                        new
                        {
                            Id = 2919058,
                            EstadoId = 29,
                            Nome = "Lajedo do Tabocal"
                        },
                        new
                        {
                            Id = 2919108,
                            EstadoId = 29,
                            Nome = "Lamarão"
                        },
                        new
                        {
                            Id = 2919157,
                            EstadoId = 29,
                            Nome = "Lapão"
                        },
                        new
                        {
                            Id = 2919207,
                            EstadoId = 29,
                            Nome = "Lauro de Freitas"
                        },
                        new
                        {
                            Id = 2919306,
                            EstadoId = 29,
                            Nome = "Lençóis"
                        },
                        new
                        {
                            Id = 2919405,
                            EstadoId = 29,
                            Nome = "Licínio de Almeida"
                        },
                        new
                        {
                            Id = 2919504,
                            EstadoId = 29,
                            Nome = "Livramento de Nossa Senhora"
                        },
                        new
                        {
                            Id = 2919553,
                            EstadoId = 29,
                            Nome = "Luís Eduardo Magalhães"
                        },
                        new
                        {
                            Id = 2919603,
                            EstadoId = 29,
                            Nome = "Macajuba"
                        },
                        new
                        {
                            Id = 2919702,
                            EstadoId = 29,
                            Nome = "Macarani"
                        },
                        new
                        {
                            Id = 2919801,
                            EstadoId = 29,
                            Nome = "Macaúbas"
                        },
                        new
                        {
                            Id = 2919900,
                            EstadoId = 29,
                            Nome = "Macururé"
                        },
                        new
                        {
                            Id = 2919926,
                            EstadoId = 29,
                            Nome = "Madre de Deus"
                        },
                        new
                        {
                            Id = 2919959,
                            EstadoId = 29,
                            Nome = "Maetinga"
                        },
                        new
                        {
                            Id = 2920007,
                            EstadoId = 29,
                            Nome = "Maiquinique"
                        },
                        new
                        {
                            Id = 2920106,
                            EstadoId = 29,
                            Nome = "Mairi"
                        },
                        new
                        {
                            Id = 2920205,
                            EstadoId = 29,
                            Nome = "Malhada"
                        },
                        new
                        {
                            Id = 2920304,
                            EstadoId = 29,
                            Nome = "Malhada de Pedras"
                        },
                        new
                        {
                            Id = 2920403,
                            EstadoId = 29,
                            Nome = "Manoel Vitorino"
                        },
                        new
                        {
                            Id = 2920452,
                            EstadoId = 29,
                            Nome = "Mansidão"
                        },
                        new
                        {
                            Id = 2920502,
                            EstadoId = 29,
                            Nome = "Maracás"
                        },
                        new
                        {
                            Id = 2920601,
                            EstadoId = 29,
                            Nome = "Maragogipe"
                        },
                        new
                        {
                            Id = 2920700,
                            EstadoId = 29,
                            Nome = "Maraú"
                        },
                        new
                        {
                            Id = 2920809,
                            EstadoId = 29,
                            Nome = "Marcionílio Souza"
                        },
                        new
                        {
                            Id = 2920908,
                            EstadoId = 29,
                            Nome = "Mascote"
                        },
                        new
                        {
                            Id = 2921005,
                            EstadoId = 29,
                            Nome = "Mata de São João"
                        },
                        new
                        {
                            Id = 2921054,
                            EstadoId = 29,
                            Nome = "Matina"
                        },
                        new
                        {
                            Id = 2921104,
                            EstadoId = 29,
                            Nome = "Medeiros Neto"
                        },
                        new
                        {
                            Id = 2921203,
                            EstadoId = 29,
                            Nome = "Miguel Calmon"
                        },
                        new
                        {
                            Id = 2921302,
                            EstadoId = 29,
                            Nome = "Milagres"
                        },
                        new
                        {
                            Id = 2921401,
                            EstadoId = 29,
                            Nome = "Mirangaba"
                        },
                        new
                        {
                            Id = 2921450,
                            EstadoId = 29,
                            Nome = "Mirante"
                        },
                        new
                        {
                            Id = 2921500,
                            EstadoId = 29,
                            Nome = "Monte Santo"
                        },
                        new
                        {
                            Id = 2921609,
                            EstadoId = 29,
                            Nome = "Morpará"
                        },
                        new
                        {
                            Id = 2921708,
                            EstadoId = 29,
                            Nome = "Morro do Chapéu"
                        },
                        new
                        {
                            Id = 2921807,
                            EstadoId = 29,
                            Nome = "Mortugaba"
                        },
                        new
                        {
                            Id = 2921906,
                            EstadoId = 29,
                            Nome = "Mucugê"
                        },
                        new
                        {
                            Id = 2922003,
                            EstadoId = 29,
                            Nome = "Mucuri"
                        },
                        new
                        {
                            Id = 2922052,
                            EstadoId = 29,
                            Nome = "Mulungu do Morro"
                        },
                        new
                        {
                            Id = 2922102,
                            EstadoId = 29,
                            Nome = "Mundo Novo"
                        },
                        new
                        {
                            Id = 2922201,
                            EstadoId = 29,
                            Nome = "Muniz Ferreira"
                        },
                        new
                        {
                            Id = 2922250,
                            EstadoId = 29,
                            Nome = "Muquém de São Francisco"
                        },
                        new
                        {
                            Id = 2922300,
                            EstadoId = 29,
                            Nome = "Muritiba"
                        },
                        new
                        {
                            Id = 2922409,
                            EstadoId = 29,
                            Nome = "Mutuípe"
                        },
                        new
                        {
                            Id = 2922508,
                            EstadoId = 29,
                            Nome = "Nazaré"
                        },
                        new
                        {
                            Id = 2922607,
                            EstadoId = 29,
                            Nome = "Nilo Peçanha"
                        },
                        new
                        {
                            Id = 2922656,
                            EstadoId = 29,
                            Nome = "Nordestina"
                        },
                        new
                        {
                            Id = 2922706,
                            EstadoId = 29,
                            Nome = "Nova Canaã"
                        },
                        new
                        {
                            Id = 2922730,
                            EstadoId = 29,
                            Nome = "Nova Fátima"
                        },
                        new
                        {
                            Id = 2922755,
                            EstadoId = 29,
                            Nome = "Nova Ibiá"
                        },
                        new
                        {
                            Id = 2922805,
                            EstadoId = 29,
                            Nome = "Nova Itarana"
                        },
                        new
                        {
                            Id = 2922854,
                            EstadoId = 29,
                            Nome = "Nova Redenção"
                        },
                        new
                        {
                            Id = 2922904,
                            EstadoId = 29,
                            Nome = "Nova Soure"
                        },
                        new
                        {
                            Id = 2923001,
                            EstadoId = 29,
                            Nome = "Nova Viçosa"
                        },
                        new
                        {
                            Id = 2923035,
                            EstadoId = 29,
                            Nome = "Novo Horizonte"
                        },
                        new
                        {
                            Id = 2923050,
                            EstadoId = 29,
                            Nome = "Novo Triunfo"
                        },
                        new
                        {
                            Id = 2923100,
                            EstadoId = 29,
                            Nome = "Olindina"
                        },
                        new
                        {
                            Id = 2923209,
                            EstadoId = 29,
                            Nome = "Oliveira dos Brejinhos"
                        },
                        new
                        {
                            Id = 2923308,
                            EstadoId = 29,
                            Nome = "Ouriçangas"
                        },
                        new
                        {
                            Id = 2923357,
                            EstadoId = 29,
                            Nome = "Ourolândia"
                        },
                        new
                        {
                            Id = 2923407,
                            EstadoId = 29,
                            Nome = "Palmas de Monte Alto"
                        },
                        new
                        {
                            Id = 2923506,
                            EstadoId = 29,
                            Nome = "Palmeiras"
                        },
                        new
                        {
                            Id = 2923605,
                            EstadoId = 29,
                            Nome = "Paramirim"
                        },
                        new
                        {
                            Id = 2923704,
                            EstadoId = 29,
                            Nome = "Paratinga"
                        },
                        new
                        {
                            Id = 2923803,
                            EstadoId = 29,
                            Nome = "Paripiranga"
                        },
                        new
                        {
                            Id = 2923902,
                            EstadoId = 29,
                            Nome = "Pau Brasil"
                        },
                        new
                        {
                            Id = 2924009,
                            EstadoId = 29,
                            Nome = "Paulo Afonso"
                        },
                        new
                        {
                            Id = 2924058,
                            EstadoId = 29,
                            Nome = "Pé de Serra"
                        },
                        new
                        {
                            Id = 2924108,
                            EstadoId = 29,
                            Nome = "Pedrão"
                        },
                        new
                        {
                            Id = 2924207,
                            EstadoId = 29,
                            Nome = "Pedro Alexandre"
                        },
                        new
                        {
                            Id = 2924306,
                            EstadoId = 29,
                            Nome = "Piatã"
                        },
                        new
                        {
                            Id = 2924405,
                            EstadoId = 29,
                            Nome = "Pilão Arcado"
                        },
                        new
                        {
                            Id = 2924504,
                            EstadoId = 29,
                            Nome = "Pindaí"
                        },
                        new
                        {
                            Id = 2924603,
                            EstadoId = 29,
                            Nome = "Pindobaçu"
                        },
                        new
                        {
                            Id = 2924652,
                            EstadoId = 29,
                            Nome = "Pintadas"
                        },
                        new
                        {
                            Id = 2924678,
                            EstadoId = 29,
                            Nome = "Piraí do Norte"
                        },
                        new
                        {
                            Id = 2924702,
                            EstadoId = 29,
                            Nome = "Piripá"
                        },
                        new
                        {
                            Id = 2924801,
                            EstadoId = 29,
                            Nome = "Piritiba"
                        },
                        new
                        {
                            Id = 2924900,
                            EstadoId = 29,
                            Nome = "Planaltino"
                        },
                        new
                        {
                            Id = 2925006,
                            EstadoId = 29,
                            Nome = "Planalto"
                        },
                        new
                        {
                            Id = 2925105,
                            EstadoId = 29,
                            Nome = "Poções"
                        },
                        new
                        {
                            Id = 2925204,
                            EstadoId = 29,
                            Nome = "Pojuca"
                        },
                        new
                        {
                            Id = 2925253,
                            EstadoId = 29,
                            Nome = "Ponto Novo"
                        },
                        new
                        {
                            Id = 2925303,
                            EstadoId = 29,
                            Nome = "Porto Seguro"
                        },
                        new
                        {
                            Id = 2925402,
                            EstadoId = 29,
                            Nome = "Potiraguá"
                        },
                        new
                        {
                            Id = 2925501,
                            EstadoId = 29,
                            Nome = "Prado"
                        },
                        new
                        {
                            Id = 2925600,
                            EstadoId = 29,
                            Nome = "Presidente Dutra"
                        },
                        new
                        {
                            Id = 2925709,
                            EstadoId = 29,
                            Nome = "Presidente Jânio Quadros"
                        },
                        new
                        {
                            Id = 2925758,
                            EstadoId = 29,
                            Nome = "Presidente Tancredo Neves"
                        },
                        new
                        {
                            Id = 2925808,
                            EstadoId = 29,
                            Nome = "Queimadas"
                        },
                        new
                        {
                            Id = 2925907,
                            EstadoId = 29,
                            Nome = "Quijingue"
                        },
                        new
                        {
                            Id = 2925931,
                            EstadoId = 29,
                            Nome = "Quixabeira"
                        },
                        new
                        {
                            Id = 2925956,
                            EstadoId = 29,
                            Nome = "Rafael Jambeiro"
                        },
                        new
                        {
                            Id = 2926004,
                            EstadoId = 29,
                            Nome = "Remanso"
                        },
                        new
                        {
                            Id = 2926103,
                            EstadoId = 29,
                            Nome = "Retirolândia"
                        },
                        new
                        {
                            Id = 2926202,
                            EstadoId = 29,
                            Nome = "Riachão das Neves"
                        },
                        new
                        {
                            Id = 2926301,
                            EstadoId = 29,
                            Nome = "Riachão do Jacuípe"
                        },
                        new
                        {
                            Id = 2926400,
                            EstadoId = 29,
                            Nome = "Riacho de Santana"
                        },
                        new
                        {
                            Id = 2926509,
                            EstadoId = 29,
                            Nome = "Ribeira do Amparo"
                        },
                        new
                        {
                            Id = 2926608,
                            EstadoId = 29,
                            Nome = "Ribeira do Pombal"
                        },
                        new
                        {
                            Id = 2926657,
                            EstadoId = 29,
                            Nome = "Ribeirão do Largo"
                        },
                        new
                        {
                            Id = 2926707,
                            EstadoId = 29,
                            Nome = "Rio de Contas"
                        },
                        new
                        {
                            Id = 2926806,
                            EstadoId = 29,
                            Nome = "Rio do Antônio"
                        },
                        new
                        {
                            Id = 2926905,
                            EstadoId = 29,
                            Nome = "Rio do Pires"
                        },
                        new
                        {
                            Id = 2927002,
                            EstadoId = 29,
                            Nome = "Rio Real"
                        },
                        new
                        {
                            Id = 2927101,
                            EstadoId = 29,
                            Nome = "Rodelas"
                        },
                        new
                        {
                            Id = 2927200,
                            EstadoId = 29,
                            Nome = "Ruy Barbosa"
                        },
                        new
                        {
                            Id = 2927309,
                            EstadoId = 29,
                            Nome = "Salinas da Margarida"
                        },
                        new
                        {
                            Id = 2927408,
                            EstadoId = 29,
                            Nome = "Salvador"
                        },
                        new
                        {
                            Id = 2927507,
                            EstadoId = 29,
                            Nome = "Santa Bárbara"
                        },
                        new
                        {
                            Id = 2927606,
                            EstadoId = 29,
                            Nome = "Santa Brígida"
                        },
                        new
                        {
                            Id = 2927705,
                            EstadoId = 29,
                            Nome = "Santa Cruz Cabrália"
                        },
                        new
                        {
                            Id = 2927804,
                            EstadoId = 29,
                            Nome = "Santa Cruz da Vitória"
                        },
                        new
                        {
                            Id = 2927903,
                            EstadoId = 29,
                            Nome = "Santa Inês"
                        },
                        new
                        {
                            Id = 2928059,
                            EstadoId = 29,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            Id = 2928109,
                            EstadoId = 29,
                            Nome = "Santa Maria da Vitória"
                        },
                        new
                        {
                            Id = 2928406,
                            EstadoId = 29,
                            Nome = "Santa Rita de Cássia"
                        },
                        new
                        {
                            Id = 2928505,
                            EstadoId = 29,
                            Nome = "Santa Teresinha"
                        },
                        new
                        {
                            Id = 2928000,
                            EstadoId = 29,
                            Nome = "Santaluz"
                        },
                        new
                        {
                            Id = 2928208,
                            EstadoId = 29,
                            Nome = "Santana"
                        },
                        new
                        {
                            Id = 2928307,
                            EstadoId = 29,
                            Nome = "Santanópolis"
                        },
                        new
                        {
                            Id = 2928604,
                            EstadoId = 29,
                            Nome = "Santo Amaro"
                        },
                        new
                        {
                            Id = 2928703,
                            EstadoId = 29,
                            Nome = "Santo Antônio de Jesus"
                        },
                        new
                        {
                            Id = 2928802,
                            EstadoId = 29,
                            Nome = "Santo Estêvão"
                        },
                        new
                        {
                            Id = 2928901,
                            EstadoId = 29,
                            Nome = "São Desidério"
                        },
                        new
                        {
                            Id = 2928950,
                            EstadoId = 29,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            Id = 2929107,
                            EstadoId = 29,
                            Nome = "São Felipe"
                        },
                        new
                        {
                            Id = 2929008,
                            EstadoId = 29,
                            Nome = "São Félix"
                        },
                        new
                        {
                            Id = 2929057,
                            EstadoId = 29,
                            Nome = "São Félix do Coribe"
                        },
                        new
                        {
                            Id = 2929206,
                            EstadoId = 29,
                            Nome = "São Francisco do Conde"
                        },
                        new
                        {
                            Id = 2929255,
                            EstadoId = 29,
                            Nome = "São Gabriel"
                        },
                        new
                        {
                            Id = 2929305,
                            EstadoId = 29,
                            Nome = "São Gonçalo dos Campos"
                        },
                        new
                        {
                            Id = 2929354,
                            EstadoId = 29,
                            Nome = "São José da Vitória"
                        },
                        new
                        {
                            Id = 2929370,
                            EstadoId = 29,
                            Nome = "São José do Jacuípe"
                        },
                        new
                        {
                            Id = 2929404,
                            EstadoId = 29,
                            Nome = "São Miguel das Matas"
                        },
                        new
                        {
                            Id = 2929503,
                            EstadoId = 29,
                            Nome = "São Sebastião do Passé"
                        },
                        new
                        {
                            Id = 2929602,
                            EstadoId = 29,
                            Nome = "Sapeaçu"
                        },
                        new
                        {
                            Id = 2929701,
                            EstadoId = 29,
                            Nome = "Sátiro Dias"
                        },
                        new
                        {
                            Id = 2929750,
                            EstadoId = 29,
                            Nome = "Saubara"
                        },
                        new
                        {
                            Id = 2929800,
                            EstadoId = 29,
                            Nome = "Saúde"
                        },
                        new
                        {
                            Id = 2929909,
                            EstadoId = 29,
                            Nome = "Seabra"
                        },
                        new
                        {
                            Id = 2930006,
                            EstadoId = 29,
                            Nome = "Sebastião Laranjeiras"
                        },
                        new
                        {
                            Id = 2930105,
                            EstadoId = 29,
                            Nome = "Senhor do Bonfim"
                        },
                        new
                        {
                            Id = 2930204,
                            EstadoId = 29,
                            Nome = "Sento Sé"
                        },
                        new
                        {
                            Id = 2930154,
                            EstadoId = 29,
                            Nome = "Serra do Ramalho"
                        },
                        new
                        {
                            Id = 2930303,
                            EstadoId = 29,
                            Nome = "Serra Dourada"
                        },
                        new
                        {
                            Id = 2930402,
                            EstadoId = 29,
                            Nome = "Serra Preta"
                        },
                        new
                        {
                            Id = 2930501,
                            EstadoId = 29,
                            Nome = "Serrinha"
                        },
                        new
                        {
                            Id = 2930600,
                            EstadoId = 29,
                            Nome = "Serrolândia"
                        },
                        new
                        {
                            Id = 2930709,
                            EstadoId = 29,
                            Nome = "Simões Filho"
                        },
                        new
                        {
                            Id = 2930758,
                            EstadoId = 29,
                            Nome = "Sítio do Mato"
                        },
                        new
                        {
                            Id = 2930766,
                            EstadoId = 29,
                            Nome = "Sítio do Quinto"
                        },
                        new
                        {
                            Id = 2930774,
                            EstadoId = 29,
                            Nome = "Sobradinho"
                        },
                        new
                        {
                            Id = 2930808,
                            EstadoId = 29,
                            Nome = "Souto Soares"
                        },
                        new
                        {
                            Id = 2930907,
                            EstadoId = 29,
                            Nome = "Tabocas do Brejo Velho"
                        },
                        new
                        {
                            Id = 2931004,
                            EstadoId = 29,
                            Nome = "Tanhaçu"
                        },
                        new
                        {
                            Id = 2931053,
                            EstadoId = 29,
                            Nome = "Tanque Novo"
                        },
                        new
                        {
                            Id = 2931103,
                            EstadoId = 29,
                            Nome = "Tanquinho"
                        },
                        new
                        {
                            Id = 2931202,
                            EstadoId = 29,
                            Nome = "Taperoá"
                        },
                        new
                        {
                            Id = 2931301,
                            EstadoId = 29,
                            Nome = "Tapiramutá"
                        },
                        new
                        {
                            Id = 2931350,
                            EstadoId = 29,
                            Nome = "Teixeira de Freitas"
                        },
                        new
                        {
                            Id = 2931400,
                            EstadoId = 29,
                            Nome = "Teodoro Sampaio"
                        },
                        new
                        {
                            Id = 2931509,
                            EstadoId = 29,
                            Nome = "Teofilândia"
                        },
                        new
                        {
                            Id = 2931608,
                            EstadoId = 29,
                            Nome = "Teolândia"
                        },
                        new
                        {
                            Id = 2931707,
                            EstadoId = 29,
                            Nome = "Terra Nova"
                        },
                        new
                        {
                            Id = 2931806,
                            EstadoId = 29,
                            Nome = "Tremedal"
                        },
                        new
                        {
                            Id = 2931905,
                            EstadoId = 29,
                            Nome = "Tucano"
                        },
                        new
                        {
                            Id = 2932002,
                            EstadoId = 29,
                            Nome = "Uauá"
                        },
                        new
                        {
                            Id = 2932101,
                            EstadoId = 29,
                            Nome = "Ubaíra"
                        },
                        new
                        {
                            Id = 2932200,
                            EstadoId = 29,
                            Nome = "Ubaitaba"
                        },
                        new
                        {
                            Id = 2932309,
                            EstadoId = 29,
                            Nome = "Ubatã"
                        },
                        new
                        {
                            Id = 2932408,
                            EstadoId = 29,
                            Nome = "Uibaí"
                        },
                        new
                        {
                            Id = 2932457,
                            EstadoId = 29,
                            Nome = "Umburanas"
                        },
                        new
                        {
                            Id = 2932507,
                            EstadoId = 29,
                            Nome = "Una"
                        },
                        new
                        {
                            Id = 2932606,
                            EstadoId = 29,
                            Nome = "Urandi"
                        },
                        new
                        {
                            Id = 2932705,
                            EstadoId = 29,
                            Nome = "Uruçuca"
                        },
                        new
                        {
                            Id = 2932804,
                            EstadoId = 29,
                            Nome = "Utinga"
                        },
                        new
                        {
                            Id = 2932903,
                            EstadoId = 29,
                            Nome = "Valença"
                        },
                        new
                        {
                            Id = 2933000,
                            EstadoId = 29,
                            Nome = "Valente"
                        },
                        new
                        {
                            Id = 2933059,
                            EstadoId = 29,
                            Nome = "Várzea da Roça"
                        },
                        new
                        {
                            Id = 2933109,
                            EstadoId = 29,
                            Nome = "Várzea do Poço"
                        },
                        new
                        {
                            Id = 2933158,
                            EstadoId = 29,
                            Nome = "Várzea Nova"
                        },
                        new
                        {
                            Id = 2933174,
                            EstadoId = 29,
                            Nome = "Varzedo"
                        },
                        new
                        {
                            Id = 2933208,
                            EstadoId = 29,
                            Nome = "Vera Cruz"
                        },
                        new
                        {
                            Id = 2933257,
                            EstadoId = 29,
                            Nome = "Vereda"
                        },
                        new
                        {
                            Id = 2933307,
                            EstadoId = 29,
                            Nome = "Vitória da Conquista"
                        },
                        new
                        {
                            Id = 2933406,
                            EstadoId = 29,
                            Nome = "Wagner"
                        },
                        new
                        {
                            Id = 2933455,
                            EstadoId = 29,
                            Nome = "Wanderley"
                        },
                        new
                        {
                            Id = 2933505,
                            EstadoId = 29,
                            Nome = "Wenceslau Guimarães"
                        },
                        new
                        {
                            Id = 2933604,
                            EstadoId = 29,
                            Nome = "Xique-Xique"
                        },
                        new
                        {
                            Id = 3100104,
                            EstadoId = 31,
                            Nome = "Abadia dos Dourados"
                        },
                        new
                        {
                            Id = 3100203,
                            EstadoId = 31,
                            Nome = "Abaeté"
                        },
                        new
                        {
                            Id = 3100302,
                            EstadoId = 31,
                            Nome = "Abre Campo"
                        },
                        new
                        {
                            Id = 3100401,
                            EstadoId = 31,
                            Nome = "Acaiaca"
                        },
                        new
                        {
                            Id = 3100500,
                            EstadoId = 31,
                            Nome = "Açucena"
                        },
                        new
                        {
                            Id = 3100609,
                            EstadoId = 31,
                            Nome = "Água Boa"
                        },
                        new
                        {
                            Id = 3100708,
                            EstadoId = 31,
                            Nome = "Água Comprida"
                        },
                        new
                        {
                            Id = 3100807,
                            EstadoId = 31,
                            Nome = "Aguanil"
                        },
                        new
                        {
                            Id = 3100906,
                            EstadoId = 31,
                            Nome = "Águas Formosas"
                        },
                        new
                        {
                            Id = 3101003,
                            EstadoId = 31,
                            Nome = "Águas Vermelhas"
                        },
                        new
                        {
                            Id = 3101102,
                            EstadoId = 31,
                            Nome = "Aimorés"
                        },
                        new
                        {
                            Id = 3101201,
                            EstadoId = 31,
                            Nome = "Aiuruoca"
                        },
                        new
                        {
                            Id = 3101300,
                            EstadoId = 31,
                            Nome = "Alagoa"
                        },
                        new
                        {
                            Id = 3101409,
                            EstadoId = 31,
                            Nome = "Albertina"
                        },
                        new
                        {
                            Id = 3101508,
                            EstadoId = 31,
                            Nome = "Além Paraíba"
                        },
                        new
                        {
                            Id = 3101607,
                            EstadoId = 31,
                            Nome = "Alfenas"
                        },
                        new
                        {
                            Id = 3101631,
                            EstadoId = 31,
                            Nome = "Alfredo Vasconcelos"
                        },
                        new
                        {
                            Id = 3101706,
                            EstadoId = 31,
                            Nome = "Almenara"
                        },
                        new
                        {
                            Id = 3101805,
                            EstadoId = 31,
                            Nome = "Alpercata"
                        },
                        new
                        {
                            Id = 3101904,
                            EstadoId = 31,
                            Nome = "Alpinópolis"
                        },
                        new
                        {
                            Id = 3102001,
                            EstadoId = 31,
                            Nome = "Alterosa"
                        },
                        new
                        {
                            Id = 3102050,
                            EstadoId = 31,
                            Nome = "Alto Caparaó"
                        },
                        new
                        {
                            Id = 3153509,
                            EstadoId = 31,
                            Nome = "Alto Jequitibá"
                        },
                        new
                        {
                            Id = 3102100,
                            EstadoId = 31,
                            Nome = "Alto Rio Doce"
                        },
                        new
                        {
                            Id = 3102209,
                            EstadoId = 31,
                            Nome = "Alvarenga"
                        },
                        new
                        {
                            Id = 3102308,
                            EstadoId = 31,
                            Nome = "Alvinópolis"
                        },
                        new
                        {
                            Id = 3102407,
                            EstadoId = 31,
                            Nome = "Alvorada de Minas"
                        },
                        new
                        {
                            Id = 3102506,
                            EstadoId = 31,
                            Nome = "Amparo do Serra"
                        },
                        new
                        {
                            Id = 3102605,
                            EstadoId = 31,
                            Nome = "Andradas"
                        },
                        new
                        {
                            Id = 3102803,
                            EstadoId = 31,
                            Nome = "Andrelândia"
                        },
                        new
                        {
                            Id = 3102852,
                            EstadoId = 31,
                            Nome = "Angelândia"
                        },
                        new
                        {
                            Id = 3102902,
                            EstadoId = 31,
                            Nome = "Antônio Carlos"
                        },
                        new
                        {
                            Id = 3103009,
                            EstadoId = 31,
                            Nome = "Antônio Dias"
                        },
                        new
                        {
                            Id = 3103108,
                            EstadoId = 31,
                            Nome = "Antônio Prado de Minas"
                        },
                        new
                        {
                            Id = 3103207,
                            EstadoId = 31,
                            Nome = "Araçaí"
                        },
                        new
                        {
                            Id = 3103306,
                            EstadoId = 31,
                            Nome = "Aracitaba"
                        },
                        new
                        {
                            Id = 3103405,
                            EstadoId = 31,
                            Nome = "Araçuaí"
                        },
                        new
                        {
                            Id = 3103504,
                            EstadoId = 31,
                            Nome = "Araguari"
                        },
                        new
                        {
                            Id = 3103603,
                            EstadoId = 31,
                            Nome = "Arantina"
                        },
                        new
                        {
                            Id = 3103702,
                            EstadoId = 31,
                            Nome = "Araponga"
                        },
                        new
                        {
                            Id = 3103751,
                            EstadoId = 31,
                            Nome = "Araporã"
                        },
                        new
                        {
                            Id = 3103801,
                            EstadoId = 31,
                            Nome = "Arapuá"
                        },
                        new
                        {
                            Id = 3103900,
                            EstadoId = 31,
                            Nome = "Araújos"
                        },
                        new
                        {
                            Id = 3104007,
                            EstadoId = 31,
                            Nome = "Araxá"
                        },
                        new
                        {
                            Id = 3104106,
                            EstadoId = 31,
                            Nome = "Arceburgo"
                        },
                        new
                        {
                            Id = 3104205,
                            EstadoId = 31,
                            Nome = "Arcos"
                        },
                        new
                        {
                            Id = 3104304,
                            EstadoId = 31,
                            Nome = "Areado"
                        },
                        new
                        {
                            Id = 3104403,
                            EstadoId = 31,
                            Nome = "Argirita"
                        },
                        new
                        {
                            Id = 3104452,
                            EstadoId = 31,
                            Nome = "Aricanduva"
                        },
                        new
                        {
                            Id = 3104502,
                            EstadoId = 31,
                            Nome = "Arinos"
                        },
                        new
                        {
                            Id = 3104601,
                            EstadoId = 31,
                            Nome = "Astolfo Dutra"
                        },
                        new
                        {
                            Id = 3104700,
                            EstadoId = 31,
                            Nome = "Ataléia"
                        },
                        new
                        {
                            Id = 3104809,
                            EstadoId = 31,
                            Nome = "Augusto de Lima"
                        },
                        new
                        {
                            Id = 3104908,
                            EstadoId = 31,
                            Nome = "Baependi"
                        },
                        new
                        {
                            Id = 3105004,
                            EstadoId = 31,
                            Nome = "Baldim"
                        },
                        new
                        {
                            Id = 3105103,
                            EstadoId = 31,
                            Nome = "Bambuí"
                        },
                        new
                        {
                            Id = 3105202,
                            EstadoId = 31,
                            Nome = "Bandeira"
                        },
                        new
                        {
                            Id = 3105301,
                            EstadoId = 31,
                            Nome = "Bandeira do Sul"
                        },
                        new
                        {
                            Id = 3105400,
                            EstadoId = 31,
                            Nome = "Barão de Cocais"
                        },
                        new
                        {
                            Id = 3105509,
                            EstadoId = 31,
                            Nome = "Barão de Monte Alto"
                        },
                        new
                        {
                            Id = 3105608,
                            EstadoId = 31,
                            Nome = "Barbacena"
                        },
                        new
                        {
                            Id = 3105707,
                            EstadoId = 31,
                            Nome = "Barra Longa"
                        },
                        new
                        {
                            Id = 3105905,
                            EstadoId = 31,
                            Nome = "Barroso"
                        },
                        new
                        {
                            Id = 3106002,
                            EstadoId = 31,
                            Nome = "Bela Vista de Minas"
                        },
                        new
                        {
                            Id = 3106101,
                            EstadoId = 31,
                            Nome = "Belmiro Braga"
                        },
                        new
                        {
                            Id = 3106200,
                            EstadoId = 31,
                            Nome = "Belo Horizonte"
                        },
                        new
                        {
                            Id = 3106309,
                            EstadoId = 31,
                            Nome = "Belo Oriente"
                        },
                        new
                        {
                            Id = 3106408,
                            EstadoId = 31,
                            Nome = "Belo Vale"
                        },
                        new
                        {
                            Id = 3106507,
                            EstadoId = 31,
                            Nome = "Berilo"
                        },
                        new
                        {
                            Id = 3106655,
                            EstadoId = 31,
                            Nome = "Berizal"
                        },
                        new
                        {
                            Id = 3106606,
                            EstadoId = 31,
                            Nome = "Bertópolis"
                        },
                        new
                        {
                            Id = 3106705,
                            EstadoId = 31,
                            Nome = "Betim"
                        },
                        new
                        {
                            Id = 3106804,
                            EstadoId = 31,
                            Nome = "Bias Fortes"
                        },
                        new
                        {
                            Id = 3106903,
                            EstadoId = 31,
                            Nome = "Bicas"
                        },
                        new
                        {
                            Id = 3107000,
                            EstadoId = 31,
                            Nome = "Biquinhas"
                        },
                        new
                        {
                            Id = 3107109,
                            EstadoId = 31,
                            Nome = "Boa Esperança"
                        },
                        new
                        {
                            Id = 3107208,
                            EstadoId = 31,
                            Nome = "Bocaina de Minas"
                        },
                        new
                        {
                            Id = 3107307,
                            EstadoId = 31,
                            Nome = "Bocaiúva"
                        },
                        new
                        {
                            Id = 3107406,
                            EstadoId = 31,
                            Nome = "Bom Despacho"
                        },
                        new
                        {
                            Id = 3107505,
                            EstadoId = 31,
                            Nome = "Bom Jardim de Minas"
                        },
                        new
                        {
                            Id = 3107604,
                            EstadoId = 31,
                            Nome = "Bom Jesus da Penha"
                        },
                        new
                        {
                            Id = 3107703,
                            EstadoId = 31,
                            Nome = "Bom Jesus do Amparo"
                        },
                        new
                        {
                            Id = 3107802,
                            EstadoId = 31,
                            Nome = "Bom Jesus do Galho"
                        },
                        new
                        {
                            Id = 3107901,
                            EstadoId = 31,
                            Nome = "Bom Repouso"
                        },
                        new
                        {
                            Id = 3108008,
                            EstadoId = 31,
                            Nome = "Bom Sucesso"
                        },
                        new
                        {
                            Id = 3108107,
                            EstadoId = 31,
                            Nome = "Bonfim"
                        },
                        new
                        {
                            Id = 3108206,
                            EstadoId = 31,
                            Nome = "Bonfinópolis de Minas"
                        },
                        new
                        {
                            Id = 3108255,
                            EstadoId = 31,
                            Nome = "Bonito de Minas"
                        },
                        new
                        {
                            Id = 3108305,
                            EstadoId = 31,
                            Nome = "Borda da Mata"
                        },
                        new
                        {
                            Id = 3108404,
                            EstadoId = 31,
                            Nome = "Botelhos"
                        },
                        new
                        {
                            Id = 3108503,
                            EstadoId = 31,
                            Nome = "Botumirim"
                        },
                        new
                        {
                            Id = 3108701,
                            EstadoId = 31,
                            Nome = "Brás Pires"
                        },
                        new
                        {
                            Id = 3108552,
                            EstadoId = 31,
                            Nome = "Brasilândia de Minas"
                        },
                        new
                        {
                            Id = 3108602,
                            EstadoId = 31,
                            Nome = "Brasília de Minas"
                        },
                        new
                        {
                            Id = 3108909,
                            EstadoId = 31,
                            Nome = "Brasópolis"
                        },
                        new
                        {
                            Id = 3108800,
                            EstadoId = 31,
                            Nome = "Braúnas"
                        },
                        new
                        {
                            Id = 3109006,
                            EstadoId = 31,
                            Nome = "Brumadinho"
                        },
                        new
                        {
                            Id = 3109105,
                            EstadoId = 31,
                            Nome = "Bueno Brandão"
                        },
                        new
                        {
                            Id = 3109204,
                            EstadoId = 31,
                            Nome = "Buenópolis"
                        },
                        new
                        {
                            Id = 3109253,
                            EstadoId = 31,
                            Nome = "Bugre"
                        },
                        new
                        {
                            Id = 3109303,
                            EstadoId = 31,
                            Nome = "Buritis"
                        },
                        new
                        {
                            Id = 3109402,
                            EstadoId = 31,
                            Nome = "Buritizeiro"
                        },
                        new
                        {
                            Id = 3109451,
                            EstadoId = 31,
                            Nome = "Cabeceira Grande"
                        },
                        new
                        {
                            Id = 3109501,
                            EstadoId = 31,
                            Nome = "Cabo Verde"
                        },
                        new
                        {
                            Id = 3109600,
                            EstadoId = 31,
                            Nome = "Cachoeira da Prata"
                        },
                        new
                        {
                            Id = 3109709,
                            EstadoId = 31,
                            Nome = "Cachoeira de Minas"
                        },
                        new
                        {
                            Id = 3102704,
                            EstadoId = 31,
                            Nome = "Cachoeira de Pajeú"
                        },
                        new
                        {
                            Id = 3109808,
                            EstadoId = 31,
                            Nome = "Cachoeira Dourada"
                        },
                        new
                        {
                            Id = 3109907,
                            EstadoId = 31,
                            Nome = "Caetanópolis"
                        },
                        new
                        {
                            Id = 3110004,
                            EstadoId = 31,
                            Nome = "Caeté"
                        },
                        new
                        {
                            Id = 3110103,
                            EstadoId = 31,
                            Nome = "Caiana"
                        },
                        new
                        {
                            Id = 3110202,
                            EstadoId = 31,
                            Nome = "Cajuri"
                        },
                        new
                        {
                            Id = 3110301,
                            EstadoId = 31,
                            Nome = "Caldas"
                        },
                        new
                        {
                            Id = 3110400,
                            EstadoId = 31,
                            Nome = "Camacho"
                        },
                        new
                        {
                            Id = 3110509,
                            EstadoId = 31,
                            Nome = "Camanducaia"
                        },
                        new
                        {
                            Id = 3110608,
                            EstadoId = 31,
                            Nome = "Cambuí"
                        },
                        new
                        {
                            Id = 3110707,
                            EstadoId = 31,
                            Nome = "Cambuquira"
                        },
                        new
                        {
                            Id = 3110806,
                            EstadoId = 31,
                            Nome = "Campanário"
                        },
                        new
                        {
                            Id = 3110905,
                            EstadoId = 31,
                            Nome = "Campanha"
                        },
                        new
                        {
                            Id = 3111002,
                            EstadoId = 31,
                            Nome = "Campestre"
                        },
                        new
                        {
                            Id = 3111101,
                            EstadoId = 31,
                            Nome = "Campina Verde"
                        },
                        new
                        {
                            Id = 3111150,
                            EstadoId = 31,
                            Nome = "Campo Azul"
                        },
                        new
                        {
                            Id = 3111200,
                            EstadoId = 31,
                            Nome = "Campo Belo"
                        },
                        new
                        {
                            Id = 3111309,
                            EstadoId = 31,
                            Nome = "Campo do Meio"
                        },
                        new
                        {
                            Id = 3111408,
                            EstadoId = 31,
                            Nome = "Campo Florido"
                        },
                        new
                        {
                            Id = 3111507,
                            EstadoId = 31,
                            Nome = "Campos Altos"
                        },
                        new
                        {
                            Id = 3111606,
                            EstadoId = 31,
                            Nome = "Campos Gerais"
                        },
                        new
                        {
                            Id = 3111903,
                            EstadoId = 31,
                            Nome = "Cana Verde"
                        },
                        new
                        {
                            Id = 3111705,
                            EstadoId = 31,
                            Nome = "Canaã"
                        },
                        new
                        {
                            Id = 3111804,
                            EstadoId = 31,
                            Nome = "Canápolis"
                        },
                        new
                        {
                            Id = 3112000,
                            EstadoId = 31,
                            Nome = "Candeias"
                        },
                        new
                        {
                            Id = 3112059,
                            EstadoId = 31,
                            Nome = "Cantagalo"
                        },
                        new
                        {
                            Id = 3112109,
                            EstadoId = 31,
                            Nome = "Caparaó"
                        },
                        new
                        {
                            Id = 3112208,
                            EstadoId = 31,
                            Nome = "Capela Nova"
                        },
                        new
                        {
                            Id = 3112307,
                            EstadoId = 31,
                            Nome = "Capelinha"
                        },
                        new
                        {
                            Id = 3112406,
                            EstadoId = 31,
                            Nome = "Capetinga"
                        },
                        new
                        {
                            Id = 3112505,
                            EstadoId = 31,
                            Nome = "Capim Branco"
                        },
                        new
                        {
                            Id = 3112604,
                            EstadoId = 31,
                            Nome = "Capinópolis"
                        },
                        new
                        {
                            Id = 3112653,
                            EstadoId = 31,
                            Nome = "Capitão Andrade"
                        },
                        new
                        {
                            Id = 3112703,
                            EstadoId = 31,
                            Nome = "Capitão Enéas"
                        },
                        new
                        {
                            Id = 3112802,
                            EstadoId = 31,
                            Nome = "Capitólio"
                        },
                        new
                        {
                            Id = 3112901,
                            EstadoId = 31,
                            Nome = "Caputira"
                        },
                        new
                        {
                            Id = 3113008,
                            EstadoId = 31,
                            Nome = "Caraí"
                        },
                        new
                        {
                            Id = 3113107,
                            EstadoId = 31,
                            Nome = "Caranaíba"
                        },
                        new
                        {
                            Id = 3113206,
                            EstadoId = 31,
                            Nome = "Carandaí"
                        },
                        new
                        {
                            Id = 3113305,
                            EstadoId = 31,
                            Nome = "Carangola"
                        },
                        new
                        {
                            Id = 3113404,
                            EstadoId = 31,
                            Nome = "Caratinga"
                        },
                        new
                        {
                            Id = 3113503,
                            EstadoId = 31,
                            Nome = "Carbonita"
                        },
                        new
                        {
                            Id = 3113602,
                            EstadoId = 31,
                            Nome = "Careaçu"
                        },
                        new
                        {
                            Id = 3113701,
                            EstadoId = 31,
                            Nome = "Carlos Chagas"
                        },
                        new
                        {
                            Id = 3113800,
                            EstadoId = 31,
                            Nome = "Carmésia"
                        },
                        new
                        {
                            Id = 3113909,
                            EstadoId = 31,
                            Nome = "Carmo da Cachoeira"
                        },
                        new
                        {
                            Id = 3114006,
                            EstadoId = 31,
                            Nome = "Carmo da Mata"
                        },
                        new
                        {
                            Id = 3114105,
                            EstadoId = 31,
                            Nome = "Carmo de Minas"
                        },
                        new
                        {
                            Id = 3114204,
                            EstadoId = 31,
                            Nome = "Carmo do Cajuru"
                        },
                        new
                        {
                            Id = 3114303,
                            EstadoId = 31,
                            Nome = "Carmo do Paranaíba"
                        },
                        new
                        {
                            Id = 3114402,
                            EstadoId = 31,
                            Nome = "Carmo do Rio Claro"
                        },
                        new
                        {
                            Id = 3114501,
                            EstadoId = 31,
                            Nome = "Carmópolis de Minas"
                        },
                        new
                        {
                            Id = 3114550,
                            EstadoId = 31,
                            Nome = "Carneirinho"
                        },
                        new
                        {
                            Id = 3114600,
                            EstadoId = 31,
                            Nome = "Carrancas"
                        },
                        new
                        {
                            Id = 3114709,
                            EstadoId = 31,
                            Nome = "Carvalhópolis"
                        },
                        new
                        {
                            Id = 3114808,
                            EstadoId = 31,
                            Nome = "Carvalhos"
                        },
                        new
                        {
                            Id = 3114907,
                            EstadoId = 31,
                            Nome = "Casa Grande"
                        },
                        new
                        {
                            Id = 3115003,
                            EstadoId = 31,
                            Nome = "Cascalho Rico"
                        },
                        new
                        {
                            Id = 3115102,
                            EstadoId = 31,
                            Nome = "Cássia"
                        },
                        new
                        {
                            Id = 3115300,
                            EstadoId = 31,
                            Nome = "Cataguases"
                        },
                        new
                        {
                            Id = 3115359,
                            EstadoId = 31,
                            Nome = "Catas Altas"
                        },
                        new
                        {
                            Id = 3115409,
                            EstadoId = 31,
                            Nome = "Catas Altas da Noruega"
                        },
                        new
                        {
                            Id = 3115458,
                            EstadoId = 31,
                            Nome = "Catuji"
                        },
                        new
                        {
                            Id = 3115474,
                            EstadoId = 31,
                            Nome = "Catuti"
                        },
                        new
                        {
                            Id = 3115508,
                            EstadoId = 31,
                            Nome = "Caxambu"
                        },
                        new
                        {
                            Id = 3115607,
                            EstadoId = 31,
                            Nome = "Cedro do Abaeté"
                        },
                        new
                        {
                            Id = 3115706,
                            EstadoId = 31,
                            Nome = "Central de Minas"
                        },
                        new
                        {
                            Id = 3115805,
                            EstadoId = 31,
                            Nome = "Centralina"
                        },
                        new
                        {
                            Id = 3115904,
                            EstadoId = 31,
                            Nome = "Chácara"
                        },
                        new
                        {
                            Id = 3116001,
                            EstadoId = 31,
                            Nome = "Chalé"
                        },
                        new
                        {
                            Id = 3116100,
                            EstadoId = 31,
                            Nome = "Chapada do Norte"
                        },
                        new
                        {
                            Id = 3116159,
                            EstadoId = 31,
                            Nome = "Chapada Gaúcha"
                        },
                        new
                        {
                            Id = 3116209,
                            EstadoId = 31,
                            Nome = "Chiador"
                        },
                        new
                        {
                            Id = 3116308,
                            EstadoId = 31,
                            Nome = "Cipotânea"
                        },
                        new
                        {
                            Id = 3116407,
                            EstadoId = 31,
                            Nome = "Claraval"
                        },
                        new
                        {
                            Id = 3116506,
                            EstadoId = 31,
                            Nome = "Claro dos Poções"
                        },
                        new
                        {
                            Id = 3116605,
                            EstadoId = 31,
                            Nome = "Cláudio"
                        },
                        new
                        {
                            Id = 3116704,
                            EstadoId = 31,
                            Nome = "Coimbra"
                        },
                        new
                        {
                            Id = 3116803,
                            EstadoId = 31,
                            Nome = "Coluna"
                        },
                        new
                        {
                            Id = 3116902,
                            EstadoId = 31,
                            Nome = "Comendador Gomes"
                        },
                        new
                        {
                            Id = 3117009,
                            EstadoId = 31,
                            Nome = "Comercinho"
                        },
                        new
                        {
                            Id = 3117108,
                            EstadoId = 31,
                            Nome = "Conceição da Aparecida"
                        },
                        new
                        {
                            Id = 3115201,
                            EstadoId = 31,
                            Nome = "Conceição da Barra de Minas"
                        },
                        new
                        {
                            Id = 3117306,
                            EstadoId = 31,
                            Nome = "Conceição das Alagoas"
                        },
                        new
                        {
                            Id = 3117207,
                            EstadoId = 31,
                            Nome = "Conceição das Pedras"
                        },
                        new
                        {
                            Id = 3117405,
                            EstadoId = 31,
                            Nome = "Conceição de Ipanema"
                        },
                        new
                        {
                            Id = 3117504,
                            EstadoId = 31,
                            Nome = "Conceição do Mato Dentro"
                        },
                        new
                        {
                            Id = 3117603,
                            EstadoId = 31,
                            Nome = "Conceição do Pará"
                        },
                        new
                        {
                            Id = 3117702,
                            EstadoId = 31,
                            Nome = "Conceição do Rio Verde"
                        },
                        new
                        {
                            Id = 3117801,
                            EstadoId = 31,
                            Nome = "Conceição dos Ouros"
                        },
                        new
                        {
                            Id = 3117836,
                            EstadoId = 31,
                            Nome = "Cônego Marinho"
                        },
                        new
                        {
                            Id = 3117876,
                            EstadoId = 31,
                            Nome = "Confins"
                        },
                        new
                        {
                            Id = 3117900,
                            EstadoId = 31,
                            Nome = "Congonhal"
                        },
                        new
                        {
                            Id = 3118007,
                            EstadoId = 31,
                            Nome = "Congonhas"
                        },
                        new
                        {
                            Id = 3118106,
                            EstadoId = 31,
                            Nome = "Congonhas do Norte"
                        },
                        new
                        {
                            Id = 3118205,
                            EstadoId = 31,
                            Nome = "Conquista"
                        },
                        new
                        {
                            Id = 3118304,
                            EstadoId = 31,
                            Nome = "Conselheiro Lafaiete"
                        },
                        new
                        {
                            Id = 3118403,
                            EstadoId = 31,
                            Nome = "Conselheiro Pena"
                        },
                        new
                        {
                            Id = 3118502,
                            EstadoId = 31,
                            Nome = "Consolação"
                        },
                        new
                        {
                            Id = 3118601,
                            EstadoId = 31,
                            Nome = "Contagem"
                        },
                        new
                        {
                            Id = 3118700,
                            EstadoId = 31,
                            Nome = "Coqueiral"
                        },
                        new
                        {
                            Id = 3118809,
                            EstadoId = 31,
                            Nome = "Coração de Jesus"
                        },
                        new
                        {
                            Id = 3118908,
                            EstadoId = 31,
                            Nome = "Cordisburgo"
                        },
                        new
                        {
                            Id = 3119005,
                            EstadoId = 31,
                            Nome = "Cordislândia"
                        },
                        new
                        {
                            Id = 3119104,
                            EstadoId = 31,
                            Nome = "Corinto"
                        },
                        new
                        {
                            Id = 3119203,
                            EstadoId = 31,
                            Nome = "Coroaci"
                        },
                        new
                        {
                            Id = 3119302,
                            EstadoId = 31,
                            Nome = "Coromandel"
                        },
                        new
                        {
                            Id = 3119401,
                            EstadoId = 31,
                            Nome = "Coronel Fabriciano"
                        },
                        new
                        {
                            Id = 3119500,
                            EstadoId = 31,
                            Nome = "Coronel Murta"
                        },
                        new
                        {
                            Id = 3119609,
                            EstadoId = 31,
                            Nome = "Coronel Pacheco"
                        },
                        new
                        {
                            Id = 3119708,
                            EstadoId = 31,
                            Nome = "Coronel Xavier Chaves"
                        },
                        new
                        {
                            Id = 3119807,
                            EstadoId = 31,
                            Nome = "Córrego Danta"
                        },
                        new
                        {
                            Id = 3119906,
                            EstadoId = 31,
                            Nome = "Córrego do Bom Jesus"
                        },
                        new
                        {
                            Id = 3119955,
                            EstadoId = 31,
                            Nome = "Córrego Fundo"
                        },
                        new
                        {
                            Id = 3120003,
                            EstadoId = 31,
                            Nome = "Córrego Novo"
                        },
                        new
                        {
                            Id = 3120102,
                            EstadoId = 31,
                            Nome = "Couto de Magalhães de Minas"
                        },
                        new
                        {
                            Id = 3120151,
                            EstadoId = 31,
                            Nome = "Crisólita"
                        },
                        new
                        {
                            Id = 3120201,
                            EstadoId = 31,
                            Nome = "Cristais"
                        },
                        new
                        {
                            Id = 3120300,
                            EstadoId = 31,
                            Nome = "Cristália"
                        },
                        new
                        {
                            Id = 3120409,
                            EstadoId = 31,
                            Nome = "Cristiano Otoni"
                        },
                        new
                        {
                            Id = 3120508,
                            EstadoId = 31,
                            Nome = "Cristina"
                        },
                        new
                        {
                            Id = 3120607,
                            EstadoId = 31,
                            Nome = "Crucilândia"
                        },
                        new
                        {
                            Id = 3120706,
                            EstadoId = 31,
                            Nome = "Cruzeiro da Fortaleza"
                        },
                        new
                        {
                            Id = 3120805,
                            EstadoId = 31,
                            Nome = "Cruzília"
                        },
                        new
                        {
                            Id = 3120839,
                            EstadoId = 31,
                            Nome = "Cuparaque"
                        },
                        new
                        {
                            Id = 3120870,
                            EstadoId = 31,
                            Nome = "Curral de Dentro"
                        },
                        new
                        {
                            Id = 3120904,
                            EstadoId = 31,
                            Nome = "Curvelo"
                        },
                        new
                        {
                            Id = 3121001,
                            EstadoId = 31,
                            Nome = "Datas"
                        },
                        new
                        {
                            Id = 3121100,
                            EstadoId = 31,
                            Nome = "Delfim Moreira"
                        },
                        new
                        {
                            Id = 3121209,
                            EstadoId = 31,
                            Nome = "Delfinópolis"
                        },
                        new
                        {
                            Id = 3121258,
                            EstadoId = 31,
                            Nome = "Delta"
                        },
                        new
                        {
                            Id = 3121308,
                            EstadoId = 31,
                            Nome = "Descoberto"
                        },
                        new
                        {
                            Id = 3121407,
                            EstadoId = 31,
                            Nome = "Desterro de Entre Rios"
                        },
                        new
                        {
                            Id = 3121506,
                            EstadoId = 31,
                            Nome = "Desterro do Melo"
                        },
                        new
                        {
                            Id = 3121605,
                            EstadoId = 31,
                            Nome = "Diamantina"
                        },
                        new
                        {
                            Id = 3121704,
                            EstadoId = 31,
                            Nome = "Diogo de Vasconcelos"
                        },
                        new
                        {
                            Id = 3121803,
                            EstadoId = 31,
                            Nome = "Dionísio"
                        },
                        new
                        {
                            Id = 3121902,
                            EstadoId = 31,
                            Nome = "Divinésia"
                        },
                        new
                        {
                            Id = 3122009,
                            EstadoId = 31,
                            Nome = "Divino"
                        },
                        new
                        {
                            Id = 3122108,
                            EstadoId = 31,
                            Nome = "Divino das Laranjeiras"
                        },
                        new
                        {
                            Id = 3122207,
                            EstadoId = 31,
                            Nome = "Divinolândia de Minas"
                        },
                        new
                        {
                            Id = 3122306,
                            EstadoId = 31,
                            Nome = "Divinópolis"
                        },
                        new
                        {
                            Id = 3122355,
                            EstadoId = 31,
                            Nome = "Divisa Alegre"
                        },
                        new
                        {
                            Id = 3122405,
                            EstadoId = 31,
                            Nome = "Divisa Nova"
                        },
                        new
                        {
                            Id = 3122454,
                            EstadoId = 31,
                            Nome = "Divisópolis"
                        },
                        new
                        {
                            Id = 3122470,
                            EstadoId = 31,
                            Nome = "Dom Bosco"
                        },
                        new
                        {
                            Id = 3122504,
                            EstadoId = 31,
                            Nome = "Dom Cavati"
                        },
                        new
                        {
                            Id = 3122603,
                            EstadoId = 31,
                            Nome = "Dom Joaquim"
                        },
                        new
                        {
                            Id = 3122702,
                            EstadoId = 31,
                            Nome = "Dom Silvério"
                        },
                        new
                        {
                            Id = 3122801,
                            EstadoId = 31,
                            Nome = "Dom Viçoso"
                        },
                        new
                        {
                            Id = 3122900,
                            EstadoId = 31,
                            Nome = "Dona Eusébia"
                        },
                        new
                        {
                            Id = 3123007,
                            EstadoId = 31,
                            Nome = "Dores de Campos"
                        },
                        new
                        {
                            Id = 3123106,
                            EstadoId = 31,
                            Nome = "Dores de Guanhães"
                        },
                        new
                        {
                            Id = 3123205,
                            EstadoId = 31,
                            Nome = "Dores do Indaiá"
                        },
                        new
                        {
                            Id = 3123304,
                            EstadoId = 31,
                            Nome = "Dores do Turvo"
                        },
                        new
                        {
                            Id = 3123403,
                            EstadoId = 31,
                            Nome = "Doresópolis"
                        },
                        new
                        {
                            Id = 3123502,
                            EstadoId = 31,
                            Nome = "Douradoquara"
                        },
                        new
                        {
                            Id = 3123528,
                            EstadoId = 31,
                            Nome = "Durandé"
                        },
                        new
                        {
                            Id = 3123601,
                            EstadoId = 31,
                            Nome = "Elói Mendes"
                        },
                        new
                        {
                            Id = 3123700,
                            EstadoId = 31,
                            Nome = "Engenheiro Caldas"
                        },
                        new
                        {
                            Id = 3123809,
                            EstadoId = 31,
                            Nome = "Engenheiro Navarro"
                        },
                        new
                        {
                            Id = 3123858,
                            EstadoId = 31,
                            Nome = "Entre Folhas"
                        },
                        new
                        {
                            Id = 3123908,
                            EstadoId = 31,
                            Nome = "Entre Rios de Minas"
                        },
                        new
                        {
                            Id = 3124005,
                            EstadoId = 31,
                            Nome = "Ervália"
                        },
                        new
                        {
                            Id = 3124104,
                            EstadoId = 31,
                            Nome = "Esmeraldas"
                        },
                        new
                        {
                            Id = 3124203,
                            EstadoId = 31,
                            Nome = "Espera Feliz"
                        },
                        new
                        {
                            Id = 3124302,
                            EstadoId = 31,
                            Nome = "Espinosa"
                        },
                        new
                        {
                            Id = 3124401,
                            EstadoId = 31,
                            Nome = "Espírito Santo do Dourado"
                        },
                        new
                        {
                            Id = 3124500,
                            EstadoId = 31,
                            Nome = "Estiva"
                        },
                        new
                        {
                            Id = 3124609,
                            EstadoId = 31,
                            Nome = "Estrela Dalva"
                        },
                        new
                        {
                            Id = 3124708,
                            EstadoId = 31,
                            Nome = "Estrela do Indaiá"
                        },
                        new
                        {
                            Id = 3124807,
                            EstadoId = 31,
                            Nome = "Estrela do Sul"
                        },
                        new
                        {
                            Id = 3124906,
                            EstadoId = 31,
                            Nome = "Eugenópolis"
                        },
                        new
                        {
                            Id = 3125002,
                            EstadoId = 31,
                            Nome = "Ewbank da Câmara"
                        },
                        new
                        {
                            Id = 3125101,
                            EstadoId = 31,
                            Nome = "Extrema"
                        },
                        new
                        {
                            Id = 3125200,
                            EstadoId = 31,
                            Nome = "Fama"
                        },
                        new
                        {
                            Id = 3125309,
                            EstadoId = 31,
                            Nome = "Faria Lemos"
                        },
                        new
                        {
                            Id = 3125408,
                            EstadoId = 31,
                            Nome = "Felício dos Santos"
                        },
                        new
                        {
                            Id = 3125606,
                            EstadoId = 31,
                            Nome = "Felisburgo"
                        },
                        new
                        {
                            Id = 3125705,
                            EstadoId = 31,
                            Nome = "Felixlândia"
                        },
                        new
                        {
                            Id = 3125804,
                            EstadoId = 31,
                            Nome = "Fernandes Tourinho"
                        },
                        new
                        {
                            Id = 3125903,
                            EstadoId = 31,
                            Nome = "Ferros"
                        },
                        new
                        {
                            Id = 3125952,
                            EstadoId = 31,
                            Nome = "Fervedouro"
                        },
                        new
                        {
                            Id = 3126000,
                            EstadoId = 31,
                            Nome = "Florestal"
                        },
                        new
                        {
                            Id = 3126109,
                            EstadoId = 31,
                            Nome = "Formiga"
                        },
                        new
                        {
                            Id = 3126208,
                            EstadoId = 31,
                            Nome = "Formoso"
                        },
                        new
                        {
                            Id = 3126307,
                            EstadoId = 31,
                            Nome = "Fortaleza de Minas"
                        },
                        new
                        {
                            Id = 3126406,
                            EstadoId = 31,
                            Nome = "Fortuna de Minas"
                        },
                        new
                        {
                            Id = 3126505,
                            EstadoId = 31,
                            Nome = "Francisco Badaró"
                        },
                        new
                        {
                            Id = 3126604,
                            EstadoId = 31,
                            Nome = "Francisco Dumont"
                        },
                        new
                        {
                            Id = 3126703,
                            EstadoId = 31,
                            Nome = "Francisco Sá"
                        },
                        new
                        {
                            Id = 3126752,
                            EstadoId = 31,
                            Nome = "Franciscópolis"
                        },
                        new
                        {
                            Id = 3126802,
                            EstadoId = 31,
                            Nome = "Frei Gaspar"
                        },
                        new
                        {
                            Id = 3126901,
                            EstadoId = 31,
                            Nome = "Frei Inocêncio"
                        },
                        new
                        {
                            Id = 3126950,
                            EstadoId = 31,
                            Nome = "Frei Lagonegro"
                        },
                        new
                        {
                            Id = 3127008,
                            EstadoId = 31,
                            Nome = "Fronteira"
                        },
                        new
                        {
                            Id = 3127057,
                            EstadoId = 31,
                            Nome = "Fronteira dos Vales"
                        },
                        new
                        {
                            Id = 3127073,
                            EstadoId = 31,
                            Nome = "Fruta de Leite"
                        },
                        new
                        {
                            Id = 3127107,
                            EstadoId = 31,
                            Nome = "Frutal"
                        },
                        new
                        {
                            Id = 3127206,
                            EstadoId = 31,
                            Nome = "Funilândia"
                        },
                        new
                        {
                            Id = 3127305,
                            EstadoId = 31,
                            Nome = "Galiléia"
                        },
                        new
                        {
                            Id = 3127339,
                            EstadoId = 31,
                            Nome = "Gameleiras"
                        },
                        new
                        {
                            Id = 3127354,
                            EstadoId = 31,
                            Nome = "Glaucilândia"
                        },
                        new
                        {
                            Id = 3127370,
                            EstadoId = 31,
                            Nome = "Goiabeira"
                        },
                        new
                        {
                            Id = 3127388,
                            EstadoId = 31,
                            Nome = "Goianá"
                        },
                        new
                        {
                            Id = 3127404,
                            EstadoId = 31,
                            Nome = "Gonçalves"
                        },
                        new
                        {
                            Id = 3127503,
                            EstadoId = 31,
                            Nome = "Gonzaga"
                        },
                        new
                        {
                            Id = 3127602,
                            EstadoId = 31,
                            Nome = "Gouveia"
                        },
                        new
                        {
                            Id = 3127701,
                            EstadoId = 31,
                            Nome = "Governador Valadares"
                        },
                        new
                        {
                            Id = 3127800,
                            EstadoId = 31,
                            Nome = "Grão Mogol"
                        },
                        new
                        {
                            Id = 3127909,
                            EstadoId = 31,
                            Nome = "Grupiara"
                        },
                        new
                        {
                            Id = 3128006,
                            EstadoId = 31,
                            Nome = "Guanhães"
                        },
                        new
                        {
                            Id = 3128105,
                            EstadoId = 31,
                            Nome = "Guapé"
                        },
                        new
                        {
                            Id = 3128204,
                            EstadoId = 31,
                            Nome = "Guaraciaba"
                        },
                        new
                        {
                            Id = 3128253,
                            EstadoId = 31,
                            Nome = "Guaraciama"
                        },
                        new
                        {
                            Id = 3128303,
                            EstadoId = 31,
                            Nome = "Guaranésia"
                        },
                        new
                        {
                            Id = 3128402,
                            EstadoId = 31,
                            Nome = "Guarani"
                        },
                        new
                        {
                            Id = 3128501,
                            EstadoId = 31,
                            Nome = "Guarará"
                        },
                        new
                        {
                            Id = 3128600,
                            EstadoId = 31,
                            Nome = "Guarda-Mor"
                        },
                        new
                        {
                            Id = 3128709,
                            EstadoId = 31,
                            Nome = "Guaxupé"
                        },
                        new
                        {
                            Id = 3128808,
                            EstadoId = 31,
                            Nome = "Guidoval"
                        },
                        new
                        {
                            Id = 3128907,
                            EstadoId = 31,
                            Nome = "Guimarânia"
                        },
                        new
                        {
                            Id = 3129004,
                            EstadoId = 31,
                            Nome = "Guiricema"
                        },
                        new
                        {
                            Id = 3129103,
                            EstadoId = 31,
                            Nome = "Gurinhatã"
                        },
                        new
                        {
                            Id = 3129202,
                            EstadoId = 31,
                            Nome = "Heliodora"
                        },
                        new
                        {
                            Id = 3129301,
                            EstadoId = 31,
                            Nome = "Iapu"
                        },
                        new
                        {
                            Id = 3129400,
                            EstadoId = 31,
                            Nome = "Ibertioga"
                        },
                        new
                        {
                            Id = 3129509,
                            EstadoId = 31,
                            Nome = "Ibiá"
                        },
                        new
                        {
                            Id = 3129608,
                            EstadoId = 31,
                            Nome = "Ibiaí"
                        },
                        new
                        {
                            Id = 3129657,
                            EstadoId = 31,
                            Nome = "Ibiracatu"
                        },
                        new
                        {
                            Id = 3129707,
                            EstadoId = 31,
                            Nome = "Ibiraci"
                        },
                        new
                        {
                            Id = 3129806,
                            EstadoId = 31,
                            Nome = "Ibirité"
                        },
                        new
                        {
                            Id = 3129905,
                            EstadoId = 31,
                            Nome = "Ibitiúra de Minas"
                        },
                        new
                        {
                            Id = 3130002,
                            EstadoId = 31,
                            Nome = "Ibituruna"
                        },
                        new
                        {
                            Id = 3130051,
                            EstadoId = 31,
                            Nome = "Icaraí de Minas"
                        },
                        new
                        {
                            Id = 3130101,
                            EstadoId = 31,
                            Nome = "Igarapé"
                        },
                        new
                        {
                            Id = 3130200,
                            EstadoId = 31,
                            Nome = "Igaratinga"
                        },
                        new
                        {
                            Id = 3130309,
                            EstadoId = 31,
                            Nome = "Iguatama"
                        },
                        new
                        {
                            Id = 3130408,
                            EstadoId = 31,
                            Nome = "Ijaci"
                        },
                        new
                        {
                            Id = 3130507,
                            EstadoId = 31,
                            Nome = "Ilicínea"
                        },
                        new
                        {
                            Id = 3130556,
                            EstadoId = 31,
                            Nome = "Imbé de Minas"
                        },
                        new
                        {
                            Id = 3130606,
                            EstadoId = 31,
                            Nome = "Inconfidentes"
                        },
                        new
                        {
                            Id = 3130655,
                            EstadoId = 31,
                            Nome = "Indaiabira"
                        },
                        new
                        {
                            Id = 3130705,
                            EstadoId = 31,
                            Nome = "Indianópolis"
                        },
                        new
                        {
                            Id = 3130804,
                            EstadoId = 31,
                            Nome = "Ingaí"
                        },
                        new
                        {
                            Id = 3130903,
                            EstadoId = 31,
                            Nome = "Inhapim"
                        },
                        new
                        {
                            Id = 3131000,
                            EstadoId = 31,
                            Nome = "Inhaúma"
                        },
                        new
                        {
                            Id = 3131109,
                            EstadoId = 31,
                            Nome = "Inimutaba"
                        },
                        new
                        {
                            Id = 3131158,
                            EstadoId = 31,
                            Nome = "Ipaba"
                        },
                        new
                        {
                            Id = 3131208,
                            EstadoId = 31,
                            Nome = "Ipanema"
                        },
                        new
                        {
                            Id = 3131307,
                            EstadoId = 31,
                            Nome = "Ipatinga"
                        },
                        new
                        {
                            Id = 3131406,
                            EstadoId = 31,
                            Nome = "Ipiaçu"
                        },
                        new
                        {
                            Id = 3131505,
                            EstadoId = 31,
                            Nome = "Ipuiúna"
                        },
                        new
                        {
                            Id = 3131604,
                            EstadoId = 31,
                            Nome = "Iraí de Minas"
                        },
                        new
                        {
                            Id = 3131703,
                            EstadoId = 31,
                            Nome = "Itabira"
                        },
                        new
                        {
                            Id = 3131802,
                            EstadoId = 31,
                            Nome = "Itabirinha"
                        },
                        new
                        {
                            Id = 3131901,
                            EstadoId = 31,
                            Nome = "Itabirito"
                        },
                        new
                        {
                            Id = 3132008,
                            EstadoId = 31,
                            Nome = "Itacambira"
                        },
                        new
                        {
                            Id = 3132107,
                            EstadoId = 31,
                            Nome = "Itacarambi"
                        },
                        new
                        {
                            Id = 3132206,
                            EstadoId = 31,
                            Nome = "Itaguara"
                        },
                        new
                        {
                            Id = 3132305,
                            EstadoId = 31,
                            Nome = "Itaipé"
                        },
                        new
                        {
                            Id = 3132404,
                            EstadoId = 31,
                            Nome = "Itajubá"
                        },
                        new
                        {
                            Id = 3132503,
                            EstadoId = 31,
                            Nome = "Itamarandiba"
                        },
                        new
                        {
                            Id = 3132602,
                            EstadoId = 31,
                            Nome = "Itamarati de Minas"
                        },
                        new
                        {
                            Id = 3132701,
                            EstadoId = 31,
                            Nome = "Itambacuri"
                        },
                        new
                        {
                            Id = 3132800,
                            EstadoId = 31,
                            Nome = "Itambé do Mato Dentro"
                        },
                        new
                        {
                            Id = 3132909,
                            EstadoId = 31,
                            Nome = "Itamogi"
                        },
                        new
                        {
                            Id = 3133006,
                            EstadoId = 31,
                            Nome = "Itamonte"
                        },
                        new
                        {
                            Id = 3133105,
                            EstadoId = 31,
                            Nome = "Itanhandu"
                        },
                        new
                        {
                            Id = 3133204,
                            EstadoId = 31,
                            Nome = "Itanhomi"
                        },
                        new
                        {
                            Id = 3133303,
                            EstadoId = 31,
                            Nome = "Itaobim"
                        },
                        new
                        {
                            Id = 3133402,
                            EstadoId = 31,
                            Nome = "Itapagipe"
                        },
                        new
                        {
                            Id = 3133501,
                            EstadoId = 31,
                            Nome = "Itapecerica"
                        },
                        new
                        {
                            Id = 3133600,
                            EstadoId = 31,
                            Nome = "Itapeva"
                        },
                        new
                        {
                            Id = 3133709,
                            EstadoId = 31,
                            Nome = "Itatiaiuçu"
                        },
                        new
                        {
                            Id = 3133758,
                            EstadoId = 31,
                            Nome = "Itaú de Minas"
                        },
                        new
                        {
                            Id = 3133808,
                            EstadoId = 31,
                            Nome = "Itaúna"
                        },
                        new
                        {
                            Id = 3133907,
                            EstadoId = 31,
                            Nome = "Itaverava"
                        },
                        new
                        {
                            Id = 3134004,
                            EstadoId = 31,
                            Nome = "Itinga"
                        },
                        new
                        {
                            Id = 3134103,
                            EstadoId = 31,
                            Nome = "Itueta"
                        },
                        new
                        {
                            Id = 3134202,
                            EstadoId = 31,
                            Nome = "Ituiutaba"
                        },
                        new
                        {
                            Id = 3134301,
                            EstadoId = 31,
                            Nome = "Itumirim"
                        },
                        new
                        {
                            Id = 3134400,
                            EstadoId = 31,
                            Nome = "Iturama"
                        },
                        new
                        {
                            Id = 3134509,
                            EstadoId = 31,
                            Nome = "Itutinga"
                        },
                        new
                        {
                            Id = 3134608,
                            EstadoId = 31,
                            Nome = "Jaboticatubas"
                        },
                        new
                        {
                            Id = 3134707,
                            EstadoId = 31,
                            Nome = "Jacinto"
                        },
                        new
                        {
                            Id = 3134806,
                            EstadoId = 31,
                            Nome = "Jacuí"
                        },
                        new
                        {
                            Id = 3134905,
                            EstadoId = 31,
                            Nome = "Jacutinga"
                        },
                        new
                        {
                            Id = 3135001,
                            EstadoId = 31,
                            Nome = "Jaguaraçu"
                        },
                        new
                        {
                            Id = 3135050,
                            EstadoId = 31,
                            Nome = "Jaíba"
                        },
                        new
                        {
                            Id = 3135076,
                            EstadoId = 31,
                            Nome = "Jampruca"
                        },
                        new
                        {
                            Id = 3135100,
                            EstadoId = 31,
                            Nome = "Janaúba"
                        },
                        new
                        {
                            Id = 3135209,
                            EstadoId = 31,
                            Nome = "Januária"
                        },
                        new
                        {
                            Id = 3135308,
                            EstadoId = 31,
                            Nome = "Japaraíba"
                        },
                        new
                        {
                            Id = 3135357,
                            EstadoId = 31,
                            Nome = "Japonvar"
                        },
                        new
                        {
                            Id = 3135407,
                            EstadoId = 31,
                            Nome = "Jeceaba"
                        },
                        new
                        {
                            Id = 3135456,
                            EstadoId = 31,
                            Nome = "Jenipapo de Minas"
                        },
                        new
                        {
                            Id = 3135506,
                            EstadoId = 31,
                            Nome = "Jequeri"
                        },
                        new
                        {
                            Id = 3135605,
                            EstadoId = 31,
                            Nome = "Jequitaí"
                        },
                        new
                        {
                            Id = 3135704,
                            EstadoId = 31,
                            Nome = "Jequitibá"
                        },
                        new
                        {
                            Id = 3135803,
                            EstadoId = 31,
                            Nome = "Jequitinhonha"
                        },
                        new
                        {
                            Id = 3135902,
                            EstadoId = 31,
                            Nome = "Jesuânia"
                        },
                        new
                        {
                            Id = 3136009,
                            EstadoId = 31,
                            Nome = "Joaíma"
                        },
                        new
                        {
                            Id = 3136108,
                            EstadoId = 31,
                            Nome = "Joanésia"
                        },
                        new
                        {
                            Id = 3136207,
                            EstadoId = 31,
                            Nome = "João Monlevade"
                        },
                        new
                        {
                            Id = 3136306,
                            EstadoId = 31,
                            Nome = "João Pinheiro"
                        },
                        new
                        {
                            Id = 3136405,
                            EstadoId = 31,
                            Nome = "Joaquim Felício"
                        },
                        new
                        {
                            Id = 3136504,
                            EstadoId = 31,
                            Nome = "Jordânia"
                        },
                        new
                        {
                            Id = 3136520,
                            EstadoId = 31,
                            Nome = "José Gonçalves de Minas"
                        },
                        new
                        {
                            Id = 3136553,
                            EstadoId = 31,
                            Nome = "José Raydan"
                        },
                        new
                        {
                            Id = 3136579,
                            EstadoId = 31,
                            Nome = "Josenópolis"
                        },
                        new
                        {
                            Id = 3136652,
                            EstadoId = 31,
                            Nome = "Juatuba"
                        },
                        new
                        {
                            Id = 3136702,
                            EstadoId = 31,
                            Nome = "Juiz de Fora"
                        },
                        new
                        {
                            Id = 3136801,
                            EstadoId = 31,
                            Nome = "Juramento"
                        },
                        new
                        {
                            Id = 3136900,
                            EstadoId = 31,
                            Nome = "Juruaia"
                        },
                        new
                        {
                            Id = 3136959,
                            EstadoId = 31,
                            Nome = "Juvenília"
                        },
                        new
                        {
                            Id = 3137007,
                            EstadoId = 31,
                            Nome = "Ladainha"
                        },
                        new
                        {
                            Id = 3137106,
                            EstadoId = 31,
                            Nome = "Lagamar"
                        },
                        new
                        {
                            Id = 3137205,
                            EstadoId = 31,
                            Nome = "Lagoa da Prata"
                        },
                        new
                        {
                            Id = 3137304,
                            EstadoId = 31,
                            Nome = "Lagoa dos Patos"
                        },
                        new
                        {
                            Id = 3137403,
                            EstadoId = 31,
                            Nome = "Lagoa Dourada"
                        },
                        new
                        {
                            Id = 3137502,
                            EstadoId = 31,
                            Nome = "Lagoa Formosa"
                        },
                        new
                        {
                            Id = 3137536,
                            EstadoId = 31,
                            Nome = "Lagoa Grande"
                        },
                        new
                        {
                            Id = 3137601,
                            EstadoId = 31,
                            Nome = "Lagoa Santa"
                        },
                        new
                        {
                            Id = 3137700,
                            EstadoId = 31,
                            Nome = "Lajinha"
                        },
                        new
                        {
                            Id = 3137809,
                            EstadoId = 31,
                            Nome = "Lambari"
                        },
                        new
                        {
                            Id = 3137908,
                            EstadoId = 31,
                            Nome = "Lamim"
                        },
                        new
                        {
                            Id = 3138005,
                            EstadoId = 31,
                            Nome = "Laranjal"
                        },
                        new
                        {
                            Id = 3138104,
                            EstadoId = 31,
                            Nome = "Lassance"
                        },
                        new
                        {
                            Id = 3138203,
                            EstadoId = 31,
                            Nome = "Lavras"
                        },
                        new
                        {
                            Id = 3138302,
                            EstadoId = 31,
                            Nome = "Leandro Ferreira"
                        },
                        new
                        {
                            Id = 3138351,
                            EstadoId = 31,
                            Nome = "Leme do Prado"
                        },
                        new
                        {
                            Id = 3138401,
                            EstadoId = 31,
                            Nome = "Leopoldina"
                        },
                        new
                        {
                            Id = 3138500,
                            EstadoId = 31,
                            Nome = "Liberdade"
                        },
                        new
                        {
                            Id = 3138609,
                            EstadoId = 31,
                            Nome = "Lima Duarte"
                        },
                        new
                        {
                            Id = 3138625,
                            EstadoId = 31,
                            Nome = "Limeira do Oeste"
                        },
                        new
                        {
                            Id = 3138658,
                            EstadoId = 31,
                            Nome = "Lontra"
                        },
                        new
                        {
                            Id = 3138674,
                            EstadoId = 31,
                            Nome = "Luisburgo"
                        },
                        new
                        {
                            Id = 3138682,
                            EstadoId = 31,
                            Nome = "Luislândia"
                        },
                        new
                        {
                            Id = 3138708,
                            EstadoId = 31,
                            Nome = "Luminárias"
                        },
                        new
                        {
                            Id = 3138807,
                            EstadoId = 31,
                            Nome = "Luz"
                        },
                        new
                        {
                            Id = 3138906,
                            EstadoId = 31,
                            Nome = "Machacalis"
                        },
                        new
                        {
                            Id = 3139003,
                            EstadoId = 31,
                            Nome = "Machado"
                        },
                        new
                        {
                            Id = 3139102,
                            EstadoId = 31,
                            Nome = "Madre de Deus de Minas"
                        },
                        new
                        {
                            Id = 3139201,
                            EstadoId = 31,
                            Nome = "Malacacheta"
                        },
                        new
                        {
                            Id = 3139250,
                            EstadoId = 31,
                            Nome = "Mamonas"
                        },
                        new
                        {
                            Id = 3139300,
                            EstadoId = 31,
                            Nome = "Manga"
                        },
                        new
                        {
                            Id = 3139409,
                            EstadoId = 31,
                            Nome = "Manhuaçu"
                        },
                        new
                        {
                            Id = 3139508,
                            EstadoId = 31,
                            Nome = "Manhumirim"
                        },
                        new
                        {
                            Id = 3139607,
                            EstadoId = 31,
                            Nome = "Mantena"
                        },
                        new
                        {
                            Id = 3139805,
                            EstadoId = 31,
                            Nome = "Mar de Espanha"
                        },
                        new
                        {
                            Id = 3139706,
                            EstadoId = 31,
                            Nome = "Maravilhas"
                        },
                        new
                        {
                            Id = 3139904,
                            EstadoId = 31,
                            Nome = "Maria da Fé"
                        },
                        new
                        {
                            Id = 3140001,
                            EstadoId = 31,
                            Nome = "Mariana"
                        },
                        new
                        {
                            Id = 3140100,
                            EstadoId = 31,
                            Nome = "Marilac"
                        },
                        new
                        {
                            Id = 3140159,
                            EstadoId = 31,
                            Nome = "Mário Campos"
                        },
                        new
                        {
                            Id = 3140209,
                            EstadoId = 31,
                            Nome = "Maripá de Minas"
                        },
                        new
                        {
                            Id = 3140308,
                            EstadoId = 31,
                            Nome = "Marliéria"
                        },
                        new
                        {
                            Id = 3140407,
                            EstadoId = 31,
                            Nome = "Marmelópolis"
                        },
                        new
                        {
                            Id = 3140506,
                            EstadoId = 31,
                            Nome = "Martinho Campos"
                        },
                        new
                        {
                            Id = 3140530,
                            EstadoId = 31,
                            Nome = "Martins Soares"
                        },
                        new
                        {
                            Id = 3140555,
                            EstadoId = 31,
                            Nome = "Mata Verde"
                        },
                        new
                        {
                            Id = 3140605,
                            EstadoId = 31,
                            Nome = "Materlândia"
                        },
                        new
                        {
                            Id = 3140704,
                            EstadoId = 31,
                            Nome = "Mateus Leme"
                        },
                        new
                        {
                            Id = 3171501,
                            EstadoId = 31,
                            Nome = "Mathias Lobato"
                        },
                        new
                        {
                            Id = 3140803,
                            EstadoId = 31,
                            Nome = "Matias Barbosa"
                        },
                        new
                        {
                            Id = 3140852,
                            EstadoId = 31,
                            Nome = "Matias Cardoso"
                        },
                        new
                        {
                            Id = 3140902,
                            EstadoId = 31,
                            Nome = "Matipó"
                        },
                        new
                        {
                            Id = 3141009,
                            EstadoId = 31,
                            Nome = "Mato Verde"
                        },
                        new
                        {
                            Id = 3141108,
                            EstadoId = 31,
                            Nome = "Matozinhos"
                        },
                        new
                        {
                            Id = 3141207,
                            EstadoId = 31,
                            Nome = "Matutina"
                        },
                        new
                        {
                            Id = 3141306,
                            EstadoId = 31,
                            Nome = "Medeiros"
                        },
                        new
                        {
                            Id = 3141405,
                            EstadoId = 31,
                            Nome = "Medina"
                        },
                        new
                        {
                            Id = 3141504,
                            EstadoId = 31,
                            Nome = "Mendes Pimentel"
                        },
                        new
                        {
                            Id = 3141603,
                            EstadoId = 31,
                            Nome = "Mercês"
                        },
                        new
                        {
                            Id = 3141702,
                            EstadoId = 31,
                            Nome = "Mesquita"
                        },
                        new
                        {
                            Id = 3141801,
                            EstadoId = 31,
                            Nome = "Minas Novas"
                        },
                        new
                        {
                            Id = 3141900,
                            EstadoId = 31,
                            Nome = "Minduri"
                        },
                        new
                        {
                            Id = 3142007,
                            EstadoId = 31,
                            Nome = "Mirabela"
                        },
                        new
                        {
                            Id = 3142106,
                            EstadoId = 31,
                            Nome = "Miradouro"
                        },
                        new
                        {
                            Id = 3142205,
                            EstadoId = 31,
                            Nome = "Miraí"
                        },
                        new
                        {
                            Id = 3142254,
                            EstadoId = 31,
                            Nome = "Miravânia"
                        },
                        new
                        {
                            Id = 3142304,
                            EstadoId = 31,
                            Nome = "Moeda"
                        },
                        new
                        {
                            Id = 3142403,
                            EstadoId = 31,
                            Nome = "Moema"
                        },
                        new
                        {
                            Id = 3142502,
                            EstadoId = 31,
                            Nome = "Monjolos"
                        },
                        new
                        {
                            Id = 3142601,
                            EstadoId = 31,
                            Nome = "Monsenhor Paulo"
                        },
                        new
                        {
                            Id = 3142700,
                            EstadoId = 31,
                            Nome = "Montalvânia"
                        },
                        new
                        {
                            Id = 3142809,
                            EstadoId = 31,
                            Nome = "Monte Alegre de Minas"
                        },
                        new
                        {
                            Id = 3142908,
                            EstadoId = 31,
                            Nome = "Monte Azul"
                        },
                        new
                        {
                            Id = 3143005,
                            EstadoId = 31,
                            Nome = "Monte Belo"
                        },
                        new
                        {
                            Id = 3143104,
                            EstadoId = 31,
                            Nome = "Monte Carmelo"
                        },
                        new
                        {
                            Id = 3143153,
                            EstadoId = 31,
                            Nome = "Monte Formoso"
                        },
                        new
                        {
                            Id = 3143203,
                            EstadoId = 31,
                            Nome = "Monte Santo de Minas"
                        },
                        new
                        {
                            Id = 3143401,
                            EstadoId = 31,
                            Nome = "Monte Sião"
                        },
                        new
                        {
                            Id = 3143302,
                            EstadoId = 31,
                            Nome = "Montes Claros"
                        },
                        new
                        {
                            Id = 3143450,
                            EstadoId = 31,
                            Nome = "Montezuma"
                        },
                        new
                        {
                            Id = 3143500,
                            EstadoId = 31,
                            Nome = "Morada Nova de Minas"
                        },
                        new
                        {
                            Id = 3143609,
                            EstadoId = 31,
                            Nome = "Morro da Garça"
                        },
                        new
                        {
                            Id = 3143708,
                            EstadoId = 31,
                            Nome = "Morro do Pilar"
                        },
                        new
                        {
                            Id = 3143807,
                            EstadoId = 31,
                            Nome = "Munhoz"
                        },
                        new
                        {
                            Id = 3143906,
                            EstadoId = 31,
                            Nome = "Muriaé"
                        },
                        new
                        {
                            Id = 3144003,
                            EstadoId = 31,
                            Nome = "Mutum"
                        },
                        new
                        {
                            Id = 3144102,
                            EstadoId = 31,
                            Nome = "Muzambinho"
                        },
                        new
                        {
                            Id = 3144201,
                            EstadoId = 31,
                            Nome = "Nacip Raydan"
                        },
                        new
                        {
                            Id = 3144300,
                            EstadoId = 31,
                            Nome = "Nanuque"
                        },
                        new
                        {
                            Id = 3144359,
                            EstadoId = 31,
                            Nome = "Naque"
                        },
                        new
                        {
                            Id = 3144375,
                            EstadoId = 31,
                            Nome = "Natalândia"
                        },
                        new
                        {
                            Id = 3144409,
                            EstadoId = 31,
                            Nome = "Natércia"
                        },
                        new
                        {
                            Id = 3144508,
                            EstadoId = 31,
                            Nome = "Nazareno"
                        },
                        new
                        {
                            Id = 3144607,
                            EstadoId = 31,
                            Nome = "Nepomuceno"
                        },
                        new
                        {
                            Id = 3144656,
                            EstadoId = 31,
                            Nome = "Ninheira"
                        },
                        new
                        {
                            Id = 3144672,
                            EstadoId = 31,
                            Nome = "Nova Belém"
                        },
                        new
                        {
                            Id = 3144706,
                            EstadoId = 31,
                            Nome = "Nova Era"
                        },
                        new
                        {
                            Id = 3144805,
                            EstadoId = 31,
                            Nome = "Nova Lima"
                        },
                        new
                        {
                            Id = 3144904,
                            EstadoId = 31,
                            Nome = "Nova Módica"
                        },
                        new
                        {
                            Id = 3145000,
                            EstadoId = 31,
                            Nome = "Nova Ponte"
                        },
                        new
                        {
                            Id = 3145059,
                            EstadoId = 31,
                            Nome = "Nova Porteirinha"
                        },
                        new
                        {
                            Id = 3145109,
                            EstadoId = 31,
                            Nome = "Nova Resende"
                        },
                        new
                        {
                            Id = 3145208,
                            EstadoId = 31,
                            Nome = "Nova Serrana"
                        },
                        new
                        {
                            Id = 3136603,
                            EstadoId = 31,
                            Nome = "Nova União"
                        },
                        new
                        {
                            Id = 3145307,
                            EstadoId = 31,
                            Nome = "Novo Cruzeiro"
                        },
                        new
                        {
                            Id = 3145356,
                            EstadoId = 31,
                            Nome = "Novo Oriente de Minas"
                        },
                        new
                        {
                            Id = 3145372,
                            EstadoId = 31,
                            Nome = "Novorizonte"
                        },
                        new
                        {
                            Id = 3145406,
                            EstadoId = 31,
                            Nome = "Olaria"
                        },
                        new
                        {
                            Id = 3145455,
                            EstadoId = 31,
                            Nome = "Olhos-dÁgua"
                        },
                        new
                        {
                            Id = 3145505,
                            EstadoId = 31,
                            Nome = "Olímpio Noronha"
                        },
                        new
                        {
                            Id = 3145604,
                            EstadoId = 31,
                            Nome = "Oliveira"
                        },
                        new
                        {
                            Id = 3145703,
                            EstadoId = 31,
                            Nome = "Oliveira Fortes"
                        },
                        new
                        {
                            Id = 3145802,
                            EstadoId = 31,
                            Nome = "Onça de Pitangui"
                        },
                        new
                        {
                            Id = 3145851,
                            EstadoId = 31,
                            Nome = "Oratórios"
                        },
                        new
                        {
                            Id = 3145877,
                            EstadoId = 31,
                            Nome = "Orizânia"
                        },
                        new
                        {
                            Id = 3145901,
                            EstadoId = 31,
                            Nome = "Ouro Branco"
                        },
                        new
                        {
                            Id = 3146008,
                            EstadoId = 31,
                            Nome = "Ouro Fino"
                        },
                        new
                        {
                            Id = 3146107,
                            EstadoId = 31,
                            Nome = "Ouro Preto"
                        },
                        new
                        {
                            Id = 3146206,
                            EstadoId = 31,
                            Nome = "Ouro Verde de Minas"
                        },
                        new
                        {
                            Id = 3146255,
                            EstadoId = 31,
                            Nome = "Padre Carvalho"
                        },
                        new
                        {
                            Id = 3146305,
                            EstadoId = 31,
                            Nome = "Padre Paraíso"
                        },
                        new
                        {
                            Id = 3146552,
                            EstadoId = 31,
                            Nome = "Pai Pedro"
                        },
                        new
                        {
                            Id = 3146404,
                            EstadoId = 31,
                            Nome = "Paineiras"
                        },
                        new
                        {
                            Id = 3146503,
                            EstadoId = 31,
                            Nome = "Pains"
                        },
                        new
                        {
                            Id = 3146602,
                            EstadoId = 31,
                            Nome = "Paiva"
                        },
                        new
                        {
                            Id = 3146701,
                            EstadoId = 31,
                            Nome = "Palma"
                        },
                        new
                        {
                            Id = 3146750,
                            EstadoId = 31,
                            Nome = "Palmópolis"
                        },
                        new
                        {
                            Id = 3146909,
                            EstadoId = 31,
                            Nome = "Papagaios"
                        },
                        new
                        {
                            Id = 3147105,
                            EstadoId = 31,
                            Nome = "Pará de Minas"
                        },
                        new
                        {
                            Id = 3147006,
                            EstadoId = 31,
                            Nome = "Paracatu"
                        },
                        new
                        {
                            Id = 3147204,
                            EstadoId = 31,
                            Nome = "Paraguaçu"
                        },
                        new
                        {
                            Id = 3147303,
                            EstadoId = 31,
                            Nome = "Paraisópolis"
                        },
                        new
                        {
                            Id = 3147402,
                            EstadoId = 31,
                            Nome = "Paraopeba"
                        },
                        new
                        {
                            Id = 3147600,
                            EstadoId = 31,
                            Nome = "Passa Quatro"
                        },
                        new
                        {
                            Id = 3147709,
                            EstadoId = 31,
                            Nome = "Passa Tempo"
                        },
                        new
                        {
                            Id = 3147501,
                            EstadoId = 31,
                            Nome = "Passabém"
                        },
                        new
                        {
                            Id = 3147808,
                            EstadoId = 31,
                            Nome = "Passa-Vinte"
                        },
                        new
                        {
                            Id = 3147907,
                            EstadoId = 31,
                            Nome = "Passos"
                        },
                        new
                        {
                            Id = 3147956,
                            EstadoId = 31,
                            Nome = "Patis"
                        },
                        new
                        {
                            Id = 3148004,
                            EstadoId = 31,
                            Nome = "Patos de Minas"
                        },
                        new
                        {
                            Id = 3148103,
                            EstadoId = 31,
                            Nome = "Patrocínio"
                        },
                        new
                        {
                            Id = 3148202,
                            EstadoId = 31,
                            Nome = "Patrocínio do Muriaé"
                        },
                        new
                        {
                            Id = 3148301,
                            EstadoId = 31,
                            Nome = "Paula Cândido"
                        },
                        new
                        {
                            Id = 3148400,
                            EstadoId = 31,
                            Nome = "Paulistas"
                        },
                        new
                        {
                            Id = 3148509,
                            EstadoId = 31,
                            Nome = "Pavão"
                        },
                        new
                        {
                            Id = 3148608,
                            EstadoId = 31,
                            Nome = "Peçanha"
                        },
                        new
                        {
                            Id = 3148707,
                            EstadoId = 31,
                            Nome = "Pedra Azul"
                        },
                        new
                        {
                            Id = 3148756,
                            EstadoId = 31,
                            Nome = "Pedra Bonita"
                        },
                        new
                        {
                            Id = 3148806,
                            EstadoId = 31,
                            Nome = "Pedra do Anta"
                        },
                        new
                        {
                            Id = 3148905,
                            EstadoId = 31,
                            Nome = "Pedra do Indaiá"
                        },
                        new
                        {
                            Id = 3149002,
                            EstadoId = 31,
                            Nome = "Pedra Dourada"
                        },
                        new
                        {
                            Id = 3149101,
                            EstadoId = 31,
                            Nome = "Pedralva"
                        },
                        new
                        {
                            Id = 3149150,
                            EstadoId = 31,
                            Nome = "Pedras de Maria da Cruz"
                        },
                        new
                        {
                            Id = 3149200,
                            EstadoId = 31,
                            Nome = "Pedrinópolis"
                        },
                        new
                        {
                            Id = 3149309,
                            EstadoId = 31,
                            Nome = "Pedro Leopoldo"
                        },
                        new
                        {
                            Id = 3149408,
                            EstadoId = 31,
                            Nome = "Pedro Teixeira"
                        },
                        new
                        {
                            Id = 3149507,
                            EstadoId = 31,
                            Nome = "Pequeri"
                        },
                        new
                        {
                            Id = 3149606,
                            EstadoId = 31,
                            Nome = "Pequi"
                        },
                        new
                        {
                            Id = 3149705,
                            EstadoId = 31,
                            Nome = "Perdigão"
                        },
                        new
                        {
                            Id = 3149804,
                            EstadoId = 31,
                            Nome = "Perdizes"
                        },
                        new
                        {
                            Id = 3149903,
                            EstadoId = 31,
                            Nome = "Perdões"
                        },
                        new
                        {
                            Id = 3149952,
                            EstadoId = 31,
                            Nome = "Periquito"
                        },
                        new
                        {
                            Id = 3150000,
                            EstadoId = 31,
                            Nome = "Pescador"
                        },
                        new
                        {
                            Id = 3150109,
                            EstadoId = 31,
                            Nome = "Piau"
                        },
                        new
                        {
                            Id = 3150158,
                            EstadoId = 31,
                            Nome = "Piedade de Caratinga"
                        },
                        new
                        {
                            Id = 3150208,
                            EstadoId = 31,
                            Nome = "Piedade de Ponte Nova"
                        },
                        new
                        {
                            Id = 3150307,
                            EstadoId = 31,
                            Nome = "Piedade do Rio Grande"
                        },
                        new
                        {
                            Id = 3150406,
                            EstadoId = 31,
                            Nome = "Piedade dos Gerais"
                        },
                        new
                        {
                            Id = 3150505,
                            EstadoId = 31,
                            Nome = "Pimenta"
                        },
                        new
                        {
                            Id = 3150539,
                            EstadoId = 31,
                            Nome = "Pingo-dÁgua"
                        },
                        new
                        {
                            Id = 3150570,
                            EstadoId = 31,
                            Nome = "Pintópolis"
                        },
                        new
                        {
                            Id = 3150604,
                            EstadoId = 31,
                            Nome = "Piracema"
                        },
                        new
                        {
                            Id = 3150703,
                            EstadoId = 31,
                            Nome = "Pirajuba"
                        },
                        new
                        {
                            Id = 3150802,
                            EstadoId = 31,
                            Nome = "Piranga"
                        },
                        new
                        {
                            Id = 3150901,
                            EstadoId = 31,
                            Nome = "Piranguçu"
                        },
                        new
                        {
                            Id = 3151008,
                            EstadoId = 31,
                            Nome = "Piranguinho"
                        },
                        new
                        {
                            Id = 3151107,
                            EstadoId = 31,
                            Nome = "Pirapetinga"
                        },
                        new
                        {
                            Id = 3151206,
                            EstadoId = 31,
                            Nome = "Pirapora"
                        },
                        new
                        {
                            Id = 3151305,
                            EstadoId = 31,
                            Nome = "Piraúba"
                        },
                        new
                        {
                            Id = 3151404,
                            EstadoId = 31,
                            Nome = "Pitangui"
                        },
                        new
                        {
                            Id = 3151503,
                            EstadoId = 31,
                            Nome = "Piumhi"
                        },
                        new
                        {
                            Id = 3151602,
                            EstadoId = 31,
                            Nome = "Planura"
                        },
                        new
                        {
                            Id = 3151701,
                            EstadoId = 31,
                            Nome = "Poço Fundo"
                        },
                        new
                        {
                            Id = 3151800,
                            EstadoId = 31,
                            Nome = "Poços de Caldas"
                        },
                        new
                        {
                            Id = 3151909,
                            EstadoId = 31,
                            Nome = "Pocrane"
                        },
                        new
                        {
                            Id = 3152006,
                            EstadoId = 31,
                            Nome = "Pompéu"
                        },
                        new
                        {
                            Id = 3152105,
                            EstadoId = 31,
                            Nome = "Ponte Nova"
                        },
                        new
                        {
                            Id = 3152131,
                            EstadoId = 31,
                            Nome = "Ponto Chique"
                        },
                        new
                        {
                            Id = 3152170,
                            EstadoId = 31,
                            Nome = "Ponto dos Volantes"
                        },
                        new
                        {
                            Id = 3152204,
                            EstadoId = 31,
                            Nome = "Porteirinha"
                        },
                        new
                        {
                            Id = 3152303,
                            EstadoId = 31,
                            Nome = "Porto Firme"
                        },
                        new
                        {
                            Id = 3152402,
                            EstadoId = 31,
                            Nome = "Poté"
                        },
                        new
                        {
                            Id = 3152501,
                            EstadoId = 31,
                            Nome = "Pouso Alegre"
                        },
                        new
                        {
                            Id = 3152600,
                            EstadoId = 31,
                            Nome = "Pouso Alto"
                        },
                        new
                        {
                            Id = 3152709,
                            EstadoId = 31,
                            Nome = "Prados"
                        },
                        new
                        {
                            Id = 3152808,
                            EstadoId = 31,
                            Nome = "Prata"
                        },
                        new
                        {
                            Id = 3152907,
                            EstadoId = 31,
                            Nome = "Pratápolis"
                        },
                        new
                        {
                            Id = 3153004,
                            EstadoId = 31,
                            Nome = "Pratinha"
                        },
                        new
                        {
                            Id = 3153103,
                            EstadoId = 31,
                            Nome = "Presidente Bernardes"
                        },
                        new
                        {
                            Id = 3153202,
                            EstadoId = 31,
                            Nome = "Presidente Juscelino"
                        },
                        new
                        {
                            Id = 3153301,
                            EstadoId = 31,
                            Nome = "Presidente Kubitschek"
                        },
                        new
                        {
                            Id = 3153400,
                            EstadoId = 31,
                            Nome = "Presidente Olegário"
                        },
                        new
                        {
                            Id = 3153608,
                            EstadoId = 31,
                            Nome = "Prudente de Morais"
                        },
                        new
                        {
                            Id = 3153707,
                            EstadoId = 31,
                            Nome = "Quartel Geral"
                        },
                        new
                        {
                            Id = 3153806,
                            EstadoId = 31,
                            Nome = "Queluzito"
                        },
                        new
                        {
                            Id = 3153905,
                            EstadoId = 31,
                            Nome = "Raposos"
                        },
                        new
                        {
                            Id = 3154002,
                            EstadoId = 31,
                            Nome = "Raul Soares"
                        },
                        new
                        {
                            Id = 3154101,
                            EstadoId = 31,
                            Nome = "Recreio"
                        },
                        new
                        {
                            Id = 3154150,
                            EstadoId = 31,
                            Nome = "Reduto"
                        },
                        new
                        {
                            Id = 3154200,
                            EstadoId = 31,
                            Nome = "Resende Costa"
                        },
                        new
                        {
                            Id = 3154309,
                            EstadoId = 31,
                            Nome = "Resplendor"
                        },
                        new
                        {
                            Id = 3154408,
                            EstadoId = 31,
                            Nome = "Ressaquinha"
                        },
                        new
                        {
                            Id = 3154457,
                            EstadoId = 31,
                            Nome = "Riachinho"
                        },
                        new
                        {
                            Id = 3154507,
                            EstadoId = 31,
                            Nome = "Riacho dos Machados"
                        },
                        new
                        {
                            Id = 3154606,
                            EstadoId = 31,
                            Nome = "Ribeirão das Neves"
                        },
                        new
                        {
                            Id = 3154705,
                            EstadoId = 31,
                            Nome = "Ribeirão Vermelho"
                        },
                        new
                        {
                            Id = 3154804,
                            EstadoId = 31,
                            Nome = "Rio Acima"
                        },
                        new
                        {
                            Id = 3154903,
                            EstadoId = 31,
                            Nome = "Rio Casca"
                        },
                        new
                        {
                            Id = 3155108,
                            EstadoId = 31,
                            Nome = "Rio do Prado"
                        },
                        new
                        {
                            Id = 3155009,
                            EstadoId = 31,
                            Nome = "Rio Doce"
                        },
                        new
                        {
                            Id = 3155207,
                            EstadoId = 31,
                            Nome = "Rio Espera"
                        },
                        new
                        {
                            Id = 3155306,
                            EstadoId = 31,
                            Nome = "Rio Manso"
                        },
                        new
                        {
                            Id = 3155405,
                            EstadoId = 31,
                            Nome = "Rio Novo"
                        },
                        new
                        {
                            Id = 3155504,
                            EstadoId = 31,
                            Nome = "Rio Paranaíba"
                        },
                        new
                        {
                            Id = 3155603,
                            EstadoId = 31,
                            Nome = "Rio Pardo de Minas"
                        },
                        new
                        {
                            Id = 3155702,
                            EstadoId = 31,
                            Nome = "Rio Piracicaba"
                        },
                        new
                        {
                            Id = 3155801,
                            EstadoId = 31,
                            Nome = "Rio Pomba"
                        },
                        new
                        {
                            Id = 3155900,
                            EstadoId = 31,
                            Nome = "Rio Preto"
                        },
                        new
                        {
                            Id = 3156007,
                            EstadoId = 31,
                            Nome = "Rio Vermelho"
                        },
                        new
                        {
                            Id = 3156106,
                            EstadoId = 31,
                            Nome = "Ritápolis"
                        },
                        new
                        {
                            Id = 3156205,
                            EstadoId = 31,
                            Nome = "Rochedo de Minas"
                        },
                        new
                        {
                            Id = 3156304,
                            EstadoId = 31,
                            Nome = "Rodeiro"
                        },
                        new
                        {
                            Id = 3156403,
                            EstadoId = 31,
                            Nome = "Romaria"
                        },
                        new
                        {
                            Id = 3156452,
                            EstadoId = 31,
                            Nome = "Rosário da Limeira"
                        },
                        new
                        {
                            Id = 3156502,
                            EstadoId = 31,
                            Nome = "Rubelita"
                        },
                        new
                        {
                            Id = 3156601,
                            EstadoId = 31,
                            Nome = "Rubim"
                        },
                        new
                        {
                            Id = 3156700,
                            EstadoId = 31,
                            Nome = "Sabará"
                        },
                        new
                        {
                            Id = 3156809,
                            EstadoId = 31,
                            Nome = "Sabinópolis"
                        },
                        new
                        {
                            Id = 3156908,
                            EstadoId = 31,
                            Nome = "Sacramento"
                        },
                        new
                        {
                            Id = 3157005,
                            EstadoId = 31,
                            Nome = "Salinas"
                        },
                        new
                        {
                            Id = 3157104,
                            EstadoId = 31,
                            Nome = "Salto da Divisa"
                        },
                        new
                        {
                            Id = 3157203,
                            EstadoId = 31,
                            Nome = "Santa Bárbara"
                        },
                        new
                        {
                            Id = 3157252,
                            EstadoId = 31,
                            Nome = "Santa Bárbara do Leste"
                        },
                        new
                        {
                            Id = 3157278,
                            EstadoId = 31,
                            Nome = "Santa Bárbara do Monte Verde"
                        },
                        new
                        {
                            Id = 3157302,
                            EstadoId = 31,
                            Nome = "Santa Bárbara do Tugúrio"
                        },
                        new
                        {
                            Id = 3157336,
                            EstadoId = 31,
                            Nome = "Santa Cruz de Minas"
                        },
                        new
                        {
                            Id = 3157377,
                            EstadoId = 31,
                            Nome = "Santa Cruz de Salinas"
                        },
                        new
                        {
                            Id = 3157401,
                            EstadoId = 31,
                            Nome = "Santa Cruz do Escalvado"
                        },
                        new
                        {
                            Id = 3157500,
                            EstadoId = 31,
                            Nome = "Santa Efigênia de Minas"
                        },
                        new
                        {
                            Id = 3157609,
                            EstadoId = 31,
                            Nome = "Santa Fé de Minas"
                        },
                        new
                        {
                            Id = 3157658,
                            EstadoId = 31,
                            Nome = "Santa Helena de Minas"
                        },
                        new
                        {
                            Id = 3157708,
                            EstadoId = 31,
                            Nome = "Santa Juliana"
                        },
                        new
                        {
                            Id = 3157807,
                            EstadoId = 31,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            Id = 3157906,
                            EstadoId = 31,
                            Nome = "Santa Margarida"
                        },
                        new
                        {
                            Id = 3158003,
                            EstadoId = 31,
                            Nome = "Santa Maria de Itabira"
                        },
                        new
                        {
                            Id = 3158102,
                            EstadoId = 31,
                            Nome = "Santa Maria do Salto"
                        },
                        new
                        {
                            Id = 3158201,
                            EstadoId = 31,
                            Nome = "Santa Maria do Suaçuí"
                        },
                        new
                        {
                            Id = 3159209,
                            EstadoId = 31,
                            Nome = "Santa Rita de Caldas"
                        },
                        new
                        {
                            Id = 3159407,
                            EstadoId = 31,
                            Nome = "Santa Rita de Ibitipoca"
                        },
                        new
                        {
                            Id = 3159308,
                            EstadoId = 31,
                            Nome = "Santa Rita de Jacutinga"
                        },
                        new
                        {
                            Id = 3159357,
                            EstadoId = 31,
                            Nome = "Santa Rita de Minas"
                        },
                        new
                        {
                            Id = 3159506,
                            EstadoId = 31,
                            Nome = "Santa Rita do Itueto"
                        },
                        new
                        {
                            Id = 3159605,
                            EstadoId = 31,
                            Nome = "Santa Rita do Sapucaí"
                        },
                        new
                        {
                            Id = 3159704,
                            EstadoId = 31,
                            Nome = "Santa Rosa da Serra"
                        },
                        new
                        {
                            Id = 3159803,
                            EstadoId = 31,
                            Nome = "Santa Vitória"
                        },
                        new
                        {
                            Id = 3158300,
                            EstadoId = 31,
                            Nome = "Santana da Vargem"
                        },
                        new
                        {
                            Id = 3158409,
                            EstadoId = 31,
                            Nome = "Santana de Cataguases"
                        },
                        new
                        {
                            Id = 3158508,
                            EstadoId = 31,
                            Nome = "Santana de Pirapama"
                        },
                        new
                        {
                            Id = 3158607,
                            EstadoId = 31,
                            Nome = "Santana do Deserto"
                        },
                        new
                        {
                            Id = 3158706,
                            EstadoId = 31,
                            Nome = "Santana do Garambéu"
                        },
                        new
                        {
                            Id = 3158805,
                            EstadoId = 31,
                            Nome = "Santana do Jacaré"
                        },
                        new
                        {
                            Id = 3158904,
                            EstadoId = 31,
                            Nome = "Santana do Manhuaçu"
                        },
                        new
                        {
                            Id = 3158953,
                            EstadoId = 31,
                            Nome = "Santana do Paraíso"
                        },
                        new
                        {
                            Id = 3159001,
                            EstadoId = 31,
                            Nome = "Santana do Riacho"
                        },
                        new
                        {
                            Id = 3159100,
                            EstadoId = 31,
                            Nome = "Santana dos Montes"
                        },
                        new
                        {
                            Id = 3159902,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Amparo"
                        },
                        new
                        {
                            Id = 3160009,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Aventureiro"
                        },
                        new
                        {
                            Id = 3160108,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Grama"
                        },
                        new
                        {
                            Id = 3160207,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Itambé"
                        },
                        new
                        {
                            Id = 3160306,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Jacinto"
                        },
                        new
                        {
                            Id = 3160405,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Monte"
                        },
                        new
                        {
                            Id = 3160454,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Retiro"
                        },
                        new
                        {
                            Id = 3160504,
                            EstadoId = 31,
                            Nome = "Santo Antônio do Rio Abaixo"
                        },
                        new
                        {
                            Id = 3160603,
                            EstadoId = 31,
                            Nome = "Santo Hipólito"
                        },
                        new
                        {
                            Id = 3160702,
                            EstadoId = 31,
                            Nome = "Santos Dumont"
                        },
                        new
                        {
                            Id = 3160801,
                            EstadoId = 31,
                            Nome = "São Bento Abade"
                        },
                        new
                        {
                            Id = 3160900,
                            EstadoId = 31,
                            Nome = "São Brás do Suaçuí"
                        },
                        new
                        {
                            Id = 3160959,
                            EstadoId = 31,
                            Nome = "São Domingos das Dores"
                        },
                        new
                        {
                            Id = 3161007,
                            EstadoId = 31,
                            Nome = "São Domingos do Prata"
                        },
                        new
                        {
                            Id = 3161056,
                            EstadoId = 31,
                            Nome = "São Félix de Minas"
                        },
                        new
                        {
                            Id = 3161106,
                            EstadoId = 31,
                            Nome = "São Francisco"
                        },
                        new
                        {
                            Id = 3161205,
                            EstadoId = 31,
                            Nome = "São Francisco de Paula"
                        },
                        new
                        {
                            Id = 3161304,
                            EstadoId = 31,
                            Nome = "São Francisco de Sales"
                        },
                        new
                        {
                            Id = 3161403,
                            EstadoId = 31,
                            Nome = "São Francisco do Glória"
                        },
                        new
                        {
                            Id = 3161502,
                            EstadoId = 31,
                            Nome = "São Geraldo"
                        },
                        new
                        {
                            Id = 3161601,
                            EstadoId = 31,
                            Nome = "São Geraldo da Piedade"
                        },
                        new
                        {
                            Id = 3161650,
                            EstadoId = 31,
                            Nome = "São Geraldo do Baixio"
                        },
                        new
                        {
                            Id = 3161700,
                            EstadoId = 31,
                            Nome = "São Gonçalo do Abaeté"
                        },
                        new
                        {
                            Id = 3161809,
                            EstadoId = 31,
                            Nome = "São Gonçalo do Pará"
                        },
                        new
                        {
                            Id = 3161908,
                            EstadoId = 31,
                            Nome = "São Gonçalo do Rio Abaixo"
                        },
                        new
                        {
                            Id = 3125507,
                            EstadoId = 31,
                            Nome = "São Gonçalo do Rio Preto"
                        },
                        new
                        {
                            Id = 3162005,
                            EstadoId = 31,
                            Nome = "São Gonçalo do Sapucaí"
                        },
                        new
                        {
                            Id = 3162104,
                            EstadoId = 31,
                            Nome = "São Gotardo"
                        },
                        new
                        {
                            Id = 3162203,
                            EstadoId = 31,
                            Nome = "São João Batista do Glória"
                        },
                        new
                        {
                            Id = 3162252,
                            EstadoId = 31,
                            Nome = "São João da Lagoa"
                        },
                        new
                        {
                            Id = 3162302,
                            EstadoId = 31,
                            Nome = "São João da Mata"
                        },
                        new
                        {
                            Id = 3162401,
                            EstadoId = 31,
                            Nome = "São João da Ponte"
                        },
                        new
                        {
                            Id = 3162450,
                            EstadoId = 31,
                            Nome = "São João das Missões"
                        },
                        new
                        {
                            Id = 3162500,
                            EstadoId = 31,
                            Nome = "São João del Rei"
                        },
                        new
                        {
                            Id = 3162559,
                            EstadoId = 31,
                            Nome = "São João do Manhuaçu"
                        },
                        new
                        {
                            Id = 3162575,
                            EstadoId = 31,
                            Nome = "São João do Manteninha"
                        },
                        new
                        {
                            Id = 3162609,
                            EstadoId = 31,
                            Nome = "São João do Oriente"
                        },
                        new
                        {
                            Id = 3162658,
                            EstadoId = 31,
                            Nome = "São João do Pacuí"
                        },
                        new
                        {
                            Id = 3162708,
                            EstadoId = 31,
                            Nome = "São João do Paraíso"
                        },
                        new
                        {
                            Id = 3162807,
                            EstadoId = 31,
                            Nome = "São João Evangelista"
                        },
                        new
                        {
                            Id = 3162906,
                            EstadoId = 31,
                            Nome = "São João Nepomuceno"
                        },
                        new
                        {
                            Id = 3162922,
                            EstadoId = 31,
                            Nome = "São Joaquim de Bicas"
                        },
                        new
                        {
                            Id = 3162948,
                            EstadoId = 31,
                            Nome = "São José da Barra"
                        },
                        new
                        {
                            Id = 3162955,
                            EstadoId = 31,
                            Nome = "São José da Lapa"
                        },
                        new
                        {
                            Id = 3163003,
                            EstadoId = 31,
                            Nome = "São José da Safira"
                        },
                        new
                        {
                            Id = 3163102,
                            EstadoId = 31,
                            Nome = "São José da Varginha"
                        },
                        new
                        {
                            Id = 3163201,
                            EstadoId = 31,
                            Nome = "São José do Alegre"
                        },
                        new
                        {
                            Id = 3163300,
                            EstadoId = 31,
                            Nome = "São José do Divino"
                        },
                        new
                        {
                            Id = 3163409,
                            EstadoId = 31,
                            Nome = "São José do Goiabal"
                        },
                        new
                        {
                            Id = 3163508,
                            EstadoId = 31,
                            Nome = "São José do Jacuri"
                        },
                        new
                        {
                            Id = 3163607,
                            EstadoId = 31,
                            Nome = "São José do Mantimento"
                        },
                        new
                        {
                            Id = 3163706,
                            EstadoId = 31,
                            Nome = "São Lourenço"
                        },
                        new
                        {
                            Id = 3163805,
                            EstadoId = 31,
                            Nome = "São Miguel do Anta"
                        },
                        new
                        {
                            Id = 3163904,
                            EstadoId = 31,
                            Nome = "São Pedro da União"
                        },
                        new
                        {
                            Id = 3164100,
                            EstadoId = 31,
                            Nome = "São Pedro do Suaçuí"
                        },
                        new
                        {
                            Id = 3164001,
                            EstadoId = 31,
                            Nome = "São Pedro dos Ferros"
                        },
                        new
                        {
                            Id = 3164209,
                            EstadoId = 31,
                            Nome = "São Romão"
                        },
                        new
                        {
                            Id = 3164308,
                            EstadoId = 31,
                            Nome = "São Roque de Minas"
                        },
                        new
                        {
                            Id = 3164407,
                            EstadoId = 31,
                            Nome = "São Sebastião da Bela Vista"
                        },
                        new
                        {
                            Id = 3164431,
                            EstadoId = 31,
                            Nome = "São Sebastião da Vargem Alegre"
                        },
                        new
                        {
                            Id = 3164472,
                            EstadoId = 31,
                            Nome = "São Sebastião do Anta"
                        },
                        new
                        {
                            Id = 3164506,
                            EstadoId = 31,
                            Nome = "São Sebastião do Maranhão"
                        },
                        new
                        {
                            Id = 3164605,
                            EstadoId = 31,
                            Nome = "São Sebastião do Oeste"
                        },
                        new
                        {
                            Id = 3164704,
                            EstadoId = 31,
                            Nome = "São Sebastião do Paraíso"
                        },
                        new
                        {
                            Id = 3164803,
                            EstadoId = 31,
                            Nome = "São Sebastião do Rio Preto"
                        },
                        new
                        {
                            Id = 3164902,
                            EstadoId = 31,
                            Nome = "São Sebastião do Rio Verde"
                        },
                        new
                        {
                            Id = 3165206,
                            EstadoId = 31,
                            Nome = "São Thomé das Letras"
                        },
                        new
                        {
                            Id = 3165008,
                            EstadoId = 31,
                            Nome = "São Tiago"
                        },
                        new
                        {
                            Id = 3165107,
                            EstadoId = 31,
                            Nome = "São Tomás de Aquino"
                        },
                        new
                        {
                            Id = 3165305,
                            EstadoId = 31,
                            Nome = "São Vicente de Minas"
                        },
                        new
                        {
                            Id = 3165404,
                            EstadoId = 31,
                            Nome = "Sapucaí-Mirim"
                        },
                        new
                        {
                            Id = 3165503,
                            EstadoId = 31,
                            Nome = "Sardoá"
                        },
                        new
                        {
                            Id = 3165537,
                            EstadoId = 31,
                            Nome = "Sarzedo"
                        },
                        new
                        {
                            Id = 3165560,
                            EstadoId = 31,
                            Nome = "Sem-Peixe"
                        },
                        new
                        {
                            Id = 3165578,
                            EstadoId = 31,
                            Nome = "Senador Amaral"
                        },
                        new
                        {
                            Id = 3165602,
                            EstadoId = 31,
                            Nome = "Senador Cortes"
                        },
                        new
                        {
                            Id = 3165701,
                            EstadoId = 31,
                            Nome = "Senador Firmino"
                        },
                        new
                        {
                            Id = 3165800,
                            EstadoId = 31,
                            Nome = "Senador José Bento"
                        },
                        new
                        {
                            Id = 3165909,
                            EstadoId = 31,
                            Nome = "Senador Modestino Gonçalves"
                        },
                        new
                        {
                            Id = 3166006,
                            EstadoId = 31,
                            Nome = "Senhora de Oliveira"
                        },
                        new
                        {
                            Id = 3166105,
                            EstadoId = 31,
                            Nome = "Senhora do Porto"
                        },
                        new
                        {
                            Id = 3166204,
                            EstadoId = 31,
                            Nome = "Senhora dos Remédios"
                        },
                        new
                        {
                            Id = 3166303,
                            EstadoId = 31,
                            Nome = "Sericita"
                        },
                        new
                        {
                            Id = 3166402,
                            EstadoId = 31,
                            Nome = "Seritinga"
                        },
                        new
                        {
                            Id = 3166501,
                            EstadoId = 31,
                            Nome = "Serra Azul de Minas"
                        },
                        new
                        {
                            Id = 3166600,
                            EstadoId = 31,
                            Nome = "Serra da Saudade"
                        },
                        new
                        {
                            Id = 3166808,
                            EstadoId = 31,
                            Nome = "Serra do Salitre"
                        },
                        new
                        {
                            Id = 3166709,
                            EstadoId = 31,
                            Nome = "Serra dos Aimorés"
                        },
                        new
                        {
                            Id = 3166907,
                            EstadoId = 31,
                            Nome = "Serrania"
                        },
                        new
                        {
                            Id = 3166956,
                            EstadoId = 31,
                            Nome = "Serranópolis de Minas"
                        },
                        new
                        {
                            Id = 3167004,
                            EstadoId = 31,
                            Nome = "Serranos"
                        },
                        new
                        {
                            Id = 3167103,
                            EstadoId = 31,
                            Nome = "Serro"
                        },
                        new
                        {
                            Id = 3167202,
                            EstadoId = 31,
                            Nome = "Sete Lagoas"
                        },
                        new
                        {
                            Id = 3165552,
                            EstadoId = 31,
                            Nome = "Setubinha"
                        },
                        new
                        {
                            Id = 3167301,
                            EstadoId = 31,
                            Nome = "Silveirânia"
                        },
                        new
                        {
                            Id = 3167400,
                            EstadoId = 31,
                            Nome = "Silvianópolis"
                        },
                        new
                        {
                            Id = 3167509,
                            EstadoId = 31,
                            Nome = "Simão Pereira"
                        },
                        new
                        {
                            Id = 3167608,
                            EstadoId = 31,
                            Nome = "Simonésia"
                        },
                        new
                        {
                            Id = 3167707,
                            EstadoId = 31,
                            Nome = "Sobrália"
                        },
                        new
                        {
                            Id = 3167806,
                            EstadoId = 31,
                            Nome = "Soledade de Minas"
                        },
                        new
                        {
                            Id = 3167905,
                            EstadoId = 31,
                            Nome = "Tabuleiro"
                        },
                        new
                        {
                            Id = 3168002,
                            EstadoId = 31,
                            Nome = "Taiobeiras"
                        },
                        new
                        {
                            Id = 3168051,
                            EstadoId = 31,
                            Nome = "Taparuba"
                        },
                        new
                        {
                            Id = 3168101,
                            EstadoId = 31,
                            Nome = "Tapira"
                        },
                        new
                        {
                            Id = 3168200,
                            EstadoId = 31,
                            Nome = "Tapiraí"
                        },
                        new
                        {
                            Id = 3168309,
                            EstadoId = 31,
                            Nome = "Taquaraçu de Minas"
                        },
                        new
                        {
                            Id = 3168408,
                            EstadoId = 31,
                            Nome = "Tarumirim"
                        },
                        new
                        {
                            Id = 3168507,
                            EstadoId = 31,
                            Nome = "Teixeiras"
                        },
                        new
                        {
                            Id = 3168606,
                            EstadoId = 31,
                            Nome = "Teófilo Otoni"
                        },
                        new
                        {
                            Id = 3168705,
                            EstadoId = 31,
                            Nome = "Timóteo"
                        },
                        new
                        {
                            Id = 3168804,
                            EstadoId = 31,
                            Nome = "Tiradentes"
                        },
                        new
                        {
                            Id = 3168903,
                            EstadoId = 31,
                            Nome = "Tiros"
                        },
                        new
                        {
                            Id = 3169000,
                            EstadoId = 31,
                            Nome = "Tocantins"
                        },
                        new
                        {
                            Id = 3169059,
                            EstadoId = 31,
                            Nome = "Tocos do Moji"
                        },
                        new
                        {
                            Id = 3169109,
                            EstadoId = 31,
                            Nome = "Toledo"
                        },
                        new
                        {
                            Id = 3169208,
                            EstadoId = 31,
                            Nome = "Tombos"
                        },
                        new
                        {
                            Id = 3169307,
                            EstadoId = 31,
                            Nome = "Três Corações"
                        },
                        new
                        {
                            Id = 3169356,
                            EstadoId = 31,
                            Nome = "Três Marias"
                        },
                        new
                        {
                            Id = 3169406,
                            EstadoId = 31,
                            Nome = "Três Pontas"
                        },
                        new
                        {
                            Id = 3169505,
                            EstadoId = 31,
                            Nome = "Tumiritinga"
                        },
                        new
                        {
                            Id = 3169604,
                            EstadoId = 31,
                            Nome = "Tupaciguara"
                        },
                        new
                        {
                            Id = 3169703,
                            EstadoId = 31,
                            Nome = "Turmalina"
                        },
                        new
                        {
                            Id = 3169802,
                            EstadoId = 31,
                            Nome = "Turvolândia"
                        },
                        new
                        {
                            Id = 3169901,
                            EstadoId = 31,
                            Nome = "Ubá"
                        },
                        new
                        {
                            Id = 3170008,
                            EstadoId = 31,
                            Nome = "Ubaí"
                        },
                        new
                        {
                            Id = 3170057,
                            EstadoId = 31,
                            Nome = "Ubaporanga"
                        },
                        new
                        {
                            Id = 3170107,
                            EstadoId = 31,
                            Nome = "Uberaba"
                        },
                        new
                        {
                            Id = 3170206,
                            EstadoId = 31,
                            Nome = "Uberlândia"
                        },
                        new
                        {
                            Id = 3170305,
                            EstadoId = 31,
                            Nome = "Umburatiba"
                        },
                        new
                        {
                            Id = 3170404,
                            EstadoId = 31,
                            Nome = "Unaí"
                        },
                        new
                        {
                            Id = 3170438,
                            EstadoId = 31,
                            Nome = "União de Minas"
                        },
                        new
                        {
                            Id = 3170479,
                            EstadoId = 31,
                            Nome = "Uruana de Minas"
                        },
                        new
                        {
                            Id = 3170503,
                            EstadoId = 31,
                            Nome = "Urucânia"
                        },
                        new
                        {
                            Id = 3170529,
                            EstadoId = 31,
                            Nome = "Urucuia"
                        },
                        new
                        {
                            Id = 3170578,
                            EstadoId = 31,
                            Nome = "Vargem Alegre"
                        },
                        new
                        {
                            Id = 3170602,
                            EstadoId = 31,
                            Nome = "Vargem Bonita"
                        },
                        new
                        {
                            Id = 3170651,
                            EstadoId = 31,
                            Nome = "Vargem Grande do Rio Pardo"
                        },
                        new
                        {
                            Id = 3170701,
                            EstadoId = 31,
                            Nome = "Varginha"
                        },
                        new
                        {
                            Id = 3170750,
                            EstadoId = 31,
                            Nome = "Varjão de Minas"
                        },
                        new
                        {
                            Id = 3170800,
                            EstadoId = 31,
                            Nome = "Várzea da Palma"
                        },
                        new
                        {
                            Id = 3170909,
                            EstadoId = 31,
                            Nome = "Varzelândia"
                        },
                        new
                        {
                            Id = 3171006,
                            EstadoId = 31,
                            Nome = "Vazante"
                        },
                        new
                        {
                            Id = 3171030,
                            EstadoId = 31,
                            Nome = "Verdelândia"
                        },
                        new
                        {
                            Id = 3171071,
                            EstadoId = 31,
                            Nome = "Veredinha"
                        },
                        new
                        {
                            Id = 3171105,
                            EstadoId = 31,
                            Nome = "Veríssimo"
                        },
                        new
                        {
                            Id = 3171154,
                            EstadoId = 31,
                            Nome = "Vermelho Novo"
                        },
                        new
                        {
                            Id = 3171204,
                            EstadoId = 31,
                            Nome = "Vespasiano"
                        },
                        new
                        {
                            Id = 3171303,
                            EstadoId = 31,
                            Nome = "Viçosa"
                        },
                        new
                        {
                            Id = 3171402,
                            EstadoId = 31,
                            Nome = "Vieiras"
                        },
                        new
                        {
                            Id = 3171600,
                            EstadoId = 31,
                            Nome = "Virgem da Lapa"
                        },
                        new
                        {
                            Id = 3171709,
                            EstadoId = 31,
                            Nome = "Virgínia"
                        },
                        new
                        {
                            Id = 3171808,
                            EstadoId = 31,
                            Nome = "Virginópolis"
                        },
                        new
                        {
                            Id = 3171907,
                            EstadoId = 31,
                            Nome = "Virgolândia"
                        },
                        new
                        {
                            Id = 3172004,
                            EstadoId = 31,
                            Nome = "Visconde do Rio Branco"
                        },
                        new
                        {
                            Id = 3172103,
                            EstadoId = 31,
                            Nome = "Volta Grande"
                        },
                        new
                        {
                            Id = 3172202,
                            EstadoId = 31,
                            Nome = "Wenceslau Braz"
                        },
                        new
                        {
                            Id = 3200102,
                            EstadoId = 32,
                            Nome = "Afonso Cláudio"
                        },
                        new
                        {
                            Id = 3200169,
                            EstadoId = 32,
                            Nome = "Água Doce do Norte"
                        },
                        new
                        {
                            Id = 3200136,
                            EstadoId = 32,
                            Nome = "Águia Branca"
                        },
                        new
                        {
                            Id = 3200201,
                            EstadoId = 32,
                            Nome = "Alegre"
                        },
                        new
                        {
                            Id = 3200300,
                            EstadoId = 32,
                            Nome = "Alfredo Chaves"
                        },
                        new
                        {
                            Id = 3200359,
                            EstadoId = 32,
                            Nome = "Alto Rio Novo"
                        },
                        new
                        {
                            Id = 3200409,
                            EstadoId = 32,
                            Nome = "Anchieta"
                        },
                        new
                        {
                            Id = 3200508,
                            EstadoId = 32,
                            Nome = "Apiacá"
                        },
                        new
                        {
                            Id = 3200607,
                            EstadoId = 32,
                            Nome = "Aracruz"
                        },
                        new
                        {
                            Id = 3200706,
                            EstadoId = 32,
                            Nome = "Atilio Vivacqua"
                        },
                        new
                        {
                            Id = 3200805,
                            EstadoId = 32,
                            Nome = "Baixo Guandu"
                        },
                        new
                        {
                            Id = 3200904,
                            EstadoId = 32,
                            Nome = "Barra de São Francisco"
                        },
                        new
                        {
                            Id = 3201001,
                            EstadoId = 32,
                            Nome = "Boa Esperança"
                        },
                        new
                        {
                            Id = 3201100,
                            EstadoId = 32,
                            Nome = "Bom Jesus do Norte"
                        },
                        new
                        {
                            Id = 3201159,
                            EstadoId = 32,
                            Nome = "Brejetuba"
                        },
                        new
                        {
                            Id = 3201209,
                            EstadoId = 32,
                            Nome = "Cachoeiro de Itapemirim"
                        },
                        new
                        {
                            Id = 3201308,
                            EstadoId = 32,
                            Nome = "Cariacica"
                        },
                        new
                        {
                            Id = 3201407,
                            EstadoId = 32,
                            Nome = "Castelo"
                        },
                        new
                        {
                            Id = 3201506,
                            EstadoId = 32,
                            Nome = "Colatina"
                        },
                        new
                        {
                            Id = 3201605,
                            EstadoId = 32,
                            Nome = "Conceição da Barra"
                        },
                        new
                        {
                            Id = 3201704,
                            EstadoId = 32,
                            Nome = "Conceição do Castelo"
                        },
                        new
                        {
                            Id = 3201803,
                            EstadoId = 32,
                            Nome = "Divino de São Lourenço"
                        },
                        new
                        {
                            Id = 3201902,
                            EstadoId = 32,
                            Nome = "Domingos Martins"
                        },
                        new
                        {
                            Id = 3202009,
                            EstadoId = 32,
                            Nome = "Dores do Rio Preto"
                        },
                        new
                        {
                            Id = 3202108,
                            EstadoId = 32,
                            Nome = "Ecoporanga"
                        },
                        new
                        {
                            Id = 3202207,
                            EstadoId = 32,
                            Nome = "Fundão"
                        },
                        new
                        {
                            Id = 3202256,
                            EstadoId = 32,
                            Nome = "Governador Lindenberg"
                        },
                        new
                        {
                            Id = 3202306,
                            EstadoId = 32,
                            Nome = "Guaçuí"
                        },
                        new
                        {
                            Id = 3202405,
                            EstadoId = 32,
                            Nome = "Guarapari"
                        },
                        new
                        {
                            Id = 3202454,
                            EstadoId = 32,
                            Nome = "Ibatiba"
                        },
                        new
                        {
                            Id = 3202504,
                            EstadoId = 32,
                            Nome = "Ibiraçu"
                        },
                        new
                        {
                            Id = 3202553,
                            EstadoId = 32,
                            Nome = "Ibitirama"
                        },
                        new
                        {
                            Id = 3202603,
                            EstadoId = 32,
                            Nome = "Iconha"
                        },
                        new
                        {
                            Id = 3202652,
                            EstadoId = 32,
                            Nome = "Irupi"
                        },
                        new
                        {
                            Id = 3202702,
                            EstadoId = 32,
                            Nome = "Itaguaçu"
                        },
                        new
                        {
                            Id = 3202801,
                            EstadoId = 32,
                            Nome = "Itapemirim"
                        },
                        new
                        {
                            Id = 3202900,
                            EstadoId = 32,
                            Nome = "Itarana"
                        },
                        new
                        {
                            Id = 3203007,
                            EstadoId = 32,
                            Nome = "Iúna"
                        },
                        new
                        {
                            Id = 3203056,
                            EstadoId = 32,
                            Nome = "Jaguaré"
                        },
                        new
                        {
                            Id = 3203106,
                            EstadoId = 32,
                            Nome = "Jerônimo Monteiro"
                        },
                        new
                        {
                            Id = 3203130,
                            EstadoId = 32,
                            Nome = "João Neiva"
                        },
                        new
                        {
                            Id = 3203163,
                            EstadoId = 32,
                            Nome = "Laranja da Terra"
                        },
                        new
                        {
                            Id = 3203205,
                            EstadoId = 32,
                            Nome = "Linhares"
                        },
                        new
                        {
                            Id = 3203304,
                            EstadoId = 32,
                            Nome = "Mantenópolis"
                        },
                        new
                        {
                            Id = 3203320,
                            EstadoId = 32,
                            Nome = "Marataízes"
                        },
                        new
                        {
                            Id = 3203346,
                            EstadoId = 32,
                            Nome = "Marechal Floriano"
                        },
                        new
                        {
                            Id = 3203353,
                            EstadoId = 32,
                            Nome = "Marilândia"
                        },
                        new
                        {
                            Id = 3203403,
                            EstadoId = 32,
                            Nome = "Mimoso do Sul"
                        },
                        new
                        {
                            Id = 3203502,
                            EstadoId = 32,
                            Nome = "Montanha"
                        },
                        new
                        {
                            Id = 3203601,
                            EstadoId = 32,
                            Nome = "Mucurici"
                        },
                        new
                        {
                            Id = 3203700,
                            EstadoId = 32,
                            Nome = "Muniz Freire"
                        },
                        new
                        {
                            Id = 3203809,
                            EstadoId = 32,
                            Nome = "Muqui"
                        },
                        new
                        {
                            Id = 3203908,
                            EstadoId = 32,
                            Nome = "Nova Venécia"
                        },
                        new
                        {
                            Id = 3204005,
                            EstadoId = 32,
                            Nome = "Pancas"
                        },
                        new
                        {
                            Id = 3204054,
                            EstadoId = 32,
                            Nome = "Pedro Canário"
                        },
                        new
                        {
                            Id = 3204104,
                            EstadoId = 32,
                            Nome = "Pinheiros"
                        },
                        new
                        {
                            Id = 3204203,
                            EstadoId = 32,
                            Nome = "Piúma"
                        },
                        new
                        {
                            Id = 3204252,
                            EstadoId = 32,
                            Nome = "Ponto Belo"
                        },
                        new
                        {
                            Id = 3204302,
                            EstadoId = 32,
                            Nome = "Presidente Kennedy"
                        },
                        new
                        {
                            Id = 3204351,
                            EstadoId = 32,
                            Nome = "Rio Bananal"
                        },
                        new
                        {
                            Id = 3204401,
                            EstadoId = 32,
                            Nome = "Rio Novo do Sul"
                        },
                        new
                        {
                            Id = 3204500,
                            EstadoId = 32,
                            Nome = "Santa Leopoldina"
                        },
                        new
                        {
                            Id = 3204559,
                            EstadoId = 32,
                            Nome = "Santa Maria de Jetibá"
                        },
                        new
                        {
                            Id = 3204609,
                            EstadoId = 32,
                            Nome = "Santa Teresa"
                        },
                        new
                        {
                            Id = 3204658,
                            EstadoId = 32,
                            Nome = "São Domingos do Norte"
                        },
                        new
                        {
                            Id = 3204708,
                            EstadoId = 32,
                            Nome = "São Gabriel da Palha"
                        },
                        new
                        {
                            Id = 3204807,
                            EstadoId = 32,
                            Nome = "São José do Calçado"
                        },
                        new
                        {
                            Id = 3204906,
                            EstadoId = 32,
                            Nome = "São Mateus"
                        },
                        new
                        {
                            Id = 3204955,
                            EstadoId = 32,
                            Nome = "São Roque do Canaã"
                        },
                        new
                        {
                            Id = 3205002,
                            EstadoId = 32,
                            Nome = "Serra"
                        },
                        new
                        {
                            Id = 3205010,
                            EstadoId = 32,
                            Nome = "Sooretama"
                        },
                        new
                        {
                            Id = 3205036,
                            EstadoId = 32,
                            Nome = "Vargem Alta"
                        },
                        new
                        {
                            Id = 3205069,
                            EstadoId = 32,
                            Nome = "Venda Nova do Imigrante"
                        },
                        new
                        {
                            Id = 3205101,
                            EstadoId = 32,
                            Nome = "Viana"
                        },
                        new
                        {
                            Id = 3205150,
                            EstadoId = 32,
                            Nome = "Vila Pavão"
                        },
                        new
                        {
                            Id = 3205176,
                            EstadoId = 32,
                            Nome = "Vila Valério"
                        },
                        new
                        {
                            Id = 3205200,
                            EstadoId = 32,
                            Nome = "Vila Velha"
                        },
                        new
                        {
                            Id = 3205309,
                            EstadoId = 32,
                            Nome = "Vitória"
                        },
                        new
                        {
                            Id = 3300100,
                            EstadoId = 33,
                            Nome = "Angra dos Reis"
                        },
                        new
                        {
                            Id = 3300159,
                            EstadoId = 33,
                            Nome = "Aperibé"
                        },
                        new
                        {
                            Id = 3300209,
                            EstadoId = 33,
                            Nome = "Araruama"
                        },
                        new
                        {
                            Id = 3300225,
                            EstadoId = 33,
                            Nome = "Areal"
                        },
                        new
                        {
                            Id = 3300233,
                            EstadoId = 33,
                            Nome = "Armação dos Búzios"
                        },
                        new
                        {
                            Id = 3300258,
                            EstadoId = 33,
                            Nome = "Arraial do Cabo"
                        },
                        new
                        {
                            Id = 3300308,
                            EstadoId = 33,
                            Nome = "Barra do Piraí"
                        },
                        new
                        {
                            Id = 3300407,
                            EstadoId = 33,
                            Nome = "Barra Mansa"
                        },
                        new
                        {
                            Id = 3300456,
                            EstadoId = 33,
                            Nome = "Belford Roxo"
                        },
                        new
                        {
                            Id = 3300506,
                            EstadoId = 33,
                            Nome = "Bom Jardim"
                        },
                        new
                        {
                            Id = 3300605,
                            EstadoId = 33,
                            Nome = "Bom Jesus do Itabapoana"
                        },
                        new
                        {
                            Id = 3300704,
                            EstadoId = 33,
                            Nome = "Cabo Frio"
                        },
                        new
                        {
                            Id = 3300803,
                            EstadoId = 33,
                            Nome = "Cachoeiras de Macacu"
                        },
                        new
                        {
                            Id = 3300902,
                            EstadoId = 33,
                            Nome = "Cambuci"
                        },
                        new
                        {
                            Id = 3301009,
                            EstadoId = 33,
                            Nome = "Campos dos Goytacazes"
                        },
                        new
                        {
                            Id = 3301108,
                            EstadoId = 33,
                            Nome = "Cantagalo"
                        },
                        new
                        {
                            Id = 3300936,
                            EstadoId = 33,
                            Nome = "Carapebus"
                        },
                        new
                        {
                            Id = 3301157,
                            EstadoId = 33,
                            Nome = "Cardoso Moreira"
                        },
                        new
                        {
                            Id = 3301207,
                            EstadoId = 33,
                            Nome = "Carmo"
                        },
                        new
                        {
                            Id = 3301306,
                            EstadoId = 33,
                            Nome = "Casimiro de Abreu"
                        },
                        new
                        {
                            Id = 3300951,
                            EstadoId = 33,
                            Nome = "Comendador Levy Gasparian"
                        },
                        new
                        {
                            Id = 3301405,
                            EstadoId = 33,
                            Nome = "Conceição de Macabu"
                        },
                        new
                        {
                            Id = 3301504,
                            EstadoId = 33,
                            Nome = "Cordeiro"
                        },
                        new
                        {
                            Id = 3301603,
                            EstadoId = 33,
                            Nome = "Duas Barras"
                        },
                        new
                        {
                            Id = 3301702,
                            EstadoId = 33,
                            Nome = "Duque de Caxias"
                        },
                        new
                        {
                            Id = 3301801,
                            EstadoId = 33,
                            Nome = "Engenheiro Paulo de Frontin"
                        },
                        new
                        {
                            Id = 3301850,
                            EstadoId = 33,
                            Nome = "Guapimirim"
                        },
                        new
                        {
                            Id = 3301876,
                            EstadoId = 33,
                            Nome = "Iguaba Grande"
                        },
                        new
                        {
                            Id = 3301900,
                            EstadoId = 33,
                            Nome = "Itaboraí"
                        },
                        new
                        {
                            Id = 3302007,
                            EstadoId = 33,
                            Nome = "Itaguaí"
                        },
                        new
                        {
                            Id = 3302056,
                            EstadoId = 33,
                            Nome = "Italva"
                        },
                        new
                        {
                            Id = 3302106,
                            EstadoId = 33,
                            Nome = "Itaocara"
                        },
                        new
                        {
                            Id = 3302205,
                            EstadoId = 33,
                            Nome = "Itaperuna"
                        },
                        new
                        {
                            Id = 3302254,
                            EstadoId = 33,
                            Nome = "Itatiaia"
                        },
                        new
                        {
                            Id = 3302270,
                            EstadoId = 33,
                            Nome = "Japeri"
                        },
                        new
                        {
                            Id = 3302304,
                            EstadoId = 33,
                            Nome = "Laje do Muriaé"
                        },
                        new
                        {
                            Id = 3302403,
                            EstadoId = 33,
                            Nome = "Macaé"
                        },
                        new
                        {
                            Id = 3302452,
                            EstadoId = 33,
                            Nome = "Macuco"
                        },
                        new
                        {
                            Id = 3302502,
                            EstadoId = 33,
                            Nome = "Magé"
                        },
                        new
                        {
                            Id = 3302601,
                            EstadoId = 33,
                            Nome = "Mangaratiba"
                        },
                        new
                        {
                            Id = 3302700,
                            EstadoId = 33,
                            Nome = "Maricá"
                        },
                        new
                        {
                            Id = 3302809,
                            EstadoId = 33,
                            Nome = "Mendes"
                        },
                        new
                        {
                            Id = 3302858,
                            EstadoId = 33,
                            Nome = "Mesquita"
                        },
                        new
                        {
                            Id = 3302908,
                            EstadoId = 33,
                            Nome = "Miguel Pereira"
                        },
                        new
                        {
                            Id = 3303005,
                            EstadoId = 33,
                            Nome = "Miracema"
                        },
                        new
                        {
                            Id = 3303104,
                            EstadoId = 33,
                            Nome = "Natividade"
                        },
                        new
                        {
                            Id = 3303203,
                            EstadoId = 33,
                            Nome = "Nilópolis"
                        },
                        new
                        {
                            Id = 3303302,
                            EstadoId = 33,
                            Nome = "Niterói"
                        },
                        new
                        {
                            Id = 3303401,
                            EstadoId = 33,
                            Nome = "Nova Friburgo"
                        },
                        new
                        {
                            Id = 3303500,
                            EstadoId = 33,
                            Nome = "Nova Iguaçu"
                        },
                        new
                        {
                            Id = 3303609,
                            EstadoId = 33,
                            Nome = "Paracambi"
                        },
                        new
                        {
                            Id = 3303708,
                            EstadoId = 33,
                            Nome = "Paraíba do Sul"
                        },
                        new
                        {
                            Id = 3303807,
                            EstadoId = 33,
                            Nome = "Parati"
                        },
                        new
                        {
                            Id = 3303856,
                            EstadoId = 33,
                            Nome = "Paty do Alferes"
                        },
                        new
                        {
                            Id = 3303906,
                            EstadoId = 33,
                            Nome = "Petrópolis"
                        },
                        new
                        {
                            Id = 3303955,
                            EstadoId = 33,
                            Nome = "Pinheiral"
                        },
                        new
                        {
                            Id = 3304003,
                            EstadoId = 33,
                            Nome = "Piraí"
                        },
                        new
                        {
                            Id = 3304102,
                            EstadoId = 33,
                            Nome = "Porciúncula"
                        },
                        new
                        {
                            Id = 3304110,
                            EstadoId = 33,
                            Nome = "Porto Real"
                        },
                        new
                        {
                            Id = 3304128,
                            EstadoId = 33,
                            Nome = "Quatis"
                        },
                        new
                        {
                            Id = 3304144,
                            EstadoId = 33,
                            Nome = "Queimados"
                        },
                        new
                        {
                            Id = 3304151,
                            EstadoId = 33,
                            Nome = "Quissamã"
                        },
                        new
                        {
                            Id = 3304201,
                            EstadoId = 33,
                            Nome = "Resende"
                        },
                        new
                        {
                            Id = 3304300,
                            EstadoId = 33,
                            Nome = "Rio Bonito"
                        },
                        new
                        {
                            Id = 3304409,
                            EstadoId = 33,
                            Nome = "Rio Claro"
                        },
                        new
                        {
                            Id = 3304508,
                            EstadoId = 33,
                            Nome = "Rio das Flores"
                        },
                        new
                        {
                            Id = 3304524,
                            EstadoId = 33,
                            Nome = "Rio das Ostras"
                        },
                        new
                        {
                            Id = 3304557,
                            EstadoId = 33,
                            Nome = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 3304607,
                            EstadoId = 33,
                            Nome = "Santa Maria Madalena"
                        },
                        new
                        {
                            Id = 3304706,
                            EstadoId = 33,
                            Nome = "Santo Antônio de Pádua"
                        },
                        new
                        {
                            Id = 3304805,
                            EstadoId = 33,
                            Nome = "São Fidélis"
                        },
                        new
                        {
                            Id = 3304755,
                            EstadoId = 33,
                            Nome = "São Francisco de Itabapoana"
                        },
                        new
                        {
                            Id = 3304904,
                            EstadoId = 33,
                            Nome = "São Gonçalo"
                        },
                        new
                        {
                            Id = 3305000,
                            EstadoId = 33,
                            Nome = "São João da Barra"
                        },
                        new
                        {
                            Id = 3305109,
                            EstadoId = 33,
                            Nome = "São João de Meriti"
                        },
                        new
                        {
                            Id = 3305133,
                            EstadoId = 33,
                            Nome = "São José de Ubá"
                        },
                        new
                        {
                            Id = 3305158,
                            EstadoId = 33,
                            Nome = "São José do Vale do Rio Preto"
                        },
                        new
                        {
                            Id = 3305208,
                            EstadoId = 33,
                            Nome = "São Pedro da Aldeia"
                        },
                        new
                        {
                            Id = 3305307,
                            EstadoId = 33,
                            Nome = "São Sebastião do Alto"
                        },
                        new
                        {
                            Id = 3305406,
                            EstadoId = 33,
                            Nome = "Sapucaia"
                        },
                        new
                        {
                            Id = 3305505,
                            EstadoId = 33,
                            Nome = "Saquarema"
                        },
                        new
                        {
                            Id = 3305554,
                            EstadoId = 33,
                            Nome = "Seropédica"
                        },
                        new
                        {
                            Id = 3305604,
                            EstadoId = 33,
                            Nome = "Silva Jardim"
                        },
                        new
                        {
                            Id = 3305703,
                            EstadoId = 33,
                            Nome = "Sumidouro"
                        },
                        new
                        {
                            Id = 3305752,
                            EstadoId = 33,
                            Nome = "Tanguá"
                        },
                        new
                        {
                            Id = 3305802,
                            EstadoId = 33,
                            Nome = "Teresópolis"
                        },
                        new
                        {
                            Id = 3305901,
                            EstadoId = 33,
                            Nome = "Trajano de Morais"
                        },
                        new
                        {
                            Id = 3306008,
                            EstadoId = 33,
                            Nome = "Três Rios"
                        },
                        new
                        {
                            Id = 3306107,
                            EstadoId = 33,
                            Nome = "Valença"
                        },
                        new
                        {
                            Id = 3306156,
                            EstadoId = 33,
                            Nome = "Varre-Sai"
                        },
                        new
                        {
                            Id = 3306206,
                            EstadoId = 33,
                            Nome = "Vassouras"
                        },
                        new
                        {
                            Id = 3306305,
                            EstadoId = 33,
                            Nome = "Volta Redonda"
                        },
                        new
                        {
                            Id = 3500105,
                            EstadoId = 35,
                            Nome = "Adamantina"
                        },
                        new
                        {
                            Id = 3500204,
                            EstadoId = 35,
                            Nome = "Adolfo"
                        },
                        new
                        {
                            Id = 3500303,
                            EstadoId = 35,
                            Nome = "Aguaí"
                        },
                        new
                        {
                            Id = 3500402,
                            EstadoId = 35,
                            Nome = "Águas da Prata"
                        },
                        new
                        {
                            Id = 3500501,
                            EstadoId = 35,
                            Nome = "Águas de Lindóia"
                        },
                        new
                        {
                            Id = 3500550,
                            EstadoId = 35,
                            Nome = "Águas de Santa Bárbara"
                        },
                        new
                        {
                            Id = 3500600,
                            EstadoId = 35,
                            Nome = "Águas de São Pedro"
                        },
                        new
                        {
                            Id = 3500709,
                            EstadoId = 35,
                            Nome = "Agudos"
                        },
                        new
                        {
                            Id = 3500758,
                            EstadoId = 35,
                            Nome = "Alambari"
                        },
                        new
                        {
                            Id = 3500808,
                            EstadoId = 35,
                            Nome = "Alfredo Marcondes"
                        },
                        new
                        {
                            Id = 3500907,
                            EstadoId = 35,
                            Nome = "Altair"
                        },
                        new
                        {
                            Id = 3501004,
                            EstadoId = 35,
                            Nome = "Altinópolis"
                        },
                        new
                        {
                            Id = 3501103,
                            EstadoId = 35,
                            Nome = "Alto Alegre"
                        },
                        new
                        {
                            Id = 3501152,
                            EstadoId = 35,
                            Nome = "Alumínio"
                        },
                        new
                        {
                            Id = 3501202,
                            EstadoId = 35,
                            Nome = "Álvares Florence"
                        },
                        new
                        {
                            Id = 3501301,
                            EstadoId = 35,
                            Nome = "Álvares Machado"
                        },
                        new
                        {
                            Id = 3501400,
                            EstadoId = 35,
                            Nome = "Álvaro de Carvalho"
                        },
                        new
                        {
                            Id = 3501509,
                            EstadoId = 35,
                            Nome = "Alvinlândia"
                        },
                        new
                        {
                            Id = 3501608,
                            EstadoId = 35,
                            Nome = "Americana"
                        },
                        new
                        {
                            Id = 3501707,
                            EstadoId = 35,
                            Nome = "Américo Brasiliense"
                        },
                        new
                        {
                            Id = 3501806,
                            EstadoId = 35,
                            Nome = "Américo de Campos"
                        },
                        new
                        {
                            Id = 3501905,
                            EstadoId = 35,
                            Nome = "Amparo"
                        },
                        new
                        {
                            Id = 3502002,
                            EstadoId = 35,
                            Nome = "Analândia"
                        },
                        new
                        {
                            Id = 3502101,
                            EstadoId = 35,
                            Nome = "Andradina"
                        },
                        new
                        {
                            Id = 3502200,
                            EstadoId = 35,
                            Nome = "Angatuba"
                        },
                        new
                        {
                            Id = 3502309,
                            EstadoId = 35,
                            Nome = "Anhembi"
                        },
                        new
                        {
                            Id = 3502408,
                            EstadoId = 35,
                            Nome = "Anhumas"
                        },
                        new
                        {
                            Id = 3502507,
                            EstadoId = 35,
                            Nome = "Aparecida"
                        },
                        new
                        {
                            Id = 3502606,
                            EstadoId = 35,
                            Nome = "Aparecida dOeste"
                        },
                        new
                        {
                            Id = 3502705,
                            EstadoId = 35,
                            Nome = "Apiaí"
                        },
                        new
                        {
                            Id = 3502754,
                            EstadoId = 35,
                            Nome = "Araçariguama"
                        },
                        new
                        {
                            Id = 3502804,
                            EstadoId = 35,
                            Nome = "Araçatuba"
                        },
                        new
                        {
                            Id = 3502903,
                            EstadoId = 35,
                            Nome = "Araçoiaba da Serra"
                        },
                        new
                        {
                            Id = 3503000,
                            EstadoId = 35,
                            Nome = "Aramina"
                        },
                        new
                        {
                            Id = 3503109,
                            EstadoId = 35,
                            Nome = "Arandu"
                        },
                        new
                        {
                            Id = 3503158,
                            EstadoId = 35,
                            Nome = "Arapeí"
                        },
                        new
                        {
                            Id = 3503208,
                            EstadoId = 35,
                            Nome = "Araraquara"
                        },
                        new
                        {
                            Id = 3503307,
                            EstadoId = 35,
                            Nome = "Araras"
                        },
                        new
                        {
                            Id = 3503356,
                            EstadoId = 35,
                            Nome = "Arco-Íris"
                        },
                        new
                        {
                            Id = 3503406,
                            EstadoId = 35,
                            Nome = "Arealva"
                        },
                        new
                        {
                            Id = 3503505,
                            EstadoId = 35,
                            Nome = "Areias"
                        },
                        new
                        {
                            Id = 3503604,
                            EstadoId = 35,
                            Nome = "Areiópolis"
                        },
                        new
                        {
                            Id = 3503703,
                            EstadoId = 35,
                            Nome = "Ariranha"
                        },
                        new
                        {
                            Id = 3503802,
                            EstadoId = 35,
                            Nome = "Artur Nogueira"
                        },
                        new
                        {
                            Id = 3503901,
                            EstadoId = 35,
                            Nome = "Arujá"
                        },
                        new
                        {
                            Id = 3503950,
                            EstadoId = 35,
                            Nome = "Aspásia"
                        },
                        new
                        {
                            Id = 3504008,
                            EstadoId = 35,
                            Nome = "Assis"
                        },
                        new
                        {
                            Id = 3504107,
                            EstadoId = 35,
                            Nome = "Atibaia"
                        },
                        new
                        {
                            Id = 3504206,
                            EstadoId = 35,
                            Nome = "Auriflama"
                        },
                        new
                        {
                            Id = 3504305,
                            EstadoId = 35,
                            Nome = "Avaí"
                        },
                        new
                        {
                            Id = 3504404,
                            EstadoId = 35,
                            Nome = "Avanhandava"
                        },
                        new
                        {
                            Id = 3504503,
                            EstadoId = 35,
                            Nome = "Avaré"
                        },
                        new
                        {
                            Id = 3504602,
                            EstadoId = 35,
                            Nome = "Bady Bassitt"
                        },
                        new
                        {
                            Id = 3504701,
                            EstadoId = 35,
                            Nome = "Balbinos"
                        },
                        new
                        {
                            Id = 3504800,
                            EstadoId = 35,
                            Nome = "Bálsamo"
                        },
                        new
                        {
                            Id = 3504909,
                            EstadoId = 35,
                            Nome = "Bananal"
                        },
                        new
                        {
                            Id = 3505005,
                            EstadoId = 35,
                            Nome = "Barão de Antonina"
                        },
                        new
                        {
                            Id = 3505104,
                            EstadoId = 35,
                            Nome = "Barbosa"
                        },
                        new
                        {
                            Id = 3505203,
                            EstadoId = 35,
                            Nome = "Bariri"
                        },
                        new
                        {
                            Id = 3505302,
                            EstadoId = 35,
                            Nome = "Barra Bonita"
                        },
                        new
                        {
                            Id = 3505351,
                            EstadoId = 35,
                            Nome = "Barra do Chapéu"
                        },
                        new
                        {
                            Id = 3505401,
                            EstadoId = 35,
                            Nome = "Barra do Turvo"
                        },
                        new
                        {
                            Id = 3505500,
                            EstadoId = 35,
                            Nome = "Barretos"
                        },
                        new
                        {
                            Id = 3505609,
                            EstadoId = 35,
                            Nome = "Barrinha"
                        },
                        new
                        {
                            Id = 3505708,
                            EstadoId = 35,
                            Nome = "Barueri"
                        },
                        new
                        {
                            Id = 3505807,
                            EstadoId = 35,
                            Nome = "Bastos"
                        },
                        new
                        {
                            Id = 3505906,
                            EstadoId = 35,
                            Nome = "Batatais"
                        },
                        new
                        {
                            Id = 3506003,
                            EstadoId = 35,
                            Nome = "Bauru"
                        },
                        new
                        {
                            Id = 3506102,
                            EstadoId = 35,
                            Nome = "Bebedouro"
                        },
                        new
                        {
                            Id = 3506201,
                            EstadoId = 35,
                            Nome = "Bento de Abreu"
                        },
                        new
                        {
                            Id = 3506300,
                            EstadoId = 35,
                            Nome = "Bernardino de Campos"
                        },
                        new
                        {
                            Id = 3506359,
                            EstadoId = 35,
                            Nome = "Bertioga"
                        },
                        new
                        {
                            Id = 3506409,
                            EstadoId = 35,
                            Nome = "Bilac"
                        },
                        new
                        {
                            Id = 3506508,
                            EstadoId = 35,
                            Nome = "Birigui"
                        },
                        new
                        {
                            Id = 3506607,
                            EstadoId = 35,
                            Nome = "Biritiba-Mirim"
                        },
                        new
                        {
                            Id = 3506706,
                            EstadoId = 35,
                            Nome = "Boa Esperança do Sul"
                        },
                        new
                        {
                            Id = 3506805,
                            EstadoId = 35,
                            Nome = "Bocaina"
                        },
                        new
                        {
                            Id = 3506904,
                            EstadoId = 35,
                            Nome = "Bofete"
                        },
                        new
                        {
                            Id = 3507001,
                            EstadoId = 35,
                            Nome = "Boituva"
                        },
                        new
                        {
                            Id = 3507100,
                            EstadoId = 35,
                            Nome = "Bom Jesus dos Perdões"
                        },
                        new
                        {
                            Id = 3507159,
                            EstadoId = 35,
                            Nome = "Bom Sucesso de Itararé"
                        },
                        new
                        {
                            Id = 3507209,
                            EstadoId = 35,
                            Nome = "Borá"
                        },
                        new
                        {
                            Id = 3507308,
                            EstadoId = 35,
                            Nome = "Boracéia"
                        },
                        new
                        {
                            Id = 3507407,
                            EstadoId = 35,
                            Nome = "Borborema"
                        },
                        new
                        {
                            Id = 3507456,
                            EstadoId = 35,
                            Nome = "Borebi"
                        },
                        new
                        {
                            Id = 3507506,
                            EstadoId = 35,
                            Nome = "Botucatu"
                        },
                        new
                        {
                            Id = 3507605,
                            EstadoId = 35,
                            Nome = "Bragança Paulista"
                        },
                        new
                        {
                            Id = 3507704,
                            EstadoId = 35,
                            Nome = "Braúna"
                        },
                        new
                        {
                            Id = 3507753,
                            EstadoId = 35,
                            Nome = "Brejo Alegre"
                        },
                        new
                        {
                            Id = 3507803,
                            EstadoId = 35,
                            Nome = "Brodowski"
                        },
                        new
                        {
                            Id = 3507902,
                            EstadoId = 35,
                            Nome = "Brotas"
                        },
                        new
                        {
                            Id = 3508009,
                            EstadoId = 35,
                            Nome = "Buri"
                        },
                        new
                        {
                            Id = 3508108,
                            EstadoId = 35,
                            Nome = "Buritama"
                        },
                        new
                        {
                            Id = 3508207,
                            EstadoId = 35,
                            Nome = "Buritizal"
                        },
                        new
                        {
                            Id = 3508306,
                            EstadoId = 35,
                            Nome = "Cabrália Paulista"
                        },
                        new
                        {
                            Id = 3508405,
                            EstadoId = 35,
                            Nome = "Cabreúva"
                        },
                        new
                        {
                            Id = 3508504,
                            EstadoId = 35,
                            Nome = "Caçapava"
                        },
                        new
                        {
                            Id = 3508603,
                            EstadoId = 35,
                            Nome = "Cachoeira Paulista"
                        },
                        new
                        {
                            Id = 3508702,
                            EstadoId = 35,
                            Nome = "Caconde"
                        },
                        new
                        {
                            Id = 3508801,
                            EstadoId = 35,
                            Nome = "Cafelândia"
                        },
                        new
                        {
                            Id = 3508900,
                            EstadoId = 35,
                            Nome = "Caiabu"
                        },
                        new
                        {
                            Id = 3509007,
                            EstadoId = 35,
                            Nome = "Caieiras"
                        },
                        new
                        {
                            Id = 3509106,
                            EstadoId = 35,
                            Nome = "Caiuá"
                        },
                        new
                        {
                            Id = 3509205,
                            EstadoId = 35,
                            Nome = "Cajamar"
                        },
                        new
                        {
                            Id = 3509254,
                            EstadoId = 35,
                            Nome = "Cajati"
                        },
                        new
                        {
                            Id = 3509304,
                            EstadoId = 35,
                            Nome = "Cajobi"
                        },
                        new
                        {
                            Id = 3509403,
                            EstadoId = 35,
                            Nome = "Cajuru"
                        },
                        new
                        {
                            Id = 3509452,
                            EstadoId = 35,
                            Nome = "Campina do Monte Alegre"
                        },
                        new
                        {
                            Id = 3509502,
                            EstadoId = 35,
                            Nome = "Campinas"
                        },
                        new
                        {
                            Id = 3509601,
                            EstadoId = 35,
                            Nome = "Campo Limpo Paulista"
                        },
                        new
                        {
                            Id = 3509700,
                            EstadoId = 35,
                            Nome = "Campos do Jordão"
                        },
                        new
                        {
                            Id = 3509809,
                            EstadoId = 35,
                            Nome = "Campos Novos Paulista"
                        },
                        new
                        {
                            Id = 3509908,
                            EstadoId = 35,
                            Nome = "Cananéia"
                        },
                        new
                        {
                            Id = 3509957,
                            EstadoId = 35,
                            Nome = "Canas"
                        },
                        new
                        {
                            Id = 3510005,
                            EstadoId = 35,
                            Nome = "Cândido Mota"
                        },
                        new
                        {
                            Id = 3510104,
                            EstadoId = 35,
                            Nome = "Cândido Rodrigues"
                        },
                        new
                        {
                            Id = 3510153,
                            EstadoId = 35,
                            Nome = "Canitar"
                        },
                        new
                        {
                            Id = 3510203,
                            EstadoId = 35,
                            Nome = "Capão Bonito"
                        },
                        new
                        {
                            Id = 3510302,
                            EstadoId = 35,
                            Nome = "Capela do Alto"
                        },
                        new
                        {
                            Id = 3510401,
                            EstadoId = 35,
                            Nome = "Capivari"
                        },
                        new
                        {
                            Id = 3510500,
                            EstadoId = 35,
                            Nome = "Caraguatatuba"
                        },
                        new
                        {
                            Id = 3510609,
                            EstadoId = 35,
                            Nome = "Carapicuíba"
                        },
                        new
                        {
                            Id = 3510708,
                            EstadoId = 35,
                            Nome = "Cardoso"
                        },
                        new
                        {
                            Id = 3510807,
                            EstadoId = 35,
                            Nome = "Casa Branca"
                        },
                        new
                        {
                            Id = 3510906,
                            EstadoId = 35,
                            Nome = "Cássia dos Coqueiros"
                        },
                        new
                        {
                            Id = 3511003,
                            EstadoId = 35,
                            Nome = "Castilho"
                        },
                        new
                        {
                            Id = 3511102,
                            EstadoId = 35,
                            Nome = "Catanduva"
                        },
                        new
                        {
                            Id = 3511201,
                            EstadoId = 35,
                            Nome = "Catiguá"
                        },
                        new
                        {
                            Id = 3511300,
                            EstadoId = 35,
                            Nome = "Cedral"
                        },
                        new
                        {
                            Id = 3511409,
                            EstadoId = 35,
                            Nome = "Cerqueira César"
                        },
                        new
                        {
                            Id = 3511508,
                            EstadoId = 35,
                            Nome = "Cerquilho"
                        },
                        new
                        {
                            Id = 3511607,
                            EstadoId = 35,
                            Nome = "Cesário Lange"
                        },
                        new
                        {
                            Id = 3511706,
                            EstadoId = 35,
                            Nome = "Charqueada"
                        },
                        new
                        {
                            Id = 3557204,
                            EstadoId = 35,
                            Nome = "Chavantes"
                        },
                        new
                        {
                            Id = 3511904,
                            EstadoId = 35,
                            Nome = "Clementina"
                        },
                        new
                        {
                            Id = 3512001,
                            EstadoId = 35,
                            Nome = "Colina"
                        },
                        new
                        {
                            Id = 3512100,
                            EstadoId = 35,
                            Nome = "Colômbia"
                        },
                        new
                        {
                            Id = 3512209,
                            EstadoId = 35,
                            Nome = "Conchal"
                        },
                        new
                        {
                            Id = 3512308,
                            EstadoId = 35,
                            Nome = "Conchas"
                        },
                        new
                        {
                            Id = 3512407,
                            EstadoId = 35,
                            Nome = "Cordeirópolis"
                        },
                        new
                        {
                            Id = 3512506,
                            EstadoId = 35,
                            Nome = "Coroados"
                        },
                        new
                        {
                            Id = 3512605,
                            EstadoId = 35,
                            Nome = "Coronel Macedo"
                        },
                        new
                        {
                            Id = 3512704,
                            EstadoId = 35,
                            Nome = "Corumbataí"
                        },
                        new
                        {
                            Id = 3512803,
                            EstadoId = 35,
                            Nome = "Cosmópolis"
                        },
                        new
                        {
                            Id = 3512902,
                            EstadoId = 35,
                            Nome = "Cosmorama"
                        },
                        new
                        {
                            Id = 3513009,
                            EstadoId = 35,
                            Nome = "Cotia"
                        },
                        new
                        {
                            Id = 3513108,
                            EstadoId = 35,
                            Nome = "Cravinhos"
                        },
                        new
                        {
                            Id = 3513207,
                            EstadoId = 35,
                            Nome = "Cristais Paulista"
                        },
                        new
                        {
                            Id = 3513306,
                            EstadoId = 35,
                            Nome = "Cruzália"
                        },
                        new
                        {
                            Id = 3513405,
                            EstadoId = 35,
                            Nome = "Cruzeiro"
                        },
                        new
                        {
                            Id = 3513504,
                            EstadoId = 35,
                            Nome = "Cubatão"
                        },
                        new
                        {
                            Id = 3513603,
                            EstadoId = 35,
                            Nome = "Cunha"
                        },
                        new
                        {
                            Id = 3513702,
                            EstadoId = 35,
                            Nome = "Descalvado"
                        },
                        new
                        {
                            Id = 3513801,
                            EstadoId = 35,
                            Nome = "Diadema"
                        },
                        new
                        {
                            Id = 3513850,
                            EstadoId = 35,
                            Nome = "Dirce Reis"
                        },
                        new
                        {
                            Id = 3513900,
                            EstadoId = 35,
                            Nome = "Divinolândia"
                        },
                        new
                        {
                            Id = 3514007,
                            EstadoId = 35,
                            Nome = "Dobrada"
                        },
                        new
                        {
                            Id = 3514106,
                            EstadoId = 35,
                            Nome = "Dois Córregos"
                        },
                        new
                        {
                            Id = 3514205,
                            EstadoId = 35,
                            Nome = "Dolcinópolis"
                        },
                        new
                        {
                            Id = 3514304,
                            EstadoId = 35,
                            Nome = "Dourado"
                        },
                        new
                        {
                            Id = 3514403,
                            EstadoId = 35,
                            Nome = "Dracena"
                        },
                        new
                        {
                            Id = 3514502,
                            EstadoId = 35,
                            Nome = "Duartina"
                        },
                        new
                        {
                            Id = 3514601,
                            EstadoId = 35,
                            Nome = "Dumont"
                        },
                        new
                        {
                            Id = 3514700,
                            EstadoId = 35,
                            Nome = "Echaporã"
                        },
                        new
                        {
                            Id = 3514809,
                            EstadoId = 35,
                            Nome = "Eldorado"
                        },
                        new
                        {
                            Id = 3514908,
                            EstadoId = 35,
                            Nome = "Elias Fausto"
                        },
                        new
                        {
                            Id = 3514924,
                            EstadoId = 35,
                            Nome = "Elisiário"
                        },
                        new
                        {
                            Id = 3514957,
                            EstadoId = 35,
                            Nome = "Embaúba"
                        },
                        new
                        {
                            Id = 3515004,
                            EstadoId = 35,
                            Nome = "Embu das Artes"
                        },
                        new
                        {
                            Id = 3515103,
                            EstadoId = 35,
                            Nome = "Embu-Guaçu"
                        },
                        new
                        {
                            Id = 3515129,
                            EstadoId = 35,
                            Nome = "Emilianópolis"
                        },
                        new
                        {
                            Id = 3515152,
                            EstadoId = 35,
                            Nome = "Engenheiro Coelho"
                        },
                        new
                        {
                            Id = 3515186,
                            EstadoId = 35,
                            Nome = "Espírito Santo do Pinhal"
                        },
                        new
                        {
                            Id = 3515194,
                            EstadoId = 35,
                            Nome = "Espírito Santo do Turvo"
                        },
                        new
                        {
                            Id = 3557303,
                            EstadoId = 35,
                            Nome = "Estiva Gerbi"
                        },
                        new
                        {
                            Id = 3515301,
                            EstadoId = 35,
                            Nome = "Estrela do Norte"
                        },
                        new
                        {
                            Id = 3515202,
                            EstadoId = 35,
                            Nome = "Estrela dOeste"
                        },
                        new
                        {
                            Id = 3515350,
                            EstadoId = 35,
                            Nome = "Euclides da Cunha Paulista"
                        },
                        new
                        {
                            Id = 3515400,
                            EstadoId = 35,
                            Nome = "Fartura"
                        },
                        new
                        {
                            Id = 3515608,
                            EstadoId = 35,
                            Nome = "Fernando Prestes"
                        },
                        new
                        {
                            Id = 3515509,
                            EstadoId = 35,
                            Nome = "Fernandópolis"
                        },
                        new
                        {
                            Id = 3515657,
                            EstadoId = 35,
                            Nome = "Fernão"
                        },
                        new
                        {
                            Id = 3515707,
                            EstadoId = 35,
                            Nome = "Ferraz de Vasconcelos"
                        },
                        new
                        {
                            Id = 3515806,
                            EstadoId = 35,
                            Nome = "Flora Rica"
                        },
                        new
                        {
                            Id = 3515905,
                            EstadoId = 35,
                            Nome = "Floreal"
                        },
                        new
                        {
                            Id = 3516002,
                            EstadoId = 35,
                            Nome = "Flórida Paulista"
                        },
                        new
                        {
                            Id = 3516101,
                            EstadoId = 35,
                            Nome = "Florínia"
                        },
                        new
                        {
                            Id = 3516200,
                            EstadoId = 35,
                            Nome = "Franca"
                        },
                        new
                        {
                            Id = 3516309,
                            EstadoId = 35,
                            Nome = "Francisco Morato"
                        },
                        new
                        {
                            Id = 3516408,
                            EstadoId = 35,
                            Nome = "Franco da Rocha"
                        },
                        new
                        {
                            Id = 3516507,
                            EstadoId = 35,
                            Nome = "Gabriel Monteiro"
                        },
                        new
                        {
                            Id = 3516606,
                            EstadoId = 35,
                            Nome = "Gália"
                        },
                        new
                        {
                            Id = 3516705,
                            EstadoId = 35,
                            Nome = "Garça"
                        },
                        new
                        {
                            Id = 3516804,
                            EstadoId = 35,
                            Nome = "Gastão Vidigal"
                        },
                        new
                        {
                            Id = 3516853,
                            EstadoId = 35,
                            Nome = "Gavião Peixoto"
                        },
                        new
                        {
                            Id = 3516903,
                            EstadoId = 35,
                            Nome = "General Salgado"
                        },
                        new
                        {
                            Id = 3517000,
                            EstadoId = 35,
                            Nome = "Getulina"
                        },
                        new
                        {
                            Id = 3517109,
                            EstadoId = 35,
                            Nome = "Glicério"
                        },
                        new
                        {
                            Id = 3517208,
                            EstadoId = 35,
                            Nome = "Guaiçara"
                        },
                        new
                        {
                            Id = 3517307,
                            EstadoId = 35,
                            Nome = "Guaimbê"
                        },
                        new
                        {
                            Id = 3517406,
                            EstadoId = 35,
                            Nome = "Guaíra"
                        },
                        new
                        {
                            Id = 3517505,
                            EstadoId = 35,
                            Nome = "Guapiaçu"
                        },
                        new
                        {
                            Id = 3517604,
                            EstadoId = 35,
                            Nome = "Guapiara"
                        },
                        new
                        {
                            Id = 3517703,
                            EstadoId = 35,
                            Nome = "Guará"
                        },
                        new
                        {
                            Id = 3517802,
                            EstadoId = 35,
                            Nome = "Guaraçaí"
                        },
                        new
                        {
                            Id = 3517901,
                            EstadoId = 35,
                            Nome = "Guaraci"
                        },
                        new
                        {
                            Id = 3518008,
                            EstadoId = 35,
                            Nome = "Guarani dOeste"
                        },
                        new
                        {
                            Id = 3518107,
                            EstadoId = 35,
                            Nome = "Guarantã"
                        },
                        new
                        {
                            Id = 3518206,
                            EstadoId = 35,
                            Nome = "Guararapes"
                        },
                        new
                        {
                            Id = 3518305,
                            EstadoId = 35,
                            Nome = "Guararema"
                        },
                        new
                        {
                            Id = 3518404,
                            EstadoId = 35,
                            Nome = "Guaratinguetá"
                        },
                        new
                        {
                            Id = 3518503,
                            EstadoId = 35,
                            Nome = "Guareí"
                        },
                        new
                        {
                            Id = 3518602,
                            EstadoId = 35,
                            Nome = "Guariba"
                        },
                        new
                        {
                            Id = 3518701,
                            EstadoId = 35,
                            Nome = "Guarujá"
                        },
                        new
                        {
                            Id = 3518800,
                            EstadoId = 35,
                            Nome = "Guarulhos"
                        },
                        new
                        {
                            Id = 3518859,
                            EstadoId = 35,
                            Nome = "Guatapará"
                        },
                        new
                        {
                            Id = 3518909,
                            EstadoId = 35,
                            Nome = "Guzolândia"
                        },
                        new
                        {
                            Id = 3519006,
                            EstadoId = 35,
                            Nome = "Herculândia"
                        },
                        new
                        {
                            Id = 3519055,
                            EstadoId = 35,
                            Nome = "Holambra"
                        },
                        new
                        {
                            Id = 3519071,
                            EstadoId = 35,
                            Nome = "Hortolândia"
                        },
                        new
                        {
                            Id = 3519105,
                            EstadoId = 35,
                            Nome = "Iacanga"
                        },
                        new
                        {
                            Id = 3519204,
                            EstadoId = 35,
                            Nome = "Iacri"
                        },
                        new
                        {
                            Id = 3519253,
                            EstadoId = 35,
                            Nome = "Iaras"
                        },
                        new
                        {
                            Id = 3519303,
                            EstadoId = 35,
                            Nome = "Ibaté"
                        },
                        new
                        {
                            Id = 3519402,
                            EstadoId = 35,
                            Nome = "Ibirá"
                        },
                        new
                        {
                            Id = 3519501,
                            EstadoId = 35,
                            Nome = "Ibirarema"
                        },
                        new
                        {
                            Id = 3519600,
                            EstadoId = 35,
                            Nome = "Ibitinga"
                        },
                        new
                        {
                            Id = 3519709,
                            EstadoId = 35,
                            Nome = "Ibiúna"
                        },
                        new
                        {
                            Id = 3519808,
                            EstadoId = 35,
                            Nome = "Icém"
                        },
                        new
                        {
                            Id = 3519907,
                            EstadoId = 35,
                            Nome = "Iepê"
                        },
                        new
                        {
                            Id = 3520004,
                            EstadoId = 35,
                            Nome = "Igaraçu do Tietê"
                        },
                        new
                        {
                            Id = 3520103,
                            EstadoId = 35,
                            Nome = "Igarapava"
                        },
                        new
                        {
                            Id = 3520202,
                            EstadoId = 35,
                            Nome = "Igaratá"
                        },
                        new
                        {
                            Id = 3520301,
                            EstadoId = 35,
                            Nome = "Iguape"
                        },
                        new
                        {
                            Id = 3520426,
                            EstadoId = 35,
                            Nome = "Ilha Comprida"
                        },
                        new
                        {
                            Id = 3520442,
                            EstadoId = 35,
                            Nome = "Ilha Solteira"
                        },
                        new
                        {
                            Id = 3520400,
                            EstadoId = 35,
                            Nome = "Ilhabela"
                        },
                        new
                        {
                            Id = 3520509,
                            EstadoId = 35,
                            Nome = "Indaiatuba"
                        },
                        new
                        {
                            Id = 3520608,
                            EstadoId = 35,
                            Nome = "Indiana"
                        },
                        new
                        {
                            Id = 3520707,
                            EstadoId = 35,
                            Nome = "Indiaporã"
                        },
                        new
                        {
                            Id = 3520806,
                            EstadoId = 35,
                            Nome = "Inúbia Paulista"
                        },
                        new
                        {
                            Id = 3520905,
                            EstadoId = 35,
                            Nome = "Ipaussu"
                        },
                        new
                        {
                            Id = 3521002,
                            EstadoId = 35,
                            Nome = "Iperó"
                        },
                        new
                        {
                            Id = 3521101,
                            EstadoId = 35,
                            Nome = "Ipeúna"
                        },
                        new
                        {
                            Id = 3521150,
                            EstadoId = 35,
                            Nome = "Ipiguá"
                        },
                        new
                        {
                            Id = 3521200,
                            EstadoId = 35,
                            Nome = "Iporanga"
                        },
                        new
                        {
                            Id = 3521309,
                            EstadoId = 35,
                            Nome = "Ipuã"
                        },
                        new
                        {
                            Id = 3521408,
                            EstadoId = 35,
                            Nome = "Iracemápolis"
                        },
                        new
                        {
                            Id = 3521507,
                            EstadoId = 35,
                            Nome = "Irapuã"
                        },
                        new
                        {
                            Id = 3521606,
                            EstadoId = 35,
                            Nome = "Irapuru"
                        },
                        new
                        {
                            Id = 3521705,
                            EstadoId = 35,
                            Nome = "Itaberá"
                        },
                        new
                        {
                            Id = 3521804,
                            EstadoId = 35,
                            Nome = "Itaí"
                        },
                        new
                        {
                            Id = 3521903,
                            EstadoId = 35,
                            Nome = "Itajobi"
                        },
                        new
                        {
                            Id = 3522000,
                            EstadoId = 35,
                            Nome = "Itaju"
                        },
                        new
                        {
                            Id = 3522109,
                            EstadoId = 35,
                            Nome = "Itanhaém"
                        },
                        new
                        {
                            Id = 3522158,
                            EstadoId = 35,
                            Nome = "Itaóca"
                        },
                        new
                        {
                            Id = 3522208,
                            EstadoId = 35,
                            Nome = "Itapecerica da Serra"
                        },
                        new
                        {
                            Id = 3522307,
                            EstadoId = 35,
                            Nome = "Itapetininga"
                        },
                        new
                        {
                            Id = 3522406,
                            EstadoId = 35,
                            Nome = "Itapeva"
                        },
                        new
                        {
                            Id = 3522505,
                            EstadoId = 35,
                            Nome = "Itapevi"
                        },
                        new
                        {
                            Id = 3522604,
                            EstadoId = 35,
                            Nome = "Itapira"
                        },
                        new
                        {
                            Id = 3522653,
                            EstadoId = 35,
                            Nome = "Itapirapuã Paulista"
                        },
                        new
                        {
                            Id = 3522703,
                            EstadoId = 35,
                            Nome = "Itápolis"
                        },
                        new
                        {
                            Id = 3522802,
                            EstadoId = 35,
                            Nome = "Itaporanga"
                        },
                        new
                        {
                            Id = 3522901,
                            EstadoId = 35,
                            Nome = "Itapuí"
                        },
                        new
                        {
                            Id = 3523008,
                            EstadoId = 35,
                            Nome = "Itapura"
                        },
                        new
                        {
                            Id = 3523107,
                            EstadoId = 35,
                            Nome = "Itaquaquecetuba"
                        },
                        new
                        {
                            Id = 3523206,
                            EstadoId = 35,
                            Nome = "Itararé"
                        },
                        new
                        {
                            Id = 3523305,
                            EstadoId = 35,
                            Nome = "Itariri"
                        },
                        new
                        {
                            Id = 3523404,
                            EstadoId = 35,
                            Nome = "Itatiba"
                        },
                        new
                        {
                            Id = 3523503,
                            EstadoId = 35,
                            Nome = "Itatinga"
                        },
                        new
                        {
                            Id = 3523602,
                            EstadoId = 35,
                            Nome = "Itirapina"
                        },
                        new
                        {
                            Id = 3523701,
                            EstadoId = 35,
                            Nome = "Itirapuã"
                        },
                        new
                        {
                            Id = 3523800,
                            EstadoId = 35,
                            Nome = "Itobi"
                        },
                        new
                        {
                            Id = 3523909,
                            EstadoId = 35,
                            Nome = "Itu"
                        },
                        new
                        {
                            Id = 3524006,
                            EstadoId = 35,
                            Nome = "Itupeva"
                        },
                        new
                        {
                            Id = 3524105,
                            EstadoId = 35,
                            Nome = "Ituverava"
                        },
                        new
                        {
                            Id = 3524204,
                            EstadoId = 35,
                            Nome = "Jaborandi"
                        },
                        new
                        {
                            Id = 3524303,
                            EstadoId = 35,
                            Nome = "Jaboticabal"
                        },
                        new
                        {
                            Id = 3524402,
                            EstadoId = 35,
                            Nome = "Jacareí"
                        },
                        new
                        {
                            Id = 3524501,
                            EstadoId = 35,
                            Nome = "Jaci"
                        },
                        new
                        {
                            Id = 3524600,
                            EstadoId = 35,
                            Nome = "Jacupiranga"
                        },
                        new
                        {
                            Id = 3524709,
                            EstadoId = 35,
                            Nome = "Jaguariúna"
                        },
                        new
                        {
                            Id = 3524808,
                            EstadoId = 35,
                            Nome = "Jales"
                        },
                        new
                        {
                            Id = 3524907,
                            EstadoId = 35,
                            Nome = "Jambeiro"
                        },
                        new
                        {
                            Id = 3525003,
                            EstadoId = 35,
                            Nome = "Jandira"
                        },
                        new
                        {
                            Id = 3525102,
                            EstadoId = 35,
                            Nome = "Jardinópolis"
                        },
                        new
                        {
                            Id = 3525201,
                            EstadoId = 35,
                            Nome = "Jarinu"
                        },
                        new
                        {
                            Id = 3525300,
                            EstadoId = 35,
                            Nome = "Jaú"
                        },
                        new
                        {
                            Id = 3525409,
                            EstadoId = 35,
                            Nome = "Jeriquara"
                        },
                        new
                        {
                            Id = 3525508,
                            EstadoId = 35,
                            Nome = "Joanópolis"
                        },
                        new
                        {
                            Id = 3525607,
                            EstadoId = 35,
                            Nome = "João Ramalho"
                        },
                        new
                        {
                            Id = 3525706,
                            EstadoId = 35,
                            Nome = "José Bonifácio"
                        },
                        new
                        {
                            Id = 3525805,
                            EstadoId = 35,
                            Nome = "Júlio Mesquita"
                        },
                        new
                        {
                            Id = 3525854,
                            EstadoId = 35,
                            Nome = "Jumirim"
                        },
                        new
                        {
                            Id = 3525904,
                            EstadoId = 35,
                            Nome = "Jundiaí"
                        },
                        new
                        {
                            Id = 3526001,
                            EstadoId = 35,
                            Nome = "Junqueirópolis"
                        },
                        new
                        {
                            Id = 3526100,
                            EstadoId = 35,
                            Nome = "Juquiá"
                        },
                        new
                        {
                            Id = 3526209,
                            EstadoId = 35,
                            Nome = "Juquitiba"
                        },
                        new
                        {
                            Id = 3526308,
                            EstadoId = 35,
                            Nome = "Lagoinha"
                        },
                        new
                        {
                            Id = 3526407,
                            EstadoId = 35,
                            Nome = "Laranjal Paulista"
                        },
                        new
                        {
                            Id = 3526506,
                            EstadoId = 35,
                            Nome = "Lavínia"
                        },
                        new
                        {
                            Id = 3526605,
                            EstadoId = 35,
                            Nome = "Lavrinhas"
                        },
                        new
                        {
                            Id = 3526704,
                            EstadoId = 35,
                            Nome = "Leme"
                        },
                        new
                        {
                            Id = 3526803,
                            EstadoId = 35,
                            Nome = "Lençóis Paulista"
                        },
                        new
                        {
                            Id = 3526902,
                            EstadoId = 35,
                            Nome = "Limeira"
                        },
                        new
                        {
                            Id = 3527009,
                            EstadoId = 35,
                            Nome = "Lindóia"
                        },
                        new
                        {
                            Id = 3527108,
                            EstadoId = 35,
                            Nome = "Lins"
                        },
                        new
                        {
                            Id = 3527207,
                            EstadoId = 35,
                            Nome = "Lorena"
                        },
                        new
                        {
                            Id = 3527256,
                            EstadoId = 35,
                            Nome = "Lourdes"
                        },
                        new
                        {
                            Id = 3527306,
                            EstadoId = 35,
                            Nome = "Louveira"
                        },
                        new
                        {
                            Id = 3527405,
                            EstadoId = 35,
                            Nome = "Lucélia"
                        },
                        new
                        {
                            Id = 3527504,
                            EstadoId = 35,
                            Nome = "Lucianópolis"
                        },
                        new
                        {
                            Id = 3527603,
                            EstadoId = 35,
                            Nome = "Luís Antônio"
                        },
                        new
                        {
                            Id = 3527702,
                            EstadoId = 35,
                            Nome = "Luiziânia"
                        },
                        new
                        {
                            Id = 3527801,
                            EstadoId = 35,
                            Nome = "Lupércio"
                        },
                        new
                        {
                            Id = 3527900,
                            EstadoId = 35,
                            Nome = "Lutécia"
                        },
                        new
                        {
                            Id = 3528007,
                            EstadoId = 35,
                            Nome = "Macatuba"
                        },
                        new
                        {
                            Id = 3528106,
                            EstadoId = 35,
                            Nome = "Macaubal"
                        },
                        new
                        {
                            Id = 3528205,
                            EstadoId = 35,
                            Nome = "Macedônia"
                        },
                        new
                        {
                            Id = 3528304,
                            EstadoId = 35,
                            Nome = "Magda"
                        },
                        new
                        {
                            Id = 3528403,
                            EstadoId = 35,
                            Nome = "Mairinque"
                        },
                        new
                        {
                            Id = 3528502,
                            EstadoId = 35,
                            Nome = "Mairiporã"
                        },
                        new
                        {
                            Id = 3528601,
                            EstadoId = 35,
                            Nome = "Manduri"
                        },
                        new
                        {
                            Id = 3528700,
                            EstadoId = 35,
                            Nome = "Marabá Paulista"
                        },
                        new
                        {
                            Id = 3528809,
                            EstadoId = 35,
                            Nome = "Maracaí"
                        },
                        new
                        {
                            Id = 3528858,
                            EstadoId = 35,
                            Nome = "Marapoama"
                        },
                        new
                        {
                            Id = 3528908,
                            EstadoId = 35,
                            Nome = "Mariápolis"
                        },
                        new
                        {
                            Id = 3529005,
                            EstadoId = 35,
                            Nome = "Marília"
                        },
                        new
                        {
                            Id = 3529104,
                            EstadoId = 35,
                            Nome = "Marinópolis"
                        },
                        new
                        {
                            Id = 3529203,
                            EstadoId = 35,
                            Nome = "Martinópolis"
                        },
                        new
                        {
                            Id = 3529302,
                            EstadoId = 35,
                            Nome = "Matão"
                        },
                        new
                        {
                            Id = 3529401,
                            EstadoId = 35,
                            Nome = "Mauá"
                        },
                        new
                        {
                            Id = 3529500,
                            EstadoId = 35,
                            Nome = "Mendonça"
                        },
                        new
                        {
                            Id = 3529609,
                            EstadoId = 35,
                            Nome = "Meridiano"
                        },
                        new
                        {
                            Id = 3529658,
                            EstadoId = 35,
                            Nome = "Mesópolis"
                        },
                        new
                        {
                            Id = 3529708,
                            EstadoId = 35,
                            Nome = "Miguelópolis"
                        },
                        new
                        {
                            Id = 3529807,
                            EstadoId = 35,
                            Nome = "Mineiros do Tietê"
                        },
                        new
                        {
                            Id = 3530003,
                            EstadoId = 35,
                            Nome = "Mira Estrela"
                        },
                        new
                        {
                            Id = 3529906,
                            EstadoId = 35,
                            Nome = "Miracatu"
                        },
                        new
                        {
                            Id = 3530102,
                            EstadoId = 35,
                            Nome = "Mirandópolis"
                        },
                        new
                        {
                            Id = 3530201,
                            EstadoId = 35,
                            Nome = "Mirante do Paranapanema"
                        },
                        new
                        {
                            Id = 3530300,
                            EstadoId = 35,
                            Nome = "Mirassol"
                        },
                        new
                        {
                            Id = 3530409,
                            EstadoId = 35,
                            Nome = "Mirassolândia"
                        },
                        new
                        {
                            Id = 3530508,
                            EstadoId = 35,
                            Nome = "Mococa"
                        },
                        new
                        {
                            Id = 3530607,
                            EstadoId = 35,
                            Nome = "Mogi das Cruzes"
                        },
                        new
                        {
                            Id = 3530706,
                            EstadoId = 35,
                            Nome = "Mogi Guaçu"
                        },
                        new
                        {
                            Id = 3530805,
                            EstadoId = 35,
                            Nome = "Moji Mirim"
                        },
                        new
                        {
                            Id = 3530904,
                            EstadoId = 35,
                            Nome = "Mombuca"
                        },
                        new
                        {
                            Id = 3531001,
                            EstadoId = 35,
                            Nome = "Monções"
                        },
                        new
                        {
                            Id = 3531100,
                            EstadoId = 35,
                            Nome = "Mongaguá"
                        },
                        new
                        {
                            Id = 3531209,
                            EstadoId = 35,
                            Nome = "Monte Alegre do Sul"
                        },
                        new
                        {
                            Id = 3531308,
                            EstadoId = 35,
                            Nome = "Monte Alto"
                        },
                        new
                        {
                            Id = 3531407,
                            EstadoId = 35,
                            Nome = "Monte Aprazível"
                        },
                        new
                        {
                            Id = 3531506,
                            EstadoId = 35,
                            Nome = "Monte Azul Paulista"
                        },
                        new
                        {
                            Id = 3531605,
                            EstadoId = 35,
                            Nome = "Monte Castelo"
                        },
                        new
                        {
                            Id = 3531803,
                            EstadoId = 35,
                            Nome = "Monte Mor"
                        },
                        new
                        {
                            Id = 3531704,
                            EstadoId = 35,
                            Nome = "Monteiro Lobato"
                        },
                        new
                        {
                            Id = 3531902,
                            EstadoId = 35,
                            Nome = "Morro Agudo"
                        },
                        new
                        {
                            Id = 3532009,
                            EstadoId = 35,
                            Nome = "Morungaba"
                        },
                        new
                        {
                            Id = 3532058,
                            EstadoId = 35,
                            Nome = "Motuca"
                        },
                        new
                        {
                            Id = 3532108,
                            EstadoId = 35,
                            Nome = "Murutinga do Sul"
                        },
                        new
                        {
                            Id = 3532157,
                            EstadoId = 35,
                            Nome = "Nantes"
                        },
                        new
                        {
                            Id = 3532207,
                            EstadoId = 35,
                            Nome = "Narandiba"
                        },
                        new
                        {
                            Id = 3532306,
                            EstadoId = 35,
                            Nome = "Natividade da Serra"
                        },
                        new
                        {
                            Id = 3532405,
                            EstadoId = 35,
                            Nome = "Nazaré Paulista"
                        },
                        new
                        {
                            Id = 3532504,
                            EstadoId = 35,
                            Nome = "Neves Paulista"
                        },
                        new
                        {
                            Id = 3532603,
                            EstadoId = 35,
                            Nome = "Nhandeara"
                        },
                        new
                        {
                            Id = 3532702,
                            EstadoId = 35,
                            Nome = "Nipoã"
                        },
                        new
                        {
                            Id = 3532801,
                            EstadoId = 35,
                            Nome = "Nova Aliança"
                        },
                        new
                        {
                            Id = 3532827,
                            EstadoId = 35,
                            Nome = "Nova Campina"
                        },
                        new
                        {
                            Id = 3532843,
                            EstadoId = 35,
                            Nome = "Nova Canaã Paulista"
                        },
                        new
                        {
                            Id = 3532868,
                            EstadoId = 35,
                            Nome = "Nova Castilho"
                        },
                        new
                        {
                            Id = 3532900,
                            EstadoId = 35,
                            Nome = "Nova Europa"
                        },
                        new
                        {
                            Id = 3533007,
                            EstadoId = 35,
                            Nome = "Nova Granada"
                        },
                        new
                        {
                            Id = 3533106,
                            EstadoId = 35,
                            Nome = "Nova Guataporanga"
                        },
                        new
                        {
                            Id = 3533205,
                            EstadoId = 35,
                            Nome = "Nova Independência"
                        },
                        new
                        {
                            Id = 3533304,
                            EstadoId = 35,
                            Nome = "Nova Luzitânia"
                        },
                        new
                        {
                            Id = 3533403,
                            EstadoId = 35,
                            Nome = "Nova Odessa"
                        },
                        new
                        {
                            Id = 3533254,
                            EstadoId = 35,
                            Nome = "Novais"
                        },
                        new
                        {
                            Id = 3533502,
                            EstadoId = 35,
                            Nome = "Novo Horizonte"
                        },
                        new
                        {
                            Id = 3533601,
                            EstadoId = 35,
                            Nome = "Nuporanga"
                        },
                        new
                        {
                            Id = 3533700,
                            EstadoId = 35,
                            Nome = "Ocauçu"
                        },
                        new
                        {
                            Id = 3533809,
                            EstadoId = 35,
                            Nome = "Óleo"
                        },
                        new
                        {
                            Id = 3533908,
                            EstadoId = 35,
                            Nome = "Olímpia"
                        },
                        new
                        {
                            Id = 3534005,
                            EstadoId = 35,
                            Nome = "Onda Verde"
                        },
                        new
                        {
                            Id = 3534104,
                            EstadoId = 35,
                            Nome = "Oriente"
                        },
                        new
                        {
                            Id = 3534203,
                            EstadoId = 35,
                            Nome = "Orindiúva"
                        },
                        new
                        {
                            Id = 3534302,
                            EstadoId = 35,
                            Nome = "Orlândia"
                        },
                        new
                        {
                            Id = 3534401,
                            EstadoId = 35,
                            Nome = "Osasco"
                        },
                        new
                        {
                            Id = 3534500,
                            EstadoId = 35,
                            Nome = "Oscar Bressane"
                        },
                        new
                        {
                            Id = 3534609,
                            EstadoId = 35,
                            Nome = "Osvaldo Cruz"
                        },
                        new
                        {
                            Id = 3534708,
                            EstadoId = 35,
                            Nome = "Ourinhos"
                        },
                        new
                        {
                            Id = 3534807,
                            EstadoId = 35,
                            Nome = "Ouro Verde"
                        },
                        new
                        {
                            Id = 3534757,
                            EstadoId = 35,
                            Nome = "Ouroeste"
                        },
                        new
                        {
                            Id = 3534906,
                            EstadoId = 35,
                            Nome = "Pacaembu"
                        },
                        new
                        {
                            Id = 3535002,
                            EstadoId = 35,
                            Nome = "Palestina"
                        },
                        new
                        {
                            Id = 3535101,
                            EstadoId = 35,
                            Nome = "Palmares Paulista"
                        },
                        new
                        {
                            Id = 3535200,
                            EstadoId = 35,
                            Nome = "Palmeira dOeste"
                        },
                        new
                        {
                            Id = 3535309,
                            EstadoId = 35,
                            Nome = "Palmital"
                        },
                        new
                        {
                            Id = 3535408,
                            EstadoId = 35,
                            Nome = "Panorama"
                        },
                        new
                        {
                            Id = 3535507,
                            EstadoId = 35,
                            Nome = "Paraguaçu Paulista"
                        },
                        new
                        {
                            Id = 3535606,
                            EstadoId = 35,
                            Nome = "Paraibuna"
                        },
                        new
                        {
                            Id = 3535705,
                            EstadoId = 35,
                            Nome = "Paraíso"
                        },
                        new
                        {
                            Id = 3535804,
                            EstadoId = 35,
                            Nome = "Paranapanema"
                        },
                        new
                        {
                            Id = 3535903,
                            EstadoId = 35,
                            Nome = "Paranapuã"
                        },
                        new
                        {
                            Id = 3536000,
                            EstadoId = 35,
                            Nome = "Parapuã"
                        },
                        new
                        {
                            Id = 3536109,
                            EstadoId = 35,
                            Nome = "Pardinho"
                        },
                        new
                        {
                            Id = 3536208,
                            EstadoId = 35,
                            Nome = "Pariquera-Açu"
                        },
                        new
                        {
                            Id = 3536257,
                            EstadoId = 35,
                            Nome = "Parisi"
                        },
                        new
                        {
                            Id = 3536307,
                            EstadoId = 35,
                            Nome = "Patrocínio Paulista"
                        },
                        new
                        {
                            Id = 3536406,
                            EstadoId = 35,
                            Nome = "Paulicéia"
                        },
                        new
                        {
                            Id = 3536505,
                            EstadoId = 35,
                            Nome = "Paulínia"
                        },
                        new
                        {
                            Id = 3536570,
                            EstadoId = 35,
                            Nome = "Paulistânia"
                        },
                        new
                        {
                            Id = 3536604,
                            EstadoId = 35,
                            Nome = "Paulo de Faria"
                        },
                        new
                        {
                            Id = 3536703,
                            EstadoId = 35,
                            Nome = "Pederneiras"
                        },
                        new
                        {
                            Id = 3536802,
                            EstadoId = 35,
                            Nome = "Pedra Bela"
                        },
                        new
                        {
                            Id = 3536901,
                            EstadoId = 35,
                            Nome = "Pedranópolis"
                        },
                        new
                        {
                            Id = 3537008,
                            EstadoId = 35,
                            Nome = "Pedregulho"
                        },
                        new
                        {
                            Id = 3537107,
                            EstadoId = 35,
                            Nome = "Pedreira"
                        },
                        new
                        {
                            Id = 3537156,
                            EstadoId = 35,
                            Nome = "Pedrinhas Paulista"
                        },
                        new
                        {
                            Id = 3537206,
                            EstadoId = 35,
                            Nome = "Pedro de Toledo"
                        },
                        new
                        {
                            Id = 3537305,
                            EstadoId = 35,
                            Nome = "Penápolis"
                        },
                        new
                        {
                            Id = 3537404,
                            EstadoId = 35,
                            Nome = "Pereira Barreto"
                        },
                        new
                        {
                            Id = 3537503,
                            EstadoId = 35,
                            Nome = "Pereiras"
                        },
                        new
                        {
                            Id = 3537602,
                            EstadoId = 35,
                            Nome = "Peruíbe"
                        },
                        new
                        {
                            Id = 3537701,
                            EstadoId = 35,
                            Nome = "Piacatu"
                        },
                        new
                        {
                            Id = 3537800,
                            EstadoId = 35,
                            Nome = "Piedade"
                        },
                        new
                        {
                            Id = 3537909,
                            EstadoId = 35,
                            Nome = "Pilar do Sul"
                        },
                        new
                        {
                            Id = 3538006,
                            EstadoId = 35,
                            Nome = "Pindamonhangaba"
                        },
                        new
                        {
                            Id = 3538105,
                            EstadoId = 35,
                            Nome = "Pindorama"
                        },
                        new
                        {
                            Id = 3538204,
                            EstadoId = 35,
                            Nome = "Pinhalzinho"
                        },
                        new
                        {
                            Id = 3538303,
                            EstadoId = 35,
                            Nome = "Piquerobi"
                        },
                        new
                        {
                            Id = 3538501,
                            EstadoId = 35,
                            Nome = "Piquete"
                        },
                        new
                        {
                            Id = 3538600,
                            EstadoId = 35,
                            Nome = "Piracaia"
                        },
                        new
                        {
                            Id = 3538709,
                            EstadoId = 35,
                            Nome = "Piracicaba"
                        },
                        new
                        {
                            Id = 3538808,
                            EstadoId = 35,
                            Nome = "Piraju"
                        },
                        new
                        {
                            Id = 3538907,
                            EstadoId = 35,
                            Nome = "Pirajuí"
                        },
                        new
                        {
                            Id = 3539004,
                            EstadoId = 35,
                            Nome = "Pirangi"
                        },
                        new
                        {
                            Id = 3539103,
                            EstadoId = 35,
                            Nome = "Pirapora do Bom Jesus"
                        },
                        new
                        {
                            Id = 3539202,
                            EstadoId = 35,
                            Nome = "Pirapozinho"
                        },
                        new
                        {
                            Id = 3539301,
                            EstadoId = 35,
                            Nome = "Pirassununga"
                        },
                        new
                        {
                            Id = 3539400,
                            EstadoId = 35,
                            Nome = "Piratininga"
                        },
                        new
                        {
                            Id = 3539509,
                            EstadoId = 35,
                            Nome = "Pitangueiras"
                        },
                        new
                        {
                            Id = 3539608,
                            EstadoId = 35,
                            Nome = "Planalto"
                        },
                        new
                        {
                            Id = 3539707,
                            EstadoId = 35,
                            Nome = "Platina"
                        },
                        new
                        {
                            Id = 3539806,
                            EstadoId = 35,
                            Nome = "Poá"
                        },
                        new
                        {
                            Id = 3539905,
                            EstadoId = 35,
                            Nome = "Poloni"
                        },
                        new
                        {
                            Id = 3540002,
                            EstadoId = 35,
                            Nome = "Pompéia"
                        },
                        new
                        {
                            Id = 3540101,
                            EstadoId = 35,
                            Nome = "Pongaí"
                        },
                        new
                        {
                            Id = 3540200,
                            EstadoId = 35,
                            Nome = "Pontal"
                        },
                        new
                        {
                            Id = 3540259,
                            EstadoId = 35,
                            Nome = "Pontalinda"
                        },
                        new
                        {
                            Id = 3540309,
                            EstadoId = 35,
                            Nome = "Pontes Gestal"
                        },
                        new
                        {
                            Id = 3540408,
                            EstadoId = 35,
                            Nome = "Populina"
                        },
                        new
                        {
                            Id = 3540507,
                            EstadoId = 35,
                            Nome = "Porangaba"
                        },
                        new
                        {
                            Id = 3540606,
                            EstadoId = 35,
                            Nome = "Porto Feliz"
                        },
                        new
                        {
                            Id = 3540705,
                            EstadoId = 35,
                            Nome = "Porto Ferreira"
                        },
                        new
                        {
                            Id = 3540754,
                            EstadoId = 35,
                            Nome = "Potim"
                        },
                        new
                        {
                            Id = 3540804,
                            EstadoId = 35,
                            Nome = "Potirendaba"
                        },
                        new
                        {
                            Id = 3540853,
                            EstadoId = 35,
                            Nome = "Pracinha"
                        },
                        new
                        {
                            Id = 3540903,
                            EstadoId = 35,
                            Nome = "Pradópolis"
                        },
                        new
                        {
                            Id = 3541000,
                            EstadoId = 35,
                            Nome = "Praia Grande"
                        },
                        new
                        {
                            Id = 3541059,
                            EstadoId = 35,
                            Nome = "Pratânia"
                        },
                        new
                        {
                            Id = 3541109,
                            EstadoId = 35,
                            Nome = "Presidente Alves"
                        },
                        new
                        {
                            Id = 3541208,
                            EstadoId = 35,
                            Nome = "Presidente Bernardes"
                        },
                        new
                        {
                            Id = 3541307,
                            EstadoId = 35,
                            Nome = "Presidente Epitácio"
                        },
                        new
                        {
                            Id = 3541406,
                            EstadoId = 35,
                            Nome = "Presidente Prudente"
                        },
                        new
                        {
                            Id = 3541505,
                            EstadoId = 35,
                            Nome = "Presidente Venceslau"
                        },
                        new
                        {
                            Id = 3541604,
                            EstadoId = 35,
                            Nome = "Promissão"
                        },
                        new
                        {
                            Id = 3541653,
                            EstadoId = 35,
                            Nome = "Quadra"
                        },
                        new
                        {
                            Id = 3541703,
                            EstadoId = 35,
                            Nome = "Quatá"
                        },
                        new
                        {
                            Id = 3541802,
                            EstadoId = 35,
                            Nome = "Queiroz"
                        },
                        new
                        {
                            Id = 3541901,
                            EstadoId = 35,
                            Nome = "Queluz"
                        },
                        new
                        {
                            Id = 3542008,
                            EstadoId = 35,
                            Nome = "Quintana"
                        },
                        new
                        {
                            Id = 3542107,
                            EstadoId = 35,
                            Nome = "Rafard"
                        },
                        new
                        {
                            Id = 3542206,
                            EstadoId = 35,
                            Nome = "Rancharia"
                        },
                        new
                        {
                            Id = 3542305,
                            EstadoId = 35,
                            Nome = "Redenção da Serra"
                        },
                        new
                        {
                            Id = 3542404,
                            EstadoId = 35,
                            Nome = "Regente Feijó"
                        },
                        new
                        {
                            Id = 3542503,
                            EstadoId = 35,
                            Nome = "Reginópolis"
                        },
                        new
                        {
                            Id = 3542602,
                            EstadoId = 35,
                            Nome = "Registro"
                        },
                        new
                        {
                            Id = 3542701,
                            EstadoId = 35,
                            Nome = "Restinga"
                        },
                        new
                        {
                            Id = 3542800,
                            EstadoId = 35,
                            Nome = "Ribeira"
                        },
                        new
                        {
                            Id = 3542909,
                            EstadoId = 35,
                            Nome = "Ribeirão Bonito"
                        },
                        new
                        {
                            Id = 3543006,
                            EstadoId = 35,
                            Nome = "Ribeirão Branco"
                        },
                        new
                        {
                            Id = 3543105,
                            EstadoId = 35,
                            Nome = "Ribeirão Corrente"
                        },
                        new
                        {
                            Id = 3543204,
                            EstadoId = 35,
                            Nome = "Ribeirão do Sul"
                        },
                        new
                        {
                            Id = 3543238,
                            EstadoId = 35,
                            Nome = "Ribeirão dos Índios"
                        },
                        new
                        {
                            Id = 3543253,
                            EstadoId = 35,
                            Nome = "Ribeirão Grande"
                        },
                        new
                        {
                            Id = 3543303,
                            EstadoId = 35,
                            Nome = "Ribeirão Pires"
                        },
                        new
                        {
                            Id = 3543402,
                            EstadoId = 35,
                            Nome = "Ribeirão Preto"
                        },
                        new
                        {
                            Id = 3543600,
                            EstadoId = 35,
                            Nome = "Rifaina"
                        },
                        new
                        {
                            Id = 3543709,
                            EstadoId = 35,
                            Nome = "Rincão"
                        },
                        new
                        {
                            Id = 3543808,
                            EstadoId = 35,
                            Nome = "Rinópolis"
                        },
                        new
                        {
                            Id = 3543907,
                            EstadoId = 35,
                            Nome = "Rio Claro"
                        },
                        new
                        {
                            Id = 3544004,
                            EstadoId = 35,
                            Nome = "Rio das Pedras"
                        },
                        new
                        {
                            Id = 3544103,
                            EstadoId = 35,
                            Nome = "Rio Grande da Serra"
                        },
                        new
                        {
                            Id = 3544202,
                            EstadoId = 35,
                            Nome = "Riolândia"
                        },
                        new
                        {
                            Id = 3543501,
                            EstadoId = 35,
                            Nome = "Riversul"
                        },
                        new
                        {
                            Id = 3544251,
                            EstadoId = 35,
                            Nome = "Rosana"
                        },
                        new
                        {
                            Id = 3544301,
                            EstadoId = 35,
                            Nome = "Roseira"
                        },
                        new
                        {
                            Id = 3544400,
                            EstadoId = 35,
                            Nome = "Rubiácea"
                        },
                        new
                        {
                            Id = 3544509,
                            EstadoId = 35,
                            Nome = "Rubinéia"
                        },
                        new
                        {
                            Id = 3544608,
                            EstadoId = 35,
                            Nome = "Sabino"
                        },
                        new
                        {
                            Id = 3544707,
                            EstadoId = 35,
                            Nome = "Sagres"
                        },
                        new
                        {
                            Id = 3544806,
                            EstadoId = 35,
                            Nome = "Sales"
                        },
                        new
                        {
                            Id = 3544905,
                            EstadoId = 35,
                            Nome = "Sales Oliveira"
                        },
                        new
                        {
                            Id = 3545001,
                            EstadoId = 35,
                            Nome = "Salesópolis"
                        },
                        new
                        {
                            Id = 3545100,
                            EstadoId = 35,
                            Nome = "Salmourão"
                        },
                        new
                        {
                            Id = 3545159,
                            EstadoId = 35,
                            Nome = "Saltinho"
                        },
                        new
                        {
                            Id = 3545209,
                            EstadoId = 35,
                            Nome = "Salto"
                        },
                        new
                        {
                            Id = 3545308,
                            EstadoId = 35,
                            Nome = "Salto de Pirapora"
                        },
                        new
                        {
                            Id = 3545407,
                            EstadoId = 35,
                            Nome = "Salto Grande"
                        },
                        new
                        {
                            Id = 3545506,
                            EstadoId = 35,
                            Nome = "Sandovalina"
                        },
                        new
                        {
                            Id = 3545605,
                            EstadoId = 35,
                            Nome = "Santa Adélia"
                        },
                        new
                        {
                            Id = 3545704,
                            EstadoId = 35,
                            Nome = "Santa Albertina"
                        },
                        new
                        {
                            Id = 3545803,
                            EstadoId = 35,
                            Nome = "Santa Bárbara dOeste"
                        },
                        new
                        {
                            Id = 3546009,
                            EstadoId = 35,
                            Nome = "Santa Branca"
                        },
                        new
                        {
                            Id = 3546108,
                            EstadoId = 35,
                            Nome = "Santa Clara dOeste"
                        },
                        new
                        {
                            Id = 3546207,
                            EstadoId = 35,
                            Nome = "Santa Cruz da Conceição"
                        },
                        new
                        {
                            Id = 3546256,
                            EstadoId = 35,
                            Nome = "Santa Cruz da Esperança"
                        },
                        new
                        {
                            Id = 3546306,
                            EstadoId = 35,
                            Nome = "Santa Cruz das Palmeiras"
                        },
                        new
                        {
                            Id = 3546405,
                            EstadoId = 35,
                            Nome = "Santa Cruz do Rio Pardo"
                        },
                        new
                        {
                            Id = 3546504,
                            EstadoId = 35,
                            Nome = "Santa Ernestina"
                        },
                        new
                        {
                            Id = 3546603,
                            EstadoId = 35,
                            Nome = "Santa Fé do Sul"
                        },
                        new
                        {
                            Id = 3546702,
                            EstadoId = 35,
                            Nome = "Santa Gertrudes"
                        },
                        new
                        {
                            Id = 3546801,
                            EstadoId = 35,
                            Nome = "Santa Isabel"
                        },
                        new
                        {
                            Id = 3546900,
                            EstadoId = 35,
                            Nome = "Santa Lúcia"
                        },
                        new
                        {
                            Id = 3547007,
                            EstadoId = 35,
                            Nome = "Santa Maria da Serra"
                        },
                        new
                        {
                            Id = 3547106,
                            EstadoId = 35,
                            Nome = "Santa Mercedes"
                        },
                        new
                        {
                            Id = 3547502,
                            EstadoId = 35,
                            Nome = "Santa Rita do Passa Quatro"
                        },
                        new
                        {
                            Id = 3547403,
                            EstadoId = 35,
                            Nome = "Santa Rita dOeste"
                        },
                        new
                        {
                            Id = 3547601,
                            EstadoId = 35,
                            Nome = "Santa Rosa de Viterbo"
                        },
                        new
                        {
                            Id = 3547650,
                            EstadoId = 35,
                            Nome = "Santa Salete"
                        },
                        new
                        {
                            Id = 3547205,
                            EstadoId = 35,
                            Nome = "Santana da Ponte Pensa"
                        },
                        new
                        {
                            Id = 3547304,
                            EstadoId = 35,
                            Nome = "Santana de Parnaíba"
                        },
                        new
                        {
                            Id = 3547700,
                            EstadoId = 35,
                            Nome = "Santo Anastácio"
                        },
                        new
                        {
                            Id = 3547809,
                            EstadoId = 35,
                            Nome = "Santo André"
                        },
                        new
                        {
                            Id = 3547908,
                            EstadoId = 35,
                            Nome = "Santo Antônio da Alegria"
                        },
                        new
                        {
                            Id = 3548005,
                            EstadoId = 35,
                            Nome = "Santo Antônio de Posse"
                        },
                        new
                        {
                            Id = 3548054,
                            EstadoId = 35,
                            Nome = "Santo Antônio do Aracanguá"
                        },
                        new
                        {
                            Id = 3548104,
                            EstadoId = 35,
                            Nome = "Santo Antônio do Jardim"
                        },
                        new
                        {
                            Id = 3548203,
                            EstadoId = 35,
                            Nome = "Santo Antônio do Pinhal"
                        },
                        new
                        {
                            Id = 3548302,
                            EstadoId = 35,
                            Nome = "Santo Expedito"
                        },
                        new
                        {
                            Id = 3548401,
                            EstadoId = 35,
                            Nome = "Santópolis do Aguapeí"
                        },
                        new
                        {
                            Id = 3548500,
                            EstadoId = 35,
                            Nome = "Santos"
                        },
                        new
                        {
                            Id = 3548609,
                            EstadoId = 35,
                            Nome = "São Bento do Sapucaí"
                        },
                        new
                        {
                            Id = 3548708,
                            EstadoId = 35,
                            Nome = "São Bernardo do Campo"
                        },
                        new
                        {
                            Id = 3548807,
                            EstadoId = 35,
                            Nome = "São Caetano do Sul"
                        },
                        new
                        {
                            Id = 3548906,
                            EstadoId = 35,
                            Nome = "São Carlos"
                        },
                        new
                        {
                            Id = 3549003,
                            EstadoId = 35,
                            Nome = "São Francisco"
                        },
                        new
                        {
                            Id = 3549102,
                            EstadoId = 35,
                            Nome = "São João da Boa Vista"
                        },
                        new
                        {
                            Id = 3549201,
                            EstadoId = 35,
                            Nome = "São João das Duas Pontes"
                        },
                        new
                        {
                            Id = 3549250,
                            EstadoId = 35,
                            Nome = "São João de Iracema"
                        },
                        new
                        {
                            Id = 3549300,
                            EstadoId = 35,
                            Nome = "São João do Pau dAlho"
                        },
                        new
                        {
                            Id = 3549409,
                            EstadoId = 35,
                            Nome = "São Joaquim da Barra"
                        },
                        new
                        {
                            Id = 3549508,
                            EstadoId = 35,
                            Nome = "São José da Bela Vista"
                        },
                        new
                        {
                            Id = 3549607,
                            EstadoId = 35,
                            Nome = "São José do Barreiro"
                        },
                        new
                        {
                            Id = 3549706,
                            EstadoId = 35,
                            Nome = "São José do Rio Pardo"
                        },
                        new
                        {
                            Id = 3549805,
                            EstadoId = 35,
                            Nome = "São José do Rio Preto"
                        },
                        new
                        {
                            Id = 3549904,
                            EstadoId = 35,
                            Nome = "São José dos Campos"
                        },
                        new
                        {
                            Id = 3549953,
                            EstadoId = 35,
                            Nome = "São Lourenço da Serra"
                        },
                        new
                        {
                            Id = 3550001,
                            EstadoId = 35,
                            Nome = "São Luís do Paraitinga"
                        },
                        new
                        {
                            Id = 3550100,
                            EstadoId = 35,
                            Nome = "São Manuel"
                        },
                        new
                        {
                            Id = 3550209,
                            EstadoId = 35,
                            Nome = "São Miguel Arcanjo"
                        },
                        new
                        {
                            Id = 3550308,
                            EstadoId = 35,
                            Nome = "São Paulo"
                        },
                        new
                        {
                            Id = 3550407,
                            EstadoId = 35,
                            Nome = "São Pedro"
                        },
                        new
                        {
                            Id = 3550506,
                            EstadoId = 35,
                            Nome = "São Pedro do Turvo"
                        },
                        new
                        {
                            Id = 3550605,
                            EstadoId = 35,
                            Nome = "São Roque"
                        },
                        new
                        {
                            Id = 3550704,
                            EstadoId = 35,
                            Nome = "São Sebastião"
                        },
                        new
                        {
                            Id = 3550803,
                            EstadoId = 35,
                            Nome = "São Sebastião da Grama"
                        },
                        new
                        {
                            Id = 3550902,
                            EstadoId = 35,
                            Nome = "São Simão"
                        },
                        new
                        {
                            Id = 3551009,
                            EstadoId = 35,
                            Nome = "São Vicente"
                        },
                        new
                        {
                            Id = 3551108,
                            EstadoId = 35,
                            Nome = "Sarapuí"
                        },
                        new
                        {
                            Id = 3551207,
                            EstadoId = 35,
                            Nome = "Sarutaiá"
                        },
                        new
                        {
                            Id = 3551306,
                            EstadoId = 35,
                            Nome = "Sebastianópolis do Sul"
                        },
                        new
                        {
                            Id = 3551405,
                            EstadoId = 35,
                            Nome = "Serra Azul"
                        },
                        new
                        {
                            Id = 3551603,
                            EstadoId = 35,
                            Nome = "Serra Negra"
                        },
                        new
                        {
                            Id = 3551504,
                            EstadoId = 35,
                            Nome = "Serrana"
                        },
                        new
                        {
                            Id = 3551702,
                            EstadoId = 35,
                            Nome = "Sertãozinho"
                        },
                        new
                        {
                            Id = 3551801,
                            EstadoId = 35,
                            Nome = "Sete Barras"
                        },
                        new
                        {
                            Id = 3551900,
                            EstadoId = 35,
                            Nome = "Severínia"
                        },
                        new
                        {
                            Id = 3552007,
                            EstadoId = 35,
                            Nome = "Silveiras"
                        },
                        new
                        {
                            Id = 3552106,
                            EstadoId = 35,
                            Nome = "Socorro"
                        },
                        new
                        {
                            Id = 3552205,
                            EstadoId = 35,
                            Nome = "Sorocaba"
                        },
                        new
                        {
                            Id = 3552304,
                            EstadoId = 35,
                            Nome = "Sud Mennucci"
                        },
                        new
                        {
                            Id = 3552403,
                            EstadoId = 35,
                            Nome = "Sumaré"
                        },
                        new
                        {
                            Id = 3552551,
                            EstadoId = 35,
                            Nome = "Suzanápolis"
                        },
                        new
                        {
                            Id = 3552502,
                            EstadoId = 35,
                            Nome = "Suzano"
                        },
                        new
                        {
                            Id = 3552601,
                            EstadoId = 35,
                            Nome = "Tabapuã"
                        },
                        new
                        {
                            Id = 3552700,
                            EstadoId = 35,
                            Nome = "Tabatinga"
                        },
                        new
                        {
                            Id = 3552809,
                            EstadoId = 35,
                            Nome = "Taboão da Serra"
                        },
                        new
                        {
                            Id = 3552908,
                            EstadoId = 35,
                            Nome = "Taciba"
                        },
                        new
                        {
                            Id = 3553005,
                            EstadoId = 35,
                            Nome = "Taguaí"
                        },
                        new
                        {
                            Id = 3553104,
                            EstadoId = 35,
                            Nome = "Taiaçu"
                        },
                        new
                        {
                            Id = 3553203,
                            EstadoId = 35,
                            Nome = "Taiúva"
                        },
                        new
                        {
                            Id = 3553302,
                            EstadoId = 35,
                            Nome = "Tambaú"
                        },
                        new
                        {
                            Id = 3553401,
                            EstadoId = 35,
                            Nome = "Tanabi"
                        },
                        new
                        {
                            Id = 3553500,
                            EstadoId = 35,
                            Nome = "Tapiraí"
                        },
                        new
                        {
                            Id = 3553609,
                            EstadoId = 35,
                            Nome = "Tapiratiba"
                        },
                        new
                        {
                            Id = 3553658,
                            EstadoId = 35,
                            Nome = "Taquaral"
                        },
                        new
                        {
                            Id = 3553708,
                            EstadoId = 35,
                            Nome = "Taquaritinga"
                        },
                        new
                        {
                            Id = 3553807,
                            EstadoId = 35,
                            Nome = "Taquarituba"
                        },
                        new
                        {
                            Id = 3553856,
                            EstadoId = 35,
                            Nome = "Taquarivaí"
                        },
                        new
                        {
                            Id = 3553906,
                            EstadoId = 35,
                            Nome = "Tarabai"
                        },
                        new
                        {
                            Id = 3553955,
                            EstadoId = 35,
                            Nome = "Tarumã"
                        },
                        new
                        {
                            Id = 3554003,
                            EstadoId = 35,
                            Nome = "Tatuí"
                        },
                        new
                        {
                            Id = 3554102,
                            EstadoId = 35,
                            Nome = "Taubaté"
                        },
                        new
                        {
                            Id = 3554201,
                            EstadoId = 35,
                            Nome = "Tejupá"
                        },
                        new
                        {
                            Id = 3554300,
                            EstadoId = 35,
                            Nome = "Teodoro Sampaio"
                        },
                        new
                        {
                            Id = 3554409,
                            EstadoId = 35,
                            Nome = "Terra Roxa"
                        },
                        new
                        {
                            Id = 3554508,
                            EstadoId = 35,
                            Nome = "Tietê"
                        },
                        new
                        {
                            Id = 3554607,
                            EstadoId = 35,
                            Nome = "Timburi"
                        },
                        new
                        {
                            Id = 3554656,
                            EstadoId = 35,
                            Nome = "Torre de Pedra"
                        },
                        new
                        {
                            Id = 3554706,
                            EstadoId = 35,
                            Nome = "Torrinha"
                        },
                        new
                        {
                            Id = 3554755,
                            EstadoId = 35,
                            Nome = "Trabiju"
                        },
                        new
                        {
                            Id = 3554805,
                            EstadoId = 35,
                            Nome = "Tremembé"
                        },
                        new
                        {
                            Id = 3554904,
                            EstadoId = 35,
                            Nome = "Três Fronteiras"
                        },
                        new
                        {
                            Id = 3554953,
                            EstadoId = 35,
                            Nome = "Tuiuti"
                        },
                        new
                        {
                            Id = 3555000,
                            EstadoId = 35,
                            Nome = "Tupã"
                        },
                        new
                        {
                            Id = 3555109,
                            EstadoId = 35,
                            Nome = "Tupi Paulista"
                        },
                        new
                        {
                            Id = 3555208,
                            EstadoId = 35,
                            Nome = "Turiúba"
                        },
                        new
                        {
                            Id = 3555307,
                            EstadoId = 35,
                            Nome = "Turmalina"
                        },
                        new
                        {
                            Id = 3555356,
                            EstadoId = 35,
                            Nome = "Ubarana"
                        },
                        new
                        {
                            Id = 3555406,
                            EstadoId = 35,
                            Nome = "Ubatuba"
                        },
                        new
                        {
                            Id = 3555505,
                            EstadoId = 35,
                            Nome = "Ubirajara"
                        },
                        new
                        {
                            Id = 3555604,
                            EstadoId = 35,
                            Nome = "Uchoa"
                        },
                        new
                        {
                            Id = 3555703,
                            EstadoId = 35,
                            Nome = "União Paulista"
                        },
                        new
                        {
                            Id = 3555802,
                            EstadoId = 35,
                            Nome = "Urânia"
                        },
                        new
                        {
                            Id = 3555901,
                            EstadoId = 35,
                            Nome = "Uru"
                        },
                        new
                        {
                            Id = 3556008,
                            EstadoId = 35,
                            Nome = "Urupês"
                        },
                        new
                        {
                            Id = 3556107,
                            EstadoId = 35,
                            Nome = "Valentim Gentil"
                        },
                        new
                        {
                            Id = 3556206,
                            EstadoId = 35,
                            Nome = "Valinhos"
                        },
                        new
                        {
                            Id = 3556305,
                            EstadoId = 35,
                            Nome = "Valparaíso"
                        },
                        new
                        {
                            Id = 3556354,
                            EstadoId = 35,
                            Nome = "Vargem"
                        },
                        new
                        {
                            Id = 3556404,
                            EstadoId = 35,
                            Nome = "Vargem Grande do Sul"
                        },
                        new
                        {
                            Id = 3556453,
                            EstadoId = 35,
                            Nome = "Vargem Grande Paulista"
                        },
                        new
                        {
                            Id = 3556503,
                            EstadoId = 35,
                            Nome = "Várzea Paulista"
                        },
                        new
                        {
                            Id = 3556602,
                            EstadoId = 35,
                            Nome = "Vera Cruz"
                        },
                        new
                        {
                            Id = 3556701,
                            EstadoId = 35,
                            Nome = "Vinhedo"
                        },
                        new
                        {
                            Id = 3556800,
                            EstadoId = 35,
                            Nome = "Viradouro"
                        },
                        new
                        {
                            Id = 3556909,
                            EstadoId = 35,
                            Nome = "Vista Alegre do Alto"
                        },
                        new
                        {
                            Id = 3556958,
                            EstadoId = 35,
                            Nome = "Vitória Brasil"
                        },
                        new
                        {
                            Id = 3557006,
                            EstadoId = 35,
                            Nome = "Votorantim"
                        },
                        new
                        {
                            Id = 3557105,
                            EstadoId = 35,
                            Nome = "Votuporanga"
                        },
                        new
                        {
                            Id = 3557154,
                            EstadoId = 35,
                            Nome = "Zacarias"
                        },
                        new
                        {
                            Id = 4100103,
                            EstadoId = 41,
                            Nome = "Abatiá"
                        },
                        new
                        {
                            Id = 4100202,
                            EstadoId = 41,
                            Nome = "Adrianópolis"
                        },
                        new
                        {
                            Id = 4100301,
                            EstadoId = 41,
                            Nome = "Agudos do Sul"
                        },
                        new
                        {
                            Id = 4100400,
                            EstadoId = 41,
                            Nome = "Almirante Tamandaré"
                        },
                        new
                        {
                            Id = 4100459,
                            EstadoId = 41,
                            Nome = "Altamira do Paraná"
                        },
                        new
                        {
                            Id = 4128625,
                            EstadoId = 41,
                            Nome = "Alto Paraíso"
                        },
                        new
                        {
                            Id = 4100608,
                            EstadoId = 41,
                            Nome = "Alto Paraná"
                        },
                        new
                        {
                            Id = 4100707,
                            EstadoId = 41,
                            Nome = "Alto Piquiri"
                        },
                        new
                        {
                            Id = 4100509,
                            EstadoId = 41,
                            Nome = "Altônia"
                        },
                        new
                        {
                            Id = 4100806,
                            EstadoId = 41,
                            Nome = "Alvorada do Sul"
                        },
                        new
                        {
                            Id = 4100905,
                            EstadoId = 41,
                            Nome = "Amaporã"
                        },
                        new
                        {
                            Id = 4101002,
                            EstadoId = 41,
                            Nome = "Ampére"
                        },
                        new
                        {
                            Id = 4101051,
                            EstadoId = 41,
                            Nome = "Anahy"
                        },
                        new
                        {
                            Id = 4101101,
                            EstadoId = 41,
                            Nome = "Andirá"
                        },
                        new
                        {
                            Id = 4101150,
                            EstadoId = 41,
                            Nome = "Ângulo"
                        },
                        new
                        {
                            Id = 4101200,
                            EstadoId = 41,
                            Nome = "Antonina"
                        },
                        new
                        {
                            Id = 4101309,
                            EstadoId = 41,
                            Nome = "Antônio Olinto"
                        },
                        new
                        {
                            Id = 4101408,
                            EstadoId = 41,
                            Nome = "Apucarana"
                        },
                        new
                        {
                            Id = 4101507,
                            EstadoId = 41,
                            Nome = "Arapongas"
                        },
                        new
                        {
                            Id = 4101606,
                            EstadoId = 41,
                            Nome = "Arapoti"
                        },
                        new
                        {
                            Id = 4101655,
                            EstadoId = 41,
                            Nome = "Arapuã"
                        },
                        new
                        {
                            Id = 4101705,
                            EstadoId = 41,
                            Nome = "Araruna"
                        },
                        new
                        {
                            Id = 4101804,
                            EstadoId = 41,
                            Nome = "Araucária"
                        },
                        new
                        {
                            Id = 4101853,
                            EstadoId = 41,
                            Nome = "Ariranha do Ivaí"
                        },
                        new
                        {
                            Id = 4101903,
                            EstadoId = 41,
                            Nome = "Assaí"
                        },
                        new
                        {
                            Id = 4102000,
                            EstadoId = 41,
                            Nome = "Assis Chateaubriand"
                        },
                        new
                        {
                            Id = 4102109,
                            EstadoId = 41,
                            Nome = "Astorga"
                        },
                        new
                        {
                            Id = 4102208,
                            EstadoId = 41,
                            Nome = "Atalaia"
                        },
                        new
                        {
                            Id = 4102307,
                            EstadoId = 41,
                            Nome = "Balsa Nova"
                        },
                        new
                        {
                            Id = 4102406,
                            EstadoId = 41,
                            Nome = "Bandeirantes"
                        },
                        new
                        {
                            Id = 4102505,
                            EstadoId = 41,
                            Nome = "Barbosa Ferraz"
                        },
                        new
                        {
                            Id = 4102703,
                            EstadoId = 41,
                            Nome = "Barra do Jacaré"
                        },
                        new
                        {
                            Id = 4102604,
                            EstadoId = 41,
                            Nome = "Barracão"
                        },
                        new
                        {
                            Id = 4102752,
                            EstadoId = 41,
                            Nome = "Bela Vista da Caroba"
                        },
                        new
                        {
                            Id = 4102802,
                            EstadoId = 41,
                            Nome = "Bela Vista do Paraíso"
                        },
                        new
                        {
                            Id = 4102901,
                            EstadoId = 41,
                            Nome = "Bituruna"
                        },
                        new
                        {
                            Id = 4103008,
                            EstadoId = 41,
                            Nome = "Boa Esperança"
                        },
                        new
                        {
                            Id = 4103024,
                            EstadoId = 41,
                            Nome = "Boa Esperança do Iguaçu"
                        },
                        new
                        {
                            Id = 4103040,
                            EstadoId = 41,
                            Nome = "Boa Ventura de São Roque"
                        },
                        new
                        {
                            Id = 4103057,
                            EstadoId = 41,
                            Nome = "Boa Vista da Aparecida"
                        },
                        new
                        {
                            Id = 4103107,
                            EstadoId = 41,
                            Nome = "Bocaiúva do Sul"
                        },
                        new
                        {
                            Id = 4103156,
                            EstadoId = 41,
                            Nome = "Bom Jesus do Sul"
                        },
                        new
                        {
                            Id = 4103206,
                            EstadoId = 41,
                            Nome = "Bom Sucesso"
                        },
                        new
                        {
                            Id = 4103222,
                            EstadoId = 41,
                            Nome = "Bom Sucesso do Sul"
                        },
                        new
                        {
                            Id = 4103305,
                            EstadoId = 41,
                            Nome = "Borrazópolis"
                        },
                        new
                        {
                            Id = 4103354,
                            EstadoId = 41,
                            Nome = "Braganey"
                        },
                        new
                        {
                            Id = 4103370,
                            EstadoId = 41,
                            Nome = "Brasilândia do Sul"
                        },
                        new
                        {
                            Id = 4103404,
                            EstadoId = 41,
                            Nome = "Cafeara"
                        },
                        new
                        {
                            Id = 4103453,
                            EstadoId = 41,
                            Nome = "Cafelândia"
                        },
                        new
                        {
                            Id = 4103479,
                            EstadoId = 41,
                            Nome = "Cafezal do Sul"
                        },
                        new
                        {
                            Id = 4103503,
                            EstadoId = 41,
                            Nome = "Califórnia"
                        },
                        new
                        {
                            Id = 4103602,
                            EstadoId = 41,
                            Nome = "Cambará"
                        },
                        new
                        {
                            Id = 4103701,
                            EstadoId = 41,
                            Nome = "Cambé"
                        },
                        new
                        {
                            Id = 4103800,
                            EstadoId = 41,
                            Nome = "Cambira"
                        },
                        new
                        {
                            Id = 4103909,
                            EstadoId = 41,
                            Nome = "Campina da Lagoa"
                        },
                        new
                        {
                            Id = 4103958,
                            EstadoId = 41,
                            Nome = "Campina do Simão"
                        },
                        new
                        {
                            Id = 4104006,
                            EstadoId = 41,
                            Nome = "Campina Grande do Sul"
                        },
                        new
                        {
                            Id = 4104055,
                            EstadoId = 41,
                            Nome = "Campo Bonito"
                        },
                        new
                        {
                            Id = 4104105,
                            EstadoId = 41,
                            Nome = "Campo do Tenente"
                        },
                        new
                        {
                            Id = 4104204,
                            EstadoId = 41,
                            Nome = "Campo Largo"
                        },
                        new
                        {
                            Id = 4104253,
                            EstadoId = 41,
                            Nome = "Campo Magro"
                        },
                        new
                        {
                            Id = 4104303,
                            EstadoId = 41,
                            Nome = "Campo Mourão"
                        },
                        new
                        {
                            Id = 4104402,
                            EstadoId = 41,
                            Nome = "Cândido de Abreu"
                        },
                        new
                        {
                            Id = 4104428,
                            EstadoId = 41,
                            Nome = "Candói"
                        },
                        new
                        {
                            Id = 4104451,
                            EstadoId = 41,
                            Nome = "Cantagalo"
                        },
                        new
                        {
                            Id = 4104501,
                            EstadoId = 41,
                            Nome = "Capanema"
                        },
                        new
                        {
                            Id = 4104600,
                            EstadoId = 41,
                            Nome = "Capitão Leônidas Marques"
                        },
                        new
                        {
                            Id = 4104659,
                            EstadoId = 41,
                            Nome = "Carambeí"
                        },
                        new
                        {
                            Id = 4104709,
                            EstadoId = 41,
                            Nome = "Carlópolis"
                        },
                        new
                        {
                            Id = 4104808,
                            EstadoId = 41,
                            Nome = "Cascavel"
                        },
                        new
                        {
                            Id = 4104907,
                            EstadoId = 41,
                            Nome = "Castro"
                        },
                        new
                        {
                            Id = 4105003,
                            EstadoId = 41,
                            Nome = "Catanduvas"
                        },
                        new
                        {
                            Id = 4105102,
                            EstadoId = 41,
                            Nome = "Centenário do Sul"
                        },
                        new
                        {
                            Id = 4105201,
                            EstadoId = 41,
                            Nome = "Cerro Azul"
                        },
                        new
                        {
                            Id = 4105300,
                            EstadoId = 41,
                            Nome = "Céu Azul"
                        },
                        new
                        {
                            Id = 4105409,
                            EstadoId = 41,
                            Nome = "Chopinzinho"
                        },
                        new
                        {
                            Id = 4105508,
                            EstadoId = 41,
                            Nome = "Cianorte"
                        },
                        new
                        {
                            Id = 4105607,
                            EstadoId = 41,
                            Nome = "Cidade Gaúcha"
                        },
                        new
                        {
                            Id = 4105706,
                            EstadoId = 41,
                            Nome = "Clevelândia"
                        },
                        new
                        {
                            Id = 4105805,
                            EstadoId = 41,
                            Nome = "Colombo"
                        },
                        new
                        {
                            Id = 4105904,
                            EstadoId = 41,
                            Nome = "Colorado"
                        },
                        new
                        {
                            Id = 4106001,
                            EstadoId = 41,
                            Nome = "Congonhinhas"
                        },
                        new
                        {
                            Id = 4106100,
                            EstadoId = 41,
                            Nome = "Conselheiro Mairinck"
                        },
                        new
                        {
                            Id = 4106209,
                            EstadoId = 41,
                            Nome = "Contenda"
                        },
                        new
                        {
                            Id = 4106308,
                            EstadoId = 41,
                            Nome = "Corbélia"
                        },
                        new
                        {
                            Id = 4106407,
                            EstadoId = 41,
                            Nome = "Cornélio Procópio"
                        },
                        new
                        {
                            Id = 4106456,
                            EstadoId = 41,
                            Nome = "Coronel Domingos Soares"
                        },
                        new
                        {
                            Id = 4106506,
                            EstadoId = 41,
                            Nome = "Coronel Vivida"
                        },
                        new
                        {
                            Id = 4106555,
                            EstadoId = 41,
                            Nome = "Corumbataí do Sul"
                        },
                        new
                        {
                            Id = 4106803,
                            EstadoId = 41,
                            Nome = "Cruz Machado"
                        },
                        new
                        {
                            Id = 4106571,
                            EstadoId = 41,
                            Nome = "Cruzeiro do Iguaçu"
                        },
                        new
                        {
                            Id = 4106605,
                            EstadoId = 41,
                            Nome = "Cruzeiro do Oeste"
                        },
                        new
                        {
                            Id = 4106704,
                            EstadoId = 41,
                            Nome = "Cruzeiro do Sul"
                        },
                        new
                        {
                            Id = 4106852,
                            EstadoId = 41,
                            Nome = "Cruzmaltina"
                        },
                        new
                        {
                            Id = 4106902,
                            EstadoId = 41,
                            Nome = "Curitiba"
                        },
                        new
                        {
                            Id = 4107009,
                            EstadoId = 41,
                            Nome = "Curiúva"
                        },
                        new
                        {
                            Id = 4107108,
                            EstadoId = 41,
                            Nome = "Diamante do Norte"
                        },
                        new
                        {
                            Id = 4107124,
                            EstadoId = 41,
                            Nome = "Diamante do Sul"
                        },
                        new
                        {
                            Id = 4107157,
                            EstadoId = 41,
                            Nome = "Diamante DOeste"
                        },
                        new
                        {
                            Id = 4107207,
                            EstadoId = 41,
                            Nome = "Dois Vizinhos"
                        },
                        new
                        {
                            Id = 4107256,
                            EstadoId = 41,
                            Nome = "Douradina"
                        },
                        new
                        {
                            Id = 4107306,
                            EstadoId = 41,
                            Nome = "Doutor Camargo"
                        },
                        new
                        {
                            Id = 4128633,
                            EstadoId = 41,
                            Nome = "Doutor Ulysses"
                        },
                        new
                        {
                            Id = 4107405,
                            EstadoId = 41,
                            Nome = "Enéas Marques"
                        },
                        new
                        {
                            Id = 4107504,
                            EstadoId = 41,
                            Nome = "Engenheiro Beltrão"
                        },
                        new
                        {
                            Id = 4107538,
                            EstadoId = 41,
                            Nome = "Entre Rios do Oeste"
                        },
                        new
                        {
                            Id = 4107520,
                            EstadoId = 41,
                            Nome = "Esperança Nova"
                        },
                        new
                        {
                            Id = 4107546,
                            EstadoId = 41,
                            Nome = "Espigão Alto do Iguaçu"
                        },
                        new
                        {
                            Id = 4107553,
                            EstadoId = 41,
                            Nome = "Farol"
                        },
                        new
                        {
                            Id = 4107603,
                            EstadoId = 41,
                            Nome = "Faxinal"
                        },
                        new
                        {
                            Id = 4107652,
                            EstadoId = 41,
                            Nome = "Fazenda Rio Grande"
                        },
                        new
                        {
                            Id = 4107702,
                            EstadoId = 41,
                            Nome = "Fênix"
                        },
                        new
                        {
                            Id = 4107736,
                            EstadoId = 41,
                            Nome = "Fernandes Pinheiro"
                        },
                        new
                        {
                            Id = 4107751,
                            EstadoId = 41,
                            Nome = "Figueira"
                        },
                        new
                        {
                            Id = 4107850,
                            EstadoId = 41,
                            Nome = "Flor da Serra do Sul"
                        },
                        new
                        {
                            Id = 4107801,
                            EstadoId = 41,
                            Nome = "Floraí"
                        },
                        new
                        {
                            Id = 4107900,
                            EstadoId = 41,
                            Nome = "Floresta"
                        },
                        new
                        {
                            Id = 4108007,
                            EstadoId = 41,
                            Nome = "Florestópolis"
                        },
                        new
                        {
                            Id = 4108106,
                            EstadoId = 41,
                            Nome = "Flórida"
                        },
                        new
                        {
                            Id = 4108205,
                            EstadoId = 41,
                            Nome = "Formosa do Oeste"
                        },
                        new
                        {
                            Id = 4108304,
                            EstadoId = 41,
                            Nome = "Foz do Iguaçu"
                        },
                        new
                        {
                            Id = 4108452,
                            EstadoId = 41,
                            Nome = "Foz do Jordão"
                        },
                        new
                        {
                            Id = 4108320,
                            EstadoId = 41,
                            Nome = "Francisco Alves"
                        },
                        new
                        {
                            Id = 4108403,
                            EstadoId = 41,
                            Nome = "Francisco Beltrão"
                        },
                        new
                        {
                            Id = 4108502,
                            EstadoId = 41,
                            Nome = "General Carneiro"
                        },
                        new
                        {
                            Id = 4108551,
                            EstadoId = 41,
                            Nome = "Godoy Moreira"
                        },
                        new
                        {
                            Id = 4108601,
                            EstadoId = 41,
                            Nome = "Goioerê"
                        },
                        new
                        {
                            Id = 4108650,
                            EstadoId = 41,
                            Nome = "Goioxim"
                        },
                        new
                        {
                            Id = 4108700,
                            EstadoId = 41,
                            Nome = "Grandes Rios"
                        },
                        new
                        {
                            Id = 4108809,
                            EstadoId = 41,
                            Nome = "Guaíra"
                        },
                        new
                        {
                            Id = 4108908,
                            EstadoId = 41,
                            Nome = "Guairaçá"
                        },
                        new
                        {
                            Id = 4108957,
                            EstadoId = 41,
                            Nome = "Guamiranga"
                        },
                        new
                        {
                            Id = 4109005,
                            EstadoId = 41,
                            Nome = "Guapirama"
                        },
                        new
                        {
                            Id = 4109104,
                            EstadoId = 41,
                            Nome = "Guaporema"
                        },
                        new
                        {
                            Id = 4109203,
                            EstadoId = 41,
                            Nome = "Guaraci"
                        },
                        new
                        {
                            Id = 4109302,
                            EstadoId = 41,
                            Nome = "Guaraniaçu"
                        },
                        new
                        {
                            Id = 4109401,
                            EstadoId = 41,
                            Nome = "Guarapuava"
                        },
                        new
                        {
                            Id = 4109500,
                            EstadoId = 41,
                            Nome = "Guaraqueçaba"
                        },
                        new
                        {
                            Id = 4109609,
                            EstadoId = 41,
                            Nome = "Guaratuba"
                        },
                        new
                        {
                            Id = 4109658,
                            EstadoId = 41,
                            Nome = "Honório Serpa"
                        },
                        new
                        {
                            Id = 4109708,
                            EstadoId = 41,
                            Nome = "Ibaiti"
                        },
                        new
                        {
                            Id = 4109757,
                            EstadoId = 41,
                            Nome = "Ibema"
                        },
                        new
                        {
                            Id = 4109807,
                            EstadoId = 41,
                            Nome = "Ibiporã"
                        },
                        new
                        {
                            Id = 4109906,
                            EstadoId = 41,
                            Nome = "Icaraíma"
                        },
                        new
                        {
                            Id = 4110003,
                            EstadoId = 41,
                            Nome = "Iguaraçu"
                        },
                        new
                        {
                            Id = 4110052,
                            EstadoId = 41,
                            Nome = "Iguatu"
                        },
                        new
                        {
                            Id = 4110078,
                            EstadoId = 41,
                            Nome = "Imbaú"
                        },
                        new
                        {
                            Id = 4110102,
                            EstadoId = 41,
                            Nome = "Imbituva"
                        },
                        new
                        {
                            Id = 4110201,
                            EstadoId = 41,
                            Nome = "Inácio Martins"
                        },
                        new
                        {
                            Id = 4110300,
                            EstadoId = 41,
                            Nome = "Inajá"
                        },
                        new
                        {
                            Id = 4110409,
                            EstadoId = 41,
                            Nome = "Indianópolis"
                        },
                        new
                        {
                            Id = 4110508,
                            EstadoId = 41,
                            Nome = "Ipiranga"
                        },
                        new
                        {
                            Id = 4110607,
                            EstadoId = 41,
                            Nome = "Iporã"
                        },
                        new
                        {
                            Id = 4110656,
                            EstadoId = 41,
                            Nome = "Iracema do Oeste"
                        },
                        new
                        {
                            Id = 4110706,
                            EstadoId = 41,
                            Nome = "Irati"
                        },
                        new
                        {
                            Id = 4110805,
                            EstadoId = 41,
                            Nome = "Iretama"
                        },
                        new
                        {
                            Id = 4110904,
                            EstadoId = 41,
                            Nome = "Itaguajé"
                        },
                        new
                        {
                            Id = 4110953,
                            EstadoId = 41,
                            Nome = "Itaipulândia"
                        },
                        new
                        {
                            Id = 4111001,
                            EstadoId = 41,
                            Nome = "Itambaracá"
                        },
                        new
                        {
                            Id = 4111100,
                            EstadoId = 41,
                            Nome = "Itambé"
                        },
                        new
                        {
                            Id = 4111209,
                            EstadoId = 41,
                            Nome = "Itapejara dOeste"
                        },
                        new
                        {
                            Id = 4111258,
                            EstadoId = 41,
                            Nome = "Itaperuçu"
                        },
                        new
                        {
                            Id = 4111308,
                            EstadoId = 41,
                            Nome = "Itaúna do Sul"
                        },
                        new
                        {
                            Id = 4111407,
                            EstadoId = 41,
                            Nome = "Ivaí"
                        },
                        new
                        {
                            Id = 4111506,
                            EstadoId = 41,
                            Nome = "Ivaiporã"
                        },
                        new
                        {
                            Id = 4111555,
                            EstadoId = 41,
                            Nome = "Ivaté"
                        },
                        new
                        {
                            Id = 4111605,
                            EstadoId = 41,
                            Nome = "Ivatuba"
                        },
                        new
                        {
                            Id = 4111704,
                            EstadoId = 41,
                            Nome = "Jaboti"
                        },
                        new
                        {
                            Id = 4111803,
                            EstadoId = 41,
                            Nome = "Jacarezinho"
                        },
                        new
                        {
                            Id = 4111902,
                            EstadoId = 41,
                            Nome = "Jaguapitã"
                        },
                        new
                        {
                            Id = 4112009,
                            EstadoId = 41,
                            Nome = "Jaguariaíva"
                        },
                        new
                        {
                            Id = 4112108,
                            EstadoId = 41,
                            Nome = "Jandaia do Sul"
                        },
                        new
                        {
                            Id = 4112207,
                            EstadoId = 41,
                            Nome = "Janiópolis"
                        },
                        new
                        {
                            Id = 4112306,
                            EstadoId = 41,
                            Nome = "Japira"
                        },
                        new
                        {
                            Id = 4112405,
                            EstadoId = 41,
                            Nome = "Japurá"
                        },
                        new
                        {
                            Id = 4112504,
                            EstadoId = 41,
                            Nome = "Jardim Alegre"
                        },
                        new
                        {
                            Id = 4112603,
                            EstadoId = 41,
                            Nome = "Jardim Olinda"
                        },
                        new
                        {
                            Id = 4112702,
                            EstadoId = 41,
                            Nome = "Jataizinho"
                        },
                        new
                        {
                            Id = 4112751,
                            EstadoId = 41,
                            Nome = "Jesuítas"
                        },
                        new
                        {
                            Id = 4112801,
                            EstadoId = 41,
                            Nome = "Joaquim Távora"
                        },
                        new
                        {
                            Id = 4112900,
                            EstadoId = 41,
                            Nome = "Jundiaí do Sul"
                        },
                        new
                        {
                            Id = 4112959,
                            EstadoId = 41,
                            Nome = "Juranda"
                        },
                        new
                        {
                            Id = 4113007,
                            EstadoId = 41,
                            Nome = "Jussara"
                        },
                        new
                        {
                            Id = 4113106,
                            EstadoId = 41,
                            Nome = "Kaloré"
                        },
                        new
                        {
                            Id = 4113205,
                            EstadoId = 41,
                            Nome = "Lapa"
                        },
                        new
                        {
                            Id = 4113254,
                            EstadoId = 41,
                            Nome = "Laranjal"
                        },
                        new
                        {
                            Id = 4113304,
                            EstadoId = 41,
                            Nome = "Laranjeiras do Sul"
                        },
                        new
                        {
                            Id = 4113403,
                            EstadoId = 41,
                            Nome = "Leópolis"
                        },
                        new
                        {
                            Id = 4113429,
                            EstadoId = 41,
                            Nome = "Lidianópolis"
                        },
                        new
                        {
                            Id = 4113452,
                            EstadoId = 41,
                            Nome = "Lindoeste"
                        },
                        new
                        {
                            Id = 4113502,
                            EstadoId = 41,
                            Nome = "Loanda"
                        },
                        new
                        {
                            Id = 4113601,
                            EstadoId = 41,
                            Nome = "Lobato"
                        },
                        new
                        {
                            Id = 4113700,
                            EstadoId = 41,
                            Nome = "Londrina"
                        },
                        new
                        {
                            Id = 4113734,
                            EstadoId = 41,
                            Nome = "Luiziana"
                        },
                        new
                        {
                            Id = 4113759,
                            EstadoId = 41,
                            Nome = "Lunardelli"
                        },
                        new
                        {
                            Id = 4113809,
                            EstadoId = 41,
                            Nome = "Lupionópolis"
                        },
                        new
                        {
                            Id = 4113908,
                            EstadoId = 41,
                            Nome = "Mallet"
                        },
                        new
                        {
                            Id = 4114005,
                            EstadoId = 41,
                            Nome = "Mamborê"
                        },
                        new
                        {
                            Id = 4114104,
                            EstadoId = 41,
                            Nome = "Mandaguaçu"
                        },
                        new
                        {
                            Id = 4114203,
                            EstadoId = 41,
                            Nome = "Mandaguari"
                        },
                        new
                        {
                            Id = 4114302,
                            EstadoId = 41,
                            Nome = "Mandirituba"
                        },
                        new
                        {
                            Id = 4114351,
                            EstadoId = 41,
                            Nome = "Manfrinópolis"
                        },
                        new
                        {
                            Id = 4114401,
                            EstadoId = 41,
                            Nome = "Mangueirinha"
                        },
                        new
                        {
                            Id = 4114500,
                            EstadoId = 41,
                            Nome = "Manoel Ribas"
                        },
                        new
                        {
                            Id = 4114609,
                            EstadoId = 41,
                            Nome = "Marechal Cândido Rondon"
                        },
                        new
                        {
                            Id = 4114708,
                            EstadoId = 41,
                            Nome = "Maria Helena"
                        },
                        new
                        {
                            Id = 4114807,
                            EstadoId = 41,
                            Nome = "Marialva"
                        },
                        new
                        {
                            Id = 4114906,
                            EstadoId = 41,
                            Nome = "Marilândia do Sul"
                        },
                        new
                        {
                            Id = 4115002,
                            EstadoId = 41,
                            Nome = "Marilena"
                        },
                        new
                        {
                            Id = 4115101,
                            EstadoId = 41,
                            Nome = "Mariluz"
                        },
                        new
                        {
                            Id = 4115200,
                            EstadoId = 41,
                            Nome = "Maringá"
                        },
                        new
                        {
                            Id = 4115309,
                            EstadoId = 41,
                            Nome = "Mariópolis"
                        },
                        new
                        {
                            Id = 4115358,
                            EstadoId = 41,
                            Nome = "Maripá"
                        },
                        new
                        {
                            Id = 4115408,
                            EstadoId = 41,
                            Nome = "Marmeleiro"
                        },
                        new
                        {
                            Id = 4115457,
                            EstadoId = 41,
                            Nome = "Marquinho"
                        },
                        new
                        {
                            Id = 4115507,
                            EstadoId = 41,
                            Nome = "Marumbi"
                        },
                        new
                        {
                            Id = 4115606,
                            EstadoId = 41,
                            Nome = "Matelândia"
                        },
                        new
                        {
                            Id = 4115705,
                            EstadoId = 41,
                            Nome = "Matinhos"
                        },
                        new
                        {
                            Id = 4115739,
                            EstadoId = 41,
                            Nome = "Mato Rico"
                        },
                        new
                        {
                            Id = 4115754,
                            EstadoId = 41,
                            Nome = "Mauá da Serra"
                        },
                        new
                        {
                            Id = 4115804,
                            EstadoId = 41,
                            Nome = "Medianeira"
                        },
                        new
                        {
                            Id = 4115853,
                            EstadoId = 41,
                            Nome = "Mercedes"
                        },
                        new
                        {
                            Id = 4115903,
                            EstadoId = 41,
                            Nome = "Mirador"
                        },
                        new
                        {
                            Id = 4116000,
                            EstadoId = 41,
                            Nome = "Miraselva"
                        },
                        new
                        {
                            Id = 4116059,
                            EstadoId = 41,
                            Nome = "Missal"
                        },
                        new
                        {
                            Id = 4116109,
                            EstadoId = 41,
                            Nome = "Moreira Sales"
                        },
                        new
                        {
                            Id = 4116208,
                            EstadoId = 41,
                            Nome = "Morretes"
                        },
                        new
                        {
                            Id = 4116307,
                            EstadoId = 41,
                            Nome = "Munhoz de Melo"
                        },
                        new
                        {
                            Id = 4116406,
                            EstadoId = 41,
                            Nome = "Nossa Senhora das Graças"
                        },
                        new
                        {
                            Id = 4116505,
                            EstadoId = 41,
                            Nome = "Nova Aliança do Ivaí"
                        },
                        new
                        {
                            Id = 4116604,
                            EstadoId = 41,
                            Nome = "Nova América da Colina"
                        },
                        new
                        {
                            Id = 4116703,
                            EstadoId = 41,
                            Nome = "Nova Aurora"
                        },
                        new
                        {
                            Id = 4116802,
                            EstadoId = 41,
                            Nome = "Nova Cantu"
                        },
                        new
                        {
                            Id = 4116901,
                            EstadoId = 41,
                            Nome = "Nova Esperança"
                        },
                        new
                        {
                            Id = 4116950,
                            EstadoId = 41,
                            Nome = "Nova Esperança do Sudoeste"
                        },
                        new
                        {
                            Id = 4117008,
                            EstadoId = 41,
                            Nome = "Nova Fátima"
                        },
                        new
                        {
                            Id = 4117057,
                            EstadoId = 41,
                            Nome = "Nova Laranjeiras"
                        },
                        new
                        {
                            Id = 4117107,
                            EstadoId = 41,
                            Nome = "Nova Londrina"
                        },
                        new
                        {
                            Id = 4117206,
                            EstadoId = 41,
                            Nome = "Nova Olímpia"
                        },
                        new
                        {
                            Id = 4117255,
                            EstadoId = 41,
                            Nome = "Nova Prata do Iguaçu"
                        },
                        new
                        {
                            Id = 4117214,
                            EstadoId = 41,
                            Nome = "Nova Santa Bárbara"
                        },
                        new
                        {
                            Id = 4117222,
                            EstadoId = 41,
                            Nome = "Nova Santa Rosa"
                        },
                        new
                        {
                            Id = 4117271,
                            EstadoId = 41,
                            Nome = "Nova Tebas"
                        },
                        new
                        {
                            Id = 4117297,
                            EstadoId = 41,
                            Nome = "Novo Itacolomi"
                        },
                        new
                        {
                            Id = 4117305,
                            EstadoId = 41,
                            Nome = "Ortigueira"
                        },
                        new
                        {
                            Id = 4117404,
                            EstadoId = 41,
                            Nome = "Ourizona"
                        },
                        new
                        {
                            Id = 4117453,
                            EstadoId = 41,
                            Nome = "Ouro Verde do Oeste"
                        },
                        new
                        {
                            Id = 4117503,
                            EstadoId = 41,
                            Nome = "Paiçandu"
                        },
                        new
                        {
                            Id = 4117602,
                            EstadoId = 41,
                            Nome = "Palmas"
                        },
                        new
                        {
                            Id = 4117701,
                            EstadoId = 41,
                            Nome = "Palmeira"
                        },
                        new
                        {
                            Id = 4117800,
                            EstadoId = 41,
                            Nome = "Palmital"
                        },
                        new
                        {
                            Id = 4117909,
                            EstadoId = 41,
                            Nome = "Palotina"
                        },
                        new
                        {
                            Id = 4118006,
                            EstadoId = 41,
                            Nome = "Paraíso do Norte"
                        },
                        new
                        {
                            Id = 4118105,
                            EstadoId = 41,
                            Nome = "Paranacity"
                        },
                        new
                        {
                            Id = 4118204,
                            EstadoId = 41,
                            Nome = "Paranaguá"
                        },
                        new
                        {
                            Id = 4118303,
                            EstadoId = 41,
                            Nome = "Paranapoema"
                        },
                        new
                        {
                            Id = 4118402,
                            EstadoId = 41,
                            Nome = "Paranavaí"
                        },
                        new
                        {
                            Id = 4118451,
                            EstadoId = 41,
                            Nome = "Pato Bragado"
                        },
                        new
                        {
                            Id = 4118501,
                            EstadoId = 41,
                            Nome = "Pato Branco"
                        },
                        new
                        {
                            Id = 4118600,
                            EstadoId = 41,
                            Nome = "Paula Freitas"
                        },
                        new
                        {
                            Id = 4118709,
                            EstadoId = 41,
                            Nome = "Paulo Frontin"
                        },
                        new
                        {
                            Id = 4118808,
                            EstadoId = 41,
                            Nome = "Peabiru"
                        },
                        new
                        {
                            Id = 4118857,
                            EstadoId = 41,
                            Nome = "Perobal"
                        },
                        new
                        {
                            Id = 4118907,
                            EstadoId = 41,
                            Nome = "Pérola"
                        },
                        new
                        {
                            Id = 4119004,
                            EstadoId = 41,
                            Nome = "Pérola dOeste"
                        },
                        new
                        {
                            Id = 4119103,
                            EstadoId = 41,
                            Nome = "Piên"
                        },
                        new
                        {
                            Id = 4119152,
                            EstadoId = 41,
                            Nome = "Pinhais"
                        },
                        new
                        {
                            Id = 4119251,
                            EstadoId = 41,
                            Nome = "Pinhal de São Bento"
                        },
                        new
                        {
                            Id = 4119202,
                            EstadoId = 41,
                            Nome = "Pinhalão"
                        },
                        new
                        {
                            Id = 4119301,
                            EstadoId = 41,
                            Nome = "Pinhão"
                        },
                        new
                        {
                            Id = 4119400,
                            EstadoId = 41,
                            Nome = "Piraí do Sul"
                        },
                        new
                        {
                            Id = 4119509,
                            EstadoId = 41,
                            Nome = "Piraquara"
                        },
                        new
                        {
                            Id = 4119608,
                            EstadoId = 41,
                            Nome = "Pitanga"
                        },
                        new
                        {
                            Id = 4119657,
                            EstadoId = 41,
                            Nome = "Pitangueiras"
                        },
                        new
                        {
                            Id = 4119707,
                            EstadoId = 41,
                            Nome = "Planaltina do Paraná"
                        },
                        new
                        {
                            Id = 4119806,
                            EstadoId = 41,
                            Nome = "Planalto"
                        },
                        new
                        {
                            Id = 4119905,
                            EstadoId = 41,
                            Nome = "Ponta Grossa"
                        },
                        new
                        {
                            Id = 4119954,
                            EstadoId = 41,
                            Nome = "Pontal do Paraná"
                        },
                        new
                        {
                            Id = 4120002,
                            EstadoId = 41,
                            Nome = "Porecatu"
                        },
                        new
                        {
                            Id = 4120101,
                            EstadoId = 41,
                            Nome = "Porto Amazonas"
                        },
                        new
                        {
                            Id = 4120150,
                            EstadoId = 41,
                            Nome = "Porto Barreiro"
                        },
                        new
                        {
                            Id = 4120200,
                            EstadoId = 41,
                            Nome = "Porto Rico"
                        },
                        new
                        {
                            Id = 4120309,
                            EstadoId = 41,
                            Nome = "Porto Vitória"
                        },
                        new
                        {
                            Id = 4120333,
                            EstadoId = 41,
                            Nome = "Prado Ferreira"
                        },
                        new
                        {
                            Id = 4120358,
                            EstadoId = 41,
                            Nome = "Pranchita"
                        },
                        new
                        {
                            Id = 4120408,
                            EstadoId = 41,
                            Nome = "Presidente Castelo Branco"
                        },
                        new
                        {
                            Id = 4120507,
                            EstadoId = 41,
                            Nome = "Primeiro de Maio"
                        },
                        new
                        {
                            Id = 4120606,
                            EstadoId = 41,
                            Nome = "Prudentópolis"
                        },
                        new
                        {
                            Id = 4120655,
                            EstadoId = 41,
                            Nome = "Quarto Centenário"
                        },
                        new
                        {
                            Id = 4120705,
                            EstadoId = 41,
                            Nome = "Quatiguá"
                        },
                        new
                        {
                            Id = 4120804,
                            EstadoId = 41,
                            Nome = "Quatro Barras"
                        },
                        new
                        {
                            Id = 4120853,
                            EstadoId = 41,
                            Nome = "Quatro Pontes"
                        },
                        new
                        {
                            Id = 4120903,
                            EstadoId = 41,
                            Nome = "Quedas do Iguaçu"
                        },
                        new
                        {
                            Id = 4121000,
                            EstadoId = 41,
                            Nome = "Querência do Norte"
                        },
                        new
                        {
                            Id = 4121109,
                            EstadoId = 41,
                            Nome = "Quinta do Sol"
                        },
                        new
                        {
                            Id = 4121208,
                            EstadoId = 41,
                            Nome = "Quitandinha"
                        },
                        new
                        {
                            Id = 4121257,
                            EstadoId = 41,
                            Nome = "Ramilândia"
                        },
                        new
                        {
                            Id = 4121307,
                            EstadoId = 41,
                            Nome = "Rancho Alegre"
                        },
                        new
                        {
                            Id = 4121356,
                            EstadoId = 41,
                            Nome = "Rancho Alegre DOeste"
                        },
                        new
                        {
                            Id = 4121406,
                            EstadoId = 41,
                            Nome = "Realeza"
                        },
                        new
                        {
                            Id = 4121505,
                            EstadoId = 41,
                            Nome = "Rebouças"
                        },
                        new
                        {
                            Id = 4121604,
                            EstadoId = 41,
                            Nome = "Renascença"
                        },
                        new
                        {
                            Id = 4121703,
                            EstadoId = 41,
                            Nome = "Reserva"
                        },
                        new
                        {
                            Id = 4121752,
                            EstadoId = 41,
                            Nome = "Reserva do Iguaçu"
                        },
                        new
                        {
                            Id = 4121802,
                            EstadoId = 41,
                            Nome = "Ribeirão Claro"
                        },
                        new
                        {
                            Id = 4121901,
                            EstadoId = 41,
                            Nome = "Ribeirão do Pinhal"
                        },
                        new
                        {
                            Id = 4122008,
                            EstadoId = 41,
                            Nome = "Rio Azul"
                        },
                        new
                        {
                            Id = 4122107,
                            EstadoId = 41,
                            Nome = "Rio Bom"
                        },
                        new
                        {
                            Id = 4122156,
                            EstadoId = 41,
                            Nome = "Rio Bonito do Iguaçu"
                        },
                        new
                        {
                            Id = 4122172,
                            EstadoId = 41,
                            Nome = "Rio Branco do Ivaí"
                        },
                        new
                        {
                            Id = 4122206,
                            EstadoId = 41,
                            Nome = "Rio Branco do Sul"
                        },
                        new
                        {
                            Id = 4122305,
                            EstadoId = 41,
                            Nome = "Rio Negro"
                        },
                        new
                        {
                            Id = 4122404,
                            EstadoId = 41,
                            Nome = "Rolândia"
                        },
                        new
                        {
                            Id = 4122503,
                            EstadoId = 41,
                            Nome = "Roncador"
                        },
                        new
                        {
                            Id = 4122602,
                            EstadoId = 41,
                            Nome = "Rondon"
                        },
                        new
                        {
                            Id = 4122651,
                            EstadoId = 41,
                            Nome = "Rosário do Ivaí"
                        },
                        new
                        {
                            Id = 4122701,
                            EstadoId = 41,
                            Nome = "Sabáudia"
                        },
                        new
                        {
                            Id = 4122800,
                            EstadoId = 41,
                            Nome = "Salgado Filho"
                        },
                        new
                        {
                            Id = 4122909,
                            EstadoId = 41,
                            Nome = "Salto do Itararé"
                        },
                        new
                        {
                            Id = 4123006,
                            EstadoId = 41,
                            Nome = "Salto do Lontra"
                        },
                        new
                        {
                            Id = 4123105,
                            EstadoId = 41,
                            Nome = "Santa Amélia"
                        },
                        new
                        {
                            Id = 4123204,
                            EstadoId = 41,
                            Nome = "Santa Cecília do Pavão"
                        },
                        new
                        {
                            Id = 4123303,
                            EstadoId = 41,
                            Nome = "Santa Cruz de Monte Castelo"
                        },
                        new
                        {
                            Id = 4123402,
                            EstadoId = 41,
                            Nome = "Santa Fé"
                        },
                        new
                        {
                            Id = 4123501,
                            EstadoId = 41,
                            Nome = "Santa Helena"
                        },
                        new
                        {
                            Id = 4123600,
                            EstadoId = 41,
                            Nome = "Santa Inês"
                        },
                        new
                        {
                            Id = 4123709,
                            EstadoId = 41,
                            Nome = "Santa Isabel do Ivaí"
                        },
                        new
                        {
                            Id = 4123808,
                            EstadoId = 41,
                            Nome = "Santa Izabel do Oeste"
                        },
                        new
                        {
                            Id = 4123824,
                            EstadoId = 41,
                            Nome = "Santa Lúcia"
                        },
                        new
                        {
                            Id = 4123857,
                            EstadoId = 41,
                            Nome = "Santa Maria do Oeste"
                        },
                        new
                        {
                            Id = 4123907,
                            EstadoId = 41,
                            Nome = "Santa Mariana"
                        },
                        new
                        {
                            Id = 4123956,
                            EstadoId = 41,
                            Nome = "Santa Mônica"
                        },
                        new
                        {
                            Id = 4124020,
                            EstadoId = 41,
                            Nome = "Santa Tereza do Oeste"
                        },
                        new
                        {
                            Id = 4124053,
                            EstadoId = 41,
                            Nome = "Santa Terezinha de Itaipu"
                        },
                        new
                        {
                            Id = 4124004,
                            EstadoId = 41,
                            Nome = "Santana do Itararé"
                        },
                        new
                        {
                            Id = 4124103,
                            EstadoId = 41,
                            Nome = "Santo Antônio da Platina"
                        },
                        new
                        {
                            Id = 4124202,
                            EstadoId = 41,
                            Nome = "Santo Antônio do Caiuá"
                        },
                        new
                        {
                            Id = 4124301,
                            EstadoId = 41,
                            Nome = "Santo Antônio do Paraíso"
                        },
                        new
                        {
                            Id = 4124400,
                            EstadoId = 41,
                            Nome = "Santo Antônio do Sudoeste"
                        },
                        new
                        {
                            Id = 4124509,
                            EstadoId = 41,
                            Nome = "Santo Inácio"
                        },
                        new
                        {
                            Id = 4124608,
                            EstadoId = 41,
                            Nome = "São Carlos do Ivaí"
                        },
                        new
                        {
                            Id = 4124707,
                            EstadoId = 41,
                            Nome = "São Jerônimo da Serra"
                        },
                        new
                        {
                            Id = 4124806,
                            EstadoId = 41,
                            Nome = "São João"
                        },
                        new
                        {
                            Id = 4124905,
                            EstadoId = 41,
                            Nome = "São João do Caiuá"
                        },
                        new
                        {
                            Id = 4125001,
                            EstadoId = 41,
                            Nome = "São João do Ivaí"
                        },
                        new
                        {
                            Id = 4125100,
                            EstadoId = 41,
                            Nome = "São João do Triunfo"
                        },
                        new
                        {
                            Id = 4125308,
                            EstadoId = 41,
                            Nome = "São Jorge do Ivaí"
                        },
                        new
                        {
                            Id = 4125357,
                            EstadoId = 41,
                            Nome = "São Jorge do Patrocínio"
                        },
                        new
                        {
                            Id = 4125209,
                            EstadoId = 41,
                            Nome = "São Jorge dOeste"
                        },
                        new
                        {
                            Id = 4125407,
                            EstadoId = 41,
                            Nome = "São José da Boa Vista"
                        },
                        new
                        {
                            Id = 4125456,
                            EstadoId = 41,
                            Nome = "São José das Palmeiras"
                        },
                        new
                        {
                            Id = 4125506,
                            EstadoId = 41,
                            Nome = "São José dos Pinhais"
                        },
                        new
                        {
                            Id = 4125555,
                            EstadoId = 41,
                            Nome = "São Manoel do Paraná"
                        },
                        new
                        {
                            Id = 4125605,
                            EstadoId = 41,
                            Nome = "São Mateus do Sul"
                        },
                        new
                        {
                            Id = 4125704,
                            EstadoId = 41,
                            Nome = "São Miguel do Iguaçu"
                        },
                        new
                        {
                            Id = 4125753,
                            EstadoId = 41,
                            Nome = "São Pedro do Iguaçu"
                        },
                        new
                        {
                            Id = 4125803,
                            EstadoId = 41,
                            Nome = "São Pedro do Ivaí"
                        },
                        new
                        {
                            Id = 4125902,
                            EstadoId = 41,
                            Nome = "São Pedro do Paraná"
                        },
                        new
                        {
                            Id = 4126009,
                            EstadoId = 41,
                            Nome = "São Sebastião da Amoreira"
                        },
                        new
                        {
                            Id = 4126108,
                            EstadoId = 41,
                            Nome = "São Tomé"
                        },
                        new
                        {
                            Id = 4126207,
                            EstadoId = 41,
                            Nome = "Sapopema"
                        },
                        new
                        {
                            Id = 4126256,
                            EstadoId = 41,
                            Nome = "Sarandi"
                        },
                        new
                        {
                            Id = 4126272,
                            EstadoId = 41,
                            Nome = "Saudade do Iguaçu"
                        },
                        new
                        {
                            Id = 4126306,
                            EstadoId = 41,
                            Nome = "Sengés"
                        },
                        new
                        {
                            Id = 4126355,
                            EstadoId = 41,
                            Nome = "Serranópolis do Iguaçu"
                        },
                        new
                        {
                            Id = 4126405,
                            EstadoId = 41,
                            Nome = "Sertaneja"
                        },
                        new
                        {
                            Id = 4126504,
                            EstadoId = 41,
                            Nome = "Sertanópolis"
                        },
                        new
                        {
                            Id = 4126603,
                            EstadoId = 41,
                            Nome = "Siqueira Campos"
                        },
                        new
                        {
                            Id = 4126652,
                            EstadoId = 41,
                            Nome = "Sulina"
                        },
                        new
                        {
                            Id = 4126678,
                            EstadoId = 41,
                            Nome = "Tamarana"
                        },
                        new
                        {
                            Id = 4126702,
                            EstadoId = 41,
                            Nome = "Tamboara"
                        },
                        new
                        {
                            Id = 4126801,
                            EstadoId = 41,
                            Nome = "Tapejara"
                        },
                        new
                        {
                            Id = 4126900,
                            EstadoId = 41,
                            Nome = "Tapira"
                        },
                        new
                        {
                            Id = 4127007,
                            EstadoId = 41,
                            Nome = "Teixeira Soares"
                        },
                        new
                        {
                            Id = 4127106,
                            EstadoId = 41,
                            Nome = "Telêmaco Borba"
                        },
                        new
                        {
                            Id = 4127205,
                            EstadoId = 41,
                            Nome = "Terra Boa"
                        },
                        new
                        {
                            Id = 4127304,
                            EstadoId = 41,
                            Nome = "Terra Rica"
                        },
                        new
                        {
                            Id = 4127403,
                            EstadoId = 41,
                            Nome = "Terra Roxa"
                        },
                        new
                        {
                            Id = 4127502,
                            EstadoId = 41,
                            Nome = "Tibagi"
                        },
                        new
                        {
                            Id = 4127601,
                            EstadoId = 41,
                            Nome = "Tijucas do Sul"
                        },
                        new
                        {
                            Id = 4127700,
                            EstadoId = 41,
                            Nome = "Toledo"
                        },
                        new
                        {
                            Id = 4127809,
                            EstadoId = 41,
                            Nome = "Tomazina"
                        },
                        new
                        {
                            Id = 4127858,
                            EstadoId = 41,
                            Nome = "Três Barras do Paraná"
                        },
                        new
                        {
                            Id = 4127882,
                            EstadoId = 41,
                            Nome = "Tunas do Paraná"
                        },
                        new
                        {
                            Id = 4127908,
                            EstadoId = 41,
                            Nome = "Tuneiras do Oeste"
                        },
                        new
                        {
                            Id = 4127957,
                            EstadoId = 41,
                            Nome = "Tupãssi"
                        },
                        new
                        {
                            Id = 4127965,
                            EstadoId = 41,
                            Nome = "Turvo"
                        },
                        new
                        {
                            Id = 4128005,
                            EstadoId = 41,
                            Nome = "Ubiratã"
                        },
                        new
                        {
                            Id = 4128104,
                            EstadoId = 41,
                            Nome = "Umuarama"
                        },
                        new
                        {
                            Id = 4128203,
                            EstadoId = 41,
                            Nome = "União da Vitória"
                        },
                        new
                        {
                            Id = 4128302,
                            EstadoId = 41,
                            Nome = "Uniflor"
                        },
                        new
                        {
                            Id = 4128401,
                            EstadoId = 41,
                            Nome = "Uraí"
                        },
                        new
                        {
                            Id = 4128534,
                            EstadoId = 41,
                            Nome = "Ventania"
                        },
                        new
                        {
                            Id = 4128559,
                            EstadoId = 41,
                            Nome = "Vera Cruz do Oeste"
                        },
                        new
                        {
                            Id = 4128609,
                            EstadoId = 41,
                            Nome = "Verê"
                        },
                        new
                        {
                            Id = 4128658,
                            EstadoId = 41,
                            Nome = "Virmond"
                        },
                        new
                        {
                            Id = 4128708,
                            EstadoId = 41,
                            Nome = "Vitorino"
                        },
                        new
                        {
                            Id = 4128500,
                            EstadoId = 41,
                            Nome = "Wenceslau Braz"
                        },
                        new
                        {
                            Id = 4128807,
                            EstadoId = 41,
                            Nome = "Xambrê"
                        },
                        new
                        {
                            Id = 4200051,
                            EstadoId = 42,
                            Nome = "Abdon Batista"
                        },
                        new
                        {
                            Id = 4200101,
                            EstadoId = 42,
                            Nome = "Abelardo Luz"
                        },
                        new
                        {
                            Id = 4200200,
                            EstadoId = 42,
                            Nome = "Agrolândia"
                        },
                        new
                        {
                            Id = 4200309,
                            EstadoId = 42,
                            Nome = "Agronômica"
                        },
                        new
                        {
                            Id = 4200408,
                            EstadoId = 42,
                            Nome = "Água Doce"
                        },
                        new
                        {
                            Id = 4200507,
                            EstadoId = 42,
                            Nome = "Águas de Chapecó"
                        },
                        new
                        {
                            Id = 4200556,
                            EstadoId = 42,
                            Nome = "Águas Frias"
                        },
                        new
                        {
                            Id = 4200606,
                            EstadoId = 42,
                            Nome = "Águas Mornas"
                        },
                        new
                        {
                            Id = 4200705,
                            EstadoId = 42,
                            Nome = "Alfredo Wagner"
                        },
                        new
                        {
                            Id = 4200754,
                            EstadoId = 42,
                            Nome = "Alto Bela Vista"
                        },
                        new
                        {
                            Id = 4200804,
                            EstadoId = 42,
                            Nome = "Anchieta"
                        },
                        new
                        {
                            Id = 4200903,
                            EstadoId = 42,
                            Nome = "Angelina"
                        },
                        new
                        {
                            Id = 4201000,
                            EstadoId = 42,
                            Nome = "Anita Garibaldi"
                        },
                        new
                        {
                            Id = 4201109,
                            EstadoId = 42,
                            Nome = "Anitápolis"
                        },
                        new
                        {
                            Id = 4201208,
                            EstadoId = 42,
                            Nome = "Antônio Carlos"
                        },
                        new
                        {
                            Id = 4201257,
                            EstadoId = 42,
                            Nome = "Apiúna"
                        },
                        new
                        {
                            Id = 4201273,
                            EstadoId = 42,
                            Nome = "Arabutã"
                        },
                        new
                        {
                            Id = 4201307,
                            EstadoId = 42,
                            Nome = "Araquari"
                        },
                        new
                        {
                            Id = 4201406,
                            EstadoId = 42,
                            Nome = "Araranguá"
                        },
                        new
                        {
                            Id = 4201505,
                            EstadoId = 42,
                            Nome = "Armazém"
                        },
                        new
                        {
                            Id = 4201604,
                            EstadoId = 42,
                            Nome = "Arroio Trinta"
                        },
                        new
                        {
                            Id = 4201653,
                            EstadoId = 42,
                            Nome = "Arvoredo"
                        },
                        new
                        {
                            Id = 4201703,
                            EstadoId = 42,
                            Nome = "Ascurra"
                        },
                        new
                        {
                            Id = 4201802,
                            EstadoId = 42,
                            Nome = "Atalanta"
                        },
                        new
                        {
                            Id = 4201901,
                            EstadoId = 42,
                            Nome = "Aurora"
                        },
                        new
                        {
                            Id = 4201950,
                            EstadoId = 42,
                            Nome = "Balneário Arroio do Silva"
                        },
                        new
                        {
                            Id = 4202057,
                            EstadoId = 42,
                            Nome = "Balneário Barra do Sul"
                        },
                        new
                        {
                            Id = 4202008,
                            EstadoId = 42,
                            Nome = "Balneário Camboriú"
                        },
                        new
                        {
                            Id = 4202073,
                            EstadoId = 42,
                            Nome = "Balneário Gaivota"
                        },
                        new
                        {
                            Id = 4212809,
                            EstadoId = 42,
                            Nome = "Balneário Piçarras"
                        },
                        new
                        {
                            Id = 4202081,
                            EstadoId = 42,
                            Nome = "Bandeirante"
                        },
                        new
                        {
                            Id = 4202099,
                            EstadoId = 42,
                            Nome = "Barra Bonita"
                        },
                        new
                        {
                            Id = 4202107,
                            EstadoId = 42,
                            Nome = "Barra Velha"
                        },
                        new
                        {
                            Id = 4202131,
                            EstadoId = 42,
                            Nome = "Bela Vista do Toldo"
                        },
                        new
                        {
                            Id = 4202156,
                            EstadoId = 42,
                            Nome = "Belmonte"
                        },
                        new
                        {
                            Id = 4202206,
                            EstadoId = 42,
                            Nome = "Benedito Novo"
                        },
                        new
                        {
                            Id = 4202305,
                            EstadoId = 42,
                            Nome = "Biguaçu"
                        },
                        new
                        {
                            Id = 4202404,
                            EstadoId = 42,
                            Nome = "Blumenau"
                        },
                        new
                        {
                            Id = 4202438,
                            EstadoId = 42,
                            Nome = "Bocaina do Sul"
                        },
                        new
                        {
                            Id = 4202503,
                            EstadoId = 42,
                            Nome = "Bom Jardim da Serra"
                        },
                        new
                        {
                            Id = 4202537,
                            EstadoId = 42,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            Id = 4202578,
                            EstadoId = 42,
                            Nome = "Bom Jesus do Oeste"
                        },
                        new
                        {
                            Id = 4202602,
                            EstadoId = 42,
                            Nome = "Bom Retiro"
                        },
                        new
                        {
                            Id = 4202453,
                            EstadoId = 42,
                            Nome = "Bombinhas"
                        },
                        new
                        {
                            Id = 4202701,
                            EstadoId = 42,
                            Nome = "Botuverá"
                        },
                        new
                        {
                            Id = 4202800,
                            EstadoId = 42,
                            Nome = "Braço do Norte"
                        },
                        new
                        {
                            Id = 4202859,
                            EstadoId = 42,
                            Nome = "Braço do Trombudo"
                        },
                        new
                        {
                            Id = 4202875,
                            EstadoId = 42,
                            Nome = "Brunópolis"
                        },
                        new
                        {
                            Id = 4202909,
                            EstadoId = 42,
                            Nome = "Brusque"
                        },
                        new
                        {
                            Id = 4203006,
                            EstadoId = 42,
                            Nome = "Caçador"
                        },
                        new
                        {
                            Id = 4203105,
                            EstadoId = 42,
                            Nome = "Caibi"
                        },
                        new
                        {
                            Id = 4203154,
                            EstadoId = 42,
                            Nome = "Calmon"
                        },
                        new
                        {
                            Id = 4203204,
                            EstadoId = 42,
                            Nome = "Camboriú"
                        },
                        new
                        {
                            Id = 4203303,
                            EstadoId = 42,
                            Nome = "Campo Alegre"
                        },
                        new
                        {
                            Id = 4203402,
                            EstadoId = 42,
                            Nome = "Campo Belo do Sul"
                        },
                        new
                        {
                            Id = 4203501,
                            EstadoId = 42,
                            Nome = "Campo Erê"
                        },
                        new
                        {
                            Id = 4203600,
                            EstadoId = 42,
                            Nome = "Campos Novos"
                        },
                        new
                        {
                            Id = 4203709,
                            EstadoId = 42,
                            Nome = "Canelinha"
                        },
                        new
                        {
                            Id = 4203808,
                            EstadoId = 42,
                            Nome = "Canoinhas"
                        },
                        new
                        {
                            Id = 4203253,
                            EstadoId = 42,
                            Nome = "Capão Alto"
                        },
                        new
                        {
                            Id = 4203907,
                            EstadoId = 42,
                            Nome = "Capinzal"
                        },
                        new
                        {
                            Id = 4203956,
                            EstadoId = 42,
                            Nome = "Capivari de Baixo"
                        },
                        new
                        {
                            Id = 4204004,
                            EstadoId = 42,
                            Nome = "Catanduvas"
                        },
                        new
                        {
                            Id = 4204103,
                            EstadoId = 42,
                            Nome = "Caxambu do Sul"
                        },
                        new
                        {
                            Id = 4204152,
                            EstadoId = 42,
                            Nome = "Celso Ramos"
                        },
                        new
                        {
                            Id = 4204178,
                            EstadoId = 42,
                            Nome = "Cerro Negro"
                        },
                        new
                        {
                            Id = 4204194,
                            EstadoId = 42,
                            Nome = "Chapadão do Lageado"
                        },
                        new
                        {
                            Id = 4204202,
                            EstadoId = 42,
                            Nome = "Chapecó"
                        },
                        new
                        {
                            Id = 4204251,
                            EstadoId = 42,
                            Nome = "Cocal do Sul"
                        },
                        new
                        {
                            Id = 4204301,
                            EstadoId = 42,
                            Nome = "Concórdia"
                        },
                        new
                        {
                            Id = 4204350,
                            EstadoId = 42,
                            Nome = "Cordilheira Alta"
                        },
                        new
                        {
                            Id = 4204400,
                            EstadoId = 42,
                            Nome = "Coronel Freitas"
                        },
                        new
                        {
                            Id = 4204459,
                            EstadoId = 42,
                            Nome = "Coronel Martins"
                        },
                        new
                        {
                            Id = 4204558,
                            EstadoId = 42,
                            Nome = "Correia Pinto"
                        },
                        new
                        {
                            Id = 4204509,
                            EstadoId = 42,
                            Nome = "Corupá"
                        },
                        new
                        {
                            Id = 4204608,
                            EstadoId = 42,
                            Nome = "Criciúma"
                        },
                        new
                        {
                            Id = 4204707,
                            EstadoId = 42,
                            Nome = "Cunha Porã"
                        },
                        new
                        {
                            Id = 4204756,
                            EstadoId = 42,
                            Nome = "Cunhataí"
                        },
                        new
                        {
                            Id = 4204806,
                            EstadoId = 42,
                            Nome = "Curitibanos"
                        },
                        new
                        {
                            Id = 4204905,
                            EstadoId = 42,
                            Nome = "Descanso"
                        },
                        new
                        {
                            Id = 4205001,
                            EstadoId = 42,
                            Nome = "Dionísio Cerqueira"
                        },
                        new
                        {
                            Id = 4205100,
                            EstadoId = 42,
                            Nome = "Dona Emma"
                        },
                        new
                        {
                            Id = 4205159,
                            EstadoId = 42,
                            Nome = "Doutor Pedrinho"
                        },
                        new
                        {
                            Id = 4205175,
                            EstadoId = 42,
                            Nome = "Entre Rios"
                        },
                        new
                        {
                            Id = 4205191,
                            EstadoId = 42,
                            Nome = "Ermo"
                        },
                        new
                        {
                            Id = 4205209,
                            EstadoId = 42,
                            Nome = "Erval Velho"
                        },
                        new
                        {
                            Id = 4205308,
                            EstadoId = 42,
                            Nome = "Faxinal dos Guedes"
                        },
                        new
                        {
                            Id = 4205357,
                            EstadoId = 42,
                            Nome = "Flor do Sertão"
                        },
                        new
                        {
                            Id = 4205407,
                            EstadoId = 42,
                            Nome = "Florianópolis"
                        },
                        new
                        {
                            Id = 4205431,
                            EstadoId = 42,
                            Nome = "Formosa do Sul"
                        },
                        new
                        {
                            Id = 4205456,
                            EstadoId = 42,
                            Nome = "Forquilhinha"
                        },
                        new
                        {
                            Id = 4205506,
                            EstadoId = 42,
                            Nome = "Fraiburgo"
                        },
                        new
                        {
                            Id = 4205555,
                            EstadoId = 42,
                            Nome = "Frei Rogério"
                        },
                        new
                        {
                            Id = 4205605,
                            EstadoId = 42,
                            Nome = "Galvão"
                        },
                        new
                        {
                            Id = 4205704,
                            EstadoId = 42,
                            Nome = "Garopaba"
                        },
                        new
                        {
                            Id = 4205803,
                            EstadoId = 42,
                            Nome = "Garuva"
                        },
                        new
                        {
                            Id = 4205902,
                            EstadoId = 42,
                            Nome = "Gaspar"
                        },
                        new
                        {
                            Id = 4206009,
                            EstadoId = 42,
                            Nome = "Governador Celso Ramos"
                        },
                        new
                        {
                            Id = 4206108,
                            EstadoId = 42,
                            Nome = "Grão Pará"
                        },
                        new
                        {
                            Id = 4206207,
                            EstadoId = 42,
                            Nome = "Gravatal"
                        },
                        new
                        {
                            Id = 4206306,
                            EstadoId = 42,
                            Nome = "Guabiruba"
                        },
                        new
                        {
                            Id = 4206405,
                            EstadoId = 42,
                            Nome = "Guaraciaba"
                        },
                        new
                        {
                            Id = 4206504,
                            EstadoId = 42,
                            Nome = "Guaramirim"
                        },
                        new
                        {
                            Id = 4206603,
                            EstadoId = 42,
                            Nome = "Guarujá do Sul"
                        },
                        new
                        {
                            Id = 4206652,
                            EstadoId = 42,
                            Nome = "Guatambú"
                        },
                        new
                        {
                            Id = 4206702,
                            EstadoId = 42,
                            Nome = "Herval dOeste"
                        },
                        new
                        {
                            Id = 4206751,
                            EstadoId = 42,
                            Nome = "Ibiam"
                        },
                        new
                        {
                            Id = 4206801,
                            EstadoId = 42,
                            Nome = "Ibicaré"
                        },
                        new
                        {
                            Id = 4206900,
                            EstadoId = 42,
                            Nome = "Ibirama"
                        },
                        new
                        {
                            Id = 4207007,
                            EstadoId = 42,
                            Nome = "Içara"
                        },
                        new
                        {
                            Id = 4207106,
                            EstadoId = 42,
                            Nome = "Ilhota"
                        },
                        new
                        {
                            Id = 4207205,
                            EstadoId = 42,
                            Nome = "Imaruí"
                        },
                        new
                        {
                            Id = 4207304,
                            EstadoId = 42,
                            Nome = "Imbituba"
                        },
                        new
                        {
                            Id = 4207403,
                            EstadoId = 42,
                            Nome = "Imbuia"
                        },
                        new
                        {
                            Id = 4207502,
                            EstadoId = 42,
                            Nome = "Indaial"
                        },
                        new
                        {
                            Id = 4207577,
                            EstadoId = 42,
                            Nome = "Iomerê"
                        },
                        new
                        {
                            Id = 4207601,
                            EstadoId = 42,
                            Nome = "Ipira"
                        },
                        new
                        {
                            Id = 4207650,
                            EstadoId = 42,
                            Nome = "Iporã do Oeste"
                        },
                        new
                        {
                            Id = 4207684,
                            EstadoId = 42,
                            Nome = "Ipuaçu"
                        },
                        new
                        {
                            Id = 4207700,
                            EstadoId = 42,
                            Nome = "Ipumirim"
                        },
                        new
                        {
                            Id = 4207759,
                            EstadoId = 42,
                            Nome = "Iraceminha"
                        },
                        new
                        {
                            Id = 4207809,
                            EstadoId = 42,
                            Nome = "Irani"
                        },
                        new
                        {
                            Id = 4207858,
                            EstadoId = 42,
                            Nome = "Irati"
                        },
                        new
                        {
                            Id = 4207908,
                            EstadoId = 42,
                            Nome = "Irineópolis"
                        },
                        new
                        {
                            Id = 4208005,
                            EstadoId = 42,
                            Nome = "Itá"
                        },
                        new
                        {
                            Id = 4208104,
                            EstadoId = 42,
                            Nome = "Itaiópolis"
                        },
                        new
                        {
                            Id = 4208203,
                            EstadoId = 42,
                            Nome = "Itajaí"
                        },
                        new
                        {
                            Id = 4208302,
                            EstadoId = 42,
                            Nome = "Itapema"
                        },
                        new
                        {
                            Id = 4208401,
                            EstadoId = 42,
                            Nome = "Itapiranga"
                        },
                        new
                        {
                            Id = 4208450,
                            EstadoId = 42,
                            Nome = "Itapoá"
                        },
                        new
                        {
                            Id = 4208500,
                            EstadoId = 42,
                            Nome = "Ituporanga"
                        },
                        new
                        {
                            Id = 4208609,
                            EstadoId = 42,
                            Nome = "Jaborá"
                        },
                        new
                        {
                            Id = 4208708,
                            EstadoId = 42,
                            Nome = "Jacinto Machado"
                        },
                        new
                        {
                            Id = 4208807,
                            EstadoId = 42,
                            Nome = "Jaguaruna"
                        },
                        new
                        {
                            Id = 4208906,
                            EstadoId = 42,
                            Nome = "Jaraguá do Sul"
                        },
                        new
                        {
                            Id = 4208955,
                            EstadoId = 42,
                            Nome = "Jardinópolis"
                        },
                        new
                        {
                            Id = 4209003,
                            EstadoId = 42,
                            Nome = "Joaçaba"
                        },
                        new
                        {
                            Id = 4209102,
                            EstadoId = 42,
                            Nome = "Joinville"
                        },
                        new
                        {
                            Id = 4209151,
                            EstadoId = 42,
                            Nome = "José Boiteux"
                        },
                        new
                        {
                            Id = 4209177,
                            EstadoId = 42,
                            Nome = "Jupiá"
                        },
                        new
                        {
                            Id = 4209201,
                            EstadoId = 42,
                            Nome = "Lacerdópolis"
                        },
                        new
                        {
                            Id = 4209300,
                            EstadoId = 42,
                            Nome = "Lages"
                        },
                        new
                        {
                            Id = 4209409,
                            EstadoId = 42,
                            Nome = "Laguna"
                        },
                        new
                        {
                            Id = 4209458,
                            EstadoId = 42,
                            Nome = "Lajeado Grande"
                        },
                        new
                        {
                            Id = 4209508,
                            EstadoId = 42,
                            Nome = "Laurentino"
                        },
                        new
                        {
                            Id = 4209607,
                            EstadoId = 42,
                            Nome = "Lauro Muller"
                        },
                        new
                        {
                            Id = 4209706,
                            EstadoId = 42,
                            Nome = "Lebon Régis"
                        },
                        new
                        {
                            Id = 4209805,
                            EstadoId = 42,
                            Nome = "Leoberto Leal"
                        },
                        new
                        {
                            Id = 4209854,
                            EstadoId = 42,
                            Nome = "Lindóia do Sul"
                        },
                        new
                        {
                            Id = 4209904,
                            EstadoId = 42,
                            Nome = "Lontras"
                        },
                        new
                        {
                            Id = 4210001,
                            EstadoId = 42,
                            Nome = "Luiz Alves"
                        },
                        new
                        {
                            Id = 4210035,
                            EstadoId = 42,
                            Nome = "Luzerna"
                        },
                        new
                        {
                            Id = 4210050,
                            EstadoId = 42,
                            Nome = "Macieira"
                        },
                        new
                        {
                            Id = 4210100,
                            EstadoId = 42,
                            Nome = "Mafra"
                        },
                        new
                        {
                            Id = 4210209,
                            EstadoId = 42,
                            Nome = "Major Gercino"
                        },
                        new
                        {
                            Id = 4210308,
                            EstadoId = 42,
                            Nome = "Major Vieira"
                        },
                        new
                        {
                            Id = 4210407,
                            EstadoId = 42,
                            Nome = "Maracajá"
                        },
                        new
                        {
                            Id = 4210506,
                            EstadoId = 42,
                            Nome = "Maravilha"
                        },
                        new
                        {
                            Id = 4210555,
                            EstadoId = 42,
                            Nome = "Marema"
                        },
                        new
                        {
                            Id = 4210605,
                            EstadoId = 42,
                            Nome = "Massaranduba"
                        },
                        new
                        {
                            Id = 4210704,
                            EstadoId = 42,
                            Nome = "Matos Costa"
                        },
                        new
                        {
                            Id = 4210803,
                            EstadoId = 42,
                            Nome = "Meleiro"
                        },
                        new
                        {
                            Id = 4210852,
                            EstadoId = 42,
                            Nome = "Mirim Doce"
                        },
                        new
                        {
                            Id = 4210902,
                            EstadoId = 42,
                            Nome = "Modelo"
                        },
                        new
                        {
                            Id = 4211009,
                            EstadoId = 42,
                            Nome = "Mondaí"
                        },
                        new
                        {
                            Id = 4211058,
                            EstadoId = 42,
                            Nome = "Monte Carlo"
                        },
                        new
                        {
                            Id = 4211108,
                            EstadoId = 42,
                            Nome = "Monte Castelo"
                        },
                        new
                        {
                            Id = 4211207,
                            EstadoId = 42,
                            Nome = "Morro da Fumaça"
                        },
                        new
                        {
                            Id = 4211256,
                            EstadoId = 42,
                            Nome = "Morro Grande"
                        },
                        new
                        {
                            Id = 4211306,
                            EstadoId = 42,
                            Nome = "Navegantes"
                        },
                        new
                        {
                            Id = 4211405,
                            EstadoId = 42,
                            Nome = "Nova Erechim"
                        },
                        new
                        {
                            Id = 4211454,
                            EstadoId = 42,
                            Nome = "Nova Itaberaba"
                        },
                        new
                        {
                            Id = 4211504,
                            EstadoId = 42,
                            Nome = "Nova Trento"
                        },
                        new
                        {
                            Id = 4211603,
                            EstadoId = 42,
                            Nome = "Nova Veneza"
                        },
                        new
                        {
                            Id = 4211652,
                            EstadoId = 42,
                            Nome = "Novo Horizonte"
                        },
                        new
                        {
                            Id = 4211702,
                            EstadoId = 42,
                            Nome = "Orleans"
                        },
                        new
                        {
                            Id = 4211751,
                            EstadoId = 42,
                            Nome = "Otacílio Costa"
                        },
                        new
                        {
                            Id = 4211801,
                            EstadoId = 42,
                            Nome = "Ouro"
                        },
                        new
                        {
                            Id = 4211850,
                            EstadoId = 42,
                            Nome = "Ouro Verde"
                        },
                        new
                        {
                            Id = 4211876,
                            EstadoId = 42,
                            Nome = "Paial"
                        },
                        new
                        {
                            Id = 4211892,
                            EstadoId = 42,
                            Nome = "Painel"
                        },
                        new
                        {
                            Id = 4211900,
                            EstadoId = 42,
                            Nome = "Palhoça"
                        },
                        new
                        {
                            Id = 4212007,
                            EstadoId = 42,
                            Nome = "Palma Sola"
                        },
                        new
                        {
                            Id = 4212056,
                            EstadoId = 42,
                            Nome = "Palmeira"
                        },
                        new
                        {
                            Id = 4212106,
                            EstadoId = 42,
                            Nome = "Palmitos"
                        },
                        new
                        {
                            Id = 4212205,
                            EstadoId = 42,
                            Nome = "Papanduva"
                        },
                        new
                        {
                            Id = 4212239,
                            EstadoId = 42,
                            Nome = "Paraíso"
                        },
                        new
                        {
                            Id = 4212254,
                            EstadoId = 42,
                            Nome = "Passo de Torres"
                        },
                        new
                        {
                            Id = 4212270,
                            EstadoId = 42,
                            Nome = "Passos Maia"
                        },
                        new
                        {
                            Id = 4212304,
                            EstadoId = 42,
                            Nome = "Paulo Lopes"
                        },
                        new
                        {
                            Id = 4212403,
                            EstadoId = 42,
                            Nome = "Pedras Grandes"
                        },
                        new
                        {
                            Id = 4212502,
                            EstadoId = 42,
                            Nome = "Penha"
                        },
                        new
                        {
                            Id = 4212601,
                            EstadoId = 42,
                            Nome = "Peritiba"
                        },
                        new
                        {
                            Id = 4212650,
                            EstadoId = 42,
                            Nome = "Pescaria Brava"
                        },
                        new
                        {
                            Id = 4212700,
                            EstadoId = 42,
                            Nome = "Petrolândia"
                        },
                        new
                        {
                            Id = 4212908,
                            EstadoId = 42,
                            Nome = "Pinhalzinho"
                        },
                        new
                        {
                            Id = 4213005,
                            EstadoId = 42,
                            Nome = "Pinheiro Preto"
                        },
                        new
                        {
                            Id = 4213104,
                            EstadoId = 42,
                            Nome = "Piratuba"
                        },
                        new
                        {
                            Id = 4213153,
                            EstadoId = 42,
                            Nome = "Planalto Alegre"
                        },
                        new
                        {
                            Id = 4213203,
                            EstadoId = 42,
                            Nome = "Pomerode"
                        },
                        new
                        {
                            Id = 4213302,
                            EstadoId = 42,
                            Nome = "Ponte Alta"
                        },
                        new
                        {
                            Id = 4213351,
                            EstadoId = 42,
                            Nome = "Ponte Alta do Norte"
                        },
                        new
                        {
                            Id = 4213401,
                            EstadoId = 42,
                            Nome = "Ponte Serrada"
                        },
                        new
                        {
                            Id = 4213500,
                            EstadoId = 42,
                            Nome = "Porto Belo"
                        },
                        new
                        {
                            Id = 4213609,
                            EstadoId = 42,
                            Nome = "Porto União"
                        },
                        new
                        {
                            Id = 4213708,
                            EstadoId = 42,
                            Nome = "Pouso Redondo"
                        },
                        new
                        {
                            Id = 4213807,
                            EstadoId = 42,
                            Nome = "Praia Grande"
                        },
                        new
                        {
                            Id = 4213906,
                            EstadoId = 42,
                            Nome = "Presidente Castello Branco"
                        },
                        new
                        {
                            Id = 4214003,
                            EstadoId = 42,
                            Nome = "Presidente Getúlio"
                        },
                        new
                        {
                            Id = 4214102,
                            EstadoId = 42,
                            Nome = "Presidente Nereu"
                        },
                        new
                        {
                            Id = 4214151,
                            EstadoId = 42,
                            Nome = "Princesa"
                        },
                        new
                        {
                            Id = 4214201,
                            EstadoId = 42,
                            Nome = "Quilombo"
                        },
                        new
                        {
                            Id = 4214300,
                            EstadoId = 42,
                            Nome = "Rancho Queimado"
                        },
                        new
                        {
                            Id = 4214409,
                            EstadoId = 42,
                            Nome = "Rio das Antas"
                        },
                        new
                        {
                            Id = 4214508,
                            EstadoId = 42,
                            Nome = "Rio do Campo"
                        },
                        new
                        {
                            Id = 4214607,
                            EstadoId = 42,
                            Nome = "Rio do Oeste"
                        },
                        new
                        {
                            Id = 4214805,
                            EstadoId = 42,
                            Nome = "Rio do Sul"
                        },
                        new
                        {
                            Id = 4214706,
                            EstadoId = 42,
                            Nome = "Rio dos Cedros"
                        },
                        new
                        {
                            Id = 4214904,
                            EstadoId = 42,
                            Nome = "Rio Fortuna"
                        },
                        new
                        {
                            Id = 4215000,
                            EstadoId = 42,
                            Nome = "Rio Negrinho"
                        },
                        new
                        {
                            Id = 4215059,
                            EstadoId = 42,
                            Nome = "Rio Rufino"
                        },
                        new
                        {
                            Id = 4215075,
                            EstadoId = 42,
                            Nome = "Riqueza"
                        },
                        new
                        {
                            Id = 4215109,
                            EstadoId = 42,
                            Nome = "Rodeio"
                        },
                        new
                        {
                            Id = 4215208,
                            EstadoId = 42,
                            Nome = "Romelândia"
                        },
                        new
                        {
                            Id = 4215307,
                            EstadoId = 42,
                            Nome = "Salete"
                        },
                        new
                        {
                            Id = 4215356,
                            EstadoId = 42,
                            Nome = "Saltinho"
                        },
                        new
                        {
                            Id = 4215406,
                            EstadoId = 42,
                            Nome = "Salto Veloso"
                        },
                        new
                        {
                            Id = 4215455,
                            EstadoId = 42,
                            Nome = "Sangão"
                        },
                        new
                        {
                            Id = 4215505,
                            EstadoId = 42,
                            Nome = "Santa Cecília"
                        },
                        new
                        {
                            Id = 4215554,
                            EstadoId = 42,
                            Nome = "Santa Helena"
                        },
                        new
                        {
                            Id = 4215604,
                            EstadoId = 42,
                            Nome = "Santa Rosa de Lima"
                        },
                        new
                        {
                            Id = 4215653,
                            EstadoId = 42,
                            Nome = "Santa Rosa do Sul"
                        },
                        new
                        {
                            Id = 4215679,
                            EstadoId = 42,
                            Nome = "Santa Terezinha"
                        },
                        new
                        {
                            Id = 4215687,
                            EstadoId = 42,
                            Nome = "Santa Terezinha do Progresso"
                        },
                        new
                        {
                            Id = 4215695,
                            EstadoId = 42,
                            Nome = "Santiago do Sul"
                        },
                        new
                        {
                            Id = 4215703,
                            EstadoId = 42,
                            Nome = "Santo Amaro da Imperatriz"
                        },
                        new
                        {
                            Id = 4215802,
                            EstadoId = 42,
                            Nome = "São Bento do Sul"
                        },
                        new
                        {
                            Id = 4215752,
                            EstadoId = 42,
                            Nome = "São Bernardino"
                        },
                        new
                        {
                            Id = 4215901,
                            EstadoId = 42,
                            Nome = "São Bonifácio"
                        },
                        new
                        {
                            Id = 4216008,
                            EstadoId = 42,
                            Nome = "São Carlos"
                        },
                        new
                        {
                            Id = 4216057,
                            EstadoId = 42,
                            Nome = "São Cristovão do Sul"
                        },
                        new
                        {
                            Id = 4216107,
                            EstadoId = 42,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            Id = 4216206,
                            EstadoId = 42,
                            Nome = "São Francisco do Sul"
                        },
                        new
                        {
                            Id = 4216305,
                            EstadoId = 42,
                            Nome = "São João Batista"
                        },
                        new
                        {
                            Id = 4216354,
                            EstadoId = 42,
                            Nome = "São João do Itaperiú"
                        },
                        new
                        {
                            Id = 4216255,
                            EstadoId = 42,
                            Nome = "São João do Oeste"
                        },
                        new
                        {
                            Id = 4216404,
                            EstadoId = 42,
                            Nome = "São João do Sul"
                        },
                        new
                        {
                            Id = 4216503,
                            EstadoId = 42,
                            Nome = "São Joaquim"
                        },
                        new
                        {
                            Id = 4216602,
                            EstadoId = 42,
                            Nome = "São José"
                        },
                        new
                        {
                            Id = 4216701,
                            EstadoId = 42,
                            Nome = "São José do Cedro"
                        },
                        new
                        {
                            Id = 4216800,
                            EstadoId = 42,
                            Nome = "São José do Cerrito"
                        },
                        new
                        {
                            Id = 4216909,
                            EstadoId = 42,
                            Nome = "São Lourenço do Oeste"
                        },
                        new
                        {
                            Id = 4217006,
                            EstadoId = 42,
                            Nome = "São Ludgero"
                        },
                        new
                        {
                            Id = 4217105,
                            EstadoId = 42,
                            Nome = "São Martinho"
                        },
                        new
                        {
                            Id = 4217154,
                            EstadoId = 42,
                            Nome = "São Miguel da Boa Vista"
                        },
                        new
                        {
                            Id = 4217204,
                            EstadoId = 42,
                            Nome = "São Miguel do Oeste"
                        },
                        new
                        {
                            Id = 4217253,
                            EstadoId = 42,
                            Nome = "São Pedro de Alcântara"
                        },
                        new
                        {
                            Id = 4217303,
                            EstadoId = 42,
                            Nome = "Saudades"
                        },
                        new
                        {
                            Id = 4217402,
                            EstadoId = 42,
                            Nome = "Schroeder"
                        },
                        new
                        {
                            Id = 4217501,
                            EstadoId = 42,
                            Nome = "Seara"
                        },
                        new
                        {
                            Id = 4217550,
                            EstadoId = 42,
                            Nome = "Serra Alta"
                        },
                        new
                        {
                            Id = 4217600,
                            EstadoId = 42,
                            Nome = "Siderópolis"
                        },
                        new
                        {
                            Id = 4217709,
                            EstadoId = 42,
                            Nome = "Sombrio"
                        },
                        new
                        {
                            Id = 4217758,
                            EstadoId = 42,
                            Nome = "Sul Brasil"
                        },
                        new
                        {
                            Id = 4217808,
                            EstadoId = 42,
                            Nome = "Taió"
                        },
                        new
                        {
                            Id = 4217907,
                            EstadoId = 42,
                            Nome = "Tangará"
                        },
                        new
                        {
                            Id = 4217956,
                            EstadoId = 42,
                            Nome = "Tigrinhos"
                        },
                        new
                        {
                            Id = 4218004,
                            EstadoId = 42,
                            Nome = "Tijucas"
                        },
                        new
                        {
                            Id = 4218103,
                            EstadoId = 42,
                            Nome = "Timbé do Sul"
                        },
                        new
                        {
                            Id = 4218202,
                            EstadoId = 42,
                            Nome = "Timbó"
                        },
                        new
                        {
                            Id = 4218251,
                            EstadoId = 42,
                            Nome = "Timbó Grande"
                        },
                        new
                        {
                            Id = 4218301,
                            EstadoId = 42,
                            Nome = "Três Barras"
                        },
                        new
                        {
                            Id = 4218350,
                            EstadoId = 42,
                            Nome = "Treviso"
                        },
                        new
                        {
                            Id = 4218400,
                            EstadoId = 42,
                            Nome = "Treze de Maio"
                        },
                        new
                        {
                            Id = 4218509,
                            EstadoId = 42,
                            Nome = "Treze Tílias"
                        },
                        new
                        {
                            Id = 4218608,
                            EstadoId = 42,
                            Nome = "Trombudo Central"
                        },
                        new
                        {
                            Id = 4218707,
                            EstadoId = 42,
                            Nome = "Tubarão"
                        },
                        new
                        {
                            Id = 4218756,
                            EstadoId = 42,
                            Nome = "Tunápolis"
                        },
                        new
                        {
                            Id = 4218806,
                            EstadoId = 42,
                            Nome = "Turvo"
                        },
                        new
                        {
                            Id = 4218855,
                            EstadoId = 42,
                            Nome = "União do Oeste"
                        },
                        new
                        {
                            Id = 4218905,
                            EstadoId = 42,
                            Nome = "Urubici"
                        },
                        new
                        {
                            Id = 4218954,
                            EstadoId = 42,
                            Nome = "Urupema"
                        },
                        new
                        {
                            Id = 4219002,
                            EstadoId = 42,
                            Nome = "Urussanga"
                        },
                        new
                        {
                            Id = 4219101,
                            EstadoId = 42,
                            Nome = "Vargeão"
                        },
                        new
                        {
                            Id = 4219150,
                            EstadoId = 42,
                            Nome = "Vargem"
                        },
                        new
                        {
                            Id = 4219176,
                            EstadoId = 42,
                            Nome = "Vargem Bonita"
                        },
                        new
                        {
                            Id = 4219200,
                            EstadoId = 42,
                            Nome = "Vidal Ramos"
                        },
                        new
                        {
                            Id = 4219309,
                            EstadoId = 42,
                            Nome = "Videira"
                        },
                        new
                        {
                            Id = 4219358,
                            EstadoId = 42,
                            Nome = "Vitor Meireles"
                        },
                        new
                        {
                            Id = 4219408,
                            EstadoId = 42,
                            Nome = "Witmarsum"
                        },
                        new
                        {
                            Id = 4219507,
                            EstadoId = 42,
                            Nome = "Xanxerê"
                        },
                        new
                        {
                            Id = 4219606,
                            EstadoId = 42,
                            Nome = "Xavantina"
                        },
                        new
                        {
                            Id = 4219705,
                            EstadoId = 42,
                            Nome = "Xaxim"
                        },
                        new
                        {
                            Id = 4219853,
                            EstadoId = 42,
                            Nome = "Zortéa"
                        },
                        new
                        {
                            Id = 4220000,
                            EstadoId = 42,
                            Nome = "Balneário Rincão"
                        },
                        new
                        {
                            Id = 4300034,
                            EstadoId = 43,
                            Nome = "Aceguá"
                        },
                        new
                        {
                            Id = 4300059,
                            EstadoId = 43,
                            Nome = "Água Santa"
                        },
                        new
                        {
                            Id = 4300109,
                            EstadoId = 43,
                            Nome = "Agudo"
                        },
                        new
                        {
                            Id = 4300208,
                            EstadoId = 43,
                            Nome = "Ajuricaba"
                        },
                        new
                        {
                            Id = 4300307,
                            EstadoId = 43,
                            Nome = "Alecrim"
                        },
                        new
                        {
                            Id = 4300406,
                            EstadoId = 43,
                            Nome = "Alegrete"
                        },
                        new
                        {
                            Id = 4300455,
                            EstadoId = 43,
                            Nome = "Alegria"
                        },
                        new
                        {
                            Id = 4300471,
                            EstadoId = 43,
                            Nome = "Almirante Tamandaré do Sul"
                        },
                        new
                        {
                            Id = 4300505,
                            EstadoId = 43,
                            Nome = "Alpestre"
                        },
                        new
                        {
                            Id = 4300554,
                            EstadoId = 43,
                            Nome = "Alto Alegre"
                        },
                        new
                        {
                            Id = 4300570,
                            EstadoId = 43,
                            Nome = "Alto Feliz"
                        },
                        new
                        {
                            Id = 4300604,
                            EstadoId = 43,
                            Nome = "Alvorada"
                        },
                        new
                        {
                            Id = 4300638,
                            EstadoId = 43,
                            Nome = "Amaral Ferrador"
                        },
                        new
                        {
                            Id = 4300646,
                            EstadoId = 43,
                            Nome = "Ametista do Sul"
                        },
                        new
                        {
                            Id = 4300661,
                            EstadoId = 43,
                            Nome = "André da Rocha"
                        },
                        new
                        {
                            Id = 4300703,
                            EstadoId = 43,
                            Nome = "Anta Gorda"
                        },
                        new
                        {
                            Id = 4300802,
                            EstadoId = 43,
                            Nome = "Antônio Prado"
                        },
                        new
                        {
                            Id = 4300851,
                            EstadoId = 43,
                            Nome = "Arambaré"
                        },
                        new
                        {
                            Id = 4300877,
                            EstadoId = 43,
                            Nome = "Araricá"
                        },
                        new
                        {
                            Id = 4300901,
                            EstadoId = 43,
                            Nome = "Aratiba"
                        },
                        new
                        {
                            Id = 4301008,
                            EstadoId = 43,
                            Nome = "Arroio do Meio"
                        },
                        new
                        {
                            Id = 4301073,
                            EstadoId = 43,
                            Nome = "Arroio do Padre"
                        },
                        new
                        {
                            Id = 4301057,
                            EstadoId = 43,
                            Nome = "Arroio do Sal"
                        },
                        new
                        {
                            Id = 4301206,
                            EstadoId = 43,
                            Nome = "Arroio do Tigre"
                        },
                        new
                        {
                            Id = 4301107,
                            EstadoId = 43,
                            Nome = "Arroio dos Ratos"
                        },
                        new
                        {
                            Id = 4301305,
                            EstadoId = 43,
                            Nome = "Arroio Grande"
                        },
                        new
                        {
                            Id = 4301404,
                            EstadoId = 43,
                            Nome = "Arvorezinha"
                        },
                        new
                        {
                            Id = 4314548,
                            EstadoId = 43,
                            Nome = "Pinto Bandeira"
                        },
                        new
                        {
                            Id = 4301503,
                            EstadoId = 43,
                            Nome = "Augusto Pestana"
                        },
                        new
                        {
                            Id = 4301552,
                            EstadoId = 43,
                            Nome = "Áurea"
                        },
                        new
                        {
                            Id = 4301602,
                            EstadoId = 43,
                            Nome = "Bagé"
                        },
                        new
                        {
                            Id = 4301636,
                            EstadoId = 43,
                            Nome = "Balneário Pinhal"
                        },
                        new
                        {
                            Id = 4301651,
                            EstadoId = 43,
                            Nome = "Barão"
                        },
                        new
                        {
                            Id = 4301701,
                            EstadoId = 43,
                            Nome = "Barão de Cotegipe"
                        },
                        new
                        {
                            Id = 4301750,
                            EstadoId = 43,
                            Nome = "Barão do Triunfo"
                        },
                        new
                        {
                            Id = 4301859,
                            EstadoId = 43,
                            Nome = "Barra do Guarita"
                        },
                        new
                        {
                            Id = 4301875,
                            EstadoId = 43,
                            Nome = "Barra do Quaraí"
                        },
                        new
                        {
                            Id = 4301909,
                            EstadoId = 43,
                            Nome = "Barra do Ribeiro"
                        },
                        new
                        {
                            Id = 4301925,
                            EstadoId = 43,
                            Nome = "Barra do Rio Azul"
                        },
                        new
                        {
                            Id = 4301958,
                            EstadoId = 43,
                            Nome = "Barra Funda"
                        },
                        new
                        {
                            Id = 4301800,
                            EstadoId = 43,
                            Nome = "Barracão"
                        },
                        new
                        {
                            Id = 4302006,
                            EstadoId = 43,
                            Nome = "Barros Cassal"
                        },
                        new
                        {
                            Id = 4302055,
                            EstadoId = 43,
                            Nome = "Benjamin Constant do Sul"
                        },
                        new
                        {
                            Id = 4302105,
                            EstadoId = 43,
                            Nome = "Bento Gonçalves"
                        },
                        new
                        {
                            Id = 4302154,
                            EstadoId = 43,
                            Nome = "Boa Vista das Missões"
                        },
                        new
                        {
                            Id = 4302204,
                            EstadoId = 43,
                            Nome = "Boa Vista do Buricá"
                        },
                        new
                        {
                            Id = 4302220,
                            EstadoId = 43,
                            Nome = "Boa Vista do Cadeado"
                        },
                        new
                        {
                            Id = 4302238,
                            EstadoId = 43,
                            Nome = "Boa Vista do Incra"
                        },
                        new
                        {
                            Id = 4302253,
                            EstadoId = 43,
                            Nome = "Boa Vista do Sul"
                        },
                        new
                        {
                            Id = 4302303,
                            EstadoId = 43,
                            Nome = "Bom Jesus"
                        },
                        new
                        {
                            Id = 4302352,
                            EstadoId = 43,
                            Nome = "Bom Princípio"
                        },
                        new
                        {
                            Id = 4302378,
                            EstadoId = 43,
                            Nome = "Bom Progresso"
                        },
                        new
                        {
                            Id = 4302402,
                            EstadoId = 43,
                            Nome = "Bom Retiro do Sul"
                        },
                        new
                        {
                            Id = 4302451,
                            EstadoId = 43,
                            Nome = "Boqueirão do Leão"
                        },
                        new
                        {
                            Id = 4302501,
                            EstadoId = 43,
                            Nome = "Bossoroca"
                        },
                        new
                        {
                            Id = 4302584,
                            EstadoId = 43,
                            Nome = "Bozano"
                        },
                        new
                        {
                            Id = 4302600,
                            EstadoId = 43,
                            Nome = "Braga"
                        },
                        new
                        {
                            Id = 4302659,
                            EstadoId = 43,
                            Nome = "Brochier"
                        },
                        new
                        {
                            Id = 4302709,
                            EstadoId = 43,
                            Nome = "Butiá"
                        },
                        new
                        {
                            Id = 4302808,
                            EstadoId = 43,
                            Nome = "Caçapava do Sul"
                        },
                        new
                        {
                            Id = 4302907,
                            EstadoId = 43,
                            Nome = "Cacequi"
                        },
                        new
                        {
                            Id = 4303004,
                            EstadoId = 43,
                            Nome = "Cachoeira do Sul"
                        },
                        new
                        {
                            Id = 4303103,
                            EstadoId = 43,
                            Nome = "Cachoeirinha"
                        },
                        new
                        {
                            Id = 4303202,
                            EstadoId = 43,
                            Nome = "Cacique Doble"
                        },
                        new
                        {
                            Id = 4303301,
                            EstadoId = 43,
                            Nome = "Caibaté"
                        },
                        new
                        {
                            Id = 4303400,
                            EstadoId = 43,
                            Nome = "Caiçara"
                        },
                        new
                        {
                            Id = 4303509,
                            EstadoId = 43,
                            Nome = "Camaquã"
                        },
                        new
                        {
                            Id = 4303558,
                            EstadoId = 43,
                            Nome = "Camargo"
                        },
                        new
                        {
                            Id = 4303608,
                            EstadoId = 43,
                            Nome = "Cambará do Sul"
                        },
                        new
                        {
                            Id = 4303673,
                            EstadoId = 43,
                            Nome = "Campestre da Serra"
                        },
                        new
                        {
                            Id = 4303707,
                            EstadoId = 43,
                            Nome = "Campina das Missões"
                        },
                        new
                        {
                            Id = 4303806,
                            EstadoId = 43,
                            Nome = "Campinas do Sul"
                        },
                        new
                        {
                            Id = 4303905,
                            EstadoId = 43,
                            Nome = "Campo Bom"
                        },
                        new
                        {
                            Id = 4304002,
                            EstadoId = 43,
                            Nome = "Campo Novo"
                        },
                        new
                        {
                            Id = 4304101,
                            EstadoId = 43,
                            Nome = "Campos Borges"
                        },
                        new
                        {
                            Id = 4304200,
                            EstadoId = 43,
                            Nome = "Candelária"
                        },
                        new
                        {
                            Id = 4304309,
                            EstadoId = 43,
                            Nome = "Cândido Godói"
                        },
                        new
                        {
                            Id = 4304358,
                            EstadoId = 43,
                            Nome = "Candiota"
                        },
                        new
                        {
                            Id = 4304408,
                            EstadoId = 43,
                            Nome = "Canela"
                        },
                        new
                        {
                            Id = 4304507,
                            EstadoId = 43,
                            Nome = "Canguçu"
                        },
                        new
                        {
                            Id = 4304606,
                            EstadoId = 43,
                            Nome = "Canoas"
                        },
                        new
                        {
                            Id = 4304614,
                            EstadoId = 43,
                            Nome = "Canudos do Vale"
                        },
                        new
                        {
                            Id = 4304622,
                            EstadoId = 43,
                            Nome = "Capão Bonito do Sul"
                        },
                        new
                        {
                            Id = 4304630,
                            EstadoId = 43,
                            Nome = "Capão da Canoa"
                        },
                        new
                        {
                            Id = 4304655,
                            EstadoId = 43,
                            Nome = "Capão do Cipó"
                        },
                        new
                        {
                            Id = 4304663,
                            EstadoId = 43,
                            Nome = "Capão do Leão"
                        },
                        new
                        {
                            Id = 4304689,
                            EstadoId = 43,
                            Nome = "Capela de Santana"
                        },
                        new
                        {
                            Id = 4304697,
                            EstadoId = 43,
                            Nome = "Capitão"
                        },
                        new
                        {
                            Id = 4304671,
                            EstadoId = 43,
                            Nome = "Capivari do Sul"
                        },
                        new
                        {
                            Id = 4304713,
                            EstadoId = 43,
                            Nome = "Caraá"
                        },
                        new
                        {
                            Id = 4304705,
                            EstadoId = 43,
                            Nome = "Carazinho"
                        },
                        new
                        {
                            Id = 4304804,
                            EstadoId = 43,
                            Nome = "Carlos Barbosa"
                        },
                        new
                        {
                            Id = 4304853,
                            EstadoId = 43,
                            Nome = "Carlos Gomes"
                        },
                        new
                        {
                            Id = 4304903,
                            EstadoId = 43,
                            Nome = "Casca"
                        },
                        new
                        {
                            Id = 4304952,
                            EstadoId = 43,
                            Nome = "Caseiros"
                        },
                        new
                        {
                            Id = 4305009,
                            EstadoId = 43,
                            Nome = "Catuípe"
                        },
                        new
                        {
                            Id = 4305108,
                            EstadoId = 43,
                            Nome = "Caxias do Sul"
                        },
                        new
                        {
                            Id = 4305116,
                            EstadoId = 43,
                            Nome = "Centenário"
                        },
                        new
                        {
                            Id = 4305124,
                            EstadoId = 43,
                            Nome = "Cerrito"
                        },
                        new
                        {
                            Id = 4305132,
                            EstadoId = 43,
                            Nome = "Cerro Branco"
                        },
                        new
                        {
                            Id = 4305157,
                            EstadoId = 43,
                            Nome = "Cerro Grande"
                        },
                        new
                        {
                            Id = 4305173,
                            EstadoId = 43,
                            Nome = "Cerro Grande do Sul"
                        },
                        new
                        {
                            Id = 4305207,
                            EstadoId = 43,
                            Nome = "Cerro Largo"
                        },
                        new
                        {
                            Id = 4305306,
                            EstadoId = 43,
                            Nome = "Chapada"
                        },
                        new
                        {
                            Id = 4305355,
                            EstadoId = 43,
                            Nome = "Charqueadas"
                        },
                        new
                        {
                            Id = 4305371,
                            EstadoId = 43,
                            Nome = "Charrua"
                        },
                        new
                        {
                            Id = 4305405,
                            EstadoId = 43,
                            Nome = "Chiapetta"
                        },
                        new
                        {
                            Id = 4305439,
                            EstadoId = 43,
                            Nome = "Chuí"
                        },
                        new
                        {
                            Id = 4305447,
                            EstadoId = 43,
                            Nome = "Chuvisca"
                        },
                        new
                        {
                            Id = 4305454,
                            EstadoId = 43,
                            Nome = "Cidreira"
                        },
                        new
                        {
                            Id = 4305504,
                            EstadoId = 43,
                            Nome = "Ciríaco"
                        },
                        new
                        {
                            Id = 4305587,
                            EstadoId = 43,
                            Nome = "Colinas"
                        },
                        new
                        {
                            Id = 4305603,
                            EstadoId = 43,
                            Nome = "Colorado"
                        },
                        new
                        {
                            Id = 4305702,
                            EstadoId = 43,
                            Nome = "Condor"
                        },
                        new
                        {
                            Id = 4305801,
                            EstadoId = 43,
                            Nome = "Constantina"
                        },
                        new
                        {
                            Id = 4305835,
                            EstadoId = 43,
                            Nome = "Coqueiro Baixo"
                        },
                        new
                        {
                            Id = 4305850,
                            EstadoId = 43,
                            Nome = "Coqueiros do Sul"
                        },
                        new
                        {
                            Id = 4305871,
                            EstadoId = 43,
                            Nome = "Coronel Barros"
                        },
                        new
                        {
                            Id = 4305900,
                            EstadoId = 43,
                            Nome = "Coronel Bicaco"
                        },
                        new
                        {
                            Id = 4305934,
                            EstadoId = 43,
                            Nome = "Coronel Pilar"
                        },
                        new
                        {
                            Id = 4305959,
                            EstadoId = 43,
                            Nome = "Cotiporã"
                        },
                        new
                        {
                            Id = 4305975,
                            EstadoId = 43,
                            Nome = "Coxilha"
                        },
                        new
                        {
                            Id = 4306007,
                            EstadoId = 43,
                            Nome = "Crissiumal"
                        },
                        new
                        {
                            Id = 4306056,
                            EstadoId = 43,
                            Nome = "Cristal"
                        },
                        new
                        {
                            Id = 4306072,
                            EstadoId = 43,
                            Nome = "Cristal do Sul"
                        },
                        new
                        {
                            Id = 4306106,
                            EstadoId = 43,
                            Nome = "Cruz Alta"
                        },
                        new
                        {
                            Id = 4306130,
                            EstadoId = 43,
                            Nome = "Cruzaltense"
                        },
                        new
                        {
                            Id = 4306205,
                            EstadoId = 43,
                            Nome = "Cruzeiro do Sul"
                        },
                        new
                        {
                            Id = 4306304,
                            EstadoId = 43,
                            Nome = "David Canabarro"
                        },
                        new
                        {
                            Id = 4306320,
                            EstadoId = 43,
                            Nome = "Derrubadas"
                        },
                        new
                        {
                            Id = 4306353,
                            EstadoId = 43,
                            Nome = "Dezesseis de Novembro"
                        },
                        new
                        {
                            Id = 4306379,
                            EstadoId = 43,
                            Nome = "Dilermando de Aguiar"
                        },
                        new
                        {
                            Id = 4306403,
                            EstadoId = 43,
                            Nome = "Dois Irmãos"
                        },
                        new
                        {
                            Id = 4306429,
                            EstadoId = 43,
                            Nome = "Dois Irmãos das Missões"
                        },
                        new
                        {
                            Id = 4306452,
                            EstadoId = 43,
                            Nome = "Dois Lajeados"
                        },
                        new
                        {
                            Id = 4306502,
                            EstadoId = 43,
                            Nome = "Dom Feliciano"
                        },
                        new
                        {
                            Id = 4306601,
                            EstadoId = 43,
                            Nome = "Dom Pedrito"
                        },
                        new
                        {
                            Id = 4306551,
                            EstadoId = 43,
                            Nome = "Dom Pedro de Alcântara"
                        },
                        new
                        {
                            Id = 4306700,
                            EstadoId = 43,
                            Nome = "Dona Francisca"
                        },
                        new
                        {
                            Id = 4306734,
                            EstadoId = 43,
                            Nome = "Doutor Maurício Cardoso"
                        },
                        new
                        {
                            Id = 4306759,
                            EstadoId = 43,
                            Nome = "Doutor Ricardo"
                        },
                        new
                        {
                            Id = 4306767,
                            EstadoId = 43,
                            Nome = "Eldorado do Sul"
                        },
                        new
                        {
                            Id = 4306809,
                            EstadoId = 43,
                            Nome = "Encantado"
                        },
                        new
                        {
                            Id = 4306908,
                            EstadoId = 43,
                            Nome = "Encruzilhada do Sul"
                        },
                        new
                        {
                            Id = 4306924,
                            EstadoId = 43,
                            Nome = "Engenho Velho"
                        },
                        new
                        {
                            Id = 4306957,
                            EstadoId = 43,
                            Nome = "Entre Rios do Sul"
                        },
                        new
                        {
                            Id = 4306932,
                            EstadoId = 43,
                            Nome = "Entre-Ijuís"
                        },
                        new
                        {
                            Id = 4306973,
                            EstadoId = 43,
                            Nome = "Erebango"
                        },
                        new
                        {
                            Id = 4307005,
                            EstadoId = 43,
                            Nome = "Erechim"
                        },
                        new
                        {
                            Id = 4307054,
                            EstadoId = 43,
                            Nome = "Ernestina"
                        },
                        new
                        {
                            Id = 4307203,
                            EstadoId = 43,
                            Nome = "Erval Grande"
                        },
                        new
                        {
                            Id = 4307302,
                            EstadoId = 43,
                            Nome = "Erval Seco"
                        },
                        new
                        {
                            Id = 4307401,
                            EstadoId = 43,
                            Nome = "Esmeralda"
                        },
                        new
                        {
                            Id = 4307450,
                            EstadoId = 43,
                            Nome = "Esperança do Sul"
                        },
                        new
                        {
                            Id = 4307500,
                            EstadoId = 43,
                            Nome = "Espumoso"
                        },
                        new
                        {
                            Id = 4307559,
                            EstadoId = 43,
                            Nome = "Estação"
                        },
                        new
                        {
                            Id = 4307609,
                            EstadoId = 43,
                            Nome = "Estância Velha"
                        },
                        new
                        {
                            Id = 4307708,
                            EstadoId = 43,
                            Nome = "Esteio"
                        },
                        new
                        {
                            Id = 4307807,
                            EstadoId = 43,
                            Nome = "Estrela"
                        },
                        new
                        {
                            Id = 4307815,
                            EstadoId = 43,
                            Nome = "Estrela Velha"
                        },
                        new
                        {
                            Id = 4307831,
                            EstadoId = 43,
                            Nome = "Eugênio de Castro"
                        },
                        new
                        {
                            Id = 4307864,
                            EstadoId = 43,
                            Nome = "Fagundes Varela"
                        },
                        new
                        {
                            Id = 4307906,
                            EstadoId = 43,
                            Nome = "Farroupilha"
                        },
                        new
                        {
                            Id = 4308003,
                            EstadoId = 43,
                            Nome = "Faxinal do Soturno"
                        },
                        new
                        {
                            Id = 4308052,
                            EstadoId = 43,
                            Nome = "Faxinalzinho"
                        },
                        new
                        {
                            Id = 4308078,
                            EstadoId = 43,
                            Nome = "Fazenda Vilanova"
                        },
                        new
                        {
                            Id = 4308102,
                            EstadoId = 43,
                            Nome = "Feliz"
                        },
                        new
                        {
                            Id = 4308201,
                            EstadoId = 43,
                            Nome = "Flores da Cunha"
                        },
                        new
                        {
                            Id = 4308250,
                            EstadoId = 43,
                            Nome = "Floriano Peixoto"
                        },
                        new
                        {
                            Id = 4308300,
                            EstadoId = 43,
                            Nome = "Fontoura Xavier"
                        },
                        new
                        {
                            Id = 4308409,
                            EstadoId = 43,
                            Nome = "Formigueiro"
                        },
                        new
                        {
                            Id = 4308433,
                            EstadoId = 43,
                            Nome = "Forquetinha"
                        },
                        new
                        {
                            Id = 4308458,
                            EstadoId = 43,
                            Nome = "Fortaleza dos Valos"
                        },
                        new
                        {
                            Id = 4308508,
                            EstadoId = 43,
                            Nome = "Frederico Westphalen"
                        },
                        new
                        {
                            Id = 4308607,
                            EstadoId = 43,
                            Nome = "Garibaldi"
                        },
                        new
                        {
                            Id = 4308656,
                            EstadoId = 43,
                            Nome = "Garruchos"
                        },
                        new
                        {
                            Id = 4308706,
                            EstadoId = 43,
                            Nome = "Gaurama"
                        },
                        new
                        {
                            Id = 4308805,
                            EstadoId = 43,
                            Nome = "General Câmara"
                        },
                        new
                        {
                            Id = 4308854,
                            EstadoId = 43,
                            Nome = "Gentil"
                        },
                        new
                        {
                            Id = 4308904,
                            EstadoId = 43,
                            Nome = "Getúlio Vargas"
                        },
                        new
                        {
                            Id = 4309001,
                            EstadoId = 43,
                            Nome = "Giruá"
                        },
                        new
                        {
                            Id = 4309050,
                            EstadoId = 43,
                            Nome = "Glorinha"
                        },
                        new
                        {
                            Id = 4309100,
                            EstadoId = 43,
                            Nome = "Gramado"
                        },
                        new
                        {
                            Id = 4309126,
                            EstadoId = 43,
                            Nome = "Gramado dos Loureiros"
                        },
                        new
                        {
                            Id = 4309159,
                            EstadoId = 43,
                            Nome = "Gramado Xavier"
                        },
                        new
                        {
                            Id = 4309209,
                            EstadoId = 43,
                            Nome = "Gravataí"
                        },
                        new
                        {
                            Id = 4309258,
                            EstadoId = 43,
                            Nome = "Guabiju"
                        },
                        new
                        {
                            Id = 4309308,
                            EstadoId = 43,
                            Nome = "Guaíba"
                        },
                        new
                        {
                            Id = 4309407,
                            EstadoId = 43,
                            Nome = "Guaporé"
                        },
                        new
                        {
                            Id = 4309506,
                            EstadoId = 43,
                            Nome = "Guarani das Missões"
                        },
                        new
                        {
                            Id = 4309555,
                            EstadoId = 43,
                            Nome = "Harmonia"
                        },
                        new
                        {
                            Id = 4307104,
                            EstadoId = 43,
                            Nome = "Herval"
                        },
                        new
                        {
                            Id = 4309571,
                            EstadoId = 43,
                            Nome = "Herveiras"
                        },
                        new
                        {
                            Id = 4309605,
                            EstadoId = 43,
                            Nome = "Horizontina"
                        },
                        new
                        {
                            Id = 4309654,
                            EstadoId = 43,
                            Nome = "Hulha Negra"
                        },
                        new
                        {
                            Id = 4309704,
                            EstadoId = 43,
                            Nome = "Humaitá"
                        },
                        new
                        {
                            Id = 4309753,
                            EstadoId = 43,
                            Nome = "Ibarama"
                        },
                        new
                        {
                            Id = 4309803,
                            EstadoId = 43,
                            Nome = "Ibiaçá"
                        },
                        new
                        {
                            Id = 4309902,
                            EstadoId = 43,
                            Nome = "Ibiraiaras"
                        },
                        new
                        {
                            Id = 4309951,
                            EstadoId = 43,
                            Nome = "Ibirapuitã"
                        },
                        new
                        {
                            Id = 4310009,
                            EstadoId = 43,
                            Nome = "Ibirubá"
                        },
                        new
                        {
                            Id = 4310108,
                            EstadoId = 43,
                            Nome = "Igrejinha"
                        },
                        new
                        {
                            Id = 4310207,
                            EstadoId = 43,
                            Nome = "Ijuí"
                        },
                        new
                        {
                            Id = 4310306,
                            EstadoId = 43,
                            Nome = "Ilópolis"
                        },
                        new
                        {
                            Id = 4310330,
                            EstadoId = 43,
                            Nome = "Imbé"
                        },
                        new
                        {
                            Id = 4310363,
                            EstadoId = 43,
                            Nome = "Imigrante"
                        },
                        new
                        {
                            Id = 4310405,
                            EstadoId = 43,
                            Nome = "Independência"
                        },
                        new
                        {
                            Id = 4310413,
                            EstadoId = 43,
                            Nome = "Inhacorá"
                        },
                        new
                        {
                            Id = 4310439,
                            EstadoId = 43,
                            Nome = "Ipê"
                        },
                        new
                        {
                            Id = 4310462,
                            EstadoId = 43,
                            Nome = "Ipiranga do Sul"
                        },
                        new
                        {
                            Id = 4310504,
                            EstadoId = 43,
                            Nome = "Iraí"
                        },
                        new
                        {
                            Id = 4310538,
                            EstadoId = 43,
                            Nome = "Itaara"
                        },
                        new
                        {
                            Id = 4310553,
                            EstadoId = 43,
                            Nome = "Itacurubi"
                        },
                        new
                        {
                            Id = 4310579,
                            EstadoId = 43,
                            Nome = "Itapuca"
                        },
                        new
                        {
                            Id = 4310603,
                            EstadoId = 43,
                            Nome = "Itaqui"
                        },
                        new
                        {
                            Id = 4310652,
                            EstadoId = 43,
                            Nome = "Itati"
                        },
                        new
                        {
                            Id = 4310702,
                            EstadoId = 43,
                            Nome = "Itatiba do Sul"
                        },
                        new
                        {
                            Id = 4310751,
                            EstadoId = 43,
                            Nome = "Ivorá"
                        },
                        new
                        {
                            Id = 4310801,
                            EstadoId = 43,
                            Nome = "Ivoti"
                        },
                        new
                        {
                            Id = 4310850,
                            EstadoId = 43,
                            Nome = "Jaboticaba"
                        },
                        new
                        {
                            Id = 4310876,
                            EstadoId = 43,
                            Nome = "Jacuizinho"
                        },
                        new
                        {
                            Id = 4310900,
                            EstadoId = 43,
                            Nome = "Jacutinga"
                        },
                        new
                        {
                            Id = 4311007,
                            EstadoId = 43,
                            Nome = "Jaguarão"
                        },
                        new
                        {
                            Id = 4311106,
                            EstadoId = 43,
                            Nome = "Jaguari"
                        },
                        new
                        {
                            Id = 4311122,
                            EstadoId = 43,
                            Nome = "Jaquirana"
                        },
                        new
                        {
                            Id = 4311130,
                            EstadoId = 43,
                            Nome = "Jari"
                        },
                        new
                        {
                            Id = 4311155,
                            EstadoId = 43,
                            Nome = "Jóia"
                        },
                        new
                        {
                            Id = 4311205,
                            EstadoId = 43,
                            Nome = "Júlio de Castilhos"
                        },
                        new
                        {
                            Id = 4311239,
                            EstadoId = 43,
                            Nome = "Lagoa Bonita do Sul"
                        },
                        new
                        {
                            Id = 4311270,
                            EstadoId = 43,
                            Nome = "Lagoa dos Três Cantos"
                        },
                        new
                        {
                            Id = 4311304,
                            EstadoId = 43,
                            Nome = "Lagoa Vermelha"
                        },
                        new
                        {
                            Id = 4311254,
                            EstadoId = 43,
                            Nome = "Lagoão"
                        },
                        new
                        {
                            Id = 4311403,
                            EstadoId = 43,
                            Nome = "Lajeado"
                        },
                        new
                        {
                            Id = 4311429,
                            EstadoId = 43,
                            Nome = "Lajeado do Bugre"
                        },
                        new
                        {
                            Id = 4311502,
                            EstadoId = 43,
                            Nome = "Lavras do Sul"
                        },
                        new
                        {
                            Id = 4311601,
                            EstadoId = 43,
                            Nome = "Liberato Salzano"
                        },
                        new
                        {
                            Id = 4311627,
                            EstadoId = 43,
                            Nome = "Lindolfo Collor"
                        },
                        new
                        {
                            Id = 4311643,
                            EstadoId = 43,
                            Nome = "Linha Nova"
                        },
                        new
                        {
                            Id = 4311718,
                            EstadoId = 43,
                            Nome = "Maçambara"
                        },
                        new
                        {
                            Id = 4311700,
                            EstadoId = 43,
                            Nome = "Machadinho"
                        },
                        new
                        {
                            Id = 4311734,
                            EstadoId = 43,
                            Nome = "Mampituba"
                        },
                        new
                        {
                            Id = 4311759,
                            EstadoId = 43,
                            Nome = "Manoel Viana"
                        },
                        new
                        {
                            Id = 4311775,
                            EstadoId = 43,
                            Nome = "Maquiné"
                        },
                        new
                        {
                            Id = 4311791,
                            EstadoId = 43,
                            Nome = "Maratá"
                        },
                        new
                        {
                            Id = 4311809,
                            EstadoId = 43,
                            Nome = "Marau"
                        },
                        new
                        {
                            Id = 4311908,
                            EstadoId = 43,
                            Nome = "Marcelino Ramos"
                        },
                        new
                        {
                            Id = 4311981,
                            EstadoId = 43,
                            Nome = "Mariana Pimentel"
                        },
                        new
                        {
                            Id = 4312005,
                            EstadoId = 43,
                            Nome = "Mariano Moro"
                        },
                        new
                        {
                            Id = 4312054,
                            EstadoId = 43,
                            Nome = "Marques de Souza"
                        },
                        new
                        {
                            Id = 4312104,
                            EstadoId = 43,
                            Nome = "Mata"
                        },
                        new
                        {
                            Id = 4312138,
                            EstadoId = 43,
                            Nome = "Mato Castelhano"
                        },
                        new
                        {
                            Id = 4312153,
                            EstadoId = 43,
                            Nome = "Mato Leitão"
                        },
                        new
                        {
                            Id = 4312179,
                            EstadoId = 43,
                            Nome = "Mato Queimado"
                        },
                        new
                        {
                            Id = 4312203,
                            EstadoId = 43,
                            Nome = "Maximiliano de Almeida"
                        },
                        new
                        {
                            Id = 4312252,
                            EstadoId = 43,
                            Nome = "Minas do Leão"
                        },
                        new
                        {
                            Id = 4312302,
                            EstadoId = 43,
                            Nome = "Miraguaí"
                        },
                        new
                        {
                            Id = 4312351,
                            EstadoId = 43,
                            Nome = "Montauri"
                        },
                        new
                        {
                            Id = 4312377,
                            EstadoId = 43,
                            Nome = "Monte Alegre dos Campos"
                        },
                        new
                        {
                            Id = 4312385,
                            EstadoId = 43,
                            Nome = "Monte Belo do Sul"
                        },
                        new
                        {
                            Id = 4312401,
                            EstadoId = 43,
                            Nome = "Montenegro"
                        },
                        new
                        {
                            Id = 4312427,
                            EstadoId = 43,
                            Nome = "Mormaço"
                        },
                        new
                        {
                            Id = 4312443,
                            EstadoId = 43,
                            Nome = "Morrinhos do Sul"
                        },
                        new
                        {
                            Id = 4312450,
                            EstadoId = 43,
                            Nome = "Morro Redondo"
                        },
                        new
                        {
                            Id = 4312476,
                            EstadoId = 43,
                            Nome = "Morro Reuter"
                        },
                        new
                        {
                            Id = 4312500,
                            EstadoId = 43,
                            Nome = "Mostardas"
                        },
                        new
                        {
                            Id = 4312609,
                            EstadoId = 43,
                            Nome = "Muçum"
                        },
                        new
                        {
                            Id = 4312617,
                            EstadoId = 43,
                            Nome = "Muitos Capões"
                        },
                        new
                        {
                            Id = 4312625,
                            EstadoId = 43,
                            Nome = "Muliterno"
                        },
                        new
                        {
                            Id = 4312658,
                            EstadoId = 43,
                            Nome = "Não-Me-Toque"
                        },
                        new
                        {
                            Id = 4312674,
                            EstadoId = 43,
                            Nome = "Nicolau Vergueiro"
                        },
                        new
                        {
                            Id = 4312708,
                            EstadoId = 43,
                            Nome = "Nonoai"
                        },
                        new
                        {
                            Id = 4312757,
                            EstadoId = 43,
                            Nome = "Nova Alvorada"
                        },
                        new
                        {
                            Id = 4312807,
                            EstadoId = 43,
                            Nome = "Nova Araçá"
                        },
                        new
                        {
                            Id = 4312906,
                            EstadoId = 43,
                            Nome = "Nova Bassano"
                        },
                        new
                        {
                            Id = 4312955,
                            EstadoId = 43,
                            Nome = "Nova Boa Vista"
                        },
                        new
                        {
                            Id = 4313003,
                            EstadoId = 43,
                            Nome = "Nova Bréscia"
                        },
                        new
                        {
                            Id = 4313011,
                            EstadoId = 43,
                            Nome = "Nova Candelária"
                        },
                        new
                        {
                            Id = 4313037,
                            EstadoId = 43,
                            Nome = "Nova Esperança do Sul"
                        },
                        new
                        {
                            Id = 4313060,
                            EstadoId = 43,
                            Nome = "Nova Hartz"
                        },
                        new
                        {
                            Id = 4313086,
                            EstadoId = 43,
                            Nome = "Nova Pádua"
                        },
                        new
                        {
                            Id = 4313102,
                            EstadoId = 43,
                            Nome = "Nova Palma"
                        },
                        new
                        {
                            Id = 4313201,
                            EstadoId = 43,
                            Nome = "Nova Petrópolis"
                        },
                        new
                        {
                            Id = 4313300,
                            EstadoId = 43,
                            Nome = "Nova Prata"
                        },
                        new
                        {
                            Id = 4313334,
                            EstadoId = 43,
                            Nome = "Nova Ramada"
                        },
                        new
                        {
                            Id = 4313359,
                            EstadoId = 43,
                            Nome = "Nova Roma do Sul"
                        },
                        new
                        {
                            Id = 4313375,
                            EstadoId = 43,
                            Nome = "Nova Santa Rita"
                        },
                        new
                        {
                            Id = 4313490,
                            EstadoId = 43,
                            Nome = "Novo Barreiro"
                        },
                        new
                        {
                            Id = 4313391,
                            EstadoId = 43,
                            Nome = "Novo Cabrais"
                        },
                        new
                        {
                            Id = 4313409,
                            EstadoId = 43,
                            Nome = "Novo Hamburgo"
                        },
                        new
                        {
                            Id = 4313425,
                            EstadoId = 43,
                            Nome = "Novo Machado"
                        },
                        new
                        {
                            Id = 4313441,
                            EstadoId = 43,
                            Nome = "Novo Tiradentes"
                        },
                        new
                        {
                            Id = 4313466,
                            EstadoId = 43,
                            Nome = "Novo Xingu"
                        },
                        new
                        {
                            Id = 4313508,
                            EstadoId = 43,
                            Nome = "Osório"
                        },
                        new
                        {
                            Id = 4313607,
                            EstadoId = 43,
                            Nome = "Paim Filho"
                        },
                        new
                        {
                            Id = 4313656,
                            EstadoId = 43,
                            Nome = "Palmares do Sul"
                        },
                        new
                        {
                            Id = 4313706,
                            EstadoId = 43,
                            Nome = "Palmeira das Missões"
                        },
                        new
                        {
                            Id = 4313805,
                            EstadoId = 43,
                            Nome = "Palmitinho"
                        },
                        new
                        {
                            Id = 4313904,
                            EstadoId = 43,
                            Nome = "Panambi"
                        },
                        new
                        {
                            Id = 4313953,
                            EstadoId = 43,
                            Nome = "Pantano Grande"
                        },
                        new
                        {
                            Id = 4314001,
                            EstadoId = 43,
                            Nome = "Paraí"
                        },
                        new
                        {
                            Id = 4314027,
                            EstadoId = 43,
                            Nome = "Paraíso do Sul"
                        },
                        new
                        {
                            Id = 4314035,
                            EstadoId = 43,
                            Nome = "Pareci Novo"
                        },
                        new
                        {
                            Id = 4314050,
                            EstadoId = 43,
                            Nome = "Parobé"
                        },
                        new
                        {
                            Id = 4314068,
                            EstadoId = 43,
                            Nome = "Passa Sete"
                        },
                        new
                        {
                            Id = 4314076,
                            EstadoId = 43,
                            Nome = "Passo do Sobrado"
                        },
                        new
                        {
                            Id = 4314100,
                            EstadoId = 43,
                            Nome = "Passo Fundo"
                        },
                        new
                        {
                            Id = 4314134,
                            EstadoId = 43,
                            Nome = "Paulo Bento"
                        },
                        new
                        {
                            Id = 4314159,
                            EstadoId = 43,
                            Nome = "Paverama"
                        },
                        new
                        {
                            Id = 4314175,
                            EstadoId = 43,
                            Nome = "Pedras Altas"
                        },
                        new
                        {
                            Id = 4314209,
                            EstadoId = 43,
                            Nome = "Pedro Osório"
                        },
                        new
                        {
                            Id = 4314308,
                            EstadoId = 43,
                            Nome = "Pejuçara"
                        },
                        new
                        {
                            Id = 4314407,
                            EstadoId = 43,
                            Nome = "Pelotas"
                        },
                        new
                        {
                            Id = 4314423,
                            EstadoId = 43,
                            Nome = "Picada Café"
                        },
                        new
                        {
                            Id = 4314456,
                            EstadoId = 43,
                            Nome = "Pinhal"
                        },
                        new
                        {
                            Id = 4314464,
                            EstadoId = 43,
                            Nome = "Pinhal da Serra"
                        },
                        new
                        {
                            Id = 4314472,
                            EstadoId = 43,
                            Nome = "Pinhal Grande"
                        },
                        new
                        {
                            Id = 4314498,
                            EstadoId = 43,
                            Nome = "Pinheirinho do Vale"
                        },
                        new
                        {
                            Id = 4314506,
                            EstadoId = 43,
                            Nome = "Pinheiro Machado"
                        },
                        new
                        {
                            Id = 4314555,
                            EstadoId = 43,
                            Nome = "Pirapó"
                        },
                        new
                        {
                            Id = 4314605,
                            EstadoId = 43,
                            Nome = "Piratini"
                        },
                        new
                        {
                            Id = 4314704,
                            EstadoId = 43,
                            Nome = "Planalto"
                        },
                        new
                        {
                            Id = 4314753,
                            EstadoId = 43,
                            Nome = "Poço das Antas"
                        },
                        new
                        {
                            Id = 4314779,
                            EstadoId = 43,
                            Nome = "Pontão"
                        },
                        new
                        {
                            Id = 4314787,
                            EstadoId = 43,
                            Nome = "Ponte Preta"
                        },
                        new
                        {
                            Id = 4314803,
                            EstadoId = 43,
                            Nome = "Portão"
                        },
                        new
                        {
                            Id = 4314902,
                            EstadoId = 43,
                            Nome = "Porto Alegre"
                        },
                        new
                        {
                            Id = 4315008,
                            EstadoId = 43,
                            Nome = "Porto Lucena"
                        },
                        new
                        {
                            Id = 4315057,
                            EstadoId = 43,
                            Nome = "Porto Mauá"
                        },
                        new
                        {
                            Id = 4315073,
                            EstadoId = 43,
                            Nome = "Porto Vera Cruz"
                        },
                        new
                        {
                            Id = 4315107,
                            EstadoId = 43,
                            Nome = "Porto Xavier"
                        },
                        new
                        {
                            Id = 4315131,
                            EstadoId = 43,
                            Nome = "Pouso Novo"
                        },
                        new
                        {
                            Id = 4315149,
                            EstadoId = 43,
                            Nome = "Presidente Lucena"
                        },
                        new
                        {
                            Id = 4315156,
                            EstadoId = 43,
                            Nome = "Progresso"
                        },
                        new
                        {
                            Id = 4315172,
                            EstadoId = 43,
                            Nome = "Protásio Alves"
                        },
                        new
                        {
                            Id = 4315206,
                            EstadoId = 43,
                            Nome = "Putinga"
                        },
                        new
                        {
                            Id = 4315305,
                            EstadoId = 43,
                            Nome = "Quaraí"
                        },
                        new
                        {
                            Id = 4315313,
                            EstadoId = 43,
                            Nome = "Quatro Irmãos"
                        },
                        new
                        {
                            Id = 4315321,
                            EstadoId = 43,
                            Nome = "Quevedos"
                        },
                        new
                        {
                            Id = 4315354,
                            EstadoId = 43,
                            Nome = "Quinze de Novembro"
                        },
                        new
                        {
                            Id = 4315404,
                            EstadoId = 43,
                            Nome = "Redentora"
                        },
                        new
                        {
                            Id = 4315453,
                            EstadoId = 43,
                            Nome = "Relvado"
                        },
                        new
                        {
                            Id = 4315503,
                            EstadoId = 43,
                            Nome = "Restinga Seca"
                        },
                        new
                        {
                            Id = 4315552,
                            EstadoId = 43,
                            Nome = "Rio dos Índios"
                        },
                        new
                        {
                            Id = 4315602,
                            EstadoId = 43,
                            Nome = "Rio Grande"
                        },
                        new
                        {
                            Id = 4315701,
                            EstadoId = 43,
                            Nome = "Rio Pardo"
                        },
                        new
                        {
                            Id = 4315750,
                            EstadoId = 43,
                            Nome = "Riozinho"
                        },
                        new
                        {
                            Id = 4315800,
                            EstadoId = 43,
                            Nome = "Roca Sales"
                        },
                        new
                        {
                            Id = 4315909,
                            EstadoId = 43,
                            Nome = "Rodeio Bonito"
                        },
                        new
                        {
                            Id = 4315958,
                            EstadoId = 43,
                            Nome = "Rolador"
                        },
                        new
                        {
                            Id = 4316006,
                            EstadoId = 43,
                            Nome = "Rolante"
                        },
                        new
                        {
                            Id = 4316105,
                            EstadoId = 43,
                            Nome = "Ronda Alta"
                        },
                        new
                        {
                            Id = 4316204,
                            EstadoId = 43,
                            Nome = "Rondinha"
                        },
                        new
                        {
                            Id = 4316303,
                            EstadoId = 43,
                            Nome = "Roque Gonzales"
                        },
                        new
                        {
                            Id = 4316402,
                            EstadoId = 43,
                            Nome = "Rosário do Sul"
                        },
                        new
                        {
                            Id = 4316428,
                            EstadoId = 43,
                            Nome = "Sagrada Família"
                        },
                        new
                        {
                            Id = 4316436,
                            EstadoId = 43,
                            Nome = "Saldanha Marinho"
                        },
                        new
                        {
                            Id = 4316451,
                            EstadoId = 43,
                            Nome = "Salto do Jacuí"
                        },
                        new
                        {
                            Id = 4316477,
                            EstadoId = 43,
                            Nome = "Salvador das Missões"
                        },
                        new
                        {
                            Id = 4316501,
                            EstadoId = 43,
                            Nome = "Salvador do Sul"
                        },
                        new
                        {
                            Id = 4316600,
                            EstadoId = 43,
                            Nome = "Sananduva"
                        },
                        new
                        {
                            Id = 4316709,
                            EstadoId = 43,
                            Nome = "Santa Bárbara do Sul"
                        },
                        new
                        {
                            Id = 4316733,
                            EstadoId = 43,
                            Nome = "Santa Cecília do Sul"
                        },
                        new
                        {
                            Id = 4316758,
                            EstadoId = 43,
                            Nome = "Santa Clara do Sul"
                        },
                        new
                        {
                            Id = 4316808,
                            EstadoId = 43,
                            Nome = "Santa Cruz do Sul"
                        },
                        new
                        {
                            Id = 4316972,
                            EstadoId = 43,
                            Nome = "Santa Margarida do Sul"
                        },
                        new
                        {
                            Id = 4316907,
                            EstadoId = 43,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            Id = 4316956,
                            EstadoId = 43,
                            Nome = "Santa Maria do Herval"
                        },
                        new
                        {
                            Id = 4317202,
                            EstadoId = 43,
                            Nome = "Santa Rosa"
                        },
                        new
                        {
                            Id = 4317251,
                            EstadoId = 43,
                            Nome = "Santa Tereza"
                        },
                        new
                        {
                            Id = 4317301,
                            EstadoId = 43,
                            Nome = "Santa Vitória do Palmar"
                        },
                        new
                        {
                            Id = 4317004,
                            EstadoId = 43,
                            Nome = "Santana da Boa Vista"
                        },
                        new
                        {
                            Id = 4317103,
                            EstadoId = 43,
                            Nome = "Santana do Livramento"
                        },
                        new
                        {
                            Id = 4317400,
                            EstadoId = 43,
                            Nome = "Santiago"
                        },
                        new
                        {
                            Id = 4317509,
                            EstadoId = 43,
                            Nome = "Santo Ângelo"
                        },
                        new
                        {
                            Id = 4317608,
                            EstadoId = 43,
                            Nome = "Santo Antônio da Patrulha"
                        },
                        new
                        {
                            Id = 4317707,
                            EstadoId = 43,
                            Nome = "Santo Antônio das Missões"
                        },
                        new
                        {
                            Id = 4317558,
                            EstadoId = 43,
                            Nome = "Santo Antônio do Palma"
                        },
                        new
                        {
                            Id = 4317756,
                            EstadoId = 43,
                            Nome = "Santo Antônio do Planalto"
                        },
                        new
                        {
                            Id = 4317806,
                            EstadoId = 43,
                            Nome = "Santo Augusto"
                        },
                        new
                        {
                            Id = 4317905,
                            EstadoId = 43,
                            Nome = "Santo Cristo"
                        },
                        new
                        {
                            Id = 4317954,
                            EstadoId = 43,
                            Nome = "Santo Expedito do Sul"
                        },
                        new
                        {
                            Id = 4318002,
                            EstadoId = 43,
                            Nome = "São Borja"
                        },
                        new
                        {
                            Id = 4318051,
                            EstadoId = 43,
                            Nome = "São Domingos do Sul"
                        },
                        new
                        {
                            Id = 4318101,
                            EstadoId = 43,
                            Nome = "São Francisco de Assis"
                        },
                        new
                        {
                            Id = 4318200,
                            EstadoId = 43,
                            Nome = "São Francisco de Paula"
                        },
                        new
                        {
                            Id = 4318309,
                            EstadoId = 43,
                            Nome = "São Gabriel"
                        },
                        new
                        {
                            Id = 4318408,
                            EstadoId = 43,
                            Nome = "São Jerônimo"
                        },
                        new
                        {
                            Id = 4318424,
                            EstadoId = 43,
                            Nome = "São João da Urtiga"
                        },
                        new
                        {
                            Id = 4318432,
                            EstadoId = 43,
                            Nome = "São João do Polêsine"
                        },
                        new
                        {
                            Id = 4318440,
                            EstadoId = 43,
                            Nome = "São Jorge"
                        },
                        new
                        {
                            Id = 4318457,
                            EstadoId = 43,
                            Nome = "São José das Missões"
                        },
                        new
                        {
                            Id = 4318465,
                            EstadoId = 43,
                            Nome = "São José do Herval"
                        },
                        new
                        {
                            Id = 4318481,
                            EstadoId = 43,
                            Nome = "São José do Hortêncio"
                        },
                        new
                        {
                            Id = 4318499,
                            EstadoId = 43,
                            Nome = "São José do Inhacorá"
                        },
                        new
                        {
                            Id = 4318507,
                            EstadoId = 43,
                            Nome = "São José do Norte"
                        },
                        new
                        {
                            Id = 4318606,
                            EstadoId = 43,
                            Nome = "São José do Ouro"
                        },
                        new
                        {
                            Id = 4318614,
                            EstadoId = 43,
                            Nome = "São José do Sul"
                        },
                        new
                        {
                            Id = 4318622,
                            EstadoId = 43,
                            Nome = "São José dos Ausentes"
                        },
                        new
                        {
                            Id = 4318705,
                            EstadoId = 43,
                            Nome = "São Leopoldo"
                        },
                        new
                        {
                            Id = 4318804,
                            EstadoId = 43,
                            Nome = "São Lourenço do Sul"
                        },
                        new
                        {
                            Id = 4318903,
                            EstadoId = 43,
                            Nome = "São Luiz Gonzaga"
                        },
                        new
                        {
                            Id = 4319000,
                            EstadoId = 43,
                            Nome = "São Marcos"
                        },
                        new
                        {
                            Id = 4319109,
                            EstadoId = 43,
                            Nome = "São Martinho"
                        },
                        new
                        {
                            Id = 4319125,
                            EstadoId = 43,
                            Nome = "São Martinho da Serra"
                        },
                        new
                        {
                            Id = 4319158,
                            EstadoId = 43,
                            Nome = "São Miguel das Missões"
                        },
                        new
                        {
                            Id = 4319208,
                            EstadoId = 43,
                            Nome = "São Nicolau"
                        },
                        new
                        {
                            Id = 4319307,
                            EstadoId = 43,
                            Nome = "São Paulo das Missões"
                        },
                        new
                        {
                            Id = 4319356,
                            EstadoId = 43,
                            Nome = "São Pedro da Serra"
                        },
                        new
                        {
                            Id = 4319364,
                            EstadoId = 43,
                            Nome = "São Pedro das Missões"
                        },
                        new
                        {
                            Id = 4319372,
                            EstadoId = 43,
                            Nome = "São Pedro do Butiá"
                        },
                        new
                        {
                            Id = 4319406,
                            EstadoId = 43,
                            Nome = "São Pedro do Sul"
                        },
                        new
                        {
                            Id = 4319505,
                            EstadoId = 43,
                            Nome = "São Sebastião do Caí"
                        },
                        new
                        {
                            Id = 4319604,
                            EstadoId = 43,
                            Nome = "São Sepé"
                        },
                        new
                        {
                            Id = 4319703,
                            EstadoId = 43,
                            Nome = "São Valentim"
                        },
                        new
                        {
                            Id = 4319711,
                            EstadoId = 43,
                            Nome = "São Valentim do Sul"
                        },
                        new
                        {
                            Id = 4319737,
                            EstadoId = 43,
                            Nome = "São Valério do Sul"
                        },
                        new
                        {
                            Id = 4319752,
                            EstadoId = 43,
                            Nome = "São Vendelino"
                        },
                        new
                        {
                            Id = 4319802,
                            EstadoId = 43,
                            Nome = "São Vicente do Sul"
                        },
                        new
                        {
                            Id = 4319901,
                            EstadoId = 43,
                            Nome = "Sapiranga"
                        },
                        new
                        {
                            Id = 4320008,
                            EstadoId = 43,
                            Nome = "Sapucaia do Sul"
                        },
                        new
                        {
                            Id = 4320107,
                            EstadoId = 43,
                            Nome = "Sarandi"
                        },
                        new
                        {
                            Id = 4320206,
                            EstadoId = 43,
                            Nome = "Seberi"
                        },
                        new
                        {
                            Id = 4320230,
                            EstadoId = 43,
                            Nome = "Sede Nova"
                        },
                        new
                        {
                            Id = 4320263,
                            EstadoId = 43,
                            Nome = "Segredo"
                        },
                        new
                        {
                            Id = 4320305,
                            EstadoId = 43,
                            Nome = "Selbach"
                        },
                        new
                        {
                            Id = 4320321,
                            EstadoId = 43,
                            Nome = "Senador Salgado Filho"
                        },
                        new
                        {
                            Id = 4320354,
                            EstadoId = 43,
                            Nome = "Sentinela do Sul"
                        },
                        new
                        {
                            Id = 4320404,
                            EstadoId = 43,
                            Nome = "Serafina Corrêa"
                        },
                        new
                        {
                            Id = 4320453,
                            EstadoId = 43,
                            Nome = "Sério"
                        },
                        new
                        {
                            Id = 4320503,
                            EstadoId = 43,
                            Nome = "Sertão"
                        },
                        new
                        {
                            Id = 4320552,
                            EstadoId = 43,
                            Nome = "Sertão Santana"
                        },
                        new
                        {
                            Id = 4320578,
                            EstadoId = 43,
                            Nome = "Sete de Setembro"
                        },
                        new
                        {
                            Id = 4320602,
                            EstadoId = 43,
                            Nome = "Severiano de Almeida"
                        },
                        new
                        {
                            Id = 4320651,
                            EstadoId = 43,
                            Nome = "Silveira Martins"
                        },
                        new
                        {
                            Id = 4320677,
                            EstadoId = 43,
                            Nome = "Sinimbu"
                        },
                        new
                        {
                            Id = 4320701,
                            EstadoId = 43,
                            Nome = "Sobradinho"
                        },
                        new
                        {
                            Id = 4320800,
                            EstadoId = 43,
                            Nome = "Soledade"
                        },
                        new
                        {
                            Id = 4320859,
                            EstadoId = 43,
                            Nome = "Tabaí"
                        },
                        new
                        {
                            Id = 4320909,
                            EstadoId = 43,
                            Nome = "Tapejara"
                        },
                        new
                        {
                            Id = 4321006,
                            EstadoId = 43,
                            Nome = "Tapera"
                        },
                        new
                        {
                            Id = 4321105,
                            EstadoId = 43,
                            Nome = "Tapes"
                        },
                        new
                        {
                            Id = 4321204,
                            EstadoId = 43,
                            Nome = "Taquara"
                        },
                        new
                        {
                            Id = 4321303,
                            EstadoId = 43,
                            Nome = "Taquari"
                        },
                        new
                        {
                            Id = 4321329,
                            EstadoId = 43,
                            Nome = "Taquaruçu do Sul"
                        },
                        new
                        {
                            Id = 4321352,
                            EstadoId = 43,
                            Nome = "Tavares"
                        },
                        new
                        {
                            Id = 4321402,
                            EstadoId = 43,
                            Nome = "Tenente Portela"
                        },
                        new
                        {
                            Id = 4321436,
                            EstadoId = 43,
                            Nome = "Terra de Areia"
                        },
                        new
                        {
                            Id = 4321451,
                            EstadoId = 43,
                            Nome = "Teutônia"
                        },
                        new
                        {
                            Id = 4321469,
                            EstadoId = 43,
                            Nome = "Tio Hugo"
                        },
                        new
                        {
                            Id = 4321477,
                            EstadoId = 43,
                            Nome = "Tiradentes do Sul"
                        },
                        new
                        {
                            Id = 4321493,
                            EstadoId = 43,
                            Nome = "Toropi"
                        },
                        new
                        {
                            Id = 4321501,
                            EstadoId = 43,
                            Nome = "Torres"
                        },
                        new
                        {
                            Id = 4321600,
                            EstadoId = 43,
                            Nome = "Tramandaí"
                        },
                        new
                        {
                            Id = 4321626,
                            EstadoId = 43,
                            Nome = "Travesseiro"
                        },
                        new
                        {
                            Id = 4321634,
                            EstadoId = 43,
                            Nome = "Três Arroios"
                        },
                        new
                        {
                            Id = 4321667,
                            EstadoId = 43,
                            Nome = "Três Cachoeiras"
                        },
                        new
                        {
                            Id = 4321709,
                            EstadoId = 43,
                            Nome = "Três Coroas"
                        },
                        new
                        {
                            Id = 4321808,
                            EstadoId = 43,
                            Nome = "Três de Maio"
                        },
                        new
                        {
                            Id = 4321832,
                            EstadoId = 43,
                            Nome = "Três Forquilhas"
                        },
                        new
                        {
                            Id = 4321857,
                            EstadoId = 43,
                            Nome = "Três Palmeiras"
                        },
                        new
                        {
                            Id = 4321907,
                            EstadoId = 43,
                            Nome = "Três Passos"
                        },
                        new
                        {
                            Id = 4321956,
                            EstadoId = 43,
                            Nome = "Trindade do Sul"
                        },
                        new
                        {
                            Id = 4322004,
                            EstadoId = 43,
                            Nome = "Triunfo"
                        },
                        new
                        {
                            Id = 4322103,
                            EstadoId = 43,
                            Nome = "Tucunduva"
                        },
                        new
                        {
                            Id = 4322152,
                            EstadoId = 43,
                            Nome = "Tunas"
                        },
                        new
                        {
                            Id = 4322186,
                            EstadoId = 43,
                            Nome = "Tupanci do Sul"
                        },
                        new
                        {
                            Id = 4322202,
                            EstadoId = 43,
                            Nome = "Tupanciretã"
                        },
                        new
                        {
                            Id = 4322251,
                            EstadoId = 43,
                            Nome = "Tupandi"
                        },
                        new
                        {
                            Id = 4322301,
                            EstadoId = 43,
                            Nome = "Tuparendi"
                        },
                        new
                        {
                            Id = 4322327,
                            EstadoId = 43,
                            Nome = "Turuçu"
                        },
                        new
                        {
                            Id = 4322343,
                            EstadoId = 43,
                            Nome = "Ubiretama"
                        },
                        new
                        {
                            Id = 4322350,
                            EstadoId = 43,
                            Nome = "União da Serra"
                        },
                        new
                        {
                            Id = 4322376,
                            EstadoId = 43,
                            Nome = "Unistalda"
                        },
                        new
                        {
                            Id = 4322400,
                            EstadoId = 43,
                            Nome = "Uruguaiana"
                        },
                        new
                        {
                            Id = 4322509,
                            EstadoId = 43,
                            Nome = "Vacaria"
                        },
                        new
                        {
                            Id = 4322533,
                            EstadoId = 43,
                            Nome = "Vale do Sol"
                        },
                        new
                        {
                            Id = 4322541,
                            EstadoId = 43,
                            Nome = "Vale Real"
                        },
                        new
                        {
                            Id = 4322525,
                            EstadoId = 43,
                            Nome = "Vale Verde"
                        },
                        new
                        {
                            Id = 4322558,
                            EstadoId = 43,
                            Nome = "Vanini"
                        },
                        new
                        {
                            Id = 4322608,
                            EstadoId = 43,
                            Nome = "Venâncio Aires"
                        },
                        new
                        {
                            Id = 4322707,
                            EstadoId = 43,
                            Nome = "Vera Cruz"
                        },
                        new
                        {
                            Id = 4322806,
                            EstadoId = 43,
                            Nome = "Veranópolis"
                        },
                        new
                        {
                            Id = 4322855,
                            EstadoId = 43,
                            Nome = "Vespasiano Correa"
                        },
                        new
                        {
                            Id = 4322905,
                            EstadoId = 43,
                            Nome = "Viadutos"
                        },
                        new
                        {
                            Id = 4323002,
                            EstadoId = 43,
                            Nome = "Viamão"
                        },
                        new
                        {
                            Id = 4323101,
                            EstadoId = 43,
                            Nome = "Vicente Dutra"
                        },
                        new
                        {
                            Id = 4323200,
                            EstadoId = 43,
                            Nome = "Victor Graeff"
                        },
                        new
                        {
                            Id = 4323309,
                            EstadoId = 43,
                            Nome = "Vila Flores"
                        },
                        new
                        {
                            Id = 4323358,
                            EstadoId = 43,
                            Nome = "Vila Lângaro"
                        },
                        new
                        {
                            Id = 4323408,
                            EstadoId = 43,
                            Nome = "Vila Maria"
                        },
                        new
                        {
                            Id = 4323457,
                            EstadoId = 43,
                            Nome = "Vila Nova do Sul"
                        },
                        new
                        {
                            Id = 4323507,
                            EstadoId = 43,
                            Nome = "Vista Alegre"
                        },
                        new
                        {
                            Id = 4323606,
                            EstadoId = 43,
                            Nome = "Vista Alegre do Prata"
                        },
                        new
                        {
                            Id = 4323705,
                            EstadoId = 43,
                            Nome = "Vista Gaúcha"
                        },
                        new
                        {
                            Id = 4323754,
                            EstadoId = 43,
                            Nome = "Vitória das Missões"
                        },
                        new
                        {
                            Id = 4323770,
                            EstadoId = 43,
                            Nome = "Westfalia"
                        },
                        new
                        {
                            Id = 4323804,
                            EstadoId = 43,
                            Nome = "Xangri-lá"
                        },
                        new
                        {
                            Id = 5000203,
                            EstadoId = 50,
                            Nome = "Água Clara"
                        },
                        new
                        {
                            Id = 5000252,
                            EstadoId = 50,
                            Nome = "Alcinópolis"
                        },
                        new
                        {
                            Id = 5000609,
                            EstadoId = 50,
                            Nome = "Amambaí"
                        },
                        new
                        {
                            Id = 5000708,
                            EstadoId = 50,
                            Nome = "Anastácio"
                        },
                        new
                        {
                            Id = 5000807,
                            EstadoId = 50,
                            Nome = "Anaurilândia"
                        },
                        new
                        {
                            Id = 5000856,
                            EstadoId = 50,
                            Nome = "Angélica"
                        },
                        new
                        {
                            Id = 5000906,
                            EstadoId = 50,
                            Nome = "Antônio João"
                        },
                        new
                        {
                            Id = 5001003,
                            EstadoId = 50,
                            Nome = "Aparecida do Taboado"
                        },
                        new
                        {
                            Id = 5001102,
                            EstadoId = 50,
                            Nome = "Aquidauana"
                        },
                        new
                        {
                            Id = 5001243,
                            EstadoId = 50,
                            Nome = "Aral Moreira"
                        },
                        new
                        {
                            Id = 5001508,
                            EstadoId = 50,
                            Nome = "Bandeirantes"
                        },
                        new
                        {
                            Id = 5001904,
                            EstadoId = 50,
                            Nome = "Bataguassu"
                        },
                        new
                        {
                            Id = 5002001,
                            EstadoId = 50,
                            Nome = "Batayporã"
                        },
                        new
                        {
                            Id = 5002100,
                            EstadoId = 50,
                            Nome = "Bela Vista"
                        },
                        new
                        {
                            Id = 5002159,
                            EstadoId = 50,
                            Nome = "Bodoquena"
                        },
                        new
                        {
                            Id = 5002209,
                            EstadoId = 50,
                            Nome = "Bonito"
                        },
                        new
                        {
                            Id = 5002308,
                            EstadoId = 50,
                            Nome = "Brasilândia"
                        },
                        new
                        {
                            Id = 5002407,
                            EstadoId = 50,
                            Nome = "Caarapó"
                        },
                        new
                        {
                            Id = 5002605,
                            EstadoId = 50,
                            Nome = "Camapuã"
                        },
                        new
                        {
                            Id = 5002704,
                            EstadoId = 50,
                            Nome = "Campo Grande"
                        },
                        new
                        {
                            Id = 5002803,
                            EstadoId = 50,
                            Nome = "Caracol"
                        },
                        new
                        {
                            Id = 5002902,
                            EstadoId = 50,
                            Nome = "Cassilândia"
                        },
                        new
                        {
                            Id = 5002951,
                            EstadoId = 50,
                            Nome = "Chapadão do Sul"
                        },
                        new
                        {
                            Id = 5003108,
                            EstadoId = 50,
                            Nome = "Corguinho"
                        },
                        new
                        {
                            Id = 5003157,
                            EstadoId = 50,
                            Nome = "Coronel Sapucaia"
                        },
                        new
                        {
                            Id = 5003207,
                            EstadoId = 50,
                            Nome = "Corumbá"
                        },
                        new
                        {
                            Id = 5003256,
                            EstadoId = 50,
                            Nome = "Costa Rica"
                        },
                        new
                        {
                            Id = 5003306,
                            EstadoId = 50,
                            Nome = "Coxim"
                        },
                        new
                        {
                            Id = 5003454,
                            EstadoId = 50,
                            Nome = "Deodápolis"
                        },
                        new
                        {
                            Id = 5003488,
                            EstadoId = 50,
                            Nome = "Dois Irmãos do Buriti"
                        },
                        new
                        {
                            Id = 5003504,
                            EstadoId = 50,
                            Nome = "Douradina"
                        },
                        new
                        {
                            Id = 5003702,
                            EstadoId = 50,
                            Nome = "Dourados"
                        },
                        new
                        {
                            Id = 5003751,
                            EstadoId = 50,
                            Nome = "Eldorado"
                        },
                        new
                        {
                            Id = 5003801,
                            EstadoId = 50,
                            Nome = "Fátima do Sul"
                        },
                        new
                        {
                            Id = 5003900,
                            EstadoId = 50,
                            Nome = "Figueirão"
                        },
                        new
                        {
                            Id = 5004007,
                            EstadoId = 50,
                            Nome = "Glória de Dourados"
                        },
                        new
                        {
                            Id = 5004106,
                            EstadoId = 50,
                            Nome = "Guia Lopes da Laguna"
                        },
                        new
                        {
                            Id = 5004304,
                            EstadoId = 50,
                            Nome = "Iguatemi"
                        },
                        new
                        {
                            Id = 5004403,
                            EstadoId = 50,
                            Nome = "Inocência"
                        },
                        new
                        {
                            Id = 5004502,
                            EstadoId = 50,
                            Nome = "Itaporã"
                        },
                        new
                        {
                            Id = 5004601,
                            EstadoId = 50,
                            Nome = "Itaquiraí"
                        },
                        new
                        {
                            Id = 5004700,
                            EstadoId = 50,
                            Nome = "Ivinhema"
                        },
                        new
                        {
                            Id = 5004809,
                            EstadoId = 50,
                            Nome = "Japorã"
                        },
                        new
                        {
                            Id = 5004908,
                            EstadoId = 50,
                            Nome = "Jaraguari"
                        },
                        new
                        {
                            Id = 5005004,
                            EstadoId = 50,
                            Nome = "Jardim"
                        },
                        new
                        {
                            Id = 5005103,
                            EstadoId = 50,
                            Nome = "Jateí"
                        },
                        new
                        {
                            Id = 5005152,
                            EstadoId = 50,
                            Nome = "Juti"
                        },
                        new
                        {
                            Id = 5005202,
                            EstadoId = 50,
                            Nome = "Ladário"
                        },
                        new
                        {
                            Id = 5005251,
                            EstadoId = 50,
                            Nome = "Laguna Carapã"
                        },
                        new
                        {
                            Id = 5005400,
                            EstadoId = 50,
                            Nome = "Maracaju"
                        },
                        new
                        {
                            Id = 5005608,
                            EstadoId = 50,
                            Nome = "Miranda"
                        },
                        new
                        {
                            Id = 5005681,
                            EstadoId = 50,
                            Nome = "Mundo Novo"
                        },
                        new
                        {
                            Id = 5005707,
                            EstadoId = 50,
                            Nome = "Naviraí"
                        },
                        new
                        {
                            Id = 5005806,
                            EstadoId = 50,
                            Nome = "Nioaque"
                        },
                        new
                        {
                            Id = 5006002,
                            EstadoId = 50,
                            Nome = "Nova Alvorada do Sul"
                        },
                        new
                        {
                            Id = 5006200,
                            EstadoId = 50,
                            Nome = "Nova Andradina"
                        },
                        new
                        {
                            Id = 5006259,
                            EstadoId = 50,
                            Nome = "Novo Horizonte do Sul"
                        },
                        new
                        {
                            Id = 5006275,
                            EstadoId = 50,
                            Nome = "Paraíso das Águas"
                        },
                        new
                        {
                            Id = 5006309,
                            EstadoId = 50,
                            Nome = "Paranaíba"
                        },
                        new
                        {
                            Id = 5006358,
                            EstadoId = 50,
                            Nome = "Paranhos"
                        },
                        new
                        {
                            Id = 5006408,
                            EstadoId = 50,
                            Nome = "Pedro Gomes"
                        },
                        new
                        {
                            Id = 5006606,
                            EstadoId = 50,
                            Nome = "Ponta Porã"
                        },
                        new
                        {
                            Id = 5006903,
                            EstadoId = 50,
                            Nome = "Porto Murtinho"
                        },
                        new
                        {
                            Id = 5007109,
                            EstadoId = 50,
                            Nome = "Ribas do Rio Pardo"
                        },
                        new
                        {
                            Id = 5007208,
                            EstadoId = 50,
                            Nome = "Rio Brilhante"
                        },
                        new
                        {
                            Id = 5007307,
                            EstadoId = 50,
                            Nome = "Rio Negro"
                        },
                        new
                        {
                            Id = 5007406,
                            EstadoId = 50,
                            Nome = "Rio Verde de Mato Grosso"
                        },
                        new
                        {
                            Id = 5007505,
                            EstadoId = 50,
                            Nome = "Rochedo"
                        },
                        new
                        {
                            Id = 5007554,
                            EstadoId = 50,
                            Nome = "Santa Rita do Pardo"
                        },
                        new
                        {
                            Id = 5007695,
                            EstadoId = 50,
                            Nome = "São Gabriel do Oeste"
                        },
                        new
                        {
                            Id = 5007802,
                            EstadoId = 50,
                            Nome = "Selvíria"
                        },
                        new
                        {
                            Id = 5007703,
                            EstadoId = 50,
                            Nome = "Sete Quedas"
                        },
                        new
                        {
                            Id = 5007901,
                            EstadoId = 50,
                            Nome = "Sidrolândia"
                        },
                        new
                        {
                            Id = 5007935,
                            EstadoId = 50,
                            Nome = "Sonora"
                        },
                        new
                        {
                            Id = 5007950,
                            EstadoId = 50,
                            Nome = "Tacuru"
                        },
                        new
                        {
                            Id = 5007976,
                            EstadoId = 50,
                            Nome = "Taquarussu"
                        },
                        new
                        {
                            Id = 5008008,
                            EstadoId = 50,
                            Nome = "Terenos"
                        },
                        new
                        {
                            Id = 5008305,
                            EstadoId = 50,
                            Nome = "Três Lagoas"
                        },
                        new
                        {
                            Id = 5008404,
                            EstadoId = 50,
                            Nome = "Vicentina"
                        },
                        new
                        {
                            Id = 5100102,
                            EstadoId = 51,
                            Nome = "Acorizal"
                        },
                        new
                        {
                            Id = 5100201,
                            EstadoId = 51,
                            Nome = "Água Boa"
                        },
                        new
                        {
                            Id = 5100250,
                            EstadoId = 51,
                            Nome = "Alta Floresta"
                        },
                        new
                        {
                            Id = 5100300,
                            EstadoId = 51,
                            Nome = "Alto Araguaia"
                        },
                        new
                        {
                            Id = 5100359,
                            EstadoId = 51,
                            Nome = "Alto Boa Vista"
                        },
                        new
                        {
                            Id = 5100409,
                            EstadoId = 51,
                            Nome = "Alto Garças"
                        },
                        new
                        {
                            Id = 5100508,
                            EstadoId = 51,
                            Nome = "Alto Paraguai"
                        },
                        new
                        {
                            Id = 5100607,
                            EstadoId = 51,
                            Nome = "Alto Taquari"
                        },
                        new
                        {
                            Id = 5100805,
                            EstadoId = 51,
                            Nome = "Apiacás"
                        },
                        new
                        {
                            Id = 5101001,
                            EstadoId = 51,
                            Nome = "Araguaiana"
                        },
                        new
                        {
                            Id = 5101209,
                            EstadoId = 51,
                            Nome = "Araguainha"
                        },
                        new
                        {
                            Id = 5101258,
                            EstadoId = 51,
                            Nome = "Araputanga"
                        },
                        new
                        {
                            Id = 5101308,
                            EstadoId = 51,
                            Nome = "Arenápolis"
                        },
                        new
                        {
                            Id = 5101407,
                            EstadoId = 51,
                            Nome = "Aripuanã"
                        },
                        new
                        {
                            Id = 5101605,
                            EstadoId = 51,
                            Nome = "Barão de Melgaço"
                        },
                        new
                        {
                            Id = 5101704,
                            EstadoId = 51,
                            Nome = "Barra do Bugres"
                        },
                        new
                        {
                            Id = 5101803,
                            EstadoId = 51,
                            Nome = "Barra do Garças"
                        },
                        new
                        {
                            Id = 5101852,
                            EstadoId = 51,
                            Nome = "Bom Jesus do Araguaia"
                        },
                        new
                        {
                            Id = 5101902,
                            EstadoId = 51,
                            Nome = "Brasnorte"
                        },
                        new
                        {
                            Id = 5102504,
                            EstadoId = 51,
                            Nome = "Cáceres"
                        },
                        new
                        {
                            Id = 5102603,
                            EstadoId = 51,
                            Nome = "Campinápolis"
                        },
                        new
                        {
                            Id = 5102637,
                            EstadoId = 51,
                            Nome = "Campo Novo do Parecis"
                        },
                        new
                        {
                            Id = 5102678,
                            EstadoId = 51,
                            Nome = "Campo Verde"
                        },
                        new
                        {
                            Id = 5102686,
                            EstadoId = 51,
                            Nome = "Campos de Júlio"
                        },
                        new
                        {
                            Id = 5102694,
                            EstadoId = 51,
                            Nome = "Canabrava do Norte"
                        },
                        new
                        {
                            Id = 5102702,
                            EstadoId = 51,
                            Nome = "Canarana"
                        },
                        new
                        {
                            Id = 5102793,
                            EstadoId = 51,
                            Nome = "Carlinda"
                        },
                        new
                        {
                            Id = 5102850,
                            EstadoId = 51,
                            Nome = "Castanheira"
                        },
                        new
                        {
                            Id = 5103007,
                            EstadoId = 51,
                            Nome = "Chapada dos Guimarães"
                        },
                        new
                        {
                            Id = 5103056,
                            EstadoId = 51,
                            Nome = "Cláudia"
                        },
                        new
                        {
                            Id = 5103106,
                            EstadoId = 51,
                            Nome = "Cocalinho"
                        },
                        new
                        {
                            Id = 5103205,
                            EstadoId = 51,
                            Nome = "Colíder"
                        },
                        new
                        {
                            Id = 5103254,
                            EstadoId = 51,
                            Nome = "Colniza"
                        },
                        new
                        {
                            Id = 5103304,
                            EstadoId = 51,
                            Nome = "Comodoro"
                        },
                        new
                        {
                            Id = 5103353,
                            EstadoId = 51,
                            Nome = "Confresa"
                        },
                        new
                        {
                            Id = 5103361,
                            EstadoId = 51,
                            Nome = "Conquista DOeste"
                        },
                        new
                        {
                            Id = 5103379,
                            EstadoId = 51,
                            Nome = "Cotriguaçu"
                        },
                        new
                        {
                            Id = 5103403,
                            EstadoId = 51,
                            Nome = "Cuiabá"
                        },
                        new
                        {
                            Id = 5103437,
                            EstadoId = 51,
                            Nome = "Curvelândia"
                        },
                        new
                        {
                            Id = 5103452,
                            EstadoId = 51,
                            Nome = "Denise"
                        },
                        new
                        {
                            Id = 5103502,
                            EstadoId = 51,
                            Nome = "Diamantino"
                        },
                        new
                        {
                            Id = 5103601,
                            EstadoId = 51,
                            Nome = "Dom Aquino"
                        },
                        new
                        {
                            Id = 5103700,
                            EstadoId = 51,
                            Nome = "Feliz Natal"
                        },
                        new
                        {
                            Id = 5103809,
                            EstadoId = 51,
                            Nome = "Figueirópolis DOeste"
                        },
                        new
                        {
                            Id = 5103858,
                            EstadoId = 51,
                            Nome = "Gaúcha do Norte"
                        },
                        new
                        {
                            Id = 5103908,
                            EstadoId = 51,
                            Nome = "General Carneiro"
                        },
                        new
                        {
                            Id = 5103957,
                            EstadoId = 51,
                            Nome = "Glória DOeste"
                        },
                        new
                        {
                            Id = 5104104,
                            EstadoId = 51,
                            Nome = "Guarantã do Norte"
                        },
                        new
                        {
                            Id = 5104203,
                            EstadoId = 51,
                            Nome = "Guiratinga"
                        },
                        new
                        {
                            Id = 5104500,
                            EstadoId = 51,
                            Nome = "Indiavaí"
                        },
                        new
                        {
                            Id = 5104526,
                            EstadoId = 51,
                            Nome = "Ipiranga do Norte"
                        },
                        new
                        {
                            Id = 5104542,
                            EstadoId = 51,
                            Nome = "Itanhangá"
                        },
                        new
                        {
                            Id = 5104559,
                            EstadoId = 51,
                            Nome = "Itaúba"
                        },
                        new
                        {
                            Id = 5104609,
                            EstadoId = 51,
                            Nome = "Itiquira"
                        },
                        new
                        {
                            Id = 5104807,
                            EstadoId = 51,
                            Nome = "Jaciara"
                        },
                        new
                        {
                            Id = 5104906,
                            EstadoId = 51,
                            Nome = "Jangada"
                        },
                        new
                        {
                            Id = 5105002,
                            EstadoId = 51,
                            Nome = "Jauru"
                        },
                        new
                        {
                            Id = 5105101,
                            EstadoId = 51,
                            Nome = "Juara"
                        },
                        new
                        {
                            Id = 5105150,
                            EstadoId = 51,
                            Nome = "Juína"
                        },
                        new
                        {
                            Id = 5105176,
                            EstadoId = 51,
                            Nome = "Juruena"
                        },
                        new
                        {
                            Id = 5105200,
                            EstadoId = 51,
                            Nome = "Juscimeira"
                        },
                        new
                        {
                            Id = 5105234,
                            EstadoId = 51,
                            Nome = "Lambari DOeste"
                        },
                        new
                        {
                            Id = 5105259,
                            EstadoId = 51,
                            Nome = "Lucas do Rio Verde"
                        },
                        new
                        {
                            Id = 5105309,
                            EstadoId = 51,
                            Nome = "Luciára"
                        },
                        new
                        {
                            Id = 5105580,
                            EstadoId = 51,
                            Nome = "Marcelândia"
                        },
                        new
                        {
                            Id = 5105606,
                            EstadoId = 51,
                            Nome = "Matupá"
                        },
                        new
                        {
                            Id = 5105622,
                            EstadoId = 51,
                            Nome = "Mirassol dOeste"
                        },
                        new
                        {
                            Id = 5105903,
                            EstadoId = 51,
                            Nome = "Nobres"
                        },
                        new
                        {
                            Id = 5106000,
                            EstadoId = 51,
                            Nome = "Nortelândia"
                        },
                        new
                        {
                            Id = 5106109,
                            EstadoId = 51,
                            Nome = "Nossa Senhora do Livramento"
                        },
                        new
                        {
                            Id = 5106158,
                            EstadoId = 51,
                            Nome = "Nova Bandeirantes"
                        },
                        new
                        {
                            Id = 5106208,
                            EstadoId = 51,
                            Nome = "Nova Brasilândia"
                        },
                        new
                        {
                            Id = 5106216,
                            EstadoId = 51,
                            Nome = "Nova Canaã do Norte"
                        },
                        new
                        {
                            Id = 5108808,
                            EstadoId = 51,
                            Nome = "Nova Guarita"
                        },
                        new
                        {
                            Id = 5106182,
                            EstadoId = 51,
                            Nome = "Nova Lacerda"
                        },
                        new
                        {
                            Id = 5108857,
                            EstadoId = 51,
                            Nome = "Nova Marilândia"
                        },
                        new
                        {
                            Id = 5108907,
                            EstadoId = 51,
                            Nome = "Nova Maringá"
                        },
                        new
                        {
                            Id = 5108956,
                            EstadoId = 51,
                            Nome = "Nova Monte Verde"
                        },
                        new
                        {
                            Id = 5106224,
                            EstadoId = 51,
                            Nome = "Nova Mutum"
                        },
                        new
                        {
                            Id = 5106174,
                            EstadoId = 51,
                            Nome = "Nova Nazaré"
                        },
                        new
                        {
                            Id = 5106232,
                            EstadoId = 51,
                            Nome = "Nova Olímpia"
                        },
                        new
                        {
                            Id = 5106190,
                            EstadoId = 51,
                            Nome = "Nova Santa Helena"
                        },
                        new
                        {
                            Id = 5106240,
                            EstadoId = 51,
                            Nome = "Nova Ubiratã"
                        },
                        new
                        {
                            Id = 5106257,
                            EstadoId = 51,
                            Nome = "Nova Xavantina"
                        },
                        new
                        {
                            Id = 5106273,
                            EstadoId = 51,
                            Nome = "Novo Horizonte do Norte"
                        },
                        new
                        {
                            Id = 5106265,
                            EstadoId = 51,
                            Nome = "Novo Mundo"
                        },
                        new
                        {
                            Id = 5106315,
                            EstadoId = 51,
                            Nome = "Novo Santo Antônio"
                        },
                        new
                        {
                            Id = 5106281,
                            EstadoId = 51,
                            Nome = "Novo São Joaquim"
                        },
                        new
                        {
                            Id = 5106299,
                            EstadoId = 51,
                            Nome = "Paranaíta"
                        },
                        new
                        {
                            Id = 5106307,
                            EstadoId = 51,
                            Nome = "Paranatinga"
                        },
                        new
                        {
                            Id = 5106372,
                            EstadoId = 51,
                            Nome = "Pedra Preta"
                        },
                        new
                        {
                            Id = 5106422,
                            EstadoId = 51,
                            Nome = "Peixoto de Azevedo"
                        },
                        new
                        {
                            Id = 5106455,
                            EstadoId = 51,
                            Nome = "Planalto da Serra"
                        },
                        new
                        {
                            Id = 5106505,
                            EstadoId = 51,
                            Nome = "Poconé"
                        },
                        new
                        {
                            Id = 5106653,
                            EstadoId = 51,
                            Nome = "Pontal do Araguaia"
                        },
                        new
                        {
                            Id = 5106703,
                            EstadoId = 51,
                            Nome = "Ponte Branca"
                        },
                        new
                        {
                            Id = 5106752,
                            EstadoId = 51,
                            Nome = "Pontes e Lacerda"
                        },
                        new
                        {
                            Id = 5106778,
                            EstadoId = 51,
                            Nome = "Porto Alegre do Norte"
                        },
                        new
                        {
                            Id = 5106802,
                            EstadoId = 51,
                            Nome = "Porto dos Gaúchos"
                        },
                        new
                        {
                            Id = 5106828,
                            EstadoId = 51,
                            Nome = "Porto Esperidião"
                        },
                        new
                        {
                            Id = 5106851,
                            EstadoId = 51,
                            Nome = "Porto Estrela"
                        },
                        new
                        {
                            Id = 5107008,
                            EstadoId = 51,
                            Nome = "Poxoréo"
                        },
                        new
                        {
                            Id = 5107040,
                            EstadoId = 51,
                            Nome = "Primavera do Leste"
                        },
                        new
                        {
                            Id = 5107065,
                            EstadoId = 51,
                            Nome = "Querência"
                        },
                        new
                        {
                            Id = 5107156,
                            EstadoId = 51,
                            Nome = "Reserva do Cabaçal"
                        },
                        new
                        {
                            Id = 5107180,
                            EstadoId = 51,
                            Nome = "Ribeirão Cascalheira"
                        },
                        new
                        {
                            Id = 5107198,
                            EstadoId = 51,
                            Nome = "Ribeirãozinho"
                        },
                        new
                        {
                            Id = 5107206,
                            EstadoId = 51,
                            Nome = "Rio Branco"
                        },
                        new
                        {
                            Id = 5107578,
                            EstadoId = 51,
                            Nome = "Rondolândia"
                        },
                        new
                        {
                            Id = 5107602,
                            EstadoId = 51,
                            Nome = "Rondonópolis"
                        },
                        new
                        {
                            Id = 5107701,
                            EstadoId = 51,
                            Nome = "Rosário Oeste"
                        },
                        new
                        {
                            Id = 5107750,
                            EstadoId = 51,
                            Nome = "Salto do Céu"
                        },
                        new
                        {
                            Id = 5107248,
                            EstadoId = 51,
                            Nome = "Santa Carmem"
                        },
                        new
                        {
                            Id = 5107743,
                            EstadoId = 51,
                            Nome = "Santa Cruz do Xingu"
                        },
                        new
                        {
                            Id = 5107768,
                            EstadoId = 51,
                            Nome = "Santa Rita do Trivelato"
                        },
                        new
                        {
                            Id = 5107776,
                            EstadoId = 51,
                            Nome = "Santa Terezinha"
                        },
                        new
                        {
                            Id = 5107263,
                            EstadoId = 51,
                            Nome = "Santo Afonso"
                        },
                        new
                        {
                            Id = 5107792,
                            EstadoId = 51,
                            Nome = "Santo Antônio do Leste"
                        },
                        new
                        {
                            Id = 5107800,
                            EstadoId = 51,
                            Nome = "Santo Antônio do Leverger"
                        },
                        new
                        {
                            Id = 5107859,
                            EstadoId = 51,
                            Nome = "São Félix do Araguaia"
                        },
                        new
                        {
                            Id = 5107297,
                            EstadoId = 51,
                            Nome = "São José do Povo"
                        },
                        new
                        {
                            Id = 5107305,
                            EstadoId = 51,
                            Nome = "São José do Rio Claro"
                        },
                        new
                        {
                            Id = 5107354,
                            EstadoId = 51,
                            Nome = "São José do Xingu"
                        },
                        new
                        {
                            Id = 5107107,
                            EstadoId = 51,
                            Nome = "São José dos Quatro Marcos"
                        },
                        new
                        {
                            Id = 5107404,
                            EstadoId = 51,
                            Nome = "São Pedro da Cipa"
                        },
                        new
                        {
                            Id = 5107875,
                            EstadoId = 51,
                            Nome = "Sapezal"
                        },
                        new
                        {
                            Id = 5107883,
                            EstadoId = 51,
                            Nome = "Serra Nova Dourada"
                        },
                        new
                        {
                            Id = 5107909,
                            EstadoId = 51,
                            Nome = "Sinop"
                        },
                        new
                        {
                            Id = 5107925,
                            EstadoId = 51,
                            Nome = "Sorriso"
                        },
                        new
                        {
                            Id = 5107941,
                            EstadoId = 51,
                            Nome = "Tabaporã"
                        },
                        new
                        {
                            Id = 5107958,
                            EstadoId = 51,
                            Nome = "Tangará da Serra"
                        },
                        new
                        {
                            Id = 5108006,
                            EstadoId = 51,
                            Nome = "Tapurah"
                        },
                        new
                        {
                            Id = 5108055,
                            EstadoId = 51,
                            Nome = "Terra Nova do Norte"
                        },
                        new
                        {
                            Id = 5108105,
                            EstadoId = 51,
                            Nome = "Tesouro"
                        },
                        new
                        {
                            Id = 5108204,
                            EstadoId = 51,
                            Nome = "Torixoréu"
                        },
                        new
                        {
                            Id = 5108303,
                            EstadoId = 51,
                            Nome = "União do Sul"
                        },
                        new
                        {
                            Id = 5108352,
                            EstadoId = 51,
                            Nome = "Vale de São Domingos"
                        },
                        new
                        {
                            Id = 5108402,
                            EstadoId = 51,
                            Nome = "Várzea Grande"
                        },
                        new
                        {
                            Id = 5108501,
                            EstadoId = 51,
                            Nome = "Vera"
                        },
                        new
                        {
                            Id = 5105507,
                            EstadoId = 51,
                            Nome = "Vila Bela da Santíssima Trindade"
                        },
                        new
                        {
                            Id = 5108600,
                            EstadoId = 51,
                            Nome = "Vila Rica"
                        },
                        new
                        {
                            Id = 5200050,
                            EstadoId = 52,
                            Nome = "Abadia de Goiás"
                        },
                        new
                        {
                            Id = 5200100,
                            EstadoId = 52,
                            Nome = "Abadiânia"
                        },
                        new
                        {
                            Id = 5200134,
                            EstadoId = 52,
                            Nome = "Acreúna"
                        },
                        new
                        {
                            Id = 5200159,
                            EstadoId = 52,
                            Nome = "Adelândia"
                        },
                        new
                        {
                            Id = 5200175,
                            EstadoId = 52,
                            Nome = "Água Fria de Goiás"
                        },
                        new
                        {
                            Id = 5200209,
                            EstadoId = 52,
                            Nome = "Água Limpa"
                        },
                        new
                        {
                            Id = 5200258,
                            EstadoId = 52,
                            Nome = "Águas Lindas de Goiás"
                        },
                        new
                        {
                            Id = 5200308,
                            EstadoId = 52,
                            Nome = "Alexânia"
                        },
                        new
                        {
                            Id = 5200506,
                            EstadoId = 52,
                            Nome = "Aloândia"
                        },
                        new
                        {
                            Id = 5200555,
                            EstadoId = 52,
                            Nome = "Alto Horizonte"
                        },
                        new
                        {
                            Id = 5200605,
                            EstadoId = 52,
                            Nome = "Alto Paraíso de Goiás"
                        },
                        new
                        {
                            Id = 5200803,
                            EstadoId = 52,
                            Nome = "Alvorada do Norte"
                        },
                        new
                        {
                            Id = 5200829,
                            EstadoId = 52,
                            Nome = "Amaralina"
                        },
                        new
                        {
                            Id = 5200852,
                            EstadoId = 52,
                            Nome = "Americano do Brasil"
                        },
                        new
                        {
                            Id = 5200902,
                            EstadoId = 52,
                            Nome = "Amorinópolis"
                        },
                        new
                        {
                            Id = 5201108,
                            EstadoId = 52,
                            Nome = "Anápolis"
                        },
                        new
                        {
                            Id = 5201207,
                            EstadoId = 52,
                            Nome = "Anhanguera"
                        },
                        new
                        {
                            Id = 5201306,
                            EstadoId = 52,
                            Nome = "Anicuns"
                        },
                        new
                        {
                            Id = 5201405,
                            EstadoId = 52,
                            Nome = "Aparecida de Goiânia"
                        },
                        new
                        {
                            Id = 5201454,
                            EstadoId = 52,
                            Nome = "Aparecida do Rio Doce"
                        },
                        new
                        {
                            Id = 5201504,
                            EstadoId = 52,
                            Nome = "Aporé"
                        },
                        new
                        {
                            Id = 5201603,
                            EstadoId = 52,
                            Nome = "Araçu"
                        },
                        new
                        {
                            Id = 5201702,
                            EstadoId = 52,
                            Nome = "Aragarças"
                        },
                        new
                        {
                            Id = 5201801,
                            EstadoId = 52,
                            Nome = "Aragoiânia"
                        },
                        new
                        {
                            Id = 5202155,
                            EstadoId = 52,
                            Nome = "Araguapaz"
                        },
                        new
                        {
                            Id = 5202353,
                            EstadoId = 52,
                            Nome = "Arenópolis"
                        },
                        new
                        {
                            Id = 5202502,
                            EstadoId = 52,
                            Nome = "Aruanã"
                        },
                        new
                        {
                            Id = 5202601,
                            EstadoId = 52,
                            Nome = "Aurilândia"
                        },
                        new
                        {
                            Id = 5202809,
                            EstadoId = 52,
                            Nome = "Avelinópolis"
                        },
                        new
                        {
                            Id = 5203104,
                            EstadoId = 52,
                            Nome = "Baliza"
                        },
                        new
                        {
                            Id = 5203203,
                            EstadoId = 52,
                            Nome = "Barro Alto"
                        },
                        new
                        {
                            Id = 5203302,
                            EstadoId = 52,
                            Nome = "Bela Vista de Goiás"
                        },
                        new
                        {
                            Id = 5203401,
                            EstadoId = 52,
                            Nome = "Bom Jardim de Goiás"
                        },
                        new
                        {
                            Id = 5203500,
                            EstadoId = 52,
                            Nome = "Bom Jesus de Goiás"
                        },
                        new
                        {
                            Id = 5203559,
                            EstadoId = 52,
                            Nome = "Bonfinópolis"
                        },
                        new
                        {
                            Id = 5203575,
                            EstadoId = 52,
                            Nome = "Bonópolis"
                        },
                        new
                        {
                            Id = 5203609,
                            EstadoId = 52,
                            Nome = "Brazabrantes"
                        },
                        new
                        {
                            Id = 5203807,
                            EstadoId = 52,
                            Nome = "Britânia"
                        },
                        new
                        {
                            Id = 5203906,
                            EstadoId = 52,
                            Nome = "Buriti Alegre"
                        },
                        new
                        {
                            Id = 5203939,
                            EstadoId = 52,
                            Nome = "Buriti de Goiás"
                        },
                        new
                        {
                            Id = 5203962,
                            EstadoId = 52,
                            Nome = "Buritinópolis"
                        },
                        new
                        {
                            Id = 5204003,
                            EstadoId = 52,
                            Nome = "Cabeceiras"
                        },
                        new
                        {
                            Id = 5204102,
                            EstadoId = 52,
                            Nome = "Cachoeira Alta"
                        },
                        new
                        {
                            Id = 5204201,
                            EstadoId = 52,
                            Nome = "Cachoeira de Goiás"
                        },
                        new
                        {
                            Id = 5204250,
                            EstadoId = 52,
                            Nome = "Cachoeira Dourada"
                        },
                        new
                        {
                            Id = 5204300,
                            EstadoId = 52,
                            Nome = "Caçu"
                        },
                        new
                        {
                            Id = 5204409,
                            EstadoId = 52,
                            Nome = "Caiapônia"
                        },
                        new
                        {
                            Id = 5204508,
                            EstadoId = 52,
                            Nome = "Caldas Novas"
                        },
                        new
                        {
                            Id = 5204557,
                            EstadoId = 52,
                            Nome = "Caldazinha"
                        },
                        new
                        {
                            Id = 5204607,
                            EstadoId = 52,
                            Nome = "Campestre de Goiás"
                        },
                        new
                        {
                            Id = 5204656,
                            EstadoId = 52,
                            Nome = "Campinaçu"
                        },
                        new
                        {
                            Id = 5204706,
                            EstadoId = 52,
                            Nome = "Campinorte"
                        },
                        new
                        {
                            Id = 5204805,
                            EstadoId = 52,
                            Nome = "Campo Alegre de Goiás"
                        },
                        new
                        {
                            Id = 5204854,
                            EstadoId = 52,
                            Nome = "Campo Limpo de Goiás"
                        },
                        new
                        {
                            Id = 5204904,
                            EstadoId = 52,
                            Nome = "Campos Belos"
                        },
                        new
                        {
                            Id = 5204953,
                            EstadoId = 52,
                            Nome = "Campos Verdes"
                        },
                        new
                        {
                            Id = 5205000,
                            EstadoId = 52,
                            Nome = "Carmo do Rio Verde"
                        },
                        new
                        {
                            Id = 5205059,
                            EstadoId = 52,
                            Nome = "Castelândia"
                        },
                        new
                        {
                            Id = 5205109,
                            EstadoId = 52,
                            Nome = "Catalão"
                        },
                        new
                        {
                            Id = 5205208,
                            EstadoId = 52,
                            Nome = "Caturaí"
                        },
                        new
                        {
                            Id = 5205307,
                            EstadoId = 52,
                            Nome = "Cavalcante"
                        },
                        new
                        {
                            Id = 5205406,
                            EstadoId = 52,
                            Nome = "Ceres"
                        },
                        new
                        {
                            Id = 5205455,
                            EstadoId = 52,
                            Nome = "Cezarina"
                        },
                        new
                        {
                            Id = 5205471,
                            EstadoId = 52,
                            Nome = "Chapadão do Céu"
                        },
                        new
                        {
                            Id = 5205497,
                            EstadoId = 52,
                            Nome = "Cidade Ocidental"
                        },
                        new
                        {
                            Id = 5205513,
                            EstadoId = 52,
                            Nome = "Cocalzinho de Goiás"
                        },
                        new
                        {
                            Id = 5205521,
                            EstadoId = 52,
                            Nome = "Colinas do Sul"
                        },
                        new
                        {
                            Id = 5205703,
                            EstadoId = 52,
                            Nome = "Córrego do Ouro"
                        },
                        new
                        {
                            Id = 5205802,
                            EstadoId = 52,
                            Nome = "Corumbá de Goiás"
                        },
                        new
                        {
                            Id = 5205901,
                            EstadoId = 52,
                            Nome = "Corumbaíba"
                        },
                        new
                        {
                            Id = 5206206,
                            EstadoId = 52,
                            Nome = "Cristalina"
                        },
                        new
                        {
                            Id = 5206305,
                            EstadoId = 52,
                            Nome = "Cristianópolis"
                        },
                        new
                        {
                            Id = 5206404,
                            EstadoId = 52,
                            Nome = "Crixás"
                        },
                        new
                        {
                            Id = 5206503,
                            EstadoId = 52,
                            Nome = "Cromínia"
                        },
                        new
                        {
                            Id = 5206602,
                            EstadoId = 52,
                            Nome = "Cumari"
                        },
                        new
                        {
                            Id = 5206701,
                            EstadoId = 52,
                            Nome = "Damianópolis"
                        },
                        new
                        {
                            Id = 5206800,
                            EstadoId = 52,
                            Nome = "Damolândia"
                        },
                        new
                        {
                            Id = 5206909,
                            EstadoId = 52,
                            Nome = "Davinópolis"
                        },
                        new
                        {
                            Id = 5207105,
                            EstadoId = 52,
                            Nome = "Diorama"
                        },
                        new
                        {
                            Id = 5208301,
                            EstadoId = 52,
                            Nome = "Divinópolis de Goiás"
                        },
                        new
                        {
                            Id = 5207253,
                            EstadoId = 52,
                            Nome = "Doverlândia"
                        },
                        new
                        {
                            Id = 5207352,
                            EstadoId = 52,
                            Nome = "Edealina"
                        },
                        new
                        {
                            Id = 5207402,
                            EstadoId = 52,
                            Nome = "Edéia"
                        },
                        new
                        {
                            Id = 5207501,
                            EstadoId = 52,
                            Nome = "Estrela do Norte"
                        },
                        new
                        {
                            Id = 5207535,
                            EstadoId = 52,
                            Nome = "Faina"
                        },
                        new
                        {
                            Id = 5207600,
                            EstadoId = 52,
                            Nome = "Fazenda Nova"
                        },
                        new
                        {
                            Id = 5207808,
                            EstadoId = 52,
                            Nome = "Firminópolis"
                        },
                        new
                        {
                            Id = 5207907,
                            EstadoId = 52,
                            Nome = "Flores de Goiás"
                        },
                        new
                        {
                            Id = 5208004,
                            EstadoId = 52,
                            Nome = "Formosa"
                        },
                        new
                        {
                            Id = 5208103,
                            EstadoId = 52,
                            Nome = "Formoso"
                        },
                        new
                        {
                            Id = 5208152,
                            EstadoId = 52,
                            Nome = "Gameleira de Goiás"
                        },
                        new
                        {
                            Id = 5208400,
                            EstadoId = 52,
                            Nome = "Goianápolis"
                        },
                        new
                        {
                            Id = 5208509,
                            EstadoId = 52,
                            Nome = "Goiandira"
                        },
                        new
                        {
                            Id = 5208608,
                            EstadoId = 52,
                            Nome = "Goianésia"
                        },
                        new
                        {
                            Id = 5208707,
                            EstadoId = 52,
                            Nome = "Goiânia"
                        },
                        new
                        {
                            Id = 5208806,
                            EstadoId = 52,
                            Nome = "Goianira"
                        },
                        new
                        {
                            Id = 5208905,
                            EstadoId = 52,
                            Nome = "Goiás"
                        },
                        new
                        {
                            Id = 5209101,
                            EstadoId = 52,
                            Nome = "Goiatuba"
                        },
                        new
                        {
                            Id = 5209150,
                            EstadoId = 52,
                            Nome = "Gouvelândia"
                        },
                        new
                        {
                            Id = 5209200,
                            EstadoId = 52,
                            Nome = "Guapó"
                        },
                        new
                        {
                            Id = 5209291,
                            EstadoId = 52,
                            Nome = "Guaraíta"
                        },
                        new
                        {
                            Id = 5209408,
                            EstadoId = 52,
                            Nome = "Guarani de Goiás"
                        },
                        new
                        {
                            Id = 5209457,
                            EstadoId = 52,
                            Nome = "Guarinos"
                        },
                        new
                        {
                            Id = 5209606,
                            EstadoId = 52,
                            Nome = "Heitoraí"
                        },
                        new
                        {
                            Id = 5209705,
                            EstadoId = 52,
                            Nome = "Hidrolândia"
                        },
                        new
                        {
                            Id = 5209804,
                            EstadoId = 52,
                            Nome = "Hidrolina"
                        },
                        new
                        {
                            Id = 5209903,
                            EstadoId = 52,
                            Nome = "Iaciara"
                        },
                        new
                        {
                            Id = 5209937,
                            EstadoId = 52,
                            Nome = "Inaciolândia"
                        },
                        new
                        {
                            Id = 5209952,
                            EstadoId = 52,
                            Nome = "Indiara"
                        },
                        new
                        {
                            Id = 5210000,
                            EstadoId = 52,
                            Nome = "Inhumas"
                        },
                        new
                        {
                            Id = 5210109,
                            EstadoId = 52,
                            Nome = "Ipameri"
                        },
                        new
                        {
                            Id = 5210158,
                            EstadoId = 52,
                            Nome = "Ipiranga de Goiás"
                        },
                        new
                        {
                            Id = 5210208,
                            EstadoId = 52,
                            Nome = "Iporá"
                        },
                        new
                        {
                            Id = 5210307,
                            EstadoId = 52,
                            Nome = "Israelândia"
                        },
                        new
                        {
                            Id = 5210406,
                            EstadoId = 52,
                            Nome = "Itaberaí"
                        },
                        new
                        {
                            Id = 5210562,
                            EstadoId = 52,
                            Nome = "Itaguari"
                        },
                        new
                        {
                            Id = 5210604,
                            EstadoId = 52,
                            Nome = "Itaguaru"
                        },
                        new
                        {
                            Id = 5210802,
                            EstadoId = 52,
                            Nome = "Itajá"
                        },
                        new
                        {
                            Id = 5210901,
                            EstadoId = 52,
                            Nome = "Itapaci"
                        },
                        new
                        {
                            Id = 5211008,
                            EstadoId = 52,
                            Nome = "Itapirapuã"
                        },
                        new
                        {
                            Id = 5211206,
                            EstadoId = 52,
                            Nome = "Itapuranga"
                        },
                        new
                        {
                            Id = 5211305,
                            EstadoId = 52,
                            Nome = "Itarumã"
                        },
                        new
                        {
                            Id = 5211404,
                            EstadoId = 52,
                            Nome = "Itauçu"
                        },
                        new
                        {
                            Id = 5211503,
                            EstadoId = 52,
                            Nome = "Itumbiara"
                        },
                        new
                        {
                            Id = 5211602,
                            EstadoId = 52,
                            Nome = "Ivolândia"
                        },
                        new
                        {
                            Id = 5211701,
                            EstadoId = 52,
                            Nome = "Jandaia"
                        },
                        new
                        {
                            Id = 5211800,
                            EstadoId = 52,
                            Nome = "Jaraguá"
                        },
                        new
                        {
                            Id = 5211909,
                            EstadoId = 52,
                            Nome = "Jataí"
                        },
                        new
                        {
                            Id = 5212006,
                            EstadoId = 52,
                            Nome = "Jaupaci"
                        },
                        new
                        {
                            Id = 5212055,
                            EstadoId = 52,
                            Nome = "Jesúpolis"
                        },
                        new
                        {
                            Id = 5212105,
                            EstadoId = 52,
                            Nome = "Joviânia"
                        },
                        new
                        {
                            Id = 5212204,
                            EstadoId = 52,
                            Nome = "Jussara"
                        },
                        new
                        {
                            Id = 5212253,
                            EstadoId = 52,
                            Nome = "Lagoa Santa"
                        },
                        new
                        {
                            Id = 5212303,
                            EstadoId = 52,
                            Nome = "Leopoldo de Bulhões"
                        },
                        new
                        {
                            Id = 5212501,
                            EstadoId = 52,
                            Nome = "Luziânia"
                        },
                        new
                        {
                            Id = 5212600,
                            EstadoId = 52,
                            Nome = "Mairipotaba"
                        },
                        new
                        {
                            Id = 5212709,
                            EstadoId = 52,
                            Nome = "Mambaí"
                        },
                        new
                        {
                            Id = 5212808,
                            EstadoId = 52,
                            Nome = "Mara Rosa"
                        },
                        new
                        {
                            Id = 5212907,
                            EstadoId = 52,
                            Nome = "Marzagão"
                        },
                        new
                        {
                            Id = 5212956,
                            EstadoId = 52,
                            Nome = "Matrinchã"
                        },
                        new
                        {
                            Id = 5213004,
                            EstadoId = 52,
                            Nome = "Maurilândia"
                        },
                        new
                        {
                            Id = 5213053,
                            EstadoId = 52,
                            Nome = "Mimoso de Goiás"
                        },
                        new
                        {
                            Id = 5213087,
                            EstadoId = 52,
                            Nome = "Minaçu"
                        },
                        new
                        {
                            Id = 5213103,
                            EstadoId = 52,
                            Nome = "Mineiros"
                        },
                        new
                        {
                            Id = 5213400,
                            EstadoId = 52,
                            Nome = "Moiporá"
                        },
                        new
                        {
                            Id = 5213509,
                            EstadoId = 52,
                            Nome = "Monte Alegre de Goiás"
                        },
                        new
                        {
                            Id = 5213707,
                            EstadoId = 52,
                            Nome = "Montes Claros de Goiás"
                        },
                        new
                        {
                            Id = 5213756,
                            EstadoId = 52,
                            Nome = "Montividiu"
                        },
                        new
                        {
                            Id = 5213772,
                            EstadoId = 52,
                            Nome = "Montividiu do Norte"
                        },
                        new
                        {
                            Id = 5213806,
                            EstadoId = 52,
                            Nome = "Morrinhos"
                        },
                        new
                        {
                            Id = 5213855,
                            EstadoId = 52,
                            Nome = "Morro Agudo de Goiás"
                        },
                        new
                        {
                            Id = 5213905,
                            EstadoId = 52,
                            Nome = "Mossâmedes"
                        },
                        new
                        {
                            Id = 5214002,
                            EstadoId = 52,
                            Nome = "Mozarlândia"
                        },
                        new
                        {
                            Id = 5214051,
                            EstadoId = 52,
                            Nome = "Mundo Novo"
                        },
                        new
                        {
                            Id = 5214101,
                            EstadoId = 52,
                            Nome = "Mutunópolis"
                        },
                        new
                        {
                            Id = 5214408,
                            EstadoId = 52,
                            Nome = "Nazário"
                        },
                        new
                        {
                            Id = 5214507,
                            EstadoId = 52,
                            Nome = "Nerópolis"
                        },
                        new
                        {
                            Id = 5214606,
                            EstadoId = 52,
                            Nome = "Niquelândia"
                        },
                        new
                        {
                            Id = 5214705,
                            EstadoId = 52,
                            Nome = "Nova América"
                        },
                        new
                        {
                            Id = 5214804,
                            EstadoId = 52,
                            Nome = "Nova Aurora"
                        },
                        new
                        {
                            Id = 5214838,
                            EstadoId = 52,
                            Nome = "Nova Crixás"
                        },
                        new
                        {
                            Id = 5214861,
                            EstadoId = 52,
                            Nome = "Nova Glória"
                        },
                        new
                        {
                            Id = 5214879,
                            EstadoId = 52,
                            Nome = "Nova Iguaçu de Goiás"
                        },
                        new
                        {
                            Id = 5214903,
                            EstadoId = 52,
                            Nome = "Nova Roma"
                        },
                        new
                        {
                            Id = 5215009,
                            EstadoId = 52,
                            Nome = "Nova Veneza"
                        },
                        new
                        {
                            Id = 5215207,
                            EstadoId = 52,
                            Nome = "Novo Brasil"
                        },
                        new
                        {
                            Id = 5215231,
                            EstadoId = 52,
                            Nome = "Novo Gama"
                        },
                        new
                        {
                            Id = 5215256,
                            EstadoId = 52,
                            Nome = "Novo Planalto"
                        },
                        new
                        {
                            Id = 5215306,
                            EstadoId = 52,
                            Nome = "Orizona"
                        },
                        new
                        {
                            Id = 5215405,
                            EstadoId = 52,
                            Nome = "Ouro Verde de Goiás"
                        },
                        new
                        {
                            Id = 5215504,
                            EstadoId = 52,
                            Nome = "Ouvidor"
                        },
                        new
                        {
                            Id = 5215603,
                            EstadoId = 52,
                            Nome = "Padre Bernardo"
                        },
                        new
                        {
                            Id = 5215652,
                            EstadoId = 52,
                            Nome = "Palestina de Goiás"
                        },
                        new
                        {
                            Id = 5215702,
                            EstadoId = 52,
                            Nome = "Palmeiras de Goiás"
                        },
                        new
                        {
                            Id = 5215801,
                            EstadoId = 52,
                            Nome = "Palmelo"
                        },
                        new
                        {
                            Id = 5215900,
                            EstadoId = 52,
                            Nome = "Palminópolis"
                        },
                        new
                        {
                            Id = 5216007,
                            EstadoId = 52,
                            Nome = "Panamá"
                        },
                        new
                        {
                            Id = 5216304,
                            EstadoId = 52,
                            Nome = "Paranaiguara"
                        },
                        new
                        {
                            Id = 5216403,
                            EstadoId = 52,
                            Nome = "Paraúna"
                        },
                        new
                        {
                            Id = 5216452,
                            EstadoId = 52,
                            Nome = "Perolândia"
                        },
                        new
                        {
                            Id = 5216809,
                            EstadoId = 52,
                            Nome = "Petrolina de Goiás"
                        },
                        new
                        {
                            Id = 5216908,
                            EstadoId = 52,
                            Nome = "Pilar de Goiás"
                        },
                        new
                        {
                            Id = 5217104,
                            EstadoId = 52,
                            Nome = "Piracanjuba"
                        },
                        new
                        {
                            Id = 5217203,
                            EstadoId = 52,
                            Nome = "Piranhas"
                        },
                        new
                        {
                            Id = 5217302,
                            EstadoId = 52,
                            Nome = "Pirenópolis"
                        },
                        new
                        {
                            Id = 5217401,
                            EstadoId = 52,
                            Nome = "Pires do Rio"
                        },
                        new
                        {
                            Id = 5217609,
                            EstadoId = 52,
                            Nome = "Planaltina"
                        },
                        new
                        {
                            Id = 5217708,
                            EstadoId = 52,
                            Nome = "Pontalina"
                        },
                        new
                        {
                            Id = 5218003,
                            EstadoId = 52,
                            Nome = "Porangatu"
                        },
                        new
                        {
                            Id = 5218052,
                            EstadoId = 52,
                            Nome = "Porteirão"
                        },
                        new
                        {
                            Id = 5218102,
                            EstadoId = 52,
                            Nome = "Portelândia"
                        },
                        new
                        {
                            Id = 5218300,
                            EstadoId = 52,
                            Nome = "Posse"
                        },
                        new
                        {
                            Id = 5218391,
                            EstadoId = 52,
                            Nome = "Professor Jamil"
                        },
                        new
                        {
                            Id = 5218508,
                            EstadoId = 52,
                            Nome = "Quirinópolis"
                        },
                        new
                        {
                            Id = 5218607,
                            EstadoId = 52,
                            Nome = "Rialma"
                        },
                        new
                        {
                            Id = 5218706,
                            EstadoId = 52,
                            Nome = "Rianápolis"
                        },
                        new
                        {
                            Id = 5218789,
                            EstadoId = 52,
                            Nome = "Rio Quente"
                        },
                        new
                        {
                            Id = 5218805,
                            EstadoId = 52,
                            Nome = "Rio Verde"
                        },
                        new
                        {
                            Id = 5218904,
                            EstadoId = 52,
                            Nome = "Rubiataba"
                        },
                        new
                        {
                            Id = 5219001,
                            EstadoId = 52,
                            Nome = "Sanclerlândia"
                        },
                        new
                        {
                            Id = 5219100,
                            EstadoId = 52,
                            Nome = "Santa Bárbara de Goiás"
                        },
                        new
                        {
                            Id = 5219209,
                            EstadoId = 52,
                            Nome = "Santa Cruz de Goiás"
                        },
                        new
                        {
                            Id = 5219258,
                            EstadoId = 52,
                            Nome = "Santa Fé de Goiás"
                        },
                        new
                        {
                            Id = 5219308,
                            EstadoId = 52,
                            Nome = "Santa Helena de Goiás"
                        },
                        new
                        {
                            Id = 5219357,
                            EstadoId = 52,
                            Nome = "Santa Isabel"
                        },
                        new
                        {
                            Id = 5219407,
                            EstadoId = 52,
                            Nome = "Santa Rita do Araguaia"
                        },
                        new
                        {
                            Id = 5219456,
                            EstadoId = 52,
                            Nome = "Santa Rita do Novo Destino"
                        },
                        new
                        {
                            Id = 5219506,
                            EstadoId = 52,
                            Nome = "Santa Rosa de Goiás"
                        },
                        new
                        {
                            Id = 5219605,
                            EstadoId = 52,
                            Nome = "Santa Tereza de Goiás"
                        },
                        new
                        {
                            Id = 5219704,
                            EstadoId = 52,
                            Nome = "Santa Terezinha de Goiás"
                        },
                        new
                        {
                            Id = 5219712,
                            EstadoId = 52,
                            Nome = "Santo Antônio da Barra"
                        },
                        new
                        {
                            Id = 5219738,
                            EstadoId = 52,
                            Nome = "Santo Antônio de Goiás"
                        },
                        new
                        {
                            Id = 5219753,
                            EstadoId = 52,
                            Nome = "Santo Antônio do Descoberto"
                        },
                        new
                        {
                            Id = 5219803,
                            EstadoId = 52,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            Id = 5219902,
                            EstadoId = 52,
                            Nome = "São Francisco de Goiás"
                        },
                        new
                        {
                            Id = 5220058,
                            EstadoId = 52,
                            Nome = "São João da Paraúna"
                        },
                        new
                        {
                            Id = 5220009,
                            EstadoId = 52,
                            Nome = "São João dAliança"
                        },
                        new
                        {
                            Id = 5220108,
                            EstadoId = 52,
                            Nome = "São Luís de Montes Belos"
                        },
                        new
                        {
                            Id = 5220157,
                            EstadoId = 52,
                            Nome = "São Luíz do Norte"
                        },
                        new
                        {
                            Id = 5220207,
                            EstadoId = 52,
                            Nome = "São Miguel do Araguaia"
                        },
                        new
                        {
                            Id = 5220264,
                            EstadoId = 52,
                            Nome = "São Miguel do Passa Quatro"
                        },
                        new
                        {
                            Id = 5220280,
                            EstadoId = 52,
                            Nome = "São Patrício"
                        },
                        new
                        {
                            Id = 5220405,
                            EstadoId = 52,
                            Nome = "São Simão"
                        },
                        new
                        {
                            Id = 5220454,
                            EstadoId = 52,
                            Nome = "Senador Canedo"
                        },
                        new
                        {
                            Id = 5220504,
                            EstadoId = 52,
                            Nome = "Serranópolis"
                        },
                        new
                        {
                            Id = 5220603,
                            EstadoId = 52,
                            Nome = "Silvânia"
                        },
                        new
                        {
                            Id = 5220686,
                            EstadoId = 52,
                            Nome = "Simolândia"
                        },
                        new
                        {
                            Id = 5220702,
                            EstadoId = 52,
                            Nome = "Sítio dAbadia"
                        },
                        new
                        {
                            Id = 5221007,
                            EstadoId = 52,
                            Nome = "Taquaral de Goiás"
                        },
                        new
                        {
                            Id = 5221080,
                            EstadoId = 52,
                            Nome = "Teresina de Goiás"
                        },
                        new
                        {
                            Id = 5221197,
                            EstadoId = 52,
                            Nome = "Terezópolis de Goiás"
                        },
                        new
                        {
                            Id = 5221304,
                            EstadoId = 52,
                            Nome = "Três Ranchos"
                        },
                        new
                        {
                            Id = 5221403,
                            EstadoId = 52,
                            Nome = "Trindade"
                        },
                        new
                        {
                            Id = 5221452,
                            EstadoId = 52,
                            Nome = "Trombas"
                        },
                        new
                        {
                            Id = 5221502,
                            EstadoId = 52,
                            Nome = "Turvânia"
                        },
                        new
                        {
                            Id = 5221551,
                            EstadoId = 52,
                            Nome = "Turvelândia"
                        },
                        new
                        {
                            Id = 5221577,
                            EstadoId = 52,
                            Nome = "Uirapuru"
                        },
                        new
                        {
                            Id = 5221601,
                            EstadoId = 52,
                            Nome = "Uruaçu"
                        },
                        new
                        {
                            Id = 5221700,
                            EstadoId = 52,
                            Nome = "Uruana"
                        },
                        new
                        {
                            Id = 5221809,
                            EstadoId = 52,
                            Nome = "Urutaí"
                        },
                        new
                        {
                            Id = 5221858,
                            EstadoId = 52,
                            Nome = "Valparaíso de Goiás"
                        },
                        new
                        {
                            Id = 5221908,
                            EstadoId = 52,
                            Nome = "Varjão"
                        },
                        new
                        {
                            Id = 5222005,
                            EstadoId = 52,
                            Nome = "Vianópolis"
                        },
                        new
                        {
                            Id = 5222054,
                            EstadoId = 52,
                            Nome = "Vicentinópolis"
                        },
                        new
                        {
                            Id = 5222203,
                            EstadoId = 52,
                            Nome = "Vila Boa"
                        },
                        new
                        {
                            Id = 5222302,
                            EstadoId = 52,
                            Nome = "Vila Propício"
                        },
                        new
                        {
                            Id = 5300108,
                            EstadoId = 53,
                            Nome = "Brasília"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Nacionalidade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("nacionalidade", "geral");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Nome = "Brasileiro"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Argentino"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Naturalizado Brasileiro"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Boliviano"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Chileno"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Paraguaio"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Uruguaio"
                        },
                        new
                        {
                            Id = 30,
                            Nome = "Alemão"
                        },
                        new
                        {
                            Id = 31,
                            Nome = "Belga"
                        },
                        new
                        {
                            Id = 32,
                            Nome = "Britânico"
                        },
                        new
                        {
                            Id = 34,
                            Nome = "Canadense"
                        },
                        new
                        {
                            Id = 35,
                            Nome = "Espanhol"
                        },
                        new
                        {
                            Id = 36,
                            Nome = "Norte-Americano (EUA)"
                        },
                        new
                        {
                            Id = 37,
                            Nome = "Francês"
                        },
                        new
                        {
                            Id = 38,
                            Nome = "Suíço"
                        },
                        new
                        {
                            Id = 39,
                            Nome = "Italiano"
                        },
                        new
                        {
                            Id = 41,
                            Nome = "Japonês"
                        },
                        new
                        {
                            Id = 42,
                            Nome = "Chinês"
                        },
                        new
                        {
                            Id = 43,
                            Nome = "Coreano"
                        },
                        new
                        {
                            Id = 45,
                            Nome = "Português"
                        },
                        new
                        {
                            Id = 48,
                            Nome = "Outros Latino-Americanos"
                        },
                        new
                        {
                            Id = 49,
                            Nome = "Outros Asiáticos"
                        },
                        new
                        {
                            Id = 50,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BeneficioGov")
                        .HasColumnType("boolean");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoZoop")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Creci")
                        .HasColumnType("text");

                    b.Property<string>("DFourSignFolderId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataExpedicao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FamiliarProblemaCronico")
                        .HasColumnType("integer");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("IdososFamilia")
                        .HasColumnType("integer");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<bool>("IsAdministradora")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCliente")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConstrutora")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorretor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFornecedor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProprietario")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeguradora")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransportadora")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("OrgaoExpedido")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Rg")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("SexoId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("TipoPessoaId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CnpjCpf")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoPessoaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("pessoa", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<string>("Ramal")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("pessoacontato", "geral");

                    b.HasDiscriminator().HasValue("PessoaContato");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("TrocaEndereco")
                        .HasColumnType("boolean");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pessoadocumento", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Dependente")
                        .HasColumnType("boolean");

                    b.Property<int?>("EscolaridadeId")
                        .HasColumnType("integer");

                    b.Property<int>("GrauParentescoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("OrgaoExpedidor")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfissaoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RendaBruta")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RendaLiquida")
                        .HasColumnType("numeric");

                    b.Property<string>("Rg")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadeId");

                    b.HasIndex("GrauParentescoId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("ProfissaoId");

                    b.ToTable("pessoafamiliar", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaGateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIntegracao")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoGatewayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TipoGatewayId");

                    b.ToTable("pessoagateway", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaPrefeitura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BeneficioGov")
                        .HasColumnType("boolean");

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<int?>("CodigoOrigem")
                        .HasColumnType("integer");

                    b.Property<string>("DFourSignFolderId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataExpedicao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("DisponibilidadeFinanciamento")
                        .HasColumnType("boolean");

                    b.Property<bool>("DivulgacaoProgramaSocial")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<int>("FamiliarProblemaCronico")
                        .HasColumnType("integer");

                    b.Property<int?>("IdImportacaoPessoa")
                        .HasColumnType("integer");

                    b.Property<int>("IdososFamilia")
                        .HasColumnType("integer");

                    b.Property<string>("InteresseMelhoriaHabitacional")
                        .HasColumnType("text");

                    b.Property<bool>("InteresseRegularizacaoFundiaria")
                        .HasColumnType("boolean");

                    b.Property<string>("NecessidadesEspeciais")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("OrgaoExpedido")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<bool>("PessoaAtiva")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossuiImovelExterno")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossuiInteresseMelhoriaHabitacional")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossuiNecessidadesEspeciais")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossuiPreferenciaPorLocalizacao")
                        .HasColumnType("boolean");

                    b.Property<bool>("PossuiVulnerabilidadeSocial")
                        .HasColumnType("boolean");

                    b.Property<string>("PreferenciaPorLocalizacao")
                        .HasColumnType("text");

                    b.Property<int>("QuantImoveisExterno")
                        .HasColumnType("integer");

                    b.Property<bool>("ReceberInformacoesEmailCelular")
                        .HasColumnType("boolean");

                    b.Property<string>("Rg")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("SexoId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TamanhoDesejadoNovaMoradia")
                        .HasColumnType("numeric");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("TipoBeneficioGov")
                        .HasColumnType("text");

                    b.Property<int?>("TipoMoradiaNovaId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoMoradioNovaId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<bool>("possuiInteresseMoradiaNova")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoMoradiaNovaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pessoaprefeitura", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Profissao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("Codigo")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.ToTable("profissao", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 848505,
                            Nome = "Abatedor"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 764305,
                            Nome = "Acabador de calçados"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 766305,
                            Nome = "Acabador de embalagens (flexíveis e cartotécnicas)"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = 716105,
                            Nome = "Acabador de superfícies de concreto"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = 848510,
                            Nome = "Açougueiro"
                        },
                        new
                        {
                            Id = 6,
                            Codigo = 376205,
                            Nome = "Acrobata"
                        },
                        new
                        {
                            Id = 7,
                            Codigo = 623005,
                            Nome = "Adestrador de animais"
                        },
                        new
                        {
                            Id = 8,
                            Codigo = 252105,
                            Nome = "Administrador"
                        },
                        new
                        {
                            Id = 9,
                            Codigo = 212305,
                            Nome = "Administrador de banco de dados"
                        },
                        new
                        {
                            Id = 10,
                            Codigo = 510110,
                            Nome = "Administrador de edifícios"
                        },
                        new
                        {
                            Id = 11,
                            Codigo = 252505,
                            Nome = "Administrador de fundos e carteiras de investimento"
                        },
                        new
                        {
                            Id = 12,
                            Codigo = 212310,
                            Nome = "Administrador de redes"
                        },
                        new
                        {
                            Id = 13,
                            Codigo = 212315,
                            Nome = "Administrador de sistemas operacionais"
                        },
                        new
                        {
                            Id = 14,
                            Codigo = 212320,
                            Nome = "Administrador em segurança da informação"
                        },
                        new
                        {
                            Id = 15,
                            Codigo = 241005,
                            Nome = "Advogado"
                        },
                        new
                        {
                            Id = 16,
                            Codigo = 241030,
                            Nome = "Advogado (áreas especiais)"
                        },
                        new
                        {
                            Id = 17,
                            Codigo = 241015,
                            Nome = "Advogado (direito civil)"
                        },
                        new
                        {
                            Id = 18,
                            Codigo = 241035,
                            Nome = "Advogado (direito do trabalho)"
                        },
                        new
                        {
                            Id = 19,
                            Codigo = 241025,
                            Nome = "Advogado (direito penal)"
                        },
                        new
                        {
                            Id = 20,
                            Codigo = 241020,
                            Nome = "Advogado (direito público)"
                        },
                        new
                        {
                            Id = 21,
                            Codigo = 241205,
                            Nome = "Advogado da união"
                        },
                        new
                        {
                            Id = 22,
                            Codigo = 241010,
                            Nome = "Advogado de empresa"
                        },
                        new
                        {
                            Id = 23,
                            Codigo = 721305,
                            Nome = "Afiador de cardas"
                        },
                        new
                        {
                            Id = 24,
                            Codigo = 721310,
                            Nome = "Afiador de cutelaria"
                        },
                        new
                        {
                            Id = 25,
                            Codigo = 721315,
                            Nome = "Afiador de ferramentas"
                        },
                        new
                        {
                            Id = 26,
                            Codigo = 721320,
                            Nome = "Afiador de serras"
                        },
                        new
                        {
                            Id = 27,
                            Codigo = 742105,
                            Nome = "Afinador de instrumentos musicais"
                        },
                        new
                        {
                            Id = 28,
                            Codigo = 342120,
                            Nome = "Afretador"
                        },
                        new
                        {
                            Id = 29,
                            Codigo = 253140,
                            Nome = "Agenciador de propaganda"
                        },
                        new
                        {
                            Id = 30,
                            Codigo = 515105,
                            Nome = "Agente comunitário de saúde"
                        },
                        new
                        {
                            Id = 31,
                            Codigo = 515310,
                            Nome = "Agente de ação social"
                        },
                        new
                        {
                            Id = 32,
                            Codigo = 515140,
                            Nome = "Agente de combate às endemias"
                        },
                        new
                        {
                            Id = 33,
                            Codigo = 352205,
                            Nome = "Agente de defesa ambiental"
                        },
                        new
                        {
                            Id = 34,
                            Codigo = 352405,
                            Nome = "Agente de direitos autorais"
                        },
                        new
                        {
                            Id = 35,
                            Codigo = 342405,
                            Nome = "Agente de estação (ferrovia e metrô)"
                        },
                        new
                        {
                            Id = 36,
                            Codigo = 254310,
                            Nome = "Agente de higiene e segurança"
                        },
                        new
                        {
                            Id = 37,
                            Codigo = 351905,
                            Nome = "Agente de inteligência"
                        },
                        new
                        {
                            Id = 38,
                            Codigo = 215105,
                            Nome = "Agente de manobra e docagem"
                        },
                        new
                        {
                            Id = 39,
                            Codigo = 411050,
                            Nome = "Agente de microcrédito"
                        },
                        new
                        {
                            Id = 40,
                            Codigo = 783105,
                            Nome = "Agente de pátio"
                        },
                        new
                        {
                            Id = 41,
                            Codigo = 517205,
                            Nome = "Agente de polícia federal"
                        },
                        new
                        {
                            Id = 42,
                            Codigo = 517415,
                            Nome = "Agente de portaria"
                        },
                        new
                        {
                            Id = 43,
                            Codigo = 517305,
                            Nome = "Agente de proteção de aeroporto"
                        },
                        new
                        {
                            Id = 44,
                            Codigo = 342550,
                            Nome = "Agente de proteção de aviação civil"
                        },
                        new
                        {
                            Id = 45,
                            Codigo = 351315,
                            Nome = "Agente de recrutamento e seleção"
                        },
                        new
                        {
                            Id = 46,
                            Codigo = 352210,
                            Nome = "Agente de saúde pública"
                        },
                        new
                        {
                            Id = 47,
                            Codigo = 517310,
                            Nome = "Agente de segurança"
                        },
                        new
                        {
                            Id = 48,
                            Codigo = 517315,
                            Nome = "Agente de segurança penitenciária"
                        },
                        new
                        {
                            Id = 49,
                            Codigo = 517220,
                            Nome = "Agente de trânsito"
                        },
                        new
                        {
                            Id = 50,
                            Codigo = 354120,
                            Nome = "Agente de vendas de serviços"
                        },
                        new
                        {
                            Id = 51,
                            Codigo = 354815,
                            Nome = "Agente de viagem"
                        },
                        new
                        {
                            Id = 52,
                            Codigo = 352310,
                            Nome = "Agente fiscal de qualidade"
                        },
                        new
                        {
                            Id = 53,
                            Codigo = 352315,
                            Nome = "Agente fiscal metrológico"
                        },
                        new
                        {
                            Id = 54,
                            Codigo = 352320,
                            Nome = "Agente fiscal têxtil"
                        },
                        new
                        {
                            Id = 55,
                            Codigo = 516505,
                            Nome = "Agente funerário"
                        },
                        new
                        {
                            Id = 56,
                            Codigo = 515130,
                            Nome = "Agente indígena de saneamento"
                        },
                        new
                        {
                            Id = 57,
                            Codigo = 515125,
                            Nome = "Agente indígena de saúde"
                        },
                        new
                        {
                            Id = 58,
                            Codigo = 351910,
                            Nome = "Agente técnico de inteligência"
                        },
                        new
                        {
                            Id = 59,
                            Codigo = 632615,
                            Nome = "Ajudante de carvoaria"
                        },
                        new
                        {
                            Id = 60,
                            Codigo = 763125,
                            Nome = "Ajudante de confecção"
                        },
                        new
                        {
                            Id = 61,
                            Codigo = 342205,
                            Nome = "Ajudante de despachante aduaneiro"
                        },
                        new
                        {
                            Id = 62,
                            Codigo = 783225,
                            Nome = "Ajudante de motorista"
                        },
                        new
                        {
                            Id = 63,
                            Codigo = 741105,
                            Nome = "Ajustador de instrumentos de precisão"
                        },
                        new
                        {
                            Id = 64,
                            Codigo = 725005,
                            Nome = "Ajustador ferramenteiro"
                        },
                        new
                        {
                            Id = 65,
                            Codigo = 725010,
                            Nome = "Ajustador mecânico"
                        },
                        new
                        {
                            Id = 66,
                            Codigo = 725015,
                            Nome = "Ajustador mecânico (usinagem em bancada e em máquinas-ferramentas)"
                        },
                        new
                        {
                            Id = 67,
                            Codigo = 725020,
                            Nome = "Ajustador mecânico em bancada"
                        },
                        new
                        {
                            Id = 68,
                            Codigo = 725025,
                            Nome = "Ajustador naval (reparo e construção)"
                        },
                        new
                        {
                            Id = 69,
                            Codigo = 841705,
                            Nome = "Alambiqueiro"
                        },
                        new
                        {
                            Id = 70,
                            Codigo = 763005,
                            Nome = "Alfaiate"
                        },
                        new
                        {
                            Id = 71,
                            Codigo = 784205,
                            Nome = "Alimentador de linha de produção"
                        },
                        new
                        {
                            Id = 72,
                            Codigo = 992105,
                            Nome = "Alinhador de pneus"
                        },
                        new
                        {
                            Id = 73,
                            Codigo = 414105,
                            Nome = "Almoxarife"
                        },
                        new
                        {
                            Id = 74,
                            Codigo = 761405,
                            Nome = "Alvejador (tecidos)"
                        },
                        new
                        {
                            Id = 75,
                            Codigo = 783240,
                            Nome = "Amarrador e desamarrado de embarcações"
                        },
                        new
                        {
                            Id = 76,
                            Codigo = 711105,
                            Nome = "Amostrador de minérios"
                        },
                        new
                        {
                            Id = 77,
                            Codigo = 252510,
                            Nome = "Analista de câmbio"
                        },
                        new
                        {
                            Id = 78,
                            Codigo = 252515,
                            Nome = "Analista de cobrança (instituições financeiras)"
                        },
                        new
                        {
                            Id = 79,
                            Codigo = 142125,
                            Nome = "Analista de compliance"
                        },
                        new
                        {
                            Id = 80,
                            Codigo = 252525,
                            Nome = "Analista de crédito (instituições financeiras)"
                        },
                        new
                        {
                            Id = 81,
                            Codigo = 252530,
                            Nome = "Analista de crédito rural"
                        },
                        new
                        {
                            Id = 82,
                            Codigo = 342215,
                            Nome = "Analista de desembaraço aduaneiro"
                        },
                        new
                        {
                            Id = 83,
                            Codigo = 212405,
                            Nome = "Analista de desenvolvimento de sistemas"
                        },
                        new
                        {
                            Id = 84,
                            Codigo = 354305,
                            Nome = "Analista de exportação e importação"
                        },
                        new
                        {
                            Id = 85,
                            Codigo = 413105,
                            Nome = "Analista de folha de pagamento"
                        },
                        new
                        {
                            Id = 86,
                            Codigo = 252725,
                            Nome = "Analista de gestão de estoque"
                        },
                        new
                        {
                            Id = 87,
                            Codigo = 415310,
                            Nome = "Analista de informação em saúde"
                        },
                        new
                        {
                            Id = 88,
                            Codigo = 261215,
                            Nome = "Analista de informações (pesquisador de informações de rede)"
                        },
                        new
                        {
                            Id = 89,
                            Codigo = 252535,
                            Nome = "Analista de leasing"
                        },
                        new
                        {
                            Id = 90,
                            Codigo = 252715,
                            Nome = "Analista de logistica"
                        },
                        new
                        {
                            Id = 91,
                            Codigo = 391140,
                            Nome = "Analista de manutenção (equipamentos aéreos)"
                        },
                        new
                        {
                            Id = 92,
                            Codigo = 253405,
                            Nome = "Analista de mídias sociais"
                        },
                        new
                        {
                            Id = 93,
                            Codigo = 142330,
                            Nome = "Analista de negócios"
                        },
                        new
                        {
                            Id = 94,
                            Codigo = 252705,
                            Nome = "Analista de pcp (programação e controle da produção)"
                        },
                        new
                        {
                            Id = 95,
                            Codigo = 142335,
                            Nome = "Analista de pesquisa de mercado"
                        },
                        new
                        {
                            Id = 96,
                            Codigo = 391145,
                            Nome = "Analista de planejamento de manutenção"
                        },
                        new
                        {
                            Id = 97,
                            Codigo = 252710,
                            Nome = "Analista de planejamento de materias"
                        },
                        new
                        {
                            Id = 98,
                            Codigo = 111510,
                            Nome = "Analista de planejamento e orçamento - apo"
                        },
                        new
                        {
                            Id = 99,
                            Codigo = 252540,
                            Nome = "Analista de produtos bancários"
                        },
                        new
                        {
                            Id = 100,
                            Codigo = 252720,
                            Nome = "Analista de projetos logisticos"
                        },
                        new
                        {
                            Id = 101,
                            Codigo = 252405,
                            Nome = "Analista de recursos humanos"
                        },
                        new
                        {
                            Id = 102,
                            Codigo = 212410,
                            Nome = "Analista de redes e de comunicação de dados"
                        },
                        new
                        {
                            Id = 103,
                            Codigo = 142130,
                            Nome = "Analista de riscos"
                        },
                        new
                        {
                            Id = 104,
                            Codigo = 351705,
                            Nome = "Analista de seguros (técnico)"
                        },
                        new
                        {
                            Id = 105,
                            Codigo = 351710,
                            Nome = "Analista de sinistros"
                        },
                        new
                        {
                            Id = 106,
                            Codigo = 212415,
                            Nome = "Analista de sistemas de automação"
                        },
                        new
                        {
                            Id = 107,
                            Codigo = 212420,
                            Nome = "Analista de suporte computacional"
                        },
                        new
                        {
                            Id = 108,
                            Codigo = 212430,
                            Nome = "Analista de testes de tecnologia da informação"
                        },
                        new
                        {
                            Id = 109,
                            Codigo = 342105,
                            Nome = "Analista de transporte em comércio exterior"
                        },
                        new
                        {
                            Id = 110,
                            Codigo = 252545,
                            Nome = "Analista financeiro (instituições financeiras)"
                        },
                        new
                        {
                            Id = 111,
                            Codigo = 374155,
                            Nome = "Analista musical"
                        },
                        new
                        {
                            Id = 112,
                            Codigo = 261705,
                            Nome = "Âncora de mídias audiovisuais"
                        },
                        new
                        {
                            Id = 113,
                            Codigo = 251105,
                            Nome = "Antropólogo"
                        },
                        new
                        {
                            Id = 114,
                            Codigo = 613405,
                            Nome = "Apicultor"
                        },
                        new
                        {
                            Id = 115,
                            Codigo = 715705,
                            Nome = "Aplicador de asfalto impermeabilizante (coberturas)"
                        },
                        new
                        {
                            Id = 116,
                            Codigo = 424210,
                            Nome = "Aplicador de provas (concurso, avaliação,exame)"
                        },
                        new
                        {
                            Id = 117,
                            Codigo = 523120,
                            Nome = "Aplicador de vinil autoadesivo"
                        },
                        new
                        {
                            Id = 118,
                            Codigo = 752205,
                            Nome = "Aplicador serigráfico em vidros"
                        },
                        new
                        {
                            Id = 119,
                            Codigo = 414205,
                            Nome = "Apontador de mão-de-obra"
                        },
                        new
                        {
                            Id = 120,
                            Codigo = 414210,
                            Nome = "Apontador de produção"
                        },
                        new
                        {
                            Id = 121,
                            Codigo = 376325,
                            Nome = "Apresentador de circo"
                        },
                        new
                        {
                            Id = 122,
                            Codigo = 376305,
                            Nome = "Apresentador de eventos"
                        },
                        new
                        {
                            Id = 123,
                            Codigo = 376310,
                            Nome = "Apresentador de festas populares"
                        },
                        new
                        {
                            Id = 124,
                            Codigo = 376315,
                            Nome = "Apresentador de programas de rádio"
                        },
                        new
                        {
                            Id = 125,
                            Codigo = 376320,
                            Nome = "Apresentador de programas de televisão"
                        },
                        new
                        {
                            Id = 126,
                            Codigo = 377210,
                            Nome = "Árbitro de atletismo"
                        },
                        new
                        {
                            Id = 127,
                            Codigo = 377215,
                            Nome = "Árbitro de basquete"
                        },
                        new
                        {
                            Id = 128,
                            Codigo = 377220,
                            Nome = "Árbitro de futebol"
                        },
                        new
                        {
                            Id = 129,
                            Codigo = 377225,
                            Nome = "Árbitro de futebol de salão"
                        },
                        new
                        {
                            Id = 130,
                            Codigo = 377230,
                            Nome = "Árbitro de judô"
                        },
                        new
                        {
                            Id = 131,
                            Codigo = 377235,
                            Nome = "Árbitro de karatê"
                        },
                        new
                        {
                            Id = 132,
                            Codigo = 377240,
                            Nome = "Árbitro de poló aquático"
                        },
                        new
                        {
                            Id = 133,
                            Codigo = 377245,
                            Nome = "Árbitro de vôlei"
                        },
                        new
                        {
                            Id = 134,
                            Codigo = 377205,
                            Nome = "Árbitro desportivo"
                        },
                        new
                        {
                            Id = 135,
                            Codigo = 351440,
                            Nome = "Árbitro extrajudicial"
                        },
                        new
                        {
                            Id = 136,
                            Codigo = 715305,
                            Nome = "Armador de estrutura de concreto"
                        },
                        new
                        {
                            Id = 137,
                            Codigo = 715315,
                            Nome = "Armador de estrutura de concreto armado"
                        },
                        new
                        {
                            Id = 138,
                            Codigo = 414110,
                            Nome = "Armazenista"
                        },
                        new
                        {
                            Id = 139,
                            Codigo = 325010,
                            Nome = "Aromista"
                        },
                        new
                        {
                            Id = 140,
                            Codigo = 251110,
                            Nome = "Arqueólogo"
                        },
                        new
                        {
                            Id = 141,
                            Codigo = 214105,
                            Nome = "Arquiteto de edificações"
                        },
                        new
                        {
                            Id = 142,
                            Codigo = 214110,
                            Nome = "Arquiteto de interiores"
                        },
                        new
                        {
                            Id = 143,
                            Codigo = 214115,
                            Nome = "Arquiteto de patrimônio"
                        },
                        new
                        {
                            Id = 144,
                            Codigo = 212425,
                            Nome = "Arquiteto de soluções de tecnologia da informação"
                        },
                        new
                        {
                            Id = 145,
                            Codigo = 214120,
                            Nome = "Arquiteto paisagista"
                        },
                        new
                        {
                            Id = 146,
                            Codigo = 214125,
                            Nome = "Arquiteto urbanista"
                        },
                        new
                        {
                            Id = 147,
                            Codigo = 261305,
                            Nome = "Arquivista"
                        },
                        new
                        {
                            Id = 148,
                            Codigo = 415105,
                            Nome = "Arquivista de documentos"
                        },
                        new
                        {
                            Id = 149,
                            Codigo = 261105,
                            Nome = "Arquivista pesquisador (jornalismo)"
                        },
                        new
                        {
                            Id = 150,
                            Codigo = 763305,
                            Nome = "Arrematadeira"
                        },
                        new
                        {
                            Id = 151,
                            Codigo = 791105,
                            Nome = "Artesão bordador"
                        },
                        new
                        {
                            Id = 152,
                            Codigo = 791110,
                            Nome = "Artesão ceramista"
                        },
                        new
                        {
                            Id = 153,
                            Codigo = 791115,
                            Nome = "Artesão com material reciclável"
                        },
                        new
                        {
                            Id = 154,
                            Codigo = 791120,
                            Nome = "Artesão confeccionador de biojóias e ecojóias"
                        },
                        new
                        {
                            Id = 155,
                            Codigo = 791150,
                            Nome = "Artesão crocheteiro"
                        },
                        new
                        {
                            Id = 156,
                            Codigo = 791125,
                            Nome = "Artesão do couro"
                        },
                        new
                        {
                            Id = 157,
                            Codigo = 791130,
                            Nome = "Artesão escultor"
                        },
                        new
                        {
                            Id = 158,
                            Codigo = 752105,
                            Nome = "Artesão modelador (vidros)"
                        },
                        new
                        {
                            Id = 159,
                            Codigo = 791135,
                            Nome = "Artesão moveleiro (exceto reciclado)"
                        },
                        new
                        {
                            Id = 160,
                            Codigo = 791160,
                            Nome = "Artesão rendeiro"
                        },
                        new
                        {
                            Id = 161,
                            Codigo = 791140,
                            Nome = "Artesão tecelão"
                        },
                        new
                        {
                            Id = 162,
                            Codigo = 791145,
                            Nome = "Artesão trançador"
                        },
                        new
                        {
                            Id = 163,
                            Codigo = 791155,
                            Nome = "Artesão tricoteiro"
                        },
                        new
                        {
                            Id = 164,
                            Codigo = 226310,
                            Nome = "Arteterapeuta"
                        },
                        new
                        {
                            Id = 165,
                            Codigo = 768305,
                            Nome = "Artífice do couro"
                        },
                        new
                        {
                            Id = 166,
                            Codigo = 262405,
                            Nome = "Artista (artes visuais)"
                        },
                        new
                        {
                            Id = 167,
                            Codigo = 376210,
                            Nome = "Artista aéreo"
                        },
                        new
                        {
                            Id = 168,
                            Codigo = 376215,
                            Nome = "Artista de circo (outros)"
                        },
                        new
                        {
                            Id = 169,
                            Codigo = 514105,
                            Nome = "Ascensorista"
                        },
                        new
                        {
                            Id = 170,
                            Codigo = 724105,
                            Nome = "Assentador de canalização (edificações)"
                        },
                        new
                        {
                            Id = 171,
                            Codigo = 716510,
                            Nome = "Assentador de revestimentos cerâmicos"
                        },
                        new
                        {
                            Id = 172,
                            Codigo = 261110,
                            Nome = "Assessor de imprensa"
                        },
                        new
                        {
                            Id = 173,
                            Codigo = 411010,
                            Nome = "Assistente administrativo"
                        },
                        new
                        {
                            Id = 174,
                            Codigo = 351715,
                            Nome = "Assistente comercial de seguros"
                        },
                        new
                        {
                            Id = 175,
                            Codigo = 262805,
                            Nome = "Assistente de coreografia"
                        },
                        new
                        {
                            Id = 176,
                            Codigo = 261910,
                            Nome = "Assistente de direção (tv)"
                        },
                        new
                        {
                            Id = 177,
                            Codigo = 818105,
                            Nome = "Assistente de laboratório industrial"
                        },
                        new
                        {
                            Id = 178,
                            Codigo = 373145,
                            Nome = "Assistente de operações audiovisuais"
                        },
                        new
                        {
                            Id = 179,
                            Codigo = 354125,
                            Nome = "Assistente de vendas"
                        },
                        new
                        {
                            Id = 180,
                            Codigo = 251605,
                            Nome = "Assistente social"
                        },
                        new
                        {
                            Id = 181,
                            Codigo = 351720,
                            Nome = "Assistente técnico de seguros"
                        },
                        new
                        {
                            Id = 182,
                            Codigo = 716505,
                            Nome = "Assoalhador"
                        },
                        new
                        {
                            Id = 183,
                            Codigo = 516705,
                            Nome = "Astrólogo"
                        },
                        new
                        {
                            Id = 184,
                            Codigo = 213305,
                            Nome = "Astrônomo"
                        },
                        new
                        {
                            Id = 185,
                            Codigo = 421105,
                            Nome = "Atendente comercial (agência postal)"
                        },
                        new
                        {
                            Id = 186,
                            Codigo = 413205,
                            Nome = "Atendente de agência"
                        },
                        new
                        {
                            Id = 187,
                            Codigo = 515110,
                            Nome = "Atendente de enfermagem"
                        },
                        new
                        {
                            Id = 188,
                            Codigo = 521130,
                            Nome = "Atendente de farmácia - balconista"
                        },
                        new
                        {
                            Id = 189,
                            Codigo = 411015,
                            Nome = "Atendente de judiciário"
                        },
                        new
                        {
                            Id = 190,
                            Codigo = 513435,
                            Nome = "Atendente de lanchonete"
                        },
                        new
                        {
                            Id = 191,
                            Codigo = 516340,
                            Nome = "Atendente de lavanderia"
                        },
                        new
                        {
                            Id = 192,
                            Codigo = 521140,
                            Nome = "Atendente de lojas e mercados"
                        },
                        new
                        {
                            Id = 193,
                            Codigo = 377105,
                            Nome = "Atleta profissional (outras modalidades)"
                        },
                        new
                        {
                            Id = 194,
                            Codigo = 377110,
                            Nome = "Atleta profissional de futebol"
                        },
                        new
                        {
                            Id = 195,
                            Codigo = 377115,
                            Nome = "Atleta profissional de golfe"
                        },
                        new
                        {
                            Id = 196,
                            Codigo = 377120,
                            Nome = "Atleta profissional de luta"
                        },
                        new
                        {
                            Id = 197,
                            Codigo = 377125,
                            Nome = "Atleta profissional de tênis"
                        },
                        new
                        {
                            Id = 198,
                            Codigo = 262505,
                            Nome = "Ator"
                        },
                        new
                        {
                            Id = 199,
                            Codigo = 211105,
                            Nome = "Atuário"
                        },
                        new
                        {
                            Id = 200,
                            Codigo = 261430,
                            Nome = "Audiodescritor"
                        },
                        new
                        {
                            Id = 201,
                            Codigo = 252205,
                            Nome = "Auditor (contadores e afins)"
                        },
                        new
                        {
                            Id = 202,
                            Codigo = 254205,
                            Nome = "Auditor-fiscal da previdência social"
                        },
                        new
                        {
                            Id = 203,
                            Codigo = 254105,
                            Nome = "Auditor-fiscal da receita federal"
                        },
                        new
                        {
                            Id = 204,
                            Codigo = 254305,
                            Nome = "Auditor-fiscal do trabalho"
                        },
                        new
                        {
                            Id = 205,
                            Codigo = 261505,
                            Nome = "Autor-roteirista"
                        },
                        new
                        {
                            Id = 206,
                            Codigo = 515205,
                            Nome = "Auxiliar de banco de sangue"
                        },
                        new
                        {
                            Id = 207,
                            Codigo = 371105,
                            Nome = "Auxiliar de biblioteca"
                        },
                        new
                        {
                            Id = 208,
                            Codigo = 411025,
                            Nome = "Auxiliar de cartório"
                        },
                        new
                        {
                            Id = 209,
                            Codigo = 413110,
                            Nome = "Auxiliar de contabilidade"
                        },
                        new
                        {
                            Id = 210,
                            Codigo = 763105,
                            Nome = "Auxiliar de corte (preparação da confecção de roupas)"
                        },
                        new
                        {
                            Id = 211,
                            Codigo = 331110,
                            Nome = "Auxiliar de desenvolvimento infantil"
                        },
                        new
                        {
                            Id = 212,
                            Codigo = 322230,
                            Nome = "Auxiliar de enfermagem"
                        },
                        new
                        {
                            Id = 213,
                            Codigo = 322250,
                            Nome = "Auxiliar de enfermagem da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 214,
                            Codigo = 322235,
                            Nome = "Auxiliar de enfermagem do trabalho"
                        },
                        new
                        {
                            Id = 215,
                            Codigo = 411005,
                            Nome = "Auxiliar de escritório"
                        },
                        new
                        {
                            Id = 216,
                            Codigo = 411035,
                            Nome = "Auxiliar de estatística"
                        },
                        new
                        {
                            Id = 217,
                            Codigo = 515210,
                            Nome = "Auxiliar de farmácia de manipulação"
                        },
                        new
                        {
                            Id = 218,
                            Codigo = 413115,
                            Nome = "Auxiliar de faturamento"
                        },
                        new
                        {
                            Id = 219,
                            Codigo = 411020,
                            Nome = "Auxiliar de judiciário"
                        },
                        new
                        {
                            Id = 220,
                            Codigo = 515215,
                            Nome = "Auxiliar de laboratório de análises clínicas"
                        },
                        new
                        {
                            Id = 221,
                            Codigo = 818110,
                            Nome = "Auxiliar de laboratório de análises físico-químicas"
                        },
                        new
                        {
                            Id = 222,
                            Codigo = 515220,
                            Nome = "Auxiliar de laboratório de imunobiológicos"
                        },
                        new
                        {
                            Id = 223,
                            Codigo = 516345,
                            Nome = "Auxiliar de lavanderia"
                        },
                        new
                        {
                            Id = 224,
                            Codigo = 414140,
                            Nome = "Auxiliar de logistica"
                        },
                        new
                        {
                            Id = 225,
                            Codigo = 514310,
                            Nome = "Auxiliar de manutenção predial"
                        },
                        new
                        {
                            Id = 226,
                            Codigo = 782625,
                            Nome = "Auxiliar de maquinista de trem"
                        },
                        new
                        {
                            Id = 227,
                            Codigo = 411030,
                            Nome = "Auxiliar de pessoal"
                        },
                        new
                        {
                            Id = 228,
                            Codigo = 842120,
                            Nome = "Auxiliar de processamento de fumo"
                        },
                        new
                        {
                            Id = 229,
                            Codigo = 515225,
                            Nome = "Auxiliar de produção farmacêutica"
                        },
                        new
                        {
                            Id = 230,
                            Codigo = 322420,
                            Nome = "Auxiliar de prótese dentária"
                        },
                        new
                        {
                            Id = 231,
                            Codigo = 766420,
                            Nome = "Auxiliar de radiologia (revelação fotográfica)"
                        },
                        new
                        {
                            Id = 232,
                            Codigo = 322240,
                            Nome = "Auxiliar de saúde (navegação marítima)"
                        },
                        new
                        {
                            Id = 233,
                            Codigo = 411040,
                            Nome = "Auxiliar de seguros"
                        },
                        new
                        {
                            Id = 234,
                            Codigo = 411045,
                            Nome = "Auxiliar de serviços de importação e exportação"
                        },
                        new
                        {
                            Id = 235,
                            Codigo = 351430,
                            Nome = "Auxiliar de serviços jurídicos"
                        },
                        new
                        {
                            Id = 236,
                            Codigo = 519305,
                            Nome = "Auxiliar de veterinário"
                        },
                        new
                        {
                            Id = 237,
                            Codigo = 322415,
                            Nome = "Auxiliar em saúde bucal"
                        },
                        new
                        {
                            Id = 238,
                            Codigo = 322430,
                            Nome = "Auxiliar em saúde bucal da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 239,
                            Codigo = 992225,
                            Nome = "Auxiliar geral de conservação de vias permanentes (exceto trilhos)"
                        },
                        new
                        {
                            Id = 240,
                            Codigo = 513505,
                            Nome = "Auxiliar nos serviços de alimentação"
                        },
                        new
                        {
                            Id = 241,
                            Codigo = 341250,
                            Nome = "Auxiliar técnico de sinalização nautica"
                        },
                        new
                        {
                            Id = 242,
                            Codigo = 325105,
                            Nome = "Auxiliar técnico em laboratório de farmácia"
                        },
                        new
                        {
                            Id = 243,
                            Codigo = 354415,
                            Nome = "Avaliador de bens móveis"
                        },
                        new
                        {
                            Id = 244,
                            Codigo = 354410,
                            Nome = "Avaliador de imóveis"
                        },
                        new
                        {
                            Id = 245,
                            Codigo = 352410,
                            Nome = "Avaliador de produtos dos meios de comunicação"
                        },
                        new
                        {
                            Id = 246,
                            Codigo = 224105,
                            Nome = "Avaliador físico"
                        },
                        new
                        {
                            Id = 247,
                            Codigo = 613305,
                            Nome = "Avicultor"
                        },
                        new
                        {
                            Id = 248,
                            Codigo = 516205,
                            Nome = "Babá"
                        },
                        new
                        {
                            Id = 249,
                            Codigo = 524315,
                            Nome = "Baiana de acarajé"
                        },
                        new
                        {
                            Id = 250,
                            Codigo = 262810,
                            Nome = "Bailarino (exceto danças populares)"
                        },
                        new
                        {
                            Id = 251,
                            Codigo = 992110,
                            Nome = "Balanceador"
                        },
                        new
                        {
                            Id = 252,
                            Codigo = 414115,
                            Nome = "Balanceiro"
                        },
                        new
                        {
                            Id = 253,
                            Codigo = 811705,
                            Nome = "Bamburista"
                        },
                        new
                        {
                            Id = 254,
                            Codigo = 519315,
                            Nome = "Banhista de animais domésticos"
                        },
                        new
                        {
                            Id = 255,
                            Codigo = 516105,
                            Nome = "Barbeiro"
                        },
                        new
                        {
                            Id = 256,
                            Codigo = 513440,
                            Nome = "Barista"
                        },
                        new
                        {
                            Id = 257,
                            Codigo = 513420,
                            Nome = "Barman"
                        },
                        new
                        {
                            Id = 258,
                            Codigo = 751105,
                            Nome = "Bate-folha a  máquina"
                        },
                        new
                        {
                            Id = 259,
                            Codigo = 261205,
                            Nome = "Bibliotecário"
                        },
                        new
                        {
                            Id = 260,
                            Codigo = 511220,
                            Nome = "Bilheteiro (estações de metrô, ferroviárias e assemelhadas)"
                        },
                        new
                        {
                            Id = 261,
                            Codigo = 421110,
                            Nome = "Bilheteiro de transportes coletivos"
                        },
                        new
                        {
                            Id = 262,
                            Codigo = 421115,
                            Nome = "Bilheteiro no serviço de diversões"
                        },
                        new
                        {
                            Id = 263,
                            Codigo = 201105,
                            Nome = "Bioengenheiro"
                        },
                        new
                        {
                            Id = 264,
                            Codigo = 221105,
                            Nome = "Biólogo"
                        },
                        new
                        {
                            Id = 265,
                            Codigo = 221205,
                            Nome = "Biomédico"
                        },
                        new
                        {
                            Id = 266,
                            Codigo = 201110,
                            Nome = "Biotecnologista"
                        },
                        new
                        {
                            Id = 267,
                            Codigo = 783230,
                            Nome = "Bloqueiro (trabalhador portuário)"
                        },
                        new
                        {
                            Id = 268,
                            Codigo = 731165,
                            Nome = "Bobinador eletricista, à mão"
                        },
                        new
                        {
                            Id = 269,
                            Codigo = 731170,
                            Nome = "Bobinador eletricista, à máquina"
                        },
                        new
                        {
                            Id = 270,
                            Codigo = 782815,
                            Nome = "Boiadeiro"
                        },
                        new
                        {
                            Id = 271,
                            Codigo = 517110,
                            Nome = "Bombeiro civil"
                        },
                        new
                        {
                            Id = 272,
                            Codigo = 517105,
                            Nome = "Bombeiro de aeródromo"
                        },
                        new
                        {
                            Id = 273,
                            Codigo = 765015,
                            Nome = "Boneleiro"
                        },
                        new
                        {
                            Id = 274,
                            Codigo = 768205,
                            Nome = "Bordador, a  mão"
                        },
                        new
                        {
                            Id = 275,
                            Codigo = 763310,
                            Nome = "Bordador, à máquina"
                        },
                        new
                        {
                            Id = 276,
                            Codigo = 992115,
                            Nome = "Borracheiro"
                        },
                        new
                        {
                            Id = 277,
                            Codigo = 724305,
                            Nome = "Brasador"
                        },
                        new
                        {
                            Id = 278,
                            Codigo = 517120,
                            Nome = "Brigadista florestal"
                        },
                        new
                        {
                            Id = 279,
                            Codigo = 516110,
                            Nome = "Cabeleireiro"
                        },
                        new
                        {
                            Id = 280,
                            Codigo = 722405,
                            Nome = "Cableador"
                        },
                        new
                        {
                            Id = 281,
                            Codigo = 31205,
                            Nome = "Cabo bombeiro militar"
                        },
                        new
                        {
                            Id = 282,
                            Codigo = 21205,
                            Nome = "Cabo da polícia militar"
                        },
                        new
                        {
                            Id = 283,
                            Codigo = 113005,
                            Nome = "Cacique"
                        },
                        new
                        {
                            Id = 284,
                            Codigo = 612605,
                            Nome = "Cafeicultor"
                        },
                        new
                        {
                            Id = 285,
                            Codigo = 413210,
                            Nome = "Caixa de banco"
                        },
                        new
                        {
                            Id = 286,
                            Codigo = 716605,
                            Nome = "Calafetador"
                        },
                        new
                        {
                            Id = 287,
                            Codigo = 811710,
                            Nome = "Calandrista de borracha"
                        },
                        new
                        {
                            Id = 288,
                            Codigo = 832105,
                            Nome = "Calandrista de papel"
                        },
                        new
                        {
                            Id = 289,
                            Codigo = 715205,
                            Nome = "Calceteiro"
                        },
                        new
                        {
                            Id = 290,
                            Codigo = 724405,
                            Nome = "Caldeireiro (chapas de cobre)"
                        },
                        new
                        {
                            Id = 291,
                            Codigo = 724410,
                            Nome = "Caldeireiro (chapas de ferro e aço)"
                        },
                        new
                        {
                            Id = 292,
                            Codigo = 513315,
                            Nome = "Camareiro  de hotel"
                        },
                        new
                        {
                            Id = 293,
                            Codigo = 513320,
                            Nome = "Camareiro de embarcações"
                        },
                        new
                        {
                            Id = 294,
                            Codigo = 513305,
                            Nome = "Camareiro de teatro"
                        },
                        new
                        {
                            Id = 295,
                            Codigo = 513310,
                            Nome = "Camareiro de televisão"
                        },
                        new
                        {
                            Id = 296,
                            Codigo = 782505,
                            Nome = "Caminhoneiro autônomo (rotas regionais e internacionais)"
                        },
                        new
                        {
                            Id = 297,
                            Codigo = 711110,
                            Nome = "Canteiro"
                        },
                        new
                        {
                            Id = 298,
                            Codigo = 30205,
                            Nome = "Capitão bombeiro militar"
                        },
                        new
                        {
                            Id = 299,
                            Codigo = 20205,
                            Nome = "Capitão da polícia militar"
                        },
                        new
                        {
                            Id = 300,
                            Codigo = 215110,
                            Nome = "Capitão de manobra da marinha mercante"
                        },
                        new
                        {
                            Id = 301,
                            Codigo = 411055,
                            Nome = "Captador de recursos"
                        },
                        new
                        {
                            Id = 302,
                            Codigo = 632610,
                            Nome = "Carbonizador"
                        },
                        new
                        {
                            Id = 303,
                            Codigo = 715505,
                            Nome = "Carpinteiro"
                        },
                        new
                        {
                            Id = 304,
                            Codigo = 715515,
                            Nome = "Carpinteiro (cenários)"
                        },
                        new
                        {
                            Id = 305,
                            Codigo = 715510,
                            Nome = "Carpinteiro (esquadrias)"
                        },
                        new
                        {
                            Id = 306,
                            Codigo = 715520,
                            Nome = "Carpinteiro (mineração)"
                        },
                        new
                        {
                            Id = 307,
                            Codigo = 715530,
                            Nome = "Carpinteiro (telhados)"
                        },
                        new
                        {
                            Id = 308,
                            Codigo = 777205,
                            Nome = "Carpinteiro de carretas"
                        },
                        new
                        {
                            Id = 309,
                            Codigo = 777210,
                            Nome = "Carpinteiro de carrocerias"
                        },
                        new
                        {
                            Id = 310,
                            Codigo = 715535,
                            Nome = "Carpinteiro de fôrmas para concreto"
                        },
                        new
                        {
                            Id = 311,
                            Codigo = 715525,
                            Nome = "Carpinteiro de obras"
                        },
                        new
                        {
                            Id = 312,
                            Codigo = 715540,
                            Nome = "Carpinteiro de obras civis de arte (pontes, túneis, barragens)"
                        },
                        new
                        {
                            Id = 313,
                            Codigo = 777105,
                            Nome = "Carpinteiro naval (construção de pequenas embarcações)"
                        },
                        new
                        {
                            Id = 314,
                            Codigo = 777110,
                            Nome = "Carpinteiro naval (embarcações)"
                        },
                        new
                        {
                            Id = 315,
                            Codigo = 777115,
                            Nome = "Carpinteiro naval (estaleiros)"
                        },
                        new
                        {
                            Id = 316,
                            Codigo = 783205,
                            Nome = "Carregador (aeronaves)"
                        },
                        new
                        {
                            Id = 317,
                            Codigo = 783210,
                            Nome = "Carregador (armazém)"
                        },
                        new
                        {
                            Id = 318,
                            Codigo = 783215,
                            Nome = "Carregador (veículos de transportes terrestres)"
                        },
                        new
                        {
                            Id = 319,
                            Codigo = 519905,
                            Nome = "Cartazeiro"
                        },
                        new
                        {
                            Id = 320,
                            Codigo = 415205,
                            Nome = "Carteiro"
                        },
                        new
                        {
                            Id = 321,
                            Codigo = 833205,
                            Nome = "Cartonageiro, a mão (caixas de papelão)"
                        },
                        new
                        {
                            Id = 322,
                            Codigo = 833105,
                            Nome = "Cartonageiro, a máquina"
                        },
                        new
                        {
                            Id = 323,
                            Codigo = 632605,
                            Nome = "Carvoeiro"
                        },
                        new
                        {
                            Id = 324,
                            Codigo = 622005,
                            Nome = "Caseiro (agricultura)"
                        },
                        new
                        {
                            Id = 325,
                            Codigo = 623025,
                            Nome = "Casqueador de animais"
                        },
                        new
                        {
                            Id = 326,
                            Codigo = 631005,
                            Nome = "Catador de caranguejos e siris"
                        },
                        new
                        {
                            Id = 327,
                            Codigo = 631010,
                            Nome = "Catador de mariscos"
                        },
                        new
                        {
                            Id = 328,
                            Codigo = 519205,
                            Nome = "Catador de material reciclável"
                        },
                        new
                        {
                            Id = 329,
                            Codigo = 842225,
                            Nome = "Celofanista na fabricação de charutos"
                        },
                        new
                        {
                            Id = 330,
                            Codigo = 723105,
                            Nome = "Cementador de metais"
                        },
                        new
                        {
                            Id = 331,
                            Codigo = 262305,
                            Nome = "Cenógrafo carnavalesco e festas populares"
                        },
                        new
                        {
                            Id = 332,
                            Codigo = 262310,
                            Nome = "Cenógrafo de cinema"
                        },
                        new
                        {
                            Id = 333,
                            Codigo = 262315,
                            Nome = "Cenógrafo de eventos"
                        },
                        new
                        {
                            Id = 334,
                            Codigo = 262320,
                            Nome = "Cenógrafo de teatro"
                        },
                        new
                        {
                            Id = 335,
                            Codigo = 262325,
                            Nome = "Cenógrafo de tv"
                        },
                        new
                        {
                            Id = 336,
                            Codigo = 374205,
                            Nome = "Cenotécnico (cinema, vídeo, televisão, teatro e espetáculos)"
                        },
                        new
                        {
                            Id = 337,
                            Codigo = 752305,
                            Nome = "Ceramista"
                        },
                        new
                        {
                            Id = 338,
                            Codigo = 752310,
                            Nome = "Ceramista (torno de pedal e motor)"
                        },
                        new
                        {
                            Id = 339,
                            Codigo = 752315,
                            Nome = "Ceramista (torno semi-automático)"
                        },
                        new
                        {
                            Id = 340,
                            Codigo = 752320,
                            Nome = "Ceramista modelador"
                        },
                        new
                        {
                            Id = 341,
                            Codigo = 752325,
                            Nome = "Ceramista moldador"
                        },
                        new
                        {
                            Id = 342,
                            Codigo = 752330,
                            Nome = "Ceramista prensador"
                        },
                        new
                        {
                            Id = 343,
                            Codigo = 354825,
                            Nome = "Cerimonialista"
                        },
                        new
                        {
                            Id = 344,
                            Codigo = 768210,
                            Nome = "Cerzidor"
                        },
                        new
                        {
                            Id = 345,
                            Codigo = 776405,
                            Nome = "Cesteiro"
                        },
                        new
                        {
                            Id = 346,
                            Codigo = 724415,
                            Nome = "Chapeador"
                        },
                        new
                        {
                            Id = 347,
                            Codigo = 724430,
                            Nome = "Chapeador de aeronaves"
                        },
                        new
                        {
                            Id = 348,
                            Codigo = 724420,
                            Nome = "Chapeador de carrocerias metálicas (fabricação)"
                        },
                        new
                        {
                            Id = 349,
                            Codigo = 724425,
                            Nome = "Chapeador naval"
                        },
                        new
                        {
                            Id = 350,
                            Codigo = 768125,
                            Nome = "Chapeleiro (chapéus de palha)"
                        },
                        new
                        {
                            Id = 351,
                            Codigo = 765010,
                            Nome = "Chapeleiro de senhoras"
                        },
                        new
                        {
                            Id = 352,
                            Codigo = 842230,
                            Nome = "Charuteiro a mão"
                        },
                        new
                        {
                            Id = 353,
                            Codigo = 523115,
                            Nome = "Chaveiro"
                        },
                        new
                        {
                            Id = 354,
                            Codigo = 510130,
                            Nome = "Chefe de bar"
                        },
                        new
                        {
                            Id = 355,
                            Codigo = 517125,
                            Nome = "Chefe de brigada"
                        },
                        new
                        {
                            Id = 356,
                            Codigo = 840120,
                            Nome = "Chefe de confeitaria"
                        },
                        new
                        {
                            Id = 357,
                            Codigo = 351110,
                            Nome = "Chefe de contabilidade (técnico)"
                        },
                        new
                        {
                            Id = 358,
                            Codigo = 271105,
                            Nome = "Chefe de cozinha"
                        },
                        new
                        {
                            Id = 359,
                            Codigo = 342605,
                            Nome = "Chefe de estação portuária"
                        },
                        new
                        {
                            Id = 360,
                            Codigo = 510120,
                            Nome = "Chefe de portaria de hotel"
                        },
                        new
                        {
                            Id = 361,
                            Codigo = 342305,
                            Nome = "Chefe de serviço de transporte rodoviário (passageiros e cargas)"
                        },
                        new
                        {
                            Id = 362,
                            Codigo = 353235,
                            Nome = "Chefe de serviços bancários"
                        },
                        new
                        {
                            Id = 363,
                            Codigo = 513605,
                            Nome = "Churrasqueiro"
                        },
                        new
                        {
                            Id = 364,
                            Codigo = 519105,
                            Nome = "Ciclista mensageiro"
                        },
                        new
                        {
                            Id = 365,
                            Codigo = 251115,
                            Nome = "Cientista político"
                        },
                        new
                        {
                            Id = 366,
                            Codigo = 831105,
                            Nome = "Cilindreiro na preparação de pasta para fabricação de papel"
                        },
                        new
                        {
                            Id = 367,
                            Codigo = 813105,
                            Nome = "Cilindrista (petroquímica e afins)"
                        },
                        new
                        {
                            Id = 368,
                            Codigo = 316340,
                            Nome = "Cimentador (poços de petróleo)"
                        },
                        new
                        {
                            Id = 369,
                            Codigo = 223204,
                            Nome = "Cirurgião dentista - auditor"
                        },
                        new
                        {
                            Id = 370,
                            Codigo = 223208,
                            Nome = "Cirurgião dentista - clínico geral"
                        },
                        new
                        {
                            Id = 371,
                            Codigo = 223280,
                            Nome = "Cirurgião dentista - dentística"
                        },
                        new
                        {
                            Id = 372,
                            Codigo = 223284,
                            Nome = "Cirurgião dentista - disfunção temporomandibular e dor orofacial"
                        },
                        new
                        {
                            Id = 373,
                            Codigo = 223212,
                            Nome = "Cirurgião dentista - endodontista"
                        },
                        new
                        {
                            Id = 374,
                            Codigo = 223216,
                            Nome = "Cirurgião dentista - epidemiologista"
                        },
                        new
                        {
                            Id = 375,
                            Codigo = 223220,
                            Nome = "Cirurgião dentista - estomatologista"
                        },
                        new
                        {
                            Id = 376,
                            Codigo = 223224,
                            Nome = "Cirurgião dentista - implantodontista"
                        },
                        new
                        {
                            Id = 377,
                            Codigo = 223228,
                            Nome = "Cirurgião dentista - odontogeriatra"
                        },
                        new
                        {
                            Id = 378,
                            Codigo = 223276,
                            Nome = "Cirurgião dentista - odontologia do trabalho"
                        },
                        new
                        {
                            Id = 379,
                            Codigo = 223288,
                            Nome = "Cirurgião dentista - odontologia para pacientes com necessidades especiais"
                        },
                        new
                        {
                            Id = 380,
                            Codigo = 223232,
                            Nome = "Cirurgião dentista - odontologista legal"
                        },
                        new
                        {
                            Id = 381,
                            Codigo = 223236,
                            Nome = "Cirurgião dentista - odontopediatra"
                        },
                        new
                        {
                            Id = 382,
                            Codigo = 223240,
                            Nome = "Cirurgião dentista - ortopedista e ortodontista"
                        },
                        new
                        {
                            Id = 383,
                            Codigo = 223244,
                            Nome = "Cirurgião dentista - patologista bucal"
                        },
                        new
                        {
                            Id = 384,
                            Codigo = 223248,
                            Nome = "Cirurgião dentista - periodontista"
                        },
                        new
                        {
                            Id = 385,
                            Codigo = 223252,
                            Nome = "Cirurgião dentista - protesiólogo bucomaxilofacial"
                        },
                        new
                        {
                            Id = 386,
                            Codigo = 223256,
                            Nome = "Cirurgião dentista - protesista"
                        },
                        new
                        {
                            Id = 387,
                            Codigo = 223260,
                            Nome = "Cirurgião dentista - radiologista"
                        },
                        new
                        {
                            Id = 388,
                            Codigo = 223264,
                            Nome = "Cirurgião dentista - reabilitador oral"
                        },
                        new
                        {
                            Id = 389,
                            Codigo = 223268,
                            Nome = "Cirurgião dentista - traumatologista bucomaxilofacial"
                        },
                        new
                        {
                            Id = 390,
                            Codigo = 223272,
                            Nome = "Cirurgião dentista de saúde coletiva"
                        },
                        new
                        {
                            Id = 391,
                            Codigo = 223293,
                            Nome = "Cirurgião-dentista da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 392,
                            Codigo = 324215,
                            Nome = "Citotécnico"
                        },
                        new
                        {
                            Id = 393,
                            Codigo = 842215,
                            Nome = "Classificador de charutos"
                        },
                        new
                        {
                            Id = 394,
                            Codigo = 762210,
                            Nome = "Classificador de couros"
                        },
                        new
                        {
                            Id = 395,
                            Codigo = 761105,
                            Nome = "Classificador de fibras têxteis"
                        },
                        new
                        {
                            Id = 396,
                            Codigo = 842115,
                            Nome = "Classificador de fumo"
                        },
                        new
                        {
                            Id = 397,
                            Codigo = 848425,
                            Nome = "Classificador de grãos"
                        },
                        new
                        {
                            Id = 398,
                            Codigo = 772105,
                            Nome = "Classificador de madeira"
                        },
                        new
                        {
                            Id = 399,
                            Codigo = 762105,
                            Nome = "Classificador de peles"
                        },
                        new
                        {
                            Id = 400,
                            Codigo = 632105,
                            Nome = "Classificador de toras"
                        },
                        new
                        {
                            Id = 401,
                            Codigo = 823305,
                            Nome = "Classificador e empilhador de tijolos refratários"
                        },
                        new
                        {
                            Id = 402,
                            Codigo = 511215,
                            Nome = "Cobrador de transportes coletivos (exceto trem)"
                        },
                        new
                        {
                            Id = 403,
                            Codigo = 421305,
                            Nome = "Cobrador externo"
                        },
                        new
                        {
                            Id = 404,
                            Codigo = 421310,
                            Nome = "Cobrador interno"
                        },
                        new
                        {
                            Id = 405,
                            Codigo = 415115,
                            Nome = "Codificador de dados"
                        },
                        new
                        {
                            Id = 406,
                            Codigo = 765205,
                            Nome = "Colchoeiro (confecção de colchões)"
                        },
                        new
                        {
                            Id = 407,
                            Codigo = 371205,
                            Nome = "Colecionador de selos e moedas"
                        },
                        new
                        {
                            Id = 408,
                            Codigo = 514205,
                            Nome = "Coletor de lixo domiciliar"
                        },
                        new
                        {
                            Id = 409,
                            Codigo = 514230,
                            Nome = "Coletor de resíduos sólidos de serviços de saúde"
                        },
                        new
                        {
                            Id = 410,
                            Codigo = 311705,
                            Nome = "Colorista de papel"
                        },
                        new
                        {
                            Id = 411,
                            Codigo = 311710,
                            Nome = "Colorista têxtil"
                        },
                        new
                        {
                            Id = 412,
                            Codigo = 215115,
                            Nome = "Comandante da marinha mercante"
                        },
                        new
                        {
                            Id = 413,
                            Codigo = 261710,
                            Nome = "Comentarista de mídias audiovisuais"
                        },
                        new
                        {
                            Id = 414,
                            Codigo = 141405,
                            Nome = "Comerciante atacadista"
                        },
                        new
                        {
                            Id = 415,
                            Codigo = 141410,
                            Nome = "Comerciante varejista"
                        },
                        new
                        {
                            Id = 416,
                            Codigo = 511110,
                            Nome = "Comissário de trem"
                        },
                        new
                        {
                            Id = 417,
                            Codigo = 511105,
                            Nome = "Comissário de vôo"
                        },
                        new
                        {
                            Id = 418,
                            Codigo = 413215,
                            Nome = "Compensador de banco"
                        },
                        new
                        {
                            Id = 419,
                            Codigo = 262605,
                            Nome = "Compositor"
                        },
                        new
                        {
                            Id = 420,
                            Codigo = 354205,
                            Nome = "Comprador"
                        },
                        new
                        {
                            Id = 421,
                            Codigo = 422130,
                            Nome = "Concierge"
                        },
                        new
                        {
                            Id = 422,
                            Codigo = 782320,
                            Nome = "Condutor de ambulância"
                        },
                        new
                        {
                            Id = 423,
                            Codigo = 341310,
                            Nome = "Condutor de máquinas"
                        },
                        new
                        {
                            Id = 424,
                            Codigo = 341320,
                            Nome = "Condutor de máquinas (bombeador)"
                        },
                        new
                        {
                            Id = 425,
                            Codigo = 341325,
                            Nome = "Condutor de máquinas (mecânico)"
                        },
                        new
                        {
                            Id = 426,
                            Codigo = 781105,
                            Nome = "Condutor de processos robotizados de pintura"
                        },
                        new
                        {
                            Id = 427,
                            Codigo = 781110,
                            Nome = "Condutor de processos robotizados de soldagem"
                        },
                        new
                        {
                            Id = 428,
                            Codigo = 511505,
                            Nome = "Condutor de turismo de aventura"
                        },
                        new
                        {
                            Id = 429,
                            Codigo = 511510,
                            Nome = "Condutor de turismo de pesca"
                        },
                        new
                        {
                            Id = 430,
                            Codigo = 782820,
                            Nome = "Condutor de veículos a pedais"
                        },
                        new
                        {
                            Id = 431,
                            Codigo = 782805,
                            Nome = "Condutor de veículos de tração animal (ruas e estradas)"
                        },
                        new
                        {
                            Id = 432,
                            Codigo = 341305,
                            Nome = "Condutor maquinista motorista fluvial"
                        },
                        new
                        {
                            Id = 433,
                            Codigo = 742110,
                            Nome = "Confeccionador de acordeão"
                        },
                        new
                        {
                            Id = 434,
                            Codigo = 765005,
                            Nome = "Confeccionador de artefatos de couro (exceto sapatos)"
                        },
                        new
                        {
                            Id = 435,
                            Codigo = 833110,
                            Nome = "Confeccionador de bolsas, sacos e sacolas e papel, a máquina"
                        },
                        new
                        {
                            Id = 436,
                            Codigo = 765215,
                            Nome = "Confeccionador de brinquedos de pano"
                        },
                        new
                        {
                            Id = 437,
                            Codigo = 768630,
                            Nome = "Confeccionador de carimbos de borracha"
                        },
                        new
                        {
                            Id = 438,
                            Codigo = 776410,
                            Nome = "Confeccionador de escovas, pincéis e produtos similares (a mão)"
                        },
                        new
                        {
                            Id = 439,
                            Codigo = 776415,
                            Nome = "Confeccionador de escovas, pincéis e produtos similares (a máquina)"
                        },
                        new
                        {
                            Id = 440,
                            Codigo = 742115,
                            Nome = "Confeccionador de instrumentos de corda"
                        },
                        new
                        {
                            Id = 441,
                            Codigo = 742120,
                            Nome = "Confeccionador de instrumentos de percussão (pele, couro ou plástico)"
                        },
                        new
                        {
                            Id = 442,
                            Codigo = 742125,
                            Nome = "Confeccionador de instrumentos de sopro (madeira)"
                        },
                        new
                        {
                            Id = 443,
                            Codigo = 742130,
                            Nome = "Confeccionador de instrumentos de sopro (metal)"
                        },
                        new
                        {
                            Id = 444,
                            Codigo = 776420,
                            Nome = "Confeccionador de móveis de vime, junco e bambu"
                        },
                        new
                        {
                            Id = 445,
                            Codigo = 742135,
                            Nome = "Confeccionador de órgão"
                        },
                        new
                        {
                            Id = 446,
                            Codigo = 742140,
                            Nome = "Confeccionador de piano"
                        },
                        new
                        {
                            Id = 447,
                            Codigo = 811715,
                            Nome = "Confeccionador de pneumáticos"
                        },
                        new
                        {
                            Id = 448,
                            Codigo = 833115,
                            Nome = "Confeccionador de sacos de celofane, a máquina"
                        },
                        new
                        {
                            Id = 449,
                            Codigo = 765225,
                            Nome = "Confeccionador de velas náuticas, barracas e toldos"
                        },
                        new
                        {
                            Id = 450,
                            Codigo = 811725,
                            Nome = "Confeccionador de velas por imersão"
                        },
                        new
                        {
                            Id = 451,
                            Codigo = 811735,
                            Nome = "Confeccionador de velas por moldagem"
                        },
                        new
                        {
                            Id = 452,
                            Codigo = 848310,
                            Nome = "Confeiteiro"
                        },
                        new
                        {
                            Id = 453,
                            Codigo = 414215,
                            Nome = "Conferente de carga e descarga"
                        },
                        new
                        {
                            Id = 454,
                            Codigo = 413220,
                            Nome = "Conferente de serviços bancários"
                        },
                        new
                        {
                            Id = 455,
                            Codigo = 414120,
                            Nome = "Conferente mercadoria (exceto carga e descarga)"
                        },
                        new
                        {
                            Id = 456,
                            Codigo = 516335,
                            Nome = "Conferente-expedidor de roupas (lavanderias)"
                        },
                        new
                        {
                            Id = 457,
                            Codigo = 241405,
                            Nome = "Conselheiro julgador"
                        },
                        new
                        {
                            Id = 458,
                            Codigo = 515320,
                            Nome = "Conselheiro tutelar"
                        },
                        new
                        {
                            Id = 459,
                            Codigo = 991105,
                            Nome = "Conservador de via permanente (trilhos)"
                        },
                        new
                        {
                            Id = 460,
                            Codigo = 262415,
                            Nome = "Conservador-restaurador de bens  culturais"
                        },
                        new
                        {
                            Id = 461,
                            Codigo = 351115,
                            Nome = "Consultor contábil (técnico)"
                        },
                        new
                        {
                            Id = 462,
                            Codigo = 241040,
                            Nome = "Consultor jurídico"
                        },
                        new
                        {
                            Id = 463,
                            Codigo = 252210,
                            Nome = "Contador"
                        },
                        new
                        {
                            Id = 464,
                            Codigo = 261905,
                            Nome = "Continuista"
                        },
                        new
                        {
                            Id = 465,
                            Codigo = 412205,
                            Nome = "Contínuo"
                        },
                        new
                        {
                            Id = 466,
                            Codigo = 376220,
                            Nome = "Contorcionista"
                        },
                        new
                        {
                            Id = 467,
                            Codigo = 760105,
                            Nome = "Contramestre de acabamento (indústria têxtil)"
                        },
                        new
                        {
                            Id = 468,
                            Codigo = 341205,
                            Nome = "Contramestre de cabotagem"
                        },
                        new
                        {
                            Id = 469,
                            Codigo = 760110,
                            Nome = "Contramestre de fiação (indústria têxtil)"
                        },
                        new
                        {
                            Id = 470,
                            Codigo = 760115,
                            Nome = "Contramestre de malharia (indústria têxtil)"
                        },
                        new
                        {
                            Id = 471,
                            Codigo = 760120,
                            Nome = "Contramestre de tecelagem (indústria têxtil)"
                        },
                        new
                        {
                            Id = 472,
                            Codigo = 391115,
                            Nome = "Controlador de entrada e saída"
                        },
                        new
                        {
                            Id = 473,
                            Codigo = 519910,
                            Nome = "Controlador de pragas"
                        },
                        new
                        {
                            Id = 474,
                            Codigo = 342115,
                            Nome = "Controlador de serviços de máquinas e veículos"
                        },
                        new
                        {
                            Id = 475,
                            Codigo = 342505,
                            Nome = "Controlador de tráfego aéreo"
                        },
                        new
                        {
                            Id = 476,
                            Codigo = 215120,
                            Nome = "Coordenador de operações de combate à poluição no meio aquaviário"
                        },
                        new
                        {
                            Id = 477,
                            Codigo = 373140,
                            Nome = "Coordenador de programação"
                        },
                        new
                        {
                            Id = 478,
                            Codigo = 424205,
                            Nome = "Coordenador de provas (concurso, avaliação, exame)"
                        },
                        new
                        {
                            Id = 479,
                            Codigo = 239405,
                            Nome = "Coordenador pedagógico"
                        },
                        new
                        {
                            Id = 480,
                            Codigo = 513425,
                            Nome = "Copeiro"
                        },
                        new
                        {
                            Id = 481,
                            Codigo = 513430,
                            Nome = "Copeiro de hospital"
                        },
                        new
                        {
                            Id = 482,
                            Codigo = 766105,
                            Nome = "Copiador de chapa"
                        },
                        new
                        {
                            Id = 483,
                            Codigo = 262815,
                            Nome = "Coreógrafo"
                        },
                        new
                        {
                            Id = 484,
                            Codigo = 30105,
                            Nome = "Coronel bombeiro militar"
                        },
                        new
                        {
                            Id = 485,
                            Codigo = 20105,
                            Nome = "Coronel da polícia militar"
                        },
                        new
                        {
                            Id = 486,
                            Codigo = 354610,
                            Nome = "Corretor de grãos"
                        },
                        new
                        {
                            Id = 487,
                            Codigo = 354605,
                            Nome = "Corretor de imóveis"
                        },
                        new
                        {
                            Id = 488,
                            Codigo = 354505,
                            Nome = "Corretor de seguros"
                        },
                        new
                        {
                            Id = 489,
                            Codigo = 253305,
                            Nome = "Corretor de valores, ativos financeiros, mercadorias e derivativos"
                        },
                        new
                        {
                            Id = 490,
                            Codigo = 765105,
                            Nome = "Cortador de artefatos de couro (exceto roupas e calçados)"
                        },
                        new
                        {
                            Id = 491,
                            Codigo = 768310,
                            Nome = "Cortador de calçados, a  mão (exceto solas)"
                        },
                        new
                        {
                            Id = 492,
                            Codigo = 764105,
                            Nome = "Cortador de calçados, a  máquina (exceto solas e palmilhas)"
                        },
                        new
                        {
                            Id = 493,
                            Codigo = 842220,
                            Nome = "Cortador de charutos"
                        },
                        new
                        {
                            Id = 494,
                            Codigo = 773105,
                            Nome = "Cortador de laminados de madeira"
                        },
                        new
                        {
                            Id = 495,
                            Codigo = 712205,
                            Nome = "Cortador de pedras"
                        },
                        new
                        {
                            Id = 496,
                            Codigo = 763110,
                            Nome = "Cortador de roupas"
                        },
                        new
                        {
                            Id = 497,
                            Codigo = 764110,
                            Nome = "Cortador de solas e palmilhas, a  máquina"
                        },
                        new
                        {
                            Id = 498,
                            Codigo = 765110,
                            Nome = "Cortador de tapeçaria"
                        },
                        new
                        {
                            Id = 499,
                            Codigo = 752210,
                            Nome = "Cortador de vidro"
                        },
                        new
                        {
                            Id = 500,
                            Codigo = 768315,
                            Nome = "Costurador de artefatos de couro, a  mão (exceto roupas e calçados)"
                        },
                        new
                        {
                            Id = 501,
                            Codigo = 765310,
                            Nome = "Costurador de artefatos de couro, a  máquina (exceto roupas e calçados)"
                        },
                        new
                        {
                            Id = 502,
                            Codigo = 764205,
                            Nome = "Costurador de calçados, a  máquina"
                        },
                        new
                        {
                            Id = 503,
                            Codigo = 763010,
                            Nome = "Costureira de peças sob encomenda"
                        },
                        new
                        {
                            Id = 504,
                            Codigo = 763015,
                            Nome = "Costureira de reparação de roupas"
                        },
                        new
                        {
                            Id = 505,
                            Codigo = 763020,
                            Nome = "Costureiro de roupa de couro e pele"
                        },
                        new
                        {
                            Id = 506,
                            Codigo = 763205,
                            Nome = "Costureiro de roupas de couro e pele, a  máquina na  confecção em série"
                        },
                        new
                        {
                            Id = 507,
                            Codigo = 763210,
                            Nome = "Costureiro na confecção em série"
                        },
                        new
                        {
                            Id = 508,
                            Codigo = 763215,
                            Nome = "Costureiro, a  máquina  na confecção em série"
                        },
                        new
                        {
                            Id = 509,
                            Codigo = 841408,
                            Nome = "Cozinhador (conservação de alimentos)"
                        },
                        new
                        {
                            Id = 510,
                            Codigo = 841416,
                            Nome = "Cozinhador de carnes"
                        },
                        new
                        {
                            Id = 511,
                            Codigo = 841420,
                            Nome = "Cozinhador de frutas e legumes"
                        },
                        new
                        {
                            Id = 512,
                            Codigo = 841730,
                            Nome = "Cozinhador de malte"
                        },
                        new
                        {
                            Id = 513,
                            Codigo = 841428,
                            Nome = "Cozinhador de pescado"
                        },
                        new
                        {
                            Id = 514,
                            Codigo = 513225,
                            Nome = "Cozinheiro de embarcações"
                        },
                        new
                        {
                            Id = 515,
                            Codigo = 513220,
                            Nome = "Cozinheiro de hospital"
                        },
                        new
                        {
                            Id = 516,
                            Codigo = 513210,
                            Nome = "Cozinheiro do serviço doméstico"
                        },
                        new
                        {
                            Id = 517,
                            Codigo = 513205,
                            Nome = "Cozinheiro geral"
                        },
                        new
                        {
                            Id = 518,
                            Codigo = 513215,
                            Nome = "Cozinheiro industrial"
                        },
                        new
                        {
                            Id = 519,
                            Codigo = 613010,
                            Nome = "Criador de animais domésticos"
                        },
                        new
                        {
                            Id = 520,
                            Codigo = 613410,
                            Nome = "Criador de animais produtores de veneno"
                        },
                        new
                        {
                            Id = 521,
                            Codigo = 613105,
                            Nome = "Criador de asininos e muares"
                        },
                        new
                        {
                            Id = 522,
                            Codigo = 613110,
                            Nome = "Criador de bovinos (corte)"
                        },
                        new
                        {
                            Id = 523,
                            Codigo = 613115,
                            Nome = "Criador de bovinos (leite)"
                        },
                        new
                        {
                            Id = 524,
                            Codigo = 613120,
                            Nome = "Criador de bubalinos (corte)"
                        },
                        new
                        {
                            Id = 525,
                            Codigo = 613125,
                            Nome = "Criador de bubalinos (leite)"
                        },
                        new
                        {
                            Id = 526,
                            Codigo = 631305,
                            Nome = "Criador de camarões"
                        },
                        new
                        {
                            Id = 527,
                            Codigo = 613205,
                            Nome = "Criador de caprinos"
                        },
                        new
                        {
                            Id = 528,
                            Codigo = 613130,
                            Nome = "Criador de eqüínos"
                        },
                        new
                        {
                            Id = 529,
                            Codigo = 631310,
                            Nome = "Criador de jacarés"
                        },
                        new
                        {
                            Id = 530,
                            Codigo = 631315,
                            Nome = "Criador de mexilhões"
                        },
                        new
                        {
                            Id = 531,
                            Codigo = 631320,
                            Nome = "Criador de ostras"
                        },
                        new
                        {
                            Id = 532,
                            Codigo = 613210,
                            Nome = "Criador de ovinos"
                        },
                        new
                        {
                            Id = 533,
                            Codigo = 631325,
                            Nome = "Criador de peixes"
                        },
                        new
                        {
                            Id = 534,
                            Codigo = 631330,
                            Nome = "Criador de quelônios"
                        },
                        new
                        {
                            Id = 535,
                            Codigo = 631335,
                            Nome = "Criador de rãs"
                        },
                        new
                        {
                            Id = 536,
                            Codigo = 613215,
                            Nome = "Criador de suínos"
                        },
                        new
                        {
                            Id = 537,
                            Codigo = 613005,
                            Nome = "Criador em pecuária polivalente"
                        },
                        new
                        {
                            Id = 538,
                            Codigo = 261510,
                            Nome = "Crítico"
                        },
                        new
                        {
                            Id = 539,
                            Codigo = 768130,
                            Nome = "Crocheteiro, a  mão"
                        },
                        new
                        {
                            Id = 540,
                            Codigo = 391105,
                            Nome = "Cronoanalista"
                        },
                        new
                        {
                            Id = 541,
                            Codigo = 391110,
                            Nome = "Cronometrista"
                        },
                        new
                        {
                            Id = 542,
                            Codigo = 632110,
                            Nome = "Cubador de madeira"
                        },
                        new
                        {
                            Id = 543,
                            Codigo = 516210,
                            Nome = "Cuidador de idosos"
                        },
                        new
                        {
                            Id = 544,
                            Codigo = 516220,
                            Nome = "Cuidador em saúde"
                        },
                        new
                        {
                            Id = 545,
                            Codigo = 513415,
                            Nome = "Cumim"
                        },
                        new
                        {
                            Id = 546,
                            Codigo = 613310,
                            Nome = "Cunicultor"
                        },
                        new
                        {
                            Id = 547,
                            Codigo = 762205,
                            Nome = "Curtidor (couros e peles)"
                        },
                        new
                        {
                            Id = 548,
                            Codigo = 376110,
                            Nome = "Dançarino popular"
                        },
                        new
                        {
                            Id = 549,
                            Codigo = 376105,
                            Nome = "Dançarino tradicional"
                        },
                        new
                        {
                            Id = 550,
                            Codigo = 412105,
                            Nome = "Datilógrafo"
                        },
                        new
                        {
                            Id = 551,
                            Codigo = 723205,
                            Nome = "Decapador"
                        },
                        new
                        {
                            Id = 552,
                            Codigo = 752405,
                            Nome = "Decorador de cerâmica"
                        },
                        new
                        {
                            Id = 553,
                            Codigo = 375120,
                            Nome = "Decorador de eventos"
                        },
                        new
                        {
                            Id = 554,
                            Codigo = 262905,
                            Nome = "Decorador de interiores de nível superior"
                        },
                        new
                        {
                            Id = 555,
                            Codigo = 752410,
                            Nome = "Decorador de vidro"
                        },
                        new
                        {
                            Id = 556,
                            Codigo = 752415,
                            Nome = "Decorador de vidro à pincel"
                        },
                        new
                        {
                            Id = 557,
                            Codigo = 242405,
                            Nome = "Defensor público"
                        },
                        new
                        {
                            Id = 558,
                            Codigo = 848105,
                            Nome = "Defumador de carnes e pescados"
                        },
                        new
                        {
                            Id = 559,
                            Codigo = 848405,
                            Nome = "Degustador de café"
                        },
                        new
                        {
                            Id = 560,
                            Codigo = 848410,
                            Nome = "Degustador de chá"
                        },
                        new
                        {
                            Id = 561,
                            Codigo = 842235,
                            Nome = "Degustador de charutos"
                        },
                        new
                        {
                            Id = 562,
                            Codigo = 848415,
                            Nome = "Degustador de derivados de cacau"
                        },
                        new
                        {
                            Id = 563,
                            Codigo = 848420,
                            Nome = "Degustador de vinhos ou licores"
                        },
                        new
                        {
                            Id = 564,
                            Codigo = 242305,
                            Nome = "Delegado de polícia"
                        },
                        new
                        {
                            Id = 565,
                            Codigo = 717005,
                            Nome = "Demolidor de edificações"
                        },
                        new
                        {
                            Id = 566,
                            Codigo = 521120,
                            Nome = "Demonstrador de mercadorias"
                        },
                        new
                        {
                            Id = 567,
                            Codigo = 111115,
                            Nome = "Deputado estadual e distrital"
                        },
                        new
                        {
                            Id = 568,
                            Codigo = 111110,
                            Nome = "Deputado federal"
                        },
                        new
                        {
                            Id = 569,
                            Codigo = 762110,
                            Nome = "Descarnador de couros e peles, à maquina"
                        },
                        new
                        {
                            Id = 570,
                            Codigo = 318010,
                            Nome = "Desenhista copista"
                        },
                        new
                        {
                            Id = 571,
                            Codigo = 318015,
                            Nome = "Desenhista detalhista"
                        },
                        new
                        {
                            Id = 572,
                            Codigo = 262420,
                            Nome = "Desenhista industrial de produto (designer de produto)"
                        },
                        new
                        {
                            Id = 573,
                            Codigo = 262425,
                            Nome = "Desenhista industrial de produto de moda (designer de moda)"
                        },
                        new
                        {
                            Id = 574,
                            Codigo = 262410,
                            Nome = "Desenhista industrial gráfico (designer gráfico)"
                        },
                        new
                        {
                            Id = 575,
                            Codigo = 318505,
                            Nome = "Desenhista projetista de arquitetura"
                        },
                        new
                        {
                            Id = 576,
                            Codigo = 318510,
                            Nome = "Desenhista projetista de construção civil"
                        },
                        new
                        {
                            Id = 577,
                            Codigo = 318705,
                            Nome = "Desenhista projetista de eletricidade"
                        },
                        new
                        {
                            Id = 578,
                            Codigo = 318605,
                            Nome = "Desenhista projetista de máquinas"
                        },
                        new
                        {
                            Id = 579,
                            Codigo = 318710,
                            Nome = "Desenhista projetista eletrônico"
                        },
                        new
                        {
                            Id = 580,
                            Codigo = 318610,
                            Nome = "Desenhista projetista mecânico"
                        },
                        new
                        {
                            Id = 581,
                            Codigo = 318005,
                            Nome = "Desenhista técnico"
                        },
                        new
                        {
                            Id = 582,
                            Codigo = 318105,
                            Nome = "Desenhista técnico (arquitetura)"
                        },
                        new
                        {
                            Id = 583,
                            Codigo = 318405,
                            Nome = "Desenhista técnico (artes gráficas)"
                        },
                        new
                        {
                            Id = 584,
                            Codigo = 318310,
                            Nome = "Desenhista técnico (calefação, ventilação e refrigeração)"
                        },
                        new
                        {
                            Id = 585,
                            Codigo = 318110,
                            Nome = "Desenhista técnico (cartografia)"
                        },
                        new
                        {
                            Id = 586,
                            Codigo = 318115,
                            Nome = "Desenhista técnico (construção civil)"
                        },
                        new
                        {
                            Id = 587,
                            Codigo = 318305,
                            Nome = "Desenhista técnico (eletricidade e eletrônica)"
                        },
                        new
                        {
                            Id = 588,
                            Codigo = 318410,
                            Nome = "Desenhista técnico (ilustrações artísticas)"
                        },
                        new
                        {
                            Id = 589,
                            Codigo = 318415,
                            Nome = "Desenhista técnico (ilustrações técnicas)"
                        },
                        new
                        {
                            Id = 590,
                            Codigo = 318420,
                            Nome = "Desenhista técnico (indústria têxtil)"
                        },
                        new
                        {
                            Id = 591,
                            Codigo = 318120,
                            Nome = "Desenhista técnico (instalações hidrossanitárias)"
                        },
                        new
                        {
                            Id = 592,
                            Codigo = 318425,
                            Nome = "Desenhista técnico (mobiliário)"
                        },
                        new
                        {
                            Id = 593,
                            Codigo = 318210,
                            Nome = "Desenhista técnico aeronáutico"
                        },
                        new
                        {
                            Id = 594,
                            Codigo = 318430,
                            Nome = "Desenhista técnico de embalagens, maquetes e leiautes"
                        },
                        new
                        {
                            Id = 595,
                            Codigo = 318205,
                            Nome = "Desenhista técnico mecânico"
                        },
                        new
                        {
                            Id = 596,
                            Codigo = 318215,
                            Nome = "Desenhista técnico naval"
                        },
                        new
                        {
                            Id = 597,
                            Codigo = 317120,
                            Nome = "Desenvolvedor de multimídia"
                        },
                        new
                        {
                            Id = 598,
                            Codigo = 317110,
                            Nome = "Desenvolvedor de sistemas de tecnologia da informação (técnico)"
                        },
                        new
                        {
                            Id = 599,
                            Codigo = 317105,
                            Nome = "Desenvolvedor web (técnico)"
                        },
                        new
                        {
                            Id = 600,
                            Codigo = 841432,
                            Nome = "Desidratador de alimentos"
                        },
                        new
                        {
                            Id = 601,
                            Codigo = 375105,
                            Nome = "Designer de interiores"
                        },
                        new
                        {
                            Id = 602,
                            Codigo = 375110,
                            Nome = "Designer de vitrines"
                        },
                        new
                        {
                            Id = 603,
                            Codigo = 239435,
                            Nome = "Designer educacional"
                        },
                        new
                        {
                            Id = 604,
                            Codigo = 316335,
                            Nome = "Desincrustador (poços de petróleo)"
                        },
                        new
                        {
                            Id = 605,
                            Codigo = 848515,
                            Nome = "Desossador"
                        },
                        new
                        {
                            Id = 606,
                            Codigo = 342210,
                            Nome = "Despachante aduaneiro"
                        },
                        new
                        {
                            Id = 607,
                            Codigo = 423110,
                            Nome = "Despachante de trânsito"
                        },
                        new
                        {
                            Id = 608,
                            Codigo = 511210,
                            Nome = "Despachante de transportes coletivos (exceto trem)"
                        },
                        new
                        {
                            Id = 609,
                            Codigo = 423105,
                            Nome = "Despachante documentalista"
                        },
                        new
                        {
                            Id = 610,
                            Codigo = 342510,
                            Nome = "Despachante operacional de vôo"
                        },
                        new
                        {
                            Id = 611,
                            Codigo = 841735,
                            Nome = "Dessecador de malte"
                        },
                        new
                        {
                            Id = 612,
                            Codigo = 811405,
                            Nome = "Destilador de madeira"
                        },
                        new
                        {
                            Id = 613,
                            Codigo = 811410,
                            Nome = "Destilador de produtos químicos (exceto petróleo)"
                        },
                        new
                        {
                            Id = 614,
                            Codigo = 711115,
                            Nome = "Destroçador de pedra"
                        },
                        new
                        {
                            Id = 615,
                            Codigo = 351805,
                            Nome = "Detetive profissional"
                        },
                        new
                        {
                            Id = 616,
                            Codigo = 711120,
                            Nome = "Detonador"
                        },
                        new
                        {
                            Id = 617,
                            Codigo = 223705,
                            Nome = "Dietista"
                        },
                        new
                        {
                            Id = 618,
                            Codigo = 412110,
                            Nome = "Digitador"
                        },
                        new
                        {
                            Id = 619,
                            Codigo = 123105,
                            Nome = "Diretor administrativo"
                        },
                        new
                        {
                            Id = 620,
                            Codigo = 123110,
                            Nome = "Diretor administrativo e financeiro"
                        },
                        new
                        {
                            Id = 621,
                            Codigo = 262235,
                            Nome = "Diretor artistíco"
                        },
                        new
                        {
                            Id = 622,
                            Codigo = 123305,
                            Nome = "Diretor comercial"
                        },
                        new
                        {
                            Id = 623,
                            Codigo = 122705,
                            Nome = "Diretor comercial em operações de intermediação financeira"
                        },
                        new
                        {
                            Id = 624,
                            Codigo = 122505,
                            Nome = "Diretor de  produção e operações de alimentação"
                        },
                        new
                        {
                            Id = 625,
                            Codigo = 122510,
                            Nome = "Diretor de  produção e operações de hotel"
                        },
                        new
                        {
                            Id = 626,
                            Codigo = 122515,
                            Nome = "Diretor de  produção e operações de turismo"
                        },
                        new
                        {
                            Id = 627,
                            Codigo = 262330,
                            Nome = "Diretor de arte"
                        },
                        new
                        {
                            Id = 628,
                            Codigo = 253125,
                            Nome = "Diretor de arte (publicidade)"
                        },
                        new
                        {
                            Id = 629,
                            Codigo = 122720,
                            Nome = "Diretor de câmbio e comércio exterior"
                        },
                        new
                        {
                            Id = 630,
                            Codigo = 262205,
                            Nome = "Diretor de cinema"
                        },
                        new
                        {
                            Id = 631,
                            Codigo = 122725,
                            Nome = "Diretor de compliance"
                        },
                        new
                        {
                            Id = 632,
                            Codigo = 253135,
                            Nome = "Diretor de contas (publicidade)"
                        },
                        new
                        {
                            Id = 633,
                            Codigo = 122730,
                            Nome = "Diretor de crédito (exceto crédito imobiliário)"
                        },
                        new
                        {
                            Id = 634,
                            Codigo = 122735,
                            Nome = "Diretor de crédito imobiliário"
                        },
                        new
                        {
                            Id = 635,
                            Codigo = 122715,
                            Nome = "Diretor de crédito rural"
                        },
                        new
                        {
                            Id = 636,
                            Codigo = 253130,
                            Nome = "Diretor de criação"
                        },
                        new
                        {
                            Id = 637,
                            Codigo = 372105,
                            Nome = "Diretor de fotografia"
                        },
                        new
                        {
                            Id = 638,
                            Codigo = 374425,
                            Nome = "Diretor de imagens (tv)"
                        },
                        new
                        {
                            Id = 639,
                            Codigo = 131305,
                            Nome = "Diretor de instituição educacional da área privada"
                        },
                        new
                        {
                            Id = 640,
                            Codigo = 131310,
                            Nome = "Diretor de instituição educacional pública"
                        },
                        new
                        {
                            Id = 641,
                            Codigo = 122740,
                            Nome = "Diretor de leasing"
                        },
                        new
                        {
                            Id = 642,
                            Codigo = 123805,
                            Nome = "Diretor de manutenção"
                        },
                        new
                        {
                            Id = 643,
                            Codigo = 123310,
                            Nome = "Diretor de marketing"
                        },
                        new
                        {
                            Id = 644,
                            Codigo = 122745,
                            Nome = "Diretor de mercado de capitais"
                        },
                        new
                        {
                            Id = 645,
                            Codigo = 253120,
                            Nome = "Diretor de mídia (publicidade)"
                        },
                        new
                        {
                            Id = 646,
                            Codigo = 122405,
                            Nome = "Diretor de operações comerciais (comércio atacadista e varejista)"
                        },
                        new
                        {
                            Id = 647,
                            Codigo = 122605,
                            Nome = "Diretor de operações de correios"
                        },
                        new
                        {
                            Id = 648,
                            Codigo = 122305,
                            Nome = "Diretor de operações de obras pública e civil"
                        },
                        new
                        {
                            Id = 649,
                            Codigo = 122610,
                            Nome = "Diretor de operações de serviços de armazenamento"
                        },
                        new
                        {
                            Id = 650,
                            Codigo = 122615,
                            Nome = "Diretor de operações de serviços de telecomunicações"
                        },
                        new
                        {
                            Id = 651,
                            Codigo = 122620,
                            Nome = "Diretor de operações de serviços de transporte"
                        },
                        new
                        {
                            Id = 652,
                            Codigo = 123705,
                            Nome = "Diretor de pesquisa e desenvolvimento (p&d)"
                        },
                        new
                        {
                            Id = 653,
                            Codigo = 121005,
                            Nome = "Diretor de planejamento estratégico"
                        },
                        new
                        {
                            Id = 654,
                            Codigo = 262230,
                            Nome = "Diretor de produção"
                        },
                        new
                        {
                            Id = 655,
                            Codigo = 122205,
                            Nome = "Diretor de produção e operações da indústria de transformação, extração mineral e utilidades"
                        },
                        new
                        {
                            Id = 656,
                            Codigo = 122105,
                            Nome = "Diretor de produção e operações em empresa agropecuária"
                        },
                        new
                        {
                            Id = 657,
                            Codigo = 122110,
                            Nome = "Diretor de produção e operações em empresa aqüícola"
                        },
                        new
                        {
                            Id = 658,
                            Codigo = 122115,
                            Nome = "Diretor de produção e operações em empresa florestal"
                        },
                        new
                        {
                            Id = 659,
                            Codigo = 122120,
                            Nome = "Diretor de produção e operações em empresa pesqueira"
                        },
                        new
                        {
                            Id = 660,
                            Codigo = 122710,
                            Nome = "Diretor de produtos bancários"
                        },
                        new
                        {
                            Id = 661,
                            Codigo = 262225,
                            Nome = "Diretor de programação"
                        },
                        new
                        {
                            Id = 662,
                            Codigo = 262210,
                            Nome = "Diretor de programas de rádio"
                        },
                        new
                        {
                            Id = 663,
                            Codigo = 262215,
                            Nome = "Diretor de programas de televisão"
                        },
                        new
                        {
                            Id = 664,
                            Codigo = 122750,
                            Nome = "Diretor de recuperação de créditos em operações de intermediação financeira"
                        },
                        new
                        {
                            Id = 665,
                            Codigo = 123205,
                            Nome = "Diretor de recursos humanos"
                        },
                        new
                        {
                            Id = 666,
                            Codigo = 261115,
                            Nome = "Diretor de redação"
                        },
                        new
                        {
                            Id = 667,
                            Codigo = 123210,
                            Nome = "Diretor de relações de trabalho"
                        },
                        new
                        {
                            Id = 668,
                            Codigo = 122755,
                            Nome = "Diretor de riscos de mercado"
                        },
                        new
                        {
                            Id = 669,
                            Codigo = 131105,
                            Nome = "Diretor de serviços culturais"
                        },
                        new
                        {
                            Id = 670,
                            Codigo = 131205,
                            Nome = "Diretor de serviços de saúde"
                        },
                        new
                        {
                            Id = 671,
                            Codigo = 131110,
                            Nome = "Diretor de serviços sociais"
                        },
                        new
                        {
                            Id = 672,
                            Codigo = 123405,
                            Nome = "Diretor de suprimentos"
                        },
                        new
                        {
                            Id = 673,
                            Codigo = 123410,
                            Nome = "Diretor de suprimentos no serviço público"
                        },
                        new
                        {
                            Id = 674,
                            Codigo = 123605,
                            Nome = "Diretor de tecnologia da informação"
                        },
                        new
                        {
                            Id = 675,
                            Codigo = 123115,
                            Nome = "Diretor financeiro"
                        },
                        new
                        {
                            Id = 676,
                            Codigo = 121010,
                            Nome = "Diretor geral de empresa e organizações (exceto de interesse público)"
                        },
                        new
                        {
                            Id = 677,
                            Codigo = 262220,
                            Nome = "Diretor teatral"
                        },
                        new
                        {
                            Id = 678,
                            Codigo = 114105,
                            Nome = "Dirigente de partido político"
                        },
                        new
                        {
                            Id = 679,
                            Codigo = 111410,
                            Nome = "Dirigente do serviço público estadual e distrital"
                        },
                        new
                        {
                            Id = 680,
                            Codigo = 111405,
                            Nome = "Dirigente do serviço público federal"
                        },
                        new
                        {
                            Id = 681,
                            Codigo = 111415,
                            Nome = "Dirigente do serviço público municipal"
                        },
                        new
                        {
                            Id = 682,
                            Codigo = 114405,
                            Nome = "Dirigente e administrador de organização da sociedade civil sem fins lucrativos"
                        },
                        new
                        {
                            Id = 683,
                            Codigo = 114305,
                            Nome = "Dirigente e administrador de organização religiosa"
                        },
                        new
                        {
                            Id = 684,
                            Codigo = 114205,
                            Nome = "Dirigentes de entidades de trabalhadores"
                        },
                        new
                        {
                            Id = 685,
                            Codigo = 114210,
                            Nome = "Dirigentes de entidades patronais"
                        },
                        new
                        {
                            Id = 686,
                            Codigo = 374145,
                            Nome = "Dj (disc jockey)"
                        },
                        new
                        {
                            Id = 687,
                            Codigo = 261210,
                            Nome = "Documentalista"
                        },
                        new
                        {
                            Id = 688,
                            Codigo = 376225,
                            Nome = "Domador de animais (circense)"
                        },
                        new
                        {
                            Id = 689,
                            Codigo = 322135,
                            Nome = "Doula"
                        },
                        new
                        {
                            Id = 690,
                            Codigo = 811810,
                            Nome = "Drageador (medicamentos)"
                        },
                        new
                        {
                            Id = 691,
                            Codigo = 262820,
                            Nome = "Dramaturgo de dança"
                        },
                        new
                        {
                            Id = 692,
                            Codigo = 251205,
                            Nome = "Economista"
                        },
                        new
                        {
                            Id = 693,
                            Codigo = 251210,
                            Nome = "Economista agroindustrial"
                        },
                        new
                        {
                            Id = 694,
                            Codigo = 251230,
                            Nome = "Economista ambiental"
                        },
                        new
                        {
                            Id = 695,
                            Codigo = 251225,
                            Nome = "Economista do setor público"
                        },
                        new
                        {
                            Id = 696,
                            Codigo = 251610,
                            Nome = "Economista doméstico"
                        },
                        new
                        {
                            Id = 697,
                            Codigo = 251215,
                            Nome = "Economista financeiro"
                        },
                        new
                        {
                            Id = 698,
                            Codigo = 251220,
                            Nome = "Economista industrial"
                        },
                        new
                        {
                            Id = 699,
                            Codigo = 251235,
                            Nome = "Economista regional e urbano"
                        },
                        new
                        {
                            Id = 700,
                            Codigo = 261120,
                            Nome = "Editor"
                        },
                        new
                        {
                            Id = 701,
                            Codigo = 261605,
                            Nome = "Editor de jornal"
                        },
                        new
                        {
                            Id = 702,
                            Codigo = 261610,
                            Nome = "Editor de livro"
                        },
                        new
                        {
                            Id = 703,
                            Codigo = 374405,
                            Nome = "Editor de mídia audiovisual"
                        },
                        new
                        {
                            Id = 704,
                            Codigo = 261615,
                            Nome = "Editor de mídia eletrônica"
                        },
                        new
                        {
                            Id = 705,
                            Codigo = 261620,
                            Nome = "Editor de revista"
                        },
                        new
                        {
                            Id = 706,
                            Codigo = 261625,
                            Nome = "Editor de revista científica"
                        },
                        new
                        {
                            Id = 707,
                            Codigo = 766120,
                            Nome = "Editor de texto e imagem"
                        },
                        new
                        {
                            Id = 708,
                            Codigo = 515305,
                            Nome = "Educador social"
                        },
                        new
                        {
                            Id = 709,
                            Codigo = 341315,
                            Nome = "Eletricista de bordo"
                        },
                        new
                        {
                            Id = 710,
                            Codigo = 715615,
                            Nome = "Eletricista de instalações"
                        },
                        new
                        {
                            Id = 711,
                            Codigo = 953105,
                            Nome = "Eletricista de instalações (aeronaves)"
                        },
                        new
                        {
                            Id = 712,
                            Codigo = 715605,
                            Nome = "Eletricista de instalações (cenários)"
                        },
                        new
                        {
                            Id = 713,
                            Codigo = 715610,
                            Nome = "Eletricista de instalações (edifícios)"
                        },
                        new
                        {
                            Id = 714,
                            Codigo = 953110,
                            Nome = "Eletricista de instalações (embarcações)"
                        },
                        new
                        {
                            Id = 715,
                            Codigo = 953115,
                            Nome = "Eletricista de instalações (veículos automotores e máquinas operatrizes, exceto aeronaves e embarcações)"
                        },
                        new
                        {
                            Id = 716,
                            Codigo = 732105,
                            Nome = "Eletricista de manutenção de linhas elétricas, telefônicas e de comunicação de dados"
                        },
                        new
                        {
                            Id = 717,
                            Codigo = 951105,
                            Nome = "Eletricista de manutenção eletroeletrônica"
                        },
                        new
                        {
                            Id = 718,
                            Codigo = 954105,
                            Nome = "Eletromecânico de manutenção de elevadores"
                        },
                        new
                        {
                            Id = 719,
                            Codigo = 954110,
                            Nome = "Eletromecânico de manutenção de escadas rolantes"
                        },
                        new
                        {
                            Id = 720,
                            Codigo = 954115,
                            Nome = "Eletromecânico de manutenção de portas automáticas"
                        },
                        new
                        {
                            Id = 721,
                            Codigo = 313105,
                            Nome = "Eletrotécnico"
                        },
                        new
                        {
                            Id = 722,
                            Codigo = 313110,
                            Nome = "Eletrotécnico (produção de energia)"
                        },
                        new
                        {
                            Id = 723,
                            Codigo = 313115,
                            Nome = "Eletrotécnico na fabricação, montagem e instalação de máquinas e equipamentos"
                        },
                        new
                        {
                            Id = 724,
                            Codigo = 784105,
                            Nome = "Embalador, a mão"
                        },
                        new
                        {
                            Id = 725,
                            Codigo = 784110,
                            Nome = "Embalador, a máquina"
                        },
                        new
                        {
                            Id = 726,
                            Codigo = 328105,
                            Nome = "Embalsamador"
                        },
                        new
                        {
                            Id = 727,
                            Codigo = 732110,
                            Nome = "Emendador de cabos elétricos e telefônicos (aéreos e subterrâneos)"
                        },
                        new
                        {
                            Id = 728,
                            Codigo = 421120,
                            Nome = "Emissor de passagens"
                        },
                        new
                        {
                            Id = 729,
                            Codigo = 512105,
                            Nome = "Empregado  doméstico  nos serviços gerais"
                        },
                        new
                        {
                            Id = 730,
                            Codigo = 512110,
                            Nome = "Empregado doméstico  arrumador"
                        },
                        new
                        {
                            Id = 731,
                            Codigo = 512115,
                            Nome = "Empregado doméstico  faxineiro"
                        },
                        new
                        {
                            Id = 732,
                            Codigo = 512120,
                            Nome = "Empregado doméstico diarista"
                        },
                        new
                        {
                            Id = 733,
                            Codigo = 724110,
                            Nome = "Encanador"
                        },
                        new
                        {
                            Id = 734,
                            Codigo = 821405,
                            Nome = "Encarregado de acabamento de chapas e metais  (têmpera)"
                        },
                        new
                        {
                            Id = 735,
                            Codigo = 760305,
                            Nome = "Encarregado de corte na confecção do vestuário"
                        },
                        new
                        {
                            Id = 736,
                            Codigo = 760310,
                            Nome = "Encarregado de costura na confecção do vestuário"
                        },
                        new
                        {
                            Id = 737,
                            Codigo = 992210,
                            Nome = "Encarregado de equipe de conservação de vias permanentes (exceto trilhos)"
                        },
                        new
                        {
                            Id = 738,
                            Codigo = 313415,
                            Nome = "Encarregado de manutenção de instrumentos de controle, medição e similares"
                        },
                        new
                        {
                            Id = 739,
                            Codigo = 950205,
                            Nome = "Encarregado de manutenção elétrica de veículos"
                        },
                        new
                        {
                            Id = 740,
                            Codigo = 910105,
                            Nome = "Encarregado de manutenção mecânica de sistemas operacionais"
                        },
                        new
                        {
                            Id = 741,
                            Codigo = 992205,
                            Nome = "Encarregado geral de operações de conservação de vias permanentes (exceto trilhos)"
                        },
                        new
                        {
                            Id = 742,
                            Codigo = 223505,
                            Nome = "Enfermeiro"
                        },
                        new
                        {
                            Id = 743,
                            Codigo = 223510,
                            Nome = "Enfermeiro auditor"
                        },
                        new
                        {
                            Id = 744,
                            Codigo = 223565,
                            Nome = "Enfermeiro da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 745,
                            Codigo = 223515,
                            Nome = "Enfermeiro de bordo"
                        },
                        new
                        {
                            Id = 746,
                            Codigo = 223520,
                            Nome = "Enfermeiro de centro cirúrgico"
                        },
                        new
                        {
                            Id = 747,
                            Codigo = 223525,
                            Nome = "Enfermeiro de terapia intensiva"
                        },
                        new
                        {
                            Id = 748,
                            Codigo = 223530,
                            Nome = "Enfermeiro do trabalho"
                        },
                        new
                        {
                            Id = 749,
                            Codigo = 223535,
                            Nome = "Enfermeiro nefrologista"
                        },
                        new
                        {
                            Id = 750,
                            Codigo = 223540,
                            Nome = "Enfermeiro neonatologista"
                        },
                        new
                        {
                            Id = 751,
                            Codigo = 223545,
                            Nome = "Enfermeiro obstétrico"
                        },
                        new
                        {
                            Id = 752,
                            Codigo = 223550,
                            Nome = "Enfermeiro psiquiátrico"
                        },
                        new
                        {
                            Id = 753,
                            Codigo = 223555,
                            Nome = "Enfermeiro puericultor e pediátrico"
                        },
                        new
                        {
                            Id = 754,
                            Codigo = 223560,
                            Nome = "Enfermeiro sanitarista"
                        },
                        new
                        {
                            Id = 755,
                            Codigo = 763115,
                            Nome = "Enfestador de roupas"
                        },
                        new
                        {
                            Id = 756,
                            Codigo = 751005,
                            Nome = "Engastador (jóias)"
                        },
                        new
                        {
                            Id = 757,
                            Codigo = 214425,
                            Nome = "Engenheiro aeronáutico"
                        },
                        new
                        {
                            Id = 758,
                            Codigo = 222105,
                            Nome = "Engenheiro agrícola"
                        },
                        new
                        {
                            Id = 759,
                            Codigo = 214805,
                            Nome = "Engenheiro agrimensor"
                        },
                        new
                        {
                            Id = 760,
                            Codigo = 222110,
                            Nome = "Engenheiro agrônomo"
                        },
                        new
                        {
                            Id = 761,
                            Codigo = 214005,
                            Nome = "Engenheiro ambiental"
                        },
                        new
                        {
                            Id = 762,
                            Codigo = 214810,
                            Nome = "Engenheiro cartógrafo"
                        },
                        new
                        {
                            Id = 763,
                            Codigo = 214205,
                            Nome = "Engenheiro civil"
                        },
                        new
                        {
                            Id = 764,
                            Codigo = 214210,
                            Nome = "Engenheiro civil (aeroportos)"
                        },
                        new
                        {
                            Id = 765,
                            Codigo = 214215,
                            Nome = "Engenheiro civil (edificações)"
                        },
                        new
                        {
                            Id = 766,
                            Codigo = 214220,
                            Nome = "Engenheiro civil (estruturas metálicas)"
                        },
                        new
                        {
                            Id = 767,
                            Codigo = 214225,
                            Nome = "Engenheiro civil (ferrovias e metrovias)"
                        },
                        new
                        {
                            Id = 768,
                            Codigo = 214230,
                            Nome = "Engenheiro civil (geotécnia)"
                        },
                        new
                        {
                            Id = 769,
                            Codigo = 214240,
                            Nome = "Engenheiro civil (hidráulica)"
                        },
                        new
                        {
                            Id = 770,
                            Codigo = 214235,
                            Nome = "Engenheiro civil (hidrologia)"
                        },
                        new
                        {
                            Id = 771,
                            Codigo = 214245,
                            Nome = "Engenheiro civil (pontes e viadutos)"
                        },
                        new
                        {
                            Id = 772,
                            Codigo = 214250,
                            Nome = "Engenheiro civil (portos e vias navegáveis)"
                        },
                        new
                        {
                            Id = 773,
                            Codigo = 214255,
                            Nome = "Engenheiro civil (rodovias)"
                        },
                        new
                        {
                            Id = 774,
                            Codigo = 214260,
                            Nome = "Engenheiro civil (saneamento)"
                        },
                        new
                        {
                            Id = 775,
                            Codigo = 214270,
                            Nome = "Engenheiro civil (transportes e trânsito)"
                        },
                        new
                        {
                            Id = 776,
                            Codigo = 214265,
                            Nome = "Engenheiro civil (túneis)"
                        },
                        new
                        {
                            Id = 777,
                            Codigo = 222205,
                            Nome = "Engenheiro de alimentos"
                        },
                        new
                        {
                            Id = 778,
                            Codigo = 212205,
                            Nome = "Engenheiro de aplicativos em computação"
                        },
                        new
                        {
                            Id = 779,
                            Codigo = 214910,
                            Nome = "Engenheiro de controle de qualidade"
                        },
                        new
                        {
                            Id = 780,
                            Codigo = 202110,
                            Nome = "Engenheiro de controle e automação"
                        },
                        new
                        {
                            Id = 781,
                            Codigo = 212210,
                            Nome = "Engenheiro de equipamentos em computação"
                        },
                        new
                        {
                            Id = 782,
                            Codigo = 214945,
                            Nome = "Engenheiro de logistica"
                        },
                        new
                        {
                            Id = 783,
                            Codigo = 214335,
                            Nome = "Engenheiro de manutenção de telecomunicações"
                        },
                        new
                        {
                            Id = 784,
                            Codigo = 214605,
                            Nome = "Engenheiro de materiais"
                        },
                        new
                        {
                            Id = 785,
                            Codigo = 214705,
                            Nome = "Engenheiro de minas"
                        },
                        new
                        {
                            Id = 786,
                            Codigo = 214710,
                            Nome = "Engenheiro de minas (beneficiamento)"
                        },
                        new
                        {
                            Id = 787,
                            Codigo = 214715,
                            Nome = "Engenheiro de minas (lavra a céu aberto)"
                        },
                        new
                        {
                            Id = 788,
                            Codigo = 214720,
                            Nome = "Engenheiro de minas (lavra subterrânea)"
                        },
                        new
                        {
                            Id = 789,
                            Codigo = 214725,
                            Nome = "Engenheiro de minas (pesquisa mineral)"
                        },
                        new
                        {
                            Id = 790,
                            Codigo = 214730,
                            Nome = "Engenheiro de minas (planejamento)"
                        },
                        new
                        {
                            Id = 791,
                            Codigo = 214735,
                            Nome = "Engenheiro de minas (processo)"
                        },
                        new
                        {
                            Id = 792,
                            Codigo = 214740,
                            Nome = "Engenheiro de minas (projeto)"
                        },
                        new
                        {
                            Id = 793,
                            Codigo = 222115,
                            Nome = "Engenheiro de pesca"
                        },
                        new
                        {
                            Id = 794,
                            Codigo = 214905,
                            Nome = "Engenheiro de produção"
                        },
                        new
                        {
                            Id = 795,
                            Codigo = 214350,
                            Nome = "Engenheiro de redes de comunicação"
                        },
                        new
                        {
                            Id = 796,
                            Codigo = 214920,
                            Nome = "Engenheiro de riscos"
                        },
                        new
                        {
                            Id = 797,
                            Codigo = 214915,
                            Nome = "Engenheiro de segurança do trabalho"
                        },
                        new
                        {
                            Id = 798,
                            Codigo = 214340,
                            Nome = "Engenheiro de telecomunicações"
                        },
                        new
                        {
                            Id = 799,
                            Codigo = 214925,
                            Nome = "Engenheiro de tempos e movimentos"
                        },
                        new
                        {
                            Id = 800,
                            Codigo = 214305,
                            Nome = "Engenheiro eletricista"
                        },
                        new
                        {
                            Id = 801,
                            Codigo = 214315,
                            Nome = "Engenheiro eletricista de manutenção"
                        },
                        new
                        {
                            Id = 802,
                            Codigo = 214320,
                            Nome = "Engenheiro eletricista de projetos"
                        },
                        new
                        {
                            Id = 803,
                            Codigo = 214310,
                            Nome = "Engenheiro eletrônico"
                        },
                        new
                        {
                            Id = 804,
                            Codigo = 214325,
                            Nome = "Engenheiro eletrônico de manutenção"
                        },
                        new
                        {
                            Id = 805,
                            Codigo = 214330,
                            Nome = "Engenheiro eletrônico de projetos"
                        },
                        new
                        {
                            Id = 806,
                            Codigo = 222120,
                            Nome = "Engenheiro florestal"
                        },
                        new
                        {
                            Id = 807,
                            Codigo = 214405,
                            Nome = "Engenheiro mecânico"
                        },
                        new
                        {
                            Id = 808,
                            Codigo = 214415,
                            Nome = "Engenheiro mecânico (energia nuclear)"
                        },
                        new
                        {
                            Id = 809,
                            Codigo = 214410,
                            Nome = "Engenheiro mecânico automotivo"
                        },
                        new
                        {
                            Id = 810,
                            Codigo = 214420,
                            Nome = "Engenheiro mecânico industrial"
                        },
                        new
                        {
                            Id = 811,
                            Codigo = 202105,
                            Nome = "Engenheiro mecatrônico"
                        },
                        new
                        {
                            Id = 812,
                            Codigo = 214610,
                            Nome = "Engenheiro metalurgista"
                        },
                        new
                        {
                            Id = 813,
                            Codigo = 214430,
                            Nome = "Engenheiro naval"
                        },
                        new
                        {
                            Id = 814,
                            Codigo = 214345,
                            Nome = "Engenheiro projetista de telecomunicações"
                        },
                        new
                        {
                            Id = 815,
                            Codigo = 214505,
                            Nome = "Engenheiro químico"
                        },
                        new
                        {
                            Id = 816,
                            Codigo = 214510,
                            Nome = "Engenheiro químico (indústria química)"
                        },
                        new
                        {
                            Id = 817,
                            Codigo = 214515,
                            Nome = "Engenheiro químico (mineração, metalurgia, siderurgia, cimenteira e cerâmica)"
                        },
                        new
                        {
                            Id = 818,
                            Codigo = 214520,
                            Nome = "Engenheiro químico (papel e celulose)"
                        },
                        new
                        {
                            Id = 819,
                            Codigo = 214525,
                            Nome = "Engenheiro químico (petróleo e borracha)"
                        },
                        new
                        {
                            Id = 820,
                            Codigo = 214530,
                            Nome = "Engenheiro químico (utilidades e meio ambiente)"
                        },
                        new
                        {
                            Id = 821,
                            Codigo = 212215,
                            Nome = "Engenheiros de sistemas operacionais em computação"
                        },
                        new
                        {
                            Id = 822,
                            Codigo = 519915,
                            Nome = "Engraxate"
                        },
                        new
                        {
                            Id = 823,
                            Codigo = 325005,
                            Nome = "Enólogo"
                        },
                        new
                        {
                            Id = 824,
                            Codigo = 262825,
                            Nome = "Ensaiador de dança"
                        },
                        new
                        {
                            Id = 825,
                            Codigo = 775105,
                            Nome = "Entalhador  de madeira"
                        },
                        new
                        {
                            Id = 826,
                            Codigo = 415215,
                            Nome = "Entregador de publicações"
                        },
                        new
                        {
                            Id = 827,
                            Codigo = 424105,
                            Nome = "Entrevistador censitário e de pesquisas amostrais"
                        },
                        new
                        {
                            Id = 828,
                            Codigo = 424110,
                            Nome = "Entrevistador de pesquisa de opinião e mídia"
                        },
                        new
                        {
                            Id = 829,
                            Codigo = 424115,
                            Nome = "Entrevistador de pesquisas de mercado"
                        },
                        new
                        {
                            Id = 830,
                            Codigo = 424120,
                            Nome = "Entrevistador de preços"
                        },
                        new
                        {
                            Id = 831,
                            Codigo = 424130,
                            Nome = "Entrevistador social"
                        },
                        new
                        {
                            Id = 832,
                            Codigo = 762215,
                            Nome = "Enxugador de couros"
                        },
                        new
                        {
                            Id = 833,
                            Codigo = 376230,
                            Nome = "Equilibrista"
                        },
                        new
                        {
                            Id = 834,
                            Codigo = 226315,
                            Nome = "Equoterapeuta"
                        },
                        new
                        {
                            Id = 835,
                            Codigo = 821410,
                            Nome = "Escarfador"
                        },
                        new
                        {
                            Id = 836,
                            Codigo = 391225,
                            Nome = "Escolhedor de papel"
                        },
                        new
                        {
                            Id = 837,
                            Codigo = 711125,
                            Nome = "Escorador de minas"
                        },
                        new
                        {
                            Id = 838,
                            Codigo = 351405,
                            Nome = "Escrevente"
                        },
                        new
                        {
                            Id = 839,
                            Codigo = 261515,
                            Nome = "Escritor de ficção"
                        },
                        new
                        {
                            Id = 840,
                            Codigo = 261520,
                            Nome = "Escritor de não ficção"
                        },
                        new
                        {
                            Id = 841,
                            Codigo = 424125,
                            Nome = "Escriturário  em  estatística"
                        },
                        new
                        {
                            Id = 842,
                            Codigo = 413225,
                            Nome = "Escriturário de banco"
                        },
                        new
                        {
                            Id = 843,
                            Codigo = 351420,
                            Nome = "Escrivão de polícia"
                        },
                        new
                        {
                            Id = 844,
                            Codigo = 351415,
                            Nome = "Escrivão extra - judicial"
                        },
                        new
                        {
                            Id = 845,
                            Codigo = 351410,
                            Nome = "Escrivão judicial"
                        },
                        new
                        {
                            Id = 846,
                            Codigo = 516805,
                            Nome = "Esotérico"
                        },
                        new
                        {
                            Id = 847,
                            Codigo = 111505,
                            Nome = "Especialista de políticas públicas e gestão governamental - eppgg"
                        },
                        new
                        {
                            Id = 848,
                            Codigo = 201210,
                            Nome = "Especialista em calibrações metrológicas"
                        },
                        new
                        {
                            Id = 849,
                            Codigo = 142610,
                            Nome = "Especialista em desenvolvimento de cigarros"
                        },
                        new
                        {
                            Id = 850,
                            Codigo = 201215,
                            Nome = "Especialista em ensaios metrológicos"
                        },
                        new
                        {
                            Id = 851,
                            Codigo = 201220,
                            Nome = "Especialista em instrumentação metrológica"
                        },
                        new
                        {
                            Id = 852,
                            Codigo = 201225,
                            Nome = "Especialista em materiais de referência metrológica"
                        },
                        new
                        {
                            Id = 853,
                            Codigo = 211110,
                            Nome = "Especialista em pesquisa operacional"
                        },
                        new
                        {
                            Id = 854,
                            Codigo = 761410,
                            Nome = "Estampador de tecido"
                        },
                        new
                        {
                            Id = 855,
                            Codigo = 211205,
                            Nome = "Estatístico"
                        },
                        new
                        {
                            Id = 856,
                            Codigo = 211210,
                            Nome = "Estatístico (estatística aplicada)"
                        },
                        new
                        {
                            Id = 857,
                            Codigo = 211215,
                            Nome = "Estatístico teórico"
                        },
                        new
                        {
                            Id = 858,
                            Codigo = 776425,
                            Nome = "Esteireiro"
                        },
                        new
                        {
                            Id = 859,
                            Codigo = 351515,
                            Nome = "Estenotipista"
                        },
                        new
                        {
                            Id = 860,
                            Codigo = 841440,
                            Nome = "Esterilizador de alimentos"
                        },
                        new
                        {
                            Id = 861,
                            Codigo = 322130,
                            Nome = "Esteticista"
                        },
                        new
                        {
                            Id = 862,
                            Codigo = 519310,
                            Nome = "Esteticista de animais domésticos"
                        },
                        new
                        {
                            Id = 863,
                            Codigo = 762305,
                            Nome = "Estirador de couros e peles (acabamento)"
                        },
                        new
                        {
                            Id = 864,
                            Codigo = 762115,
                            Nome = "Estirador de couros e peles (preparação)"
                        },
                        new
                        {
                            Id = 865,
                            Codigo = 722410,
                            Nome = "Estirador de tubos de metal sem costura"
                        },
                        new
                        {
                            Id = 866,
                            Codigo = 783220,
                            Nome = "Estivador"
                        },
                        new
                        {
                            Id = 867,
                            Codigo = 765230,
                            Nome = "Estofador de aviões"
                        },
                        new
                        {
                            Id = 868,
                            Codigo = 765235,
                            Nome = "Estofador de móveis"
                        },
                        new
                        {
                            Id = 869,
                            Codigo = 414125,
                            Nome = "Estoquista"
                        },
                        new
                        {
                            Id = 870,
                            Codigo = 732115,
                            Nome = "Examinador de cabos, linhas elétricas e telefônicas"
                        },
                        new
                        {
                            Id = 871,
                            Codigo = 414135,
                            Nome = "Expedidor de mercadorias"
                        },
                        new
                        {
                            Id = 872,
                            Codigo = 823210,
                            Nome = "Extrusor de fios ou fibras de vidro"
                        },
                        new
                        {
                            Id = 873,
                            Codigo = 223405,
                            Nome = "Farmacêutico"
                        },
                        new
                        {
                            Id = 874,
                            Codigo = 223415,
                            Nome = "Farmacêutico analista clínico"
                        },
                        new
                        {
                            Id = 875,
                            Codigo = 223420,
                            Nome = "Farmacêutico de alimentos"
                        },
                        new
                        {
                            Id = 876,
                            Codigo = 223430,
                            Nome = "Farmacêutico em saúde pública"
                        },
                        new
                        {
                            Id = 877,
                            Codigo = 223445,
                            Nome = "Farmacêutico hospitalar e clínico"
                        },
                        new
                        {
                            Id = 878,
                            Codigo = 223435,
                            Nome = "Farmacêutico industrial"
                        },
                        new
                        {
                            Id = 879,
                            Codigo = 223425,
                            Nome = "Farmacêutico práticas integrativas e complementares"
                        },
                        new
                        {
                            Id = 880,
                            Codigo = 223440,
                            Nome = "Farmacêutico toxicologista"
                        },
                        new
                        {
                            Id = 881,
                            Codigo = 514320,
                            Nome = "Faxineiro"
                        },
                        new
                        {
                            Id = 882,
                            Codigo = 524205,
                            Nome = "Feirante"
                        },
                        new
                        {
                            Id = 883,
                            Codigo = 841715,
                            Nome = "Fermentador"
                        },
                        new
                        {
                            Id = 884,
                            Codigo = 623030,
                            Nome = "Ferrador de animais"
                        },
                        new
                        {
                            Id = 885,
                            Codigo = 721105,
                            Nome = "Ferramenteiro"
                        },
                        new
                        {
                            Id = 886,
                            Codigo = 721110,
                            Nome = "Ferramenteiro de mandris, calibradores e outros dispositivos"
                        },
                        new
                        {
                            Id = 887,
                            Codigo = 261405,
                            Nome = "Filólogo"
                        },
                        new
                        {
                            Id = 888,
                            Codigo = 251405,
                            Nome = "Filósofo"
                        },
                        new
                        {
                            Id = 889,
                            Codigo = 841710,
                            Nome = "Filtrador de cerveja"
                        },
                        new
                        {
                            Id = 890,
                            Codigo = 374410,
                            Nome = "Finalizador de filmes"
                        },
                        new
                        {
                            Id = 891,
                            Codigo = 374415,
                            Nome = "Finalizador de vídeo"
                        },
                        new
                        {
                            Id = 892,
                            Codigo = 254505,
                            Nome = "Fiscal de atividades urbanas"
                        },
                        new
                        {
                            Id = 893,
                            Codigo = 342515,
                            Nome = "Fiscal de aviação civil (fac)"
                        },
                        new
                        {
                            Id = 894,
                            Codigo = 517425,
                            Nome = "Fiscal de loja"
                        },
                        new
                        {
                            Id = 895,
                            Codigo = 710225,
                            Nome = "Fiscal de pátio de usina de concreto"
                        },
                        new
                        {
                            Id = 896,
                            Codigo = 342555,
                            Nome = "Fiscal de pista de aeroporto"
                        },
                        new
                        {
                            Id = 897,
                            Codigo = 511205,
                            Nome = "Fiscal de transportes coletivos (exceto trem)"
                        },
                        new
                        {
                            Id = 898,
                            Codigo = 254405,
                            Nome = "Fiscal de tributos estadual"
                        },
                        new
                        {
                            Id = 899,
                            Codigo = 254410,
                            Nome = "Fiscal de tributos municipal"
                        },
                        new
                        {
                            Id = 900,
                            Codigo = 213105,
                            Nome = "Físico"
                        },
                        new
                        {
                            Id = 901,
                            Codigo = 213110,
                            Nome = "Físico (acústica)"
                        },
                        new
                        {
                            Id = 902,
                            Codigo = 213115,
                            Nome = "Físico (atômica e molecular)"
                        },
                        new
                        {
                            Id = 903,
                            Codigo = 213120,
                            Nome = "Físico (cosmologia)"
                        },
                        new
                        {
                            Id = 904,
                            Codigo = 213125,
                            Nome = "Físico (estatística e matemática)"
                        },
                        new
                        {
                            Id = 905,
                            Codigo = 213130,
                            Nome = "Físico (fluidos)"
                        },
                        new
                        {
                            Id = 906,
                            Codigo = 213135,
                            Nome = "Físico (instrumentação)"
                        },
                        new
                        {
                            Id = 907,
                            Codigo = 213140,
                            Nome = "Físico (matéria condensada)"
                        },
                        new
                        {
                            Id = 908,
                            Codigo = 213145,
                            Nome = "Físico (materiais)"
                        },
                        new
                        {
                            Id = 909,
                            Codigo = 213150,
                            Nome = "Físico (medicina)"
                        },
                        new
                        {
                            Id = 910,
                            Codigo = 213155,
                            Nome = "Físico (nuclear e reatores)"
                        },
                        new
                        {
                            Id = 911,
                            Codigo = 213160,
                            Nome = "Físico (óptica)"
                        },
                        new
                        {
                            Id = 912,
                            Codigo = 213165,
                            Nome = "Físico (partículas e campos)"
                        },
                        new
                        {
                            Id = 913,
                            Codigo = 213170,
                            Nome = "Físico (plasma)"
                        },
                        new
                        {
                            Id = 914,
                            Codigo = 213175,
                            Nome = "Físico (térmica)"
                        },
                        new
                        {
                            Id = 915,
                            Codigo = 223660,
                            Nome = "Fisioterapeuta  do trabalho"
                        },
                        new
                        {
                            Id = 916,
                            Codigo = 223650,
                            Nome = "Fisioterapeuta acupunturista"
                        },
                        new
                        {
                            Id = 917,
                            Codigo = 223655,
                            Nome = "Fisioterapeuta esportivo"
                        },
                        new
                        {
                            Id = 918,
                            Codigo = 223605,
                            Nome = "Fisioterapeuta geral"
                        },
                        new
                        {
                            Id = 919,
                            Codigo = 223630,
                            Nome = "Fisioterapeuta neurofuncional"
                        },
                        new
                        {
                            Id = 920,
                            Codigo = 223640,
                            Nome = "Fisioterapeuta osteopata"
                        },
                        new
                        {
                            Id = 921,
                            Codigo = 223645,
                            Nome = "Fisioterapeuta quiropraxista"
                        },
                        new
                        {
                            Id = 922,
                            Codigo = 223625,
                            Nome = "Fisioterapeuta respiratória"
                        },
                        new
                        {
                            Id = 923,
                            Codigo = 223635,
                            Nome = "Fisioterapeuta traumato-ortopédica funcional"
                        },
                        new
                        {
                            Id = 924,
                            Codigo = 415120,
                            Nome = "Fitotecário"
                        },
                        new
                        {
                            Id = 925,
                            Codigo = 862105,
                            Nome = "Foguista (locomotivas a vapor)"
                        },
                        new
                        {
                            Id = 926,
                            Codigo = 775110,
                            Nome = "Folheador de móveis de madeira"
                        },
                        new
                        {
                            Id = 927,
                            Codigo = 223815,
                            Nome = "Fonoaudiólogo educacional"
                        },
                        new
                        {
                            Id = 928,
                            Codigo = 223820,
                            Nome = "Fonoaudiólogo em audiologia"
                        },
                        new
                        {
                            Id = 929,
                            Codigo = 223825,
                            Nome = "Fonoaudiólogo em disfagia"
                        },
                        new
                        {
                            Id = 930,
                            Codigo = 223830,
                            Nome = "Fonoaudiólogo em linguagem"
                        },
                        new
                        {
                            Id = 931,
                            Codigo = 223835,
                            Nome = "Fonoaudiólogo em motricidade orofacial"
                        },
                        new
                        {
                            Id = 932,
                            Codigo = 223840,
                            Nome = "Fonoaudiólogo em saúde coletiva"
                        },
                        new
                        {
                            Id = 933,
                            Codigo = 223845,
                            Nome = "Fonoaudiólogo em voz"
                        },
                        new
                        {
                            Id = 934,
                            Codigo = 223810,
                            Nome = "Fonoaudiólogo geral"
                        },
                        new
                        {
                            Id = 935,
                            Codigo = 722105,
                            Nome = "Forjador"
                        },
                        new
                        {
                            Id = 936,
                            Codigo = 722110,
                            Nome = "Forjador a martelo"
                        },
                        new
                        {
                            Id = 937,
                            Codigo = 722115,
                            Nome = "Forjador prensista"
                        },
                        new
                        {
                            Id = 938,
                            Codigo = 823315,
                            Nome = "Forneiro (materiais de construção)"
                        },
                        new
                        {
                            Id = 939,
                            Codigo = 822105,
                            Nome = "Forneiro de cubilô"
                        },
                        new
                        {
                            Id = 940,
                            Codigo = 822110,
                            Nome = "Forneiro de forno-poço"
                        },
                        new
                        {
                            Id = 941,
                            Codigo = 822115,
                            Nome = "Forneiro de fundição (forno de redução)"
                        },
                        new
                        {
                            Id = 942,
                            Codigo = 822120,
                            Nome = "Forneiro de reaquecimento e tratamento térmico na metalurgia"
                        },
                        new
                        {
                            Id = 943,
                            Codigo = 822125,
                            Nome = "Forneiro de revérbero"
                        },
                        new
                        {
                            Id = 944,
                            Codigo = 821205,
                            Nome = "Forneiro e operador (alto-forno)"
                        },
                        new
                        {
                            Id = 945,
                            Codigo = 821210,
                            Nome = "Forneiro e operador (conversor a oxigênio)"
                        },
                        new
                        {
                            Id = 946,
                            Codigo = 821215,
                            Nome = "Forneiro e operador (forno elétrico)"
                        },
                        new
                        {
                            Id = 947,
                            Codigo = 821220,
                            Nome = "Forneiro e operador (refino de metais não-ferrosos)"
                        },
                        new
                        {
                            Id = 948,
                            Codigo = 821225,
                            Nome = "Forneiro e operador de forno de redução direta"
                        },
                        new
                        {
                            Id = 949,
                            Codigo = 823215,
                            Nome = "Forneiro na fundição de vidro"
                        },
                        new
                        {
                            Id = 950,
                            Codigo = 823220,
                            Nome = "Forneiro no recozimento de vidro"
                        },
                        new
                        {
                            Id = 951,
                            Codigo = 723210,
                            Nome = "Fosfatizador"
                        },
                        new
                        {
                            Id = 952,
                            Codigo = 261805,
                            Nome = "Fotógrafo"
                        },
                        new
                        {
                            Id = 953,
                            Codigo = 261810,
                            Nome = "Fotógrafo publicitário"
                        },
                        new
                        {
                            Id = 954,
                            Codigo = 261815,
                            Nome = "Fotógrafo retratista"
                        },
                        new
                        {
                            Id = 955,
                            Codigo = 521135,
                            Nome = "Frentista"
                        },
                        new
                        {
                            Id = 956,
                            Codigo = 762120,
                            Nome = "Fuloneiro"
                        },
                        new
                        {
                            Id = 957,
                            Codigo = 762310,
                            Nome = "Fuloneiro no acabamento de couros e peles"
                        },
                        new
                        {
                            Id = 958,
                            Codigo = 751110,
                            Nome = "Fundidor (joalheria e ourivesaria)"
                        },
                        new
                        {
                            Id = 959,
                            Codigo = 722205,
                            Nome = "Fundidor de metais"
                        },
                        new
                        {
                            Id = 960,
                            Codigo = 991305,
                            Nome = "Funileiro de veículos (reparação)"
                        },
                        new
                        {
                            Id = 961,
                            Codigo = 724435,
                            Nome = "Funileiro industrial"
                        },
                        new
                        {
                            Id = 962,
                            Codigo = 723215,
                            Nome = "Galvanizador"
                        },
                        new
                        {
                            Id = 963,
                            Codigo = 519920,
                            Nome = "Gandula"
                        },
                        new
                        {
                            Id = 964,
                            Codigo = 514110,
                            Nome = "Garagista"
                        },
                        new
                        {
                            Id = 965,
                            Codigo = 513405,
                            Nome = "Garçom"
                        },
                        new
                        {
                            Id = 966,
                            Codigo = 513410,
                            Nome = "Garçom (serviços de vinhos)"
                        },
                        new
                        {
                            Id = 967,
                            Codigo = 711405,
                            Nome = "Garimpeiro"
                        },
                        new
                        {
                            Id = 968,
                            Codigo = 631405,
                            Nome = "Gelador industrial"
                        },
                        new
                        {
                            Id = 969,
                            Codigo = 631410,
                            Nome = "Gelador profissional"
                        },
                        new
                        {
                            Id = 970,
                            Codigo = 201115,
                            Nome = "Geneticista"
                        },
                        new
                        {
                            Id = 971,
                            Codigo = 213415,
                            Nome = "Geofísico"
                        },
                        new
                        {
                            Id = 972,
                            Codigo = 213310,
                            Nome = "Geofísico espacial"
                        },
                        new
                        {
                            Id = 973,
                            Codigo = 251305,
                            Nome = "Geógrafo"
                        },
                        new
                        {
                            Id = 974,
                            Codigo = 213405,
                            Nome = "Geólogo"
                        },
                        new
                        {
                            Id = 975,
                            Codigo = 213410,
                            Nome = "Geólogo de engenharia"
                        },
                        new
                        {
                            Id = 976,
                            Codigo = 213420,
                            Nome = "Geoquímico"
                        },
                        new
                        {
                            Id = 977,
                            Codigo = 142105,
                            Nome = "Gerente administrativo"
                        },
                        new
                        {
                            Id = 978,
                            Codigo = 142305,
                            Nome = "Gerente comercial"
                        },
                        new
                        {
                            Id = 979,
                            Codigo = 141805,
                            Nome = "Gerente de administração em aeroportos"
                        },
                        new
                        {
                            Id = 980,
                            Codigo = 141710,
                            Nome = "Gerente de agência"
                        },
                        new
                        {
                            Id = 981,
                            Codigo = 142415,
                            Nome = "Gerente de almoxarifado"
                        },
                        new
                        {
                            Id = 982,
                            Codigo = 141515,
                            Nome = "Gerente de bar"
                        },
                        new
                        {
                            Id = 983,
                            Codigo = 141715,
                            Nome = "Gerente de câmbio e comércio exterior"
                        },
                        new
                        {
                            Id = 984,
                            Codigo = 253205,
                            Nome = "Gerente de captação (fundos e investimentos institucionais)"
                        },
                        new
                        {
                            Id = 985,
                            Codigo = 253210,
                            Nome = "Gerente de clientes especiais (private)"
                        },
                        new
                        {
                            Id = 986,
                            Codigo = 142405,
                            Nome = "Gerente de compras"
                        },
                        new
                        {
                            Id = 987,
                            Codigo = 142310,
                            Nome = "Gerente de comunicação"
                        },
                        new
                        {
                            Id = 988,
                            Codigo = 253215,
                            Nome = "Gerente de contas - pessoa física e jurídica"
                        },
                        new
                        {
                            Id = 989,
                            Codigo = 141720,
                            Nome = "Gerente de crédito e cobrança"
                        },
                        new
                        {
                            Id = 990,
                            Codigo = 141725,
                            Nome = "Gerente de crédito imobiliário"
                        },
                        new
                        {
                            Id = 991,
                            Codigo = 141730,
                            Nome = "Gerente de crédito rural"
                        },
                        new
                        {
                            Id = 992,
                            Codigo = 142210,
                            Nome = "Gerente de departamento pessoal"
                        },
                        new
                        {
                            Id = 993,
                            Codigo = 142510,
                            Nome = "Gerente de desenvolvimento de sistemas"
                        },
                        new
                        {
                            Id = 994,
                            Codigo = 141810,
                            Nome = "Gerente de empresa aérea e empresa de serviços auxiliares ao transporte aéreo (esata) em aeroportos"
                        },
                        new
                        {
                            Id = 995,
                            Codigo = 253220,
                            Nome = "Gerente de grandes contas (corporate)"
                        },
                        new
                        {
                            Id = 996,
                            Codigo = 141505,
                            Nome = "Gerente de hotel"
                        },
                        new
                        {
                            Id = 997,
                            Codigo = 142505,
                            Nome = "Gerente de infraestrutura de tecnologia da informação"
                        },
                        new
                        {
                            Id = 998,
                            Codigo = 131315,
                            Nome = "Gerente de instituição educacional da área privada"
                        },
                        new
                        {
                            Id = 999,
                            Codigo = 141615,
                            Nome = "Gerente de logística (armazenagem e distribuição)"
                        },
                        new
                        {
                            Id = 1000,
                            Codigo = 141415,
                            Nome = "Gerente de loja e supermercado"
                        },
                        new
                        {
                            Id = 1001,
                            Codigo = 142315,
                            Nome = "Gerente de marketing"
                        },
                        new
                        {
                            Id = 1002,
                            Codigo = 142515,
                            Nome = "Gerente de operação de tecnologia da informação"
                        },
                        new
                        {
                            Id = 1003,
                            Codigo = 141820,
                            Nome = "Gerente de operações de cargas"
                        },
                        new
                        {
                            Id = 1004,
                            Codigo = 141610,
                            Nome = "Gerente de operações de correios e telecomunicações"
                        },
                        new
                        {
                            Id = 1005,
                            Codigo = 141420,
                            Nome = "Gerente de operações de serviços de assistência técnica"
                        },
                        new
                        {
                            Id = 1006,
                            Codigo = 141605,
                            Nome = "Gerente de operações de transportes"
                        },
                        new
                        {
                            Id = 1007,
                            Codigo = 141815,
                            Nome = "Gerente de operações em aeroportos"
                        },
                        new
                        {
                            Id = 1008,
                            Codigo = 141520,
                            Nome = "Gerente de pensão"
                        },
                        new
                        {
                            Id = 1009,
                            Codigo = 142605,
                            Nome = "Gerente de pesquisa e desenvolvimento (p&d)"
                        },
                        new
                        {
                            Id = 1010,
                            Codigo = 141205,
                            Nome = "Gerente de produção e operações"
                        },
                        new
                        {
                            Id = 1011,
                            Codigo = 141105,
                            Nome = "Gerente de produção e operações  aqüícolas"
                        },
                        new
                        {
                            Id = 1012,
                            Codigo = 141110,
                            Nome = "Gerente de produção e operações  florestais"
                        },
                        new
                        {
                            Id = 1013,
                            Codigo = 141115,
                            Nome = "Gerente de produção e operações agropecuárias"
                        },
                        new
                        {
                            Id = 1014,
                            Codigo = 141305,
                            Nome = "Gerente de produção e operações da construção civil e obras públicas"
                        },
                        new
                        {
                            Id = 1015,
                            Codigo = 141120,
                            Nome = "Gerente de produção e operações pesqueiras"
                        },
                        new
                        {
                            Id = 1016,
                            Codigo = 141705,
                            Nome = "Gerente de produtos bancários"
                        },
                        new
                        {
                            Id = 1017,
                            Codigo = 142520,
                            Nome = "Gerente de projetos de tecnologia da informação"
                        },
                        new
                        {
                            Id = 1018,
                            Codigo = 142705,
                            Nome = "Gerente de projetos e serviços de manutenção"
                        },
                        new
                        {
                            Id = 1019,
                            Codigo = 141735,
                            Nome = "Gerente de recuperação de crédito"
                        },
                        new
                        {
                            Id = 1020,
                            Codigo = 142205,
                            Nome = "Gerente de recursos humanos"
                        },
                        new
                        {
                            Id = 1021,
                            Codigo = 141510,
                            Nome = "Gerente de restaurante"
                        },
                        new
                        {
                            Id = 1022,
                            Codigo = 142110,
                            Nome = "Gerente de riscos"
                        },
                        new
                        {
                            Id = 1023,
                            Codigo = 141825,
                            Nome = "Gerente de segurança da aviação civil"
                        },
                        new
                        {
                            Id = 1024,
                            Codigo = 142525,
                            Nome = "Gerente de segurança da informação"
                        },
                        new
                        {
                            Id = 1025,
                            Codigo = 141830,
                            Nome = "Gerente de segurança operacional (aviação civil)"
                        },
                        new
                        {
                            Id = 1026,
                            Codigo = 131115,
                            Nome = "Gerente de serviços culturais"
                        },
                        new
                        {
                            Id = 1027,
                            Codigo = 131210,
                            Nome = "Gerente de serviços de saúde"
                        },
                        new
                        {
                            Id = 1028,
                            Codigo = 131320,
                            Nome = "Gerente de serviços educacionais da área pública"
                        },
                        new
                        {
                            Id = 1029,
                            Codigo = 131120,
                            Nome = "Gerente de serviços sociais"
                        },
                        new
                        {
                            Id = 1030,
                            Codigo = 142530,
                            Nome = "Gerente de suporte técnico de tecnologia da informação"
                        },
                        new
                        {
                            Id = 1031,
                            Codigo = 142410,
                            Nome = "Gerente de suprimentos"
                        },
                        new
                        {
                            Id = 1032,
                            Codigo = 141525,
                            Nome = "Gerente de turismo"
                        },
                        new
                        {
                            Id = 1033,
                            Codigo = 142320,
                            Nome = "Gerente de vendas"
                        },
                        new
                        {
                            Id = 1034,
                            Codigo = 142115,
                            Nome = "Gerente financeiro"
                        },
                        new
                        {
                            Id = 1035,
                            Codigo = 131220,
                            Nome = "Gerontólogo"
                        },
                        new
                        {
                            Id = 1036,
                            Codigo = 716405,
                            Nome = "Gesseiro"
                        },
                        new
                        {
                            Id = 1037,
                            Codigo = 252605,
                            Nome = "Gestor em segurança"
                        },
                        new
                        {
                            Id = 1038,
                            Codigo = 111230,
                            Nome = "Governador de estado"
                        },
                        new
                        {
                            Id = 1039,
                            Codigo = 111235,
                            Nome = "Governador do distrito federal"
                        },
                        new
                        {
                            Id = 1040,
                            Codigo = 513115,
                            Nome = "Governanta de hotelaria"
                        },
                        new
                        {
                            Id = 1041,
                            Codigo = 751115,
                            Nome = "Gravador (joalheria e ourivesaria)"
                        },
                        new
                        {
                            Id = 1042,
                            Codigo = 712210,
                            Nome = "Gravador de inscrições em pedra"
                        },
                        new
                        {
                            Id = 1043,
                            Codigo = 766135,
                            Nome = "Gravador de matriz calcográfica"
                        },
                        new
                        {
                            Id = 1044,
                            Codigo = 766115,
                            Nome = "Gravador de matriz para flexografia (clicherista)"
                        },
                        new
                        {
                            Id = 1045,
                            Codigo = 766130,
                            Nome = "Gravador de matriz para rotogravura (eletromecânico e químico)"
                        },
                        new
                        {
                            Id = 1046,
                            Codigo = 766140,
                            Nome = "Gravador de matriz serigráfica"
                        },
                        new
                        {
                            Id = 1047,
                            Codigo = 712215,
                            Nome = "Gravador de relevos em pedra"
                        },
                        new
                        {
                            Id = 1048,
                            Codigo = 752215,
                            Nome = "Gravador de vidro a  água-forte"
                        },
                        new
                        {
                            Id = 1049,
                            Codigo = 752220,
                            Nome = "Gravador de vidro a  esmeril"
                        },
                        new
                        {
                            Id = 1050,
                            Codigo = 752225,
                            Nome = "Gravador de vidro a  jato de areia"
                        },
                        new
                        {
                            Id = 1051,
                            Codigo = 768705,
                            Nome = "Gravador, à mão (encadernação)"
                        },
                        new
                        {
                            Id = 1052,
                            Codigo = 517335,
                            Nome = "Guarda portuário"
                        },
                        new
                        {
                            Id = 1053,
                            Codigo = 517215,
                            Nome = "Guarda-civil municipal"
                        },
                        new
                        {
                            Id = 1054,
                            Codigo = 519925,
                            Nome = "Guardador de veículos"
                        },
                        new
                        {
                            Id = 1055,
                            Codigo = 513325,
                            Nome = "Guarda-roupeiro de cinema"
                        },
                        new
                        {
                            Id = 1056,
                            Codigo = 511405,
                            Nome = "Guia de turismo"
                        },
                        new
                        {
                            Id = 1057,
                            Codigo = 632005,
                            Nome = "Guia florestal"
                        },
                        new
                        {
                            Id = 1058,
                            Codigo = 782205,
                            Nome = "Guincheiro (construção civil)"
                        },
                        new
                        {
                            Id = 1059,
                            Codigo = 841444,
                            Nome = "Hidrogenador de óleos e gorduras"
                        },
                        new
                        {
                            Id = 1060,
                            Codigo = 213425,
                            Nome = "Hidrogeólogo"
                        },
                        new
                        {
                            Id = 1061,
                            Codigo = 214940,
                            Nome = "Higienista ocupacional"
                        },
                        new
                        {
                            Id = 1062,
                            Codigo = 632115,
                            Nome = "Identificador florestal"
                        },
                        new
                        {
                            Id = 1063,
                            Codigo = 372110,
                            Nome = "Iluminador (televisão)"
                        },
                        new
                        {
                            Id = 1064,
                            Codigo = 215125,
                            Nome = "Imediato da marinha mercante"
                        },
                        new
                        {
                            Id = 1065,
                            Codigo = 772110,
                            Nome = "Impregnador de madeira"
                        },
                        new
                        {
                            Id = 1066,
                            Codigo = 766205,
                            Nome = "Impressor (serigrafia)"
                        },
                        new
                        {
                            Id = 1067,
                            Codigo = 766210,
                            Nome = "Impressor calcográfico"
                        },
                        new
                        {
                            Id = 1068,
                            Codigo = 766310,
                            Nome = "Impressor de corte e vinco"
                        },
                        new
                        {
                            Id = 1069,
                            Codigo = 766215,
                            Nome = "Impressor de ofsete (plano e rotativo)"
                        },
                        new
                        {
                            Id = 1070,
                            Codigo = 766220,
                            Nome = "Impressor de rotativa"
                        },
                        new
                        {
                            Id = 1071,
                            Codigo = 766225,
                            Nome = "Impressor de rotogravura"
                        },
                        new
                        {
                            Id = 1072,
                            Codigo = 766230,
                            Nome = "Impressor digital"
                        },
                        new
                        {
                            Id = 1073,
                            Codigo = 766235,
                            Nome = "Impressor flexográfico"
                        },
                        new
                        {
                            Id = 1074,
                            Codigo = 766240,
                            Nome = "Impressor letterset"
                        },
                        new
                        {
                            Id = 1075,
                            Codigo = 766245,
                            Nome = "Impressor tampográfico"
                        },
                        new
                        {
                            Id = 1076,
                            Codigo = 766250,
                            Nome = "Impressor tipográfico"
                        },
                        new
                        {
                            Id = 1077,
                            Codigo = 253410,
                            Nome = "Influenciador digital"
                        },
                        new
                        {
                            Id = 1078,
                            Codigo = 623010,
                            Nome = "Inseminador"
                        },
                        new
                        {
                            Id = 1079,
                            Codigo = 334105,
                            Nome = "Inspetor de alunos de escola privada"
                        },
                        new
                        {
                            Id = 1080,
                            Codigo = 334110,
                            Nome = "Inspetor de alunos de escola pública"
                        },
                        new
                        {
                            Id = 1081,
                            Codigo = 342530,
                            Nome = "Inspetor de aviação civil"
                        },
                        new
                        {
                            Id = 1082,
                            Codigo = 314830,
                            Nome = "Inspetor de controle dimensional"
                        },
                        new
                        {
                            Id = 1083,
                            Codigo = 314825,
                            Nome = "Inspetor de dutos"
                        },
                        new
                        {
                            Id = 1084,
                            Codigo = 314815,
                            Nome = "Inspetor de ensaios não destrutivos"
                        },
                        new
                        {
                            Id = 1085,
                            Codigo = 314805,
                            Nome = "Inspetor de equipamentos"
                        },
                        new
                        {
                            Id = 1086,
                            Codigo = 761805,
                            Nome = "Inspetor de estamparia (produção têxtil)"
                        },
                        new
                        {
                            Id = 1087,
                            Codigo = 314810,
                            Nome = "Inspetor de fabricação"
                        },
                        new
                        {
                            Id = 1088,
                            Codigo = 314840,
                            Nome = "Inspetor de manutenção"
                        },
                        new
                        {
                            Id = 1089,
                            Codigo = 314835,
                            Nome = "Inspetor de pintura"
                        },
                        new
                        {
                            Id = 1090,
                            Codigo = 391205,
                            Nome = "Inspetor de qualidade"
                        },
                        new
                        {
                            Id = 1091,
                            Codigo = 351725,
                            Nome = "Inspetor de risco"
                        },
                        new
                        {
                            Id = 1092,
                            Codigo = 342310,
                            Nome = "Inspetor de serviços de transportes rodoviários (passageiros e cargas)"
                        },
                        new
                        {
                            Id = 1093,
                            Codigo = 351730,
                            Nome = "Inspetor de sinistros"
                        },
                        new
                        {
                            Id = 1094,
                            Codigo = 314845,
                            Nome = "Inspetor de soldagem"
                        },
                        new
                        {
                            Id = 1095,
                            Codigo = 215130,
                            Nome = "Inspetor de terminal"
                        },
                        new
                        {
                            Id = 1096,
                            Codigo = 710215,
                            Nome = "Inspetor de terraplenagem"
                        },
                        new
                        {
                            Id = 1097,
                            Codigo = 991110,
                            Nome = "Inspetor de via permanente (trilhos)"
                        },
                        new
                        {
                            Id = 1098,
                            Codigo = 215135,
                            Nome = "Inspetor naval"
                        },
                        new
                        {
                            Id = 1099,
                            Codigo = 523105,
                            Nome = "Instalador de cortinas e persianas, portas sanfonadas e boxe"
                        },
                        new
                        {
                            Id = 1100,
                            Codigo = 715710,
                            Nome = "Instalador de isolantes acústicos"
                        },
                        new
                        {
                            Id = 1101,
                            Codigo = 715715,
                            Nome = "Instalador de isolantes térmicos (refrigeração e climatização)"
                        },
                        new
                        {
                            Id = 1102,
                            Codigo = 715720,
                            Nome = "Instalador de isolantes térmicos de caldeira e tubulações"
                        },
                        new
                        {
                            Id = 1103,
                            Codigo = 732120,
                            Nome = "Instalador de linhas elétricas de alta e baixa - tensão (rede aérea e subterrânea)"
                        },
                        new
                        {
                            Id = 1104,
                            Codigo = 715725,
                            Nome = "Instalador de material isolante, a mão (edificações)"
                        },
                        new
                        {
                            Id = 1105,
                            Codigo = 715730,
                            Nome = "Instalador de material isolante, à máquina (edificações)"
                        },
                        new
                        {
                            Id = 1106,
                            Codigo = 951305,
                            Nome = "Instalador de sistemas eletroeletrônicos de segurança"
                        },
                        new
                        {
                            Id = 1107,
                            Codigo = 732140,
                            Nome = "Instalador de sistemas fotovoltaicos"
                        },
                        new
                        {
                            Id = 1108,
                            Codigo = 523110,
                            Nome = "Instalador de som e acessórios de veículos"
                        },
                        new
                        {
                            Id = 1109,
                            Codigo = 724115,
                            Nome = "Instalador de tubulações"
                        },
                        new
                        {
                            Id = 1110,
                            Codigo = 724120,
                            Nome = "Instalador de tubulações (aeronaves)"
                        },
                        new
                        {
                            Id = 1111,
                            Codigo = 724125,
                            Nome = "Instalador de tubulações (embarcações)"
                        },
                        new
                        {
                            Id = 1112,
                            Codigo = 724130,
                            Nome = "Instalador de tubulações de gás combustível (produção e distribuição)"
                        },
                        new
                        {
                            Id = 1113,
                            Codigo = 724135,
                            Nome = "Instalador de tubulações de vapor (produção e distribuição)"
                        },
                        new
                        {
                            Id = 1114,
                            Codigo = 732125,
                            Nome = "Instalador eletricista (tração de veículos)"
                        },
                        new
                        {
                            Id = 1115,
                            Codigo = 731305,
                            Nome = "Instalador-reparador de equipamentos de comutação em telefonia"
                        },
                        new
                        {
                            Id = 1116,
                            Codigo = 731310,
                            Nome = "Instalador-reparador de equipamentos de energia em telefonia"
                        },
                        new
                        {
                            Id = 1117,
                            Codigo = 731315,
                            Nome = "Instalador-reparador de equipamentos de transmissão em telefonia"
                        },
                        new
                        {
                            Id = 1118,
                            Codigo = 731320,
                            Nome = "Instalador-reparador de linhas e aparelhos de telecomunicações"
                        },
                        new
                        {
                            Id = 1119,
                            Codigo = 731325,
                            Nome = "Instalador-reparador de redes e cabos telefônicos"
                        },
                        new
                        {
                            Id = 1120,
                            Codigo = 732130,
                            Nome = "Instalador-reparador de redes telefônicas e de comunicação de dados"
                        },
                        new
                        {
                            Id = 1121,
                            Codigo = 322225,
                            Nome = "Instrumentador cirúrgico"
                        },
                        new
                        {
                            Id = 1122,
                            Codigo = 233205,
                            Nome = "Instrutor de aprendizagem e treinamento agropecuário"
                        },
                        new
                        {
                            Id = 1123,
                            Codigo = 233215,
                            Nome = "Instrutor de aprendizagem e treinamento comercial"
                        },
                        new
                        {
                            Id = 1124,
                            Codigo = 233210,
                            Nome = "Instrutor de aprendizagem e treinamento industrial"
                        },
                        new
                        {
                            Id = 1125,
                            Codigo = 333105,
                            Nome = "Instrutor de auto-escola"
                        },
                        new
                        {
                            Id = 1126,
                            Codigo = 333110,
                            Nome = "Instrutor de cursos livres"
                        },
                        new
                        {
                            Id = 1127,
                            Codigo = 215315,
                            Nome = "Instrutor de vôo"
                        },
                        new
                        {
                            Id = 1128,
                            Codigo = 261410,
                            Nome = "Intérprete"
                        },
                        new
                        {
                            Id = 1129,
                            Codigo = 261425,
                            Nome = "Intérprete de língua de sinais"
                        },
                        new
                        {
                            Id = 1130,
                            Codigo = 351810,
                            Nome = "Investigador de polícia"
                        },
                        new
                        {
                            Id = 1131,
                            Codigo = 622010,
                            Nome = "Jardineiro"
                        },
                        new
                        {
                            Id = 1132,
                            Codigo = 751010,
                            Nome = "Joalheiro"
                        },
                        new
                        {
                            Id = 1133,
                            Codigo = 751015,
                            Nome = "Joalheiro (reparações)"
                        },
                        new
                        {
                            Id = 1134,
                            Codigo = 377130,
                            Nome = "Jóquei"
                        },
                        new
                        {
                            Id = 1135,
                            Codigo = 524210,
                            Nome = "Jornaleiro (em banca de jornal)"
                        },
                        new
                        {
                            Id = 1136,
                            Codigo = 261125,
                            Nome = "Jornalista"
                        },
                        new
                        {
                            Id = 1137,
                            Codigo = 111340,
                            Nome = "Juiz auditor estadual - justiça militar"
                        },
                        new
                        {
                            Id = 1138,
                            Codigo = 111335,
                            Nome = "Juiz auditor federal - justiça militar"
                        },
                        new
                        {
                            Id = 1139,
                            Codigo = 111325,
                            Nome = "Juiz de direito"
                        },
                        new
                        {
                            Id = 1140,
                            Codigo = 111345,
                            Nome = "Juiz do trabalho"
                        },
                        new
                        {
                            Id = 1141,
                            Codigo = 111330,
                            Nome = "Juiz federal"
                        },
                        new
                        {
                            Id = 1142,
                            Codigo = 415125,
                            Nome = "Kardexista"
                        },
                        new
                        {
                            Id = 1143,
                            Codigo = 766405,
                            Nome = "Laboratorista fotográfico"
                        },
                        new
                        {
                            Id = 1144,
                            Codigo = 841448,
                            Nome = "Lagareiro"
                        },
                        new
                        {
                            Id = 1145,
                            Codigo = 751120,
                            Nome = "Laminador de metais preciosos a  mão"
                        },
                        new
                        {
                            Id = 1146,
                            Codigo = 811745,
                            Nome = "Laminador de plástico"
                        },
                        new
                        {
                            Id = 1147,
                            Codigo = 751020,
                            Nome = "Lapidador (jóias)"
                        },
                        new
                        {
                            Id = 1148,
                            Codigo = 752230,
                            Nome = "Lapidador de vidros e cristais"
                        },
                        new
                        {
                            Id = 1149,
                            Codigo = 516305,
                            Nome = "Lavadeiro, em geral"
                        },
                        new
                        {
                            Id = 1150,
                            Codigo = 516315,
                            Nome = "Lavador de artefatos de tapeçaria"
                        },
                        new
                        {
                            Id = 1151,
                            Codigo = 519930,
                            Nome = "Lavador de garrafas, vidros e outros utensílios"
                        },
                        new
                        {
                            Id = 1152,
                            Codigo = 761110,
                            Nome = "Lavador de lã"
                        },
                        new
                        {
                            Id = 1153,
                            Codigo = 992120,
                            Nome = "Lavador de peças"
                        },
                        new
                        {
                            Id = 1154,
                            Codigo = 516405,
                            Nome = "Lavador de roupas"
                        },
                        new
                        {
                            Id = 1155,
                            Codigo = 516310,
                            Nome = "Lavador de roupas  a maquina"
                        },
                        new
                        {
                            Id = 1156,
                            Codigo = 519935,
                            Nome = "Lavador de veículos"
                        },
                        new
                        {
                            Id = 1157,
                            Codigo = 354405,
                            Nome = "Leiloeiro"
                        },
                        new
                        {
                            Id = 1158,
                            Codigo = 519940,
                            Nome = "Leiturista"
                        },
                        new
                        {
                            Id = 1159,
                            Codigo = 113010,
                            Nome = "Líder de comunidade caiçara"
                        },
                        new
                        {
                            Id = 1160,
                            Codigo = 342560,
                            Nome = "Lider de rampa ( transporte aéreo)"
                        },
                        new
                        {
                            Id = 1161,
                            Codigo = 732135,
                            Nome = "Ligador de linhas telefônicas"
                        },
                        new
                        {
                            Id = 1162,
                            Codigo = 516320,
                            Nome = "Limpador a seco, à máquina"
                        },
                        new
                        {
                            Id = 1163,
                            Codigo = 514315,
                            Nome = "Limpador de fachadas"
                        },
                        new
                        {
                            Id = 1164,
                            Codigo = 514330,
                            Nome = "Limpador de piscinas"
                        },
                        new
                        {
                            Id = 1165,
                            Codigo = 516410,
                            Nome = "Limpador de roupas a seco, à mão"
                        },
                        new
                        {
                            Id = 1166,
                            Codigo = 514305,
                            Nome = "Limpador de vidros"
                        },
                        new
                        {
                            Id = 1167,
                            Codigo = 722210,
                            Nome = "Lingotador"
                        },
                        new
                        {
                            Id = 1168,
                            Codigo = 261415,
                            Nome = "Lingüista"
                        },
                        new
                        {
                            Id = 1169,
                            Codigo = 768610,
                            Nome = "Linotipista"
                        },
                        new
                        {
                            Id = 1170,
                            Codigo = 762315,
                            Nome = "Lixador de couros e peles"
                        },
                        new
                        {
                            Id = 1171,
                            Codigo = 421315,
                            Nome = "Localizador (cobrador)"
                        },
                        new
                        {
                            Id = 1172,
                            Codigo = 261715,
                            Nome = "Locutor de mídias audiovisuais"
                        },
                        new
                        {
                            Id = 1173,
                            Codigo = 919115,
                            Nome = "Lubrificador de embarcações"
                        },
                        new
                        {
                            Id = 1174,
                            Codigo = 919110,
                            Nome = "Lubrificador de veículos automotores (exceto embarcações)"
                        },
                        new
                        {
                            Id = 1175,
                            Codigo = 919105,
                            Nome = "Lubrificador industrial"
                        },
                        new
                        {
                            Id = 1176,
                            Codigo = 224110,
                            Nome = "Ludomotricista"
                        },
                        new
                        {
                            Id = 1177,
                            Codigo = 775115,
                            Nome = "Lustrador de peças de madeira"
                        },
                        new
                        {
                            Id = 1178,
                            Codigo = 716520,
                            Nome = "Lustrador de piso"
                        },
                        new
                        {
                            Id = 1179,
                            Codigo = 915215,
                            Nome = "Luthier (restauração de cordas arcadas)"
                        },
                        new
                        {
                            Id = 1180,
                            Codigo = 722310,
                            Nome = "Macheiro, a  máquina"
                        },
                        new
                        {
                            Id = 1181,
                            Codigo = 722305,
                            Nome = "Macheiro, a mão"
                        },
                        new
                        {
                            Id = 1182,
                            Codigo = 516215,
                            Nome = "Mãe social"
                        },
                        new
                        {
                            Id = 1183,
                            Codigo = 848520,
                            Nome = "Magarefe"
                        },
                        new
                        {
                            Id = 1184,
                            Codigo = 376235,
                            Nome = "Mágico"
                        },
                        new
                        {
                            Id = 1185,
                            Codigo = 510135,
                            Nome = "Maître"
                        },
                        new
                        {
                            Id = 1186,
                            Codigo = 30110,
                            Nome = "Major bombeiro militar"
                        },
                        new
                        {
                            Id = 1187,
                            Codigo = 20115,
                            Nome = "Major da polícia militar"
                        },
                        new
                        {
                            Id = 1188,
                            Codigo = 376240,
                            Nome = "Malabarista"
                        },
                        new
                        {
                            Id = 1189,
                            Codigo = 841725,
                            Nome = "Malteiro (germinação)"
                        },
                        new
                        {
                            Id = 1190,
                            Codigo = 516120,
                            Nome = "Manicure"
                        },
                        new
                        {
                            Id = 1191,
                            Codigo = 783110,
                            Nome = "Manobrador"
                        },
                        new
                        {
                            Id = 1192,
                            Codigo = 848215,
                            Nome = "Manteigueiro na fabricação de laticínio"
                        },
                        new
                        {
                            Id = 1193,
                            Codigo = 991205,
                            Nome = "Mantenedor de equipamentos de parques de diversões e similares"
                        },
                        new
                        {
                            Id = 1194,
                            Codigo = 951310,
                            Nome = "Mantenedor de sistemas eletroeletrônicos de segurança"
                        },
                        new
                        {
                            Id = 1195,
                            Codigo = 771115,
                            Nome = "Maquetista na marcenaria"
                        },
                        new
                        {
                            Id = 1196,
                            Codigo = 516125,
                            Nome = "Maquiador"
                        },
                        new
                        {
                            Id = 1197,
                            Codigo = 516130,
                            Nome = "Maquiador de caracterização"
                        },
                        new
                        {
                            Id = 1198,
                            Codigo = 374210,
                            Nome = "Maquinista de cinema e vídeo"
                        },
                        new
                        {
                            Id = 1199,
                            Codigo = 862110,
                            Nome = "Maquinista de embarcações"
                        },
                        new
                        {
                            Id = 1200,
                            Codigo = 374215,
                            Nome = "Maquinista de teatro e espetáculos"
                        },
                        new
                        {
                            Id = 1201,
                            Codigo = 782610,
                            Nome = "Maquinista de trem"
                        },
                        new
                        {
                            Id = 1202,
                            Codigo = 782615,
                            Nome = "Maquinista de trem metropolitano"
                        },
                        new
                        {
                            Id = 1203,
                            Codigo = 763315,
                            Nome = "Marcador de peças confeccionadas para bordar"
                        },
                        new
                        {
                            Id = 1204,
                            Codigo = 821415,
                            Nome = "Marcador de produtos (siderúrgico e metalúrgico)"
                        },
                        new
                        {
                            Id = 1205,
                            Codigo = 771105,
                            Nome = "Marceneiro"
                        },
                        new
                        {
                            Id = 1206,
                            Codigo = 775120,
                            Nome = "Marcheteiro"
                        },
                        new
                        {
                            Id = 1207,
                            Codigo = 782730,
                            Nome = "Marinheiro auxiliar de convés (marítimo e aquaviario)"
                        },
                        new
                        {
                            Id = 1208,
                            Codigo = 782735,
                            Nome = "Marinheiro auxiliar de máquinas (marítimo e aquaviário)"
                        },
                        new
                        {
                            Id = 1209,
                            Codigo = 782705,
                            Nome = "Marinheiro de convés (marítimo e fluviário)"
                        },
                        new
                        {
                            Id = 1210,
                            Codigo = 782725,
                            Nome = "Marinheiro de esporte e recreio"
                        },
                        new
                        {
                            Id = 1211,
                            Codigo = 782710,
                            Nome = "Marinheiro de máquinas"
                        },
                        new
                        {
                            Id = 1212,
                            Codigo = 716525,
                            Nome = "Marmorista (construção)"
                        },
                        new
                        {
                            Id = 1213,
                            Codigo = 848315,
                            Nome = "Masseiro (massas alimentícias)"
                        },
                        new
                        {
                            Id = 1214,
                            Codigo = 322120,
                            Nome = "Massoterapeuta"
                        },
                        new
                        {
                            Id = 1215,
                            Codigo = 211115,
                            Nome = "Matemático"
                        },
                        new
                        {
                            Id = 1216,
                            Codigo = 211120,
                            Nome = "Matemático aplicado"
                        },
                        new
                        {
                            Id = 1217,
                            Codigo = 762320,
                            Nome = "Matizador de couros e peles"
                        },
                        new
                        {
                            Id = 1218,
                            Codigo = 914105,
                            Nome = "Mecânico de manutenção de aeronaves, em geral"
                        },
                        new
                        {
                            Id = 1219,
                            Codigo = 913105,
                            Nome = "Mecânico de manutenção de aparelhos de levantamento"
                        },
                        new
                        {
                            Id = 1220,
                            Codigo = 919305,
                            Nome = "Mecânico de manutenção de aparelhos esportivos e de ginástica"
                        },
                        new
                        {
                            Id = 1221,
                            Codigo = 914405,
                            Nome = "Mecânico de manutenção de automóveis, motocicletas e veículos similares"
                        },
                        new
                        {
                            Id = 1222,
                            Codigo = 919310,
                            Nome = "Mecânico de manutenção de bicicletas e veículos similares"
                        },
                        new
                        {
                            Id = 1223,
                            Codigo = 911105,
                            Nome = "Mecânico de manutenção de bomba injetora (exceto de veículos automotores)"
                        },
                        new
                        {
                            Id = 1224,
                            Codigo = 911110,
                            Nome = "Mecânico de manutenção de bombas"
                        },
                        new
                        {
                            Id = 1225,
                            Codigo = 911115,
                            Nome = "Mecânico de manutenção de compressores de ar"
                        },
                        new
                        {
                            Id = 1226,
                            Codigo = 914410,
                            Nome = "Mecânico de manutenção de empilhadeiras e outros veículos de cargas leves"
                        },
                        new
                        {
                            Id = 1227,
                            Codigo = 913110,
                            Nome = "Mecânico de manutenção de equipamento de mineração"
                        },
                        new
                        {
                            Id = 1228,
                            Codigo = 954120,
                            Nome = "Mecânico de manutenção de instalações mecânicas de edifícios"
                        },
                        new
                        {
                            Id = 1229,
                            Codigo = 913115,
                            Nome = "Mecânico de manutenção de máquinas agrícolas"
                        },
                        new
                        {
                            Id = 1230,
                            Codigo = 919205,
                            Nome = "Mecânico de manutenção de máquinas cortadoras de grama, roçadeiras, motosserras e similares"
                        },
                        new
                        {
                            Id = 1231,
                            Codigo = 913120,
                            Nome = "Mecânico de manutenção de máquinas de construção e terraplenagem"
                        },
                        new
                        {
                            Id = 1232,
                            Codigo = 911310,
                            Nome = "Mecânico de manutenção de máquinas gráficas"
                        },
                        new
                        {
                            Id = 1233,
                            Codigo = 911315,
                            Nome = "Mecânico de manutenção de máquinas operatrizes (lavra de madeira)"
                        },
                        new
                        {
                            Id = 1234,
                            Codigo = 911320,
                            Nome = "Mecânico de manutenção de máquinas têxteis"
                        },
                        new
                        {
                            Id = 1235,
                            Codigo = 911305,
                            Nome = "Mecânico de manutenção de máquinas, em geral"
                        },
                        new
                        {
                            Id = 1236,
                            Codigo = 911325,
                            Nome = "Mecânico de manutenção de máquinas-ferramentas (usinagem de metais)"
                        },
                        new
                        {
                            Id = 1237,
                            Codigo = 914415,
                            Nome = "Mecânico de manutenção de motocicletas"
                        },
                        new
                        {
                            Id = 1238,
                            Codigo = 911120,
                            Nome = "Mecânico de manutenção de motores diesel (exceto de veículos automotores)"
                        },
                        new
                        {
                            Id = 1239,
                            Codigo = 914205,
                            Nome = "Mecânico de manutenção de motores e equipamentos navais"
                        },
                        new
                        {
                            Id = 1240,
                            Codigo = 911125,
                            Nome = "Mecânico de manutenção de redutores"
                        },
                        new
                        {
                            Id = 1241,
                            Codigo = 914110,
                            Nome = "Mecânico de manutenção de sistema hidráulico de aeronaves (serviços de pista e hangar)"
                        },
                        new
                        {
                            Id = 1242,
                            Codigo = 914420,
                            Nome = "Mecânico de manutenção de tratores"
                        },
                        new
                        {
                            Id = 1243,
                            Codigo = 911130,
                            Nome = "Mecânico de manutenção de turbinas (exceto de aeronaves)"
                        },
                        new
                        {
                            Id = 1244,
                            Codigo = 911135,
                            Nome = "Mecânico de manutenção de turbocompressores"
                        },
                        new
                        {
                            Id = 1245,
                            Codigo = 914305,
                            Nome = "Mecânico de manutenção de veículos ferroviários"
                        },
                        new
                        {
                            Id = 1246,
                            Codigo = 911205,
                            Nome = "Mecânico de manutenção e instalação de aparelhos de climatização e  refrigeração"
                        },
                        new
                        {
                            Id = 1247,
                            Codigo = 725705,
                            Nome = "Mecânico de refrigeração"
                        },
                        new
                        {
                            Id = 1248,
                            Codigo = 914425,
                            Nome = "Mecânico de veículos automotores a diesel (exceto tratores)"
                        },
                        new
                        {
                            Id = 1249,
                            Codigo = 341115,
                            Nome = "Mecânico de vôo"
                        },
                        new
                        {
                            Id = 1250,
                            Codigo = 725405,
                            Nome = "Mecânico montador de motores de aeronaves"
                        },
                        new
                        {
                            Id = 1251,
                            Codigo = 725410,
                            Nome = "Mecânico montador de motores de embarcações"
                        },
                        new
                        {
                            Id = 1252,
                            Codigo = 725415,
                            Nome = "Mecânico montador de motores de explosão e diesel"
                        },
                        new
                        {
                            Id = 1253,
                            Codigo = 725420,
                            Nome = "Mecânico montador de turboalimentadores"
                        },
                        new
                        {
                            Id = 1254,
                            Codigo = 351435,
                            Nome = "Mediador extrajudicial"
                        },
                        new
                        {
                            Id = 1255,
                            Codigo = 225105,
                            Nome = "Médico acupunturista"
                        },
                        new
                        {
                            Id = 1256,
                            Codigo = 225110,
                            Nome = "Médico alergista e imunologista"
                        },
                        new
                        {
                            Id = 1257,
                            Codigo = 225148,
                            Nome = "Médico anatomopatologista"
                        },
                        new
                        {
                            Id = 1258,
                            Codigo = 225151,
                            Nome = "Médico anestesiologista"
                        },
                        new
                        {
                            Id = 1259,
                            Codigo = 225115,
                            Nome = "Médico angiologista"
                        },
                        new
                        {
                            Id = 1260,
                            Codigo = 225154,
                            Nome = "Médico antroposófico"
                        },
                        new
                        {
                            Id = 1261,
                            Codigo = 225290,
                            Nome = "Médico cancerologista cirurgíco"
                        },
                        new
                        {
                            Id = 1262,
                            Codigo = 225122,
                            Nome = "Médico cancerologista pediátrico"
                        },
                        new
                        {
                            Id = 1263,
                            Codigo = 225120,
                            Nome = "Médico cardiologista"
                        },
                        new
                        {
                            Id = 1264,
                            Codigo = 225210,
                            Nome = "Médico cirurgião cardiovascular"
                        },
                        new
                        {
                            Id = 1265,
                            Codigo = 225295,
                            Nome = "Médico cirurgião da mão"
                        },
                        new
                        {
                            Id = 1266,
                            Codigo = 225215,
                            Nome = "Médico cirurgião de cabeça e pescoço"
                        },
                        new
                        {
                            Id = 1267,
                            Codigo = 225220,
                            Nome = "Médico cirurgião do aparelho digestivo"
                        },
                        new
                        {
                            Id = 1268,
                            Codigo = 225225,
                            Nome = "Médico cirurgião geral"
                        },
                        new
                        {
                            Id = 1269,
                            Codigo = 225230,
                            Nome = "Médico cirurgião pediátrico"
                        },
                        new
                        {
                            Id = 1270,
                            Codigo = 225235,
                            Nome = "Médico cirurgião plástico"
                        },
                        new
                        {
                            Id = 1271,
                            Codigo = 225240,
                            Nome = "Médico cirurgião torácico"
                        },
                        new
                        {
                            Id = 1272,
                            Codigo = 225305,
                            Nome = "Médico citopatologista"
                        },
                        new
                        {
                            Id = 1273,
                            Codigo = 225125,
                            Nome = "Médico clínico"
                        },
                        new
                        {
                            Id = 1274,
                            Codigo = 225280,
                            Nome = "Médico coloproctologista"
                        },
                        new
                        {
                            Id = 1275,
                            Codigo = 225142,
                            Nome = "Médico da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 1276,
                            Codigo = 225130,
                            Nome = "Médico de família e comunidade"
                        },
                        new
                        {
                            Id = 1277,
                            Codigo = 225135,
                            Nome = "Médico dermatologista"
                        },
                        new
                        {
                            Id = 1278,
                            Codigo = 225140,
                            Nome = "Médico do trabalho"
                        },
                        new
                        {
                            Id = 1279,
                            Codigo = 225203,
                            Nome = "Médico em cirurgia vascular"
                        },
                        new
                        {
                            Id = 1280,
                            Codigo = 225310,
                            Nome = "Médico em endoscopia"
                        },
                        new
                        {
                            Id = 1281,
                            Codigo = 225145,
                            Nome = "Médico em medicina de tráfego"
                        },
                        new
                        {
                            Id = 1282,
                            Codigo = 225150,
                            Nome = "Médico em medicina intensiva"
                        },
                        new
                        {
                            Id = 1283,
                            Codigo = 225315,
                            Nome = "Médico em medicina nuclear"
                        },
                        new
                        {
                            Id = 1284,
                            Codigo = 225320,
                            Nome = "Médico em radiologia e diagnóstico por imagem"
                        },
                        new
                        {
                            Id = 1285,
                            Codigo = 225155,
                            Nome = "Médico endocrinologista e metabologista"
                        },
                        new
                        {
                            Id = 1286,
                            Codigo = 225160,
                            Nome = "Médico fisiatra"
                        },
                        new
                        {
                            Id = 1287,
                            Codigo = 225165,
                            Nome = "Médico gastroenterologista"
                        },
                        new
                        {
                            Id = 1288,
                            Codigo = 225170,
                            Nome = "Médico generalista"
                        },
                        new
                        {
                            Id = 1289,
                            Codigo = 225175,
                            Nome = "Médico geneticista"
                        },
                        new
                        {
                            Id = 1290,
                            Codigo = 225180,
                            Nome = "Médico geriatra"
                        },
                        new
                        {
                            Id = 1291,
                            Codigo = 225250,
                            Nome = "Médico ginecologista e obstetra"
                        },
                        new
                        {
                            Id = 1292,
                            Codigo = 225185,
                            Nome = "Médico hematologista"
                        },
                        new
                        {
                            Id = 1293,
                            Codigo = 225340,
                            Nome = "Médico hemoterapeuta"
                        },
                        new
                        {
                            Id = 1294,
                            Codigo = 225345,
                            Nome = "Médico hiperbarista"
                        },
                        new
                        {
                            Id = 1295,
                            Codigo = 225195,
                            Nome = "Médico homeopata"
                        },
                        new
                        {
                            Id = 1296,
                            Codigo = 225103,
                            Nome = "Médico infectologista"
                        },
                        new
                        {
                            Id = 1297,
                            Codigo = 225106,
                            Nome = "Médico legista"
                        },
                        new
                        {
                            Id = 1298,
                            Codigo = 225255,
                            Nome = "Médico mastologista"
                        },
                        new
                        {
                            Id = 1299,
                            Codigo = 225109,
                            Nome = "Médico nefrologista"
                        },
                        new
                        {
                            Id = 1300,
                            Codigo = 225260,
                            Nome = "Médico neurocirurgião"
                        },
                        new
                        {
                            Id = 1301,
                            Codigo = 225350,
                            Nome = "Médico neurofisiologista clínico"
                        },
                        new
                        {
                            Id = 1302,
                            Codigo = 225112,
                            Nome = "Médico neurologista"
                        },
                        new
                        {
                            Id = 1303,
                            Codigo = 225118,
                            Nome = "Médico nutrologista"
                        },
                        new
                        {
                            Id = 1304,
                            Codigo = 225265,
                            Nome = "Médico oftalmologista"
                        },
                        new
                        {
                            Id = 1305,
                            Codigo = 225121,
                            Nome = "Médico oncologista clínico"
                        },
                        new
                        {
                            Id = 1306,
                            Codigo = 225270,
                            Nome = "Médico ortopedista e traumatologista"
                        },
                        new
                        {
                            Id = 1307,
                            Codigo = 225275,
                            Nome = "Médico otorrinolaringologista"
                        },
                        new
                        {
                            Id = 1308,
                            Codigo = 225325,
                            Nome = "Médico patologista"
                        },
                        new
                        {
                            Id = 1309,
                            Codigo = 225335,
                            Nome = "Médico patologista clínico / medicina laboratorial"
                        },
                        new
                        {
                            Id = 1310,
                            Codigo = 225124,
                            Nome = "Médico pediatra"
                        },
                        new
                        {
                            Id = 1311,
                            Codigo = 225127,
                            Nome = "Médico pneumologista"
                        },
                        new
                        {
                            Id = 1312,
                            Codigo = 225133,
                            Nome = "Médico psiquiatra"
                        },
                        new
                        {
                            Id = 1313,
                            Codigo = 225355,
                            Nome = "Médico radiologista intervencionista"
                        },
                        new
                        {
                            Id = 1314,
                            Codigo = 225330,
                            Nome = "Médico radioterapeuta"
                        },
                        new
                        {
                            Id = 1315,
                            Codigo = 225136,
                            Nome = "Médico reumatologista"
                        },
                        new
                        {
                            Id = 1316,
                            Codigo = 225139,
                            Nome = "Médico sanitarista"
                        },
                        new
                        {
                            Id = 1317,
                            Codigo = 225285,
                            Nome = "Médico urologista"
                        },
                        new
                        {
                            Id = 1318,
                            Codigo = 223305,
                            Nome = "Médico veterinário"
                        },
                        new
                        {
                            Id = 1319,
                            Codigo = 113015,
                            Nome = "Membro de liderança quilombola"
                        },
                        new
                        {
                            Id = 1320,
                            Codigo = 111225,
                            Nome = "Membro superior do poder executivo"
                        },
                        new
                        {
                            Id = 1321,
                            Codigo = 781705,
                            Nome = "Mergulhador profissional (raso e profundo)"
                        },
                        new
                        {
                            Id = 1322,
                            Codigo = 720105,
                            Nome = "Mestre (afiador de ferramentas)"
                        },
                        new
                        {
                            Id = 1323,
                            Codigo = 710205,
                            Nome = "Mestre (construção civil)"
                        },
                        new
                        {
                            Id = 1324,
                            Codigo = 720205,
                            Nome = "Mestre (construção naval)"
                        },
                        new
                        {
                            Id = 1325,
                            Codigo = 720210,
                            Nome = "Mestre (indústria de automotores e material de transportes)"
                        },
                        new
                        {
                            Id = 1326,
                            Codigo = 810205,
                            Nome = "Mestre (indústria de borracha e plástico)"
                        },
                        new
                        {
                            Id = 1327,
                            Codigo = 830105,
                            Nome = "Mestre (indústria de celulose, papel e papelão)"
                        },
                        new
                        {
                            Id = 1328,
                            Codigo = 770105,
                            Nome = "Mestre (indústria de madeira e mobiliário)"
                        },
                        new
                        {
                            Id = 1329,
                            Codigo = 720215,
                            Nome = "Mestre (indústria de máquinas e outros equipamentos mecânicos)"
                        },
                        new
                        {
                            Id = 1330,
                            Codigo = 810105,
                            Nome = "Mestre (indústria petroquímica e carboquímica)"
                        },
                        new
                        {
                            Id = 1331,
                            Codigo = 760125,
                            Nome = "Mestre (indústria têxtil e de confecções)"
                        },
                        new
                        {
                            Id = 1332,
                            Codigo = 770110,
                            Nome = "Mestre carpinteiro"
                        },
                        new
                        {
                            Id = 1333,
                            Codigo = 820110,
                            Nome = "Mestre de aciaria"
                        },
                        new
                        {
                            Id = 1334,
                            Codigo = 820115,
                            Nome = "Mestre de alto-forno"
                        },
                        new
                        {
                            Id = 1335,
                            Codigo = 341210,
                            Nome = "Mestre de cabotagem"
                        },
                        new
                        {
                            Id = 1336,
                            Codigo = 720110,
                            Nome = "Mestre de caldeiraria"
                        },
                        new
                        {
                            Id = 1337,
                            Codigo = 376330,
                            Nome = "Mestre de cerimonias"
                        },
                        new
                        {
                            Id = 1338,
                            Codigo = 720220,
                            Nome = "Mestre de construção de fornos"
                        },
                        new
                        {
                            Id = 1339,
                            Codigo = 720115,
                            Nome = "Mestre de ferramentaria"
                        },
                        new
                        {
                            Id = 1340,
                            Codigo = 720120,
                            Nome = "Mestre de forjaria"
                        },
                        new
                        {
                            Id = 1341,
                            Codigo = 820120,
                            Nome = "Mestre de forno elétrico"
                        },
                        new
                        {
                            Id = 1342,
                            Codigo = 720125,
                            Nome = "Mestre de fundição"
                        },
                        new
                        {
                            Id = 1343,
                            Codigo = 720130,
                            Nome = "Mestre de galvanoplastia"
                        },
                        new
                        {
                            Id = 1344,
                            Codigo = 820125,
                            Nome = "Mestre de laminação"
                        },
                        new
                        {
                            Id = 1345,
                            Codigo = 710210,
                            Nome = "Mestre de linhas (ferrovias)"
                        },
                        new
                        {
                            Id = 1346,
                            Codigo = 720135,
                            Nome = "Mestre de pintura (tratamento de superfícies)"
                        },
                        new
                        {
                            Id = 1347,
                            Codigo = 810305,
                            Nome = "Mestre de produção farmacêutica"
                        },
                        new
                        {
                            Id = 1348,
                            Codigo = 810110,
                            Nome = "Mestre de produção química"
                        },
                        new
                        {
                            Id = 1349,
                            Codigo = 820105,
                            Nome = "Mestre de siderurgia"
                        },
                        new
                        {
                            Id = 1350,
                            Codigo = 720140,
                            Nome = "Mestre de soldagem"
                        },
                        new
                        {
                            Id = 1351,
                            Codigo = 720145,
                            Nome = "Mestre de trefilação de metais"
                        },
                        new
                        {
                            Id = 1352,
                            Codigo = 720150,
                            Nome = "Mestre de usinagem"
                        },
                        new
                        {
                            Id = 1353,
                            Codigo = 341215,
                            Nome = "Mestre fluvial"
                        },
                        new
                        {
                            Id = 1354,
                            Codigo = 720155,
                            Nome = "Mestre serralheiro"
                        },
                        new
                        {
                            Id = 1355,
                            Codigo = 723225,
                            Nome = "Metalizador (banho quente)"
                        },
                        new
                        {
                            Id = 1356,
                            Codigo = 723220,
                            Nome = "Metalizador a pistola"
                        },
                        new
                        {
                            Id = 1357,
                            Codigo = 213315,
                            Nome = "Meteorologista"
                        },
                        new
                        {
                            Id = 1358,
                            Codigo = 352305,
                            Nome = "Metrologista"
                        },
                        new
                        {
                            Id = 1359,
                            Codigo = 374140,
                            Nome = "Microfonista"
                        },
                        new
                        {
                            Id = 1360,
                            Codigo = 711130,
                            Nome = "Mineiro"
                        },
                        new
                        {
                            Id = 1361,
                            Codigo = 613415,
                            Nome = "Minhocultor"
                        },
                        new
                        {
                            Id = 1362,
                            Codigo = 263105,
                            Nome = "Ministro de culto religioso"
                        },
                        new
                        {
                            Id = 1363,
                            Codigo = 111215,
                            Nome = "Ministro de estado"
                        },
                        new
                        {
                            Id = 1364,
                            Codigo = 111320,
                            Nome = "Ministro do  superior tribunal do trabalho"
                        },
                        new
                        {
                            Id = 1365,
                            Codigo = 111315,
                            Nome = "Ministro do  superior tribunal militar"
                        },
                        new
                        {
                            Id = 1366,
                            Codigo = 111310,
                            Nome = "Ministro do superior tribunal de justiça"
                        },
                        new
                        {
                            Id = 1367,
                            Codigo = 111305,
                            Nome = "Ministro do supremo tribunal federal"
                        },
                        new
                        {
                            Id = 1368,
                            Codigo = 263110,
                            Nome = "Missionário"
                        },
                        new
                        {
                            Id = 1369,
                            Codigo = 841605,
                            Nome = "Misturador de café"
                        },
                        new
                        {
                            Id = 1370,
                            Codigo = 841630,
                            Nome = "Misturador de chá ou mate"
                        },
                        new
                        {
                            Id = 1371,
                            Codigo = 782715,
                            Nome = "Moço de convés (marítimo e fluviário)"
                        },
                        new
                        {
                            Id = 1372,
                            Codigo = 782720,
                            Nome = "Moço de máquinas (marítimo e fluviário)"
                        },
                        new
                        {
                            Id = 1373,
                            Codigo = 771110,
                            Nome = "Modelador de madeira"
                        },
                        new
                        {
                            Id = 1374,
                            Codigo = 721115,
                            Nome = "Modelador de metais (fundição)"
                        },
                        new
                        {
                            Id = 1375,
                            Codigo = 318815,
                            Nome = "Modelista de calçados"
                        },
                        new
                        {
                            Id = 1376,
                            Codigo = 318810,
                            Nome = "Modelista de roupas"
                        },
                        new
                        {
                            Id = 1377,
                            Codigo = 376405,
                            Nome = "Modelo artístico"
                        },
                        new
                        {
                            Id = 1378,
                            Codigo = 376410,
                            Nome = "Modelo de modas"
                        },
                        new
                        {
                            Id = 1379,
                            Codigo = 376415,
                            Nome = "Modelo publicitário"
                        },
                        new
                        {
                            Id = 1380,
                            Codigo = 841615,
                            Nome = "Moedor de café"
                        },
                        new
                        {
                            Id = 1381,
                            Codigo = 841205,
                            Nome = "Moedor de sal"
                        },
                        new
                        {
                            Id = 1382,
                            Codigo = 752110,
                            Nome = "Moldador (vidros)"
                        },
                        new
                        {
                            Id = 1383,
                            Codigo = 823230,
                            Nome = "Moldador de abrasivos na fabricação de cerâmica, vidro e porcelana"
                        },
                        new
                        {
                            Id = 1384,
                            Codigo = 811750,
                            Nome = "Moldador de borracha por compressão"
                        },
                        new
                        {
                            Id = 1385,
                            Codigo = 715310,
                            Nome = "Moldador de corpos de prova em usinas de concreto"
                        },
                        new
                        {
                            Id = 1386,
                            Codigo = 811760,
                            Nome = "Moldador de plástico por compressão"
                        },
                        new
                        {
                            Id = 1387,
                            Codigo = 811770,
                            Nome = "Moldador de plástico por injeção"
                        },
                        new
                        {
                            Id = 1388,
                            Codigo = 722315,
                            Nome = "Moldador, a  mão"
                        },
                        new
                        {
                            Id = 1389,
                            Codigo = 722320,
                            Nome = "Moldador, a  máquina"
                        },
                        new
                        {
                            Id = 1390,
                            Codigo = 811105,
                            Nome = "Moleiro (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1391,
                            Codigo = 841105,
                            Nome = "Moleiro de cereais (exceto arroz)"
                        },
                        new
                        {
                            Id = 1392,
                            Codigo = 841110,
                            Nome = "Moleiro de especiarias"
                        },
                        new
                        {
                            Id = 1393,
                            Codigo = 712105,
                            Nome = "Moleiro de minérios"
                        },
                        new
                        {
                            Id = 1394,
                            Codigo = 515315,
                            Nome = "Monitor de dependente químico"
                        },
                        new
                        {
                            Id = 1395,
                            Codigo = 515330,
                            Nome = "Monitor de ressocialização prisional"
                        },
                        new
                        {
                            Id = 1396,
                            Codigo = 951320,
                            Nome = "Monitor de sistemas eletrônicos de segurança externo"
                        },
                        new
                        {
                            Id = 1397,
                            Codigo = 951315,
                            Nome = "Monitor de sistemas eletrônicos de segurança interno"
                        },
                        new
                        {
                            Id = 1398,
                            Codigo = 422335,
                            Nome = "Monitor de teleatendimento"
                        },
                        new
                        {
                            Id = 1399,
                            Codigo = 334115,
                            Nome = "Monitor de transporte escolar"
                        },
                        new
                        {
                            Id = 1400,
                            Codigo = 768615,
                            Nome = "Monotipista"
                        },
                        new
                        {
                            Id = 1401,
                            Codigo = 715545,
                            Nome = "Montador de andaimes (edificações)"
                        },
                        new
                        {
                            Id = 1402,
                            Codigo = 765315,
                            Nome = "Montador de artefatos de couro (exceto roupas e calçados)"
                        },
                        new
                        {
                            Id = 1403,
                            Codigo = 919315,
                            Nome = "Montador de bicicletas"
                        },
                        new
                        {
                            Id = 1404,
                            Codigo = 764210,
                            Nome = "Montador de calçados"
                        },
                        new
                        {
                            Id = 1405,
                            Codigo = 725305,
                            Nome = "Montador de equipamento de levantamento"
                        },
                        new
                        {
                            Id = 1406,
                            Codigo = 731135,
                            Nome = "Montador de equipamentos elétricos"
                        },
                        new
                        {
                            Id = 1407,
                            Codigo = 731120,
                            Nome = "Montador de equipamentos elétricos (aparelhos eletrodomésticos)"
                        },
                        new
                        {
                            Id = 1408,
                            Codigo = 731125,
                            Nome = "Montador de equipamentos elétricos (centrais elétricas)"
                        },
                        new
                        {
                            Id = 1409,
                            Codigo = 731155,
                            Nome = "Montador de equipamentos elétricos (elevadores e equipamentos similares)"
                        },
                        new
                        {
                            Id = 1410,
                            Codigo = 731115,
                            Nome = "Montador de equipamentos elétricos (instrumentos de medição)"
                        },
                        new
                        {
                            Id = 1411,
                            Codigo = 731130,
                            Nome = "Montador de equipamentos elétricos (motores e dínamos)"
                        },
                        new
                        {
                            Id = 1412,
                            Codigo = 731160,
                            Nome = "Montador de equipamentos elétricos (transformadores)"
                        },
                        new
                        {
                            Id = 1413,
                            Codigo = 731150,
                            Nome = "Montador de equipamentos eletrônicos"
                        },
                        new
                        {
                            Id = 1414,
                            Codigo = 731105,
                            Nome = "Montador de equipamentos eletrônicos (aparelhos médicos)"
                        },
                        new
                        {
                            Id = 1415,
                            Codigo = 731110,
                            Nome = "Montador de equipamentos eletrônicos (computadores e equipamentos auxiliares)"
                        },
                        new
                        {
                            Id = 1416,
                            Codigo = 731205,
                            Nome = "Montador de equipamentos eletrônicos (estação de rádio, tv e equipamentos de radar)"
                        },
                        new
                        {
                            Id = 1417,
                            Codigo = 731140,
                            Nome = "Montador de equipamentos eletrônicos (instalações de sinalização)"
                        },
                        new
                        {
                            Id = 1418,
                            Codigo = 731145,
                            Nome = "Montador de equipamentos eletrônicos (máquinas industriais)"
                        },
                        new
                        {
                            Id = 1419,
                            Codigo = 725605,
                            Nome = "Montador de estruturas de aeronaves"
                        },
                        new
                        {
                            Id = 1420,
                            Codigo = 724205,
                            Nome = "Montador de estruturas metálicas"
                        },
                        new
                        {
                            Id = 1421,
                            Codigo = 724210,
                            Nome = "Montador de estruturas metálicas de embarcações"
                        },
                        new
                        {
                            Id = 1422,
                            Codigo = 374420,
                            Nome = "Montador de filmes"
                        },
                        new
                        {
                            Id = 1423,
                            Codigo = 766125,
                            Nome = "Montador de fotolito (analógico e digital)"
                        },
                        new
                        {
                            Id = 1424,
                            Codigo = 741110,
                            Nome = "Montador de instrumentos de óptica"
                        },
                        new
                        {
                            Id = 1425,
                            Codigo = 741115,
                            Nome = "Montador de instrumentos de precisão"
                        },
                        new
                        {
                            Id = 1426,
                            Codigo = 725205,
                            Nome = "Montador de máquinas"
                        },
                        new
                        {
                            Id = 1427,
                            Codigo = 725310,
                            Nome = "Montador de máquinas agrícolas"
                        },
                        new
                        {
                            Id = 1428,
                            Codigo = 725315,
                            Nome = "Montador de máquinas de minas e pedreiras"
                        },
                        new
                        {
                            Id = 1429,
                            Codigo = 725320,
                            Nome = "Montador de máquinas de terraplenagem"
                        },
                        new
                        {
                            Id = 1430,
                            Codigo = 725210,
                            Nome = "Montador de máquinas gráficas"
                        },
                        new
                        {
                            Id = 1431,
                            Codigo = 725215,
                            Nome = "Montador de máquinas operatrizes para madeira"
                        },
                        new
                        {
                            Id = 1432,
                            Codigo = 725220,
                            Nome = "Montador de máquinas têxteis"
                        },
                        new
                        {
                            Id = 1433,
                            Codigo = 725105,
                            Nome = "Montador de máquinas, motores e acessórios (montagem em série)"
                        },
                        new
                        {
                            Id = 1434,
                            Codigo = 725225,
                            Nome = "Montador de máquinas-ferramentas (usinagem de metais)"
                        },
                        new
                        {
                            Id = 1435,
                            Codigo = 774105,
                            Nome = "Montador de móveis e artefatos de madeira"
                        },
                        new
                        {
                            Id = 1436,
                            Codigo = 725610,
                            Nome = "Montador de sistemas de combustível de aeronaves"
                        },
                        new
                        {
                            Id = 1437,
                            Codigo = 725505,
                            Nome = "Montador de veículos (linha de montagem)"
                        },
                        new
                        {
                            Id = 1438,
                            Codigo = 991310,
                            Nome = "Montador de veículos (reparação)"
                        },
                        new
                        {
                            Id = 1439,
                            Codigo = 513110,
                            Nome = "Mordomo de hotelaria"
                        },
                        new
                        {
                            Id = 1440,
                            Codigo = 513105,
                            Nome = "Mordomo de residência"
                        },
                        new
                        {
                            Id = 1441,
                            Codigo = 716530,
                            Nome = "Mosaísta"
                        },
                        new
                        {
                            Id = 1442,
                            Codigo = 519110,
                            Nome = "Motofretista"
                        },
                        new
                        {
                            Id = 1443,
                            Codigo = 782510,
                            Nome = "Motorista de caminhão (rotas regionais e internacionais)"
                        },
                        new
                        {
                            Id = 1444,
                            Codigo = 782305,
                            Nome = "Motorista de carro de passeio"
                        },
                        new
                        {
                            Id = 1445,
                            Codigo = 782310,
                            Nome = "Motorista de furgão ou veículo similar"
                        },
                        new
                        {
                            Id = 1446,
                            Codigo = 782405,
                            Nome = "Motorista de ônibus rodoviário"
                        },
                        new
                        {
                            Id = 1447,
                            Codigo = 782410,
                            Nome = "Motorista de ônibus urbano"
                        },
                        new
                        {
                            Id = 1448,
                            Codigo = 782315,
                            Nome = "Motorista de táxi"
                        },
                        new
                        {
                            Id = 1449,
                            Codigo = 782415,
                            Nome = "Motorista de trólebus"
                        },
                        new
                        {
                            Id = 1450,
                            Codigo = 782515,
                            Nome = "Motorista operacional de guincho"
                        },
                        new
                        {
                            Id = 1451,
                            Codigo = 782620,
                            Nome = "Motorneiro"
                        },
                        new
                        {
                            Id = 1452,
                            Codigo = 519115,
                            Nome = "Mototaxista"
                        },
                        new
                        {
                            Id = 1453,
                            Codigo = 261310,
                            Nome = "Museólogo"
                        },
                        new
                        {
                            Id = 1454,
                            Codigo = 262610,
                            Nome = "Músico arranjador"
                        },
                        new
                        {
                            Id = 1455,
                            Codigo = 262705,
                            Nome = "Músico intérprete cantor"
                        },
                        new
                        {
                            Id = 1456,
                            Codigo = 262710,
                            Nome = "Músico intérprete instrumentista"
                        },
                        new
                        {
                            Id = 1457,
                            Codigo = 262615,
                            Nome = "Músico regente"
                        },
                        new
                        {
                            Id = 1458,
                            Codigo = 262620,
                            Nome = "Musicólogo"
                        },
                        new
                        {
                            Id = 1459,
                            Codigo = 226305,
                            Nome = "Musicoterapeuta"
                        },
                        new
                        {
                            Id = 1460,
                            Codigo = 226320,
                            Nome = "Naturólogo"
                        },
                        new
                        {
                            Id = 1461,
                            Codigo = 251545,
                            Nome = "Neuropsicólogo"
                        },
                        new
                        {
                            Id = 1462,
                            Codigo = 239440,
                            Nome = "Neuropsicopedagogo clinico"
                        },
                        new
                        {
                            Id = 1463,
                            Codigo = 239445,
                            Nome = "Neuropsicopedagogo institucional"
                        },
                        new
                        {
                            Id = 1464,
                            Codigo = 723110,
                            Nome = "Normalizador de metais e de compósitos"
                        },
                        new
                        {
                            Id = 1465,
                            Codigo = 516710,
                            Nome = "Numerólogo"
                        },
                        new
                        {
                            Id = 1466,
                            Codigo = 223710,
                            Nome = "Nutricionista"
                        },
                        new
                        {
                            Id = 1467,
                            Codigo = 213440,
                            Nome = "Oceanógrafo"
                        },
                        new
                        {
                            Id = 1468,
                            Codigo = 10205,
                            Nome = "Oficial da aeronáutica"
                        },
                        new
                        {
                            Id = 1469,
                            Codigo = 10215,
                            Nome = "Oficial da marinha"
                        },
                        new
                        {
                            Id = 1470,
                            Codigo = 242905,
                            Nome = "Oficial de inteligência"
                        },
                        new
                        {
                            Id = 1471,
                            Codigo = 351425,
                            Nome = "Oficial de justiça"
                        },
                        new
                        {
                            Id = 1472,
                            Codigo = 215140,
                            Nome = "Oficial de quarto de navegação da marinha mercante"
                        },
                        new
                        {
                            Id = 1473,
                            Codigo = 241305,
                            Nome = "Oficial de registro de contratos marítimos"
                        },
                        new
                        {
                            Id = 1474,
                            Codigo = 10210,
                            Nome = "Oficial do exército"
                        },
                        new
                        {
                            Id = 1475,
                            Codigo = 241310,
                            Nome = "Oficial do registro civil de pessoas jurídicas"
                        },
                        new
                        {
                            Id = 1476,
                            Codigo = 241315,
                            Nome = "Oficial do registro civil de pessoas naturais"
                        },
                        new
                        {
                            Id = 1477,
                            Codigo = 241320,
                            Nome = "Oficial do registro de distribuições"
                        },
                        new
                        {
                            Id = 1478,
                            Codigo = 241325,
                            Nome = "Oficial do registro de imóveis"
                        },
                        new
                        {
                            Id = 1479,
                            Codigo = 241330,
                            Nome = "Oficial do registro de títulos e documentos"
                        },
                        new
                        {
                            Id = 1480,
                            Codigo = 10105,
                            Nome = "Oficial general da aeronáutica"
                        },
                        new
                        {
                            Id = 1481,
                            Codigo = 10115,
                            Nome = "Oficial general da marinha"
                        },
                        new
                        {
                            Id = 1482,
                            Codigo = 10110,
                            Nome = "Oficial general do exército"
                        },
                        new
                        {
                            Id = 1483,
                            Codigo = 215205,
                            Nome = "Oficial superior de máquinas da marinha mercante"
                        },
                        new
                        {
                            Id = 1484,
                            Codigo = 242910,
                            Nome = "Oficial técnico de inteligência"
                        },
                        new
                        {
                            Id = 1485,
                            Codigo = 828105,
                            Nome = "Oleiro (fabricação de telhas)"
                        },
                        new
                        {
                            Id = 1486,
                            Codigo = 828110,
                            Nome = "Oleiro (fabricação de tijolos)"
                        },
                        new
                        {
                            Id = 1487,
                            Codigo = 862160,
                            Nome = "Operador de abastecimento de combustível de aeronave"
                        },
                        new
                        {
                            Id = 1488,
                            Codigo = 761205,
                            Nome = "Operador de abertura (fiação)"
                        },
                        new
                        {
                            Id = 1489,
                            Codigo = 766315,
                            Nome = "Operador de acabamento (indústria gráfica)"
                        },
                        new
                        {
                            Id = 1490,
                            Codigo = 722215,
                            Nome = "Operador de acabamento de peças fundidas"
                        },
                        new
                        {
                            Id = 1491,
                            Codigo = 821230,
                            Nome = "Operador de aciaria (basculamento de convertedor)"
                        },
                        new
                        {
                            Id = 1492,
                            Codigo = 821235,
                            Nome = "Operador de aciaria (dessulfuração de gusa)"
                        },
                        new
                        {
                            Id = 1493,
                            Codigo = 821240,
                            Nome = "Operador de aciaria (recebimento de gusa)"
                        },
                        new
                        {
                            Id = 1494,
                            Codigo = 781310,
                            Nome = "Operador de aeronaves não tripuladas"
                        },
                        new
                        {
                            Id = 1495,
                            Codigo = 811415,
                            Nome = "Operador de alambique de funcionamento contínuo (produtos químicos, exceto petróleo)"
                        },
                        new
                        {
                            Id = 1496,
                            Codigo = 712110,
                            Nome = "Operador de aparelho de flotação"
                        },
                        new
                        {
                            Id = 1497,
                            Codigo = 712115,
                            Nome = "Operador de aparelho de precipitação (minas de ouro ou prata)"
                        },
                        new
                        {
                            Id = 1498,
                            Codigo = 811420,
                            Nome = "Operador de aparelho de reação e conversão (produtos químicos, exceto petróleo)"
                        },
                        new
                        {
                            Id = 1499,
                            Codigo = 821245,
                            Nome = "Operador de área de corrida"
                        },
                        new
                        {
                            Id = 1500,
                            Codigo = 342535,
                            Nome = "Operador de atendimento aeroviário"
                        },
                        new
                        {
                            Id = 1501,
                            Codigo = 823135,
                            Nome = "Operador de atomizador"
                        },
                        new
                        {
                            Id = 1502,
                            Codigo = 823235,
                            Nome = "Operador de banho metálico de vidro por flutuação"
                        },
                        new
                        {
                            Id = 1503,
                            Codigo = 715105,
                            Nome = "Operador de bate-estacas"
                        },
                        new
                        {
                            Id = 1504,
                            Codigo = 862115,
                            Nome = "Operador de bateria de gás de hulha"
                        },
                        new
                        {
                            Id = 1505,
                            Codigo = 715405,
                            Nome = "Operador de betoneira"
                        },
                        new
                        {
                            Id = 1506,
                            Codigo = 761210,
                            Nome = "Operador de binadeira"
                        },
                        new
                        {
                            Id = 1507,
                            Codigo = 761215,
                            Nome = "Operador de bobinadeira"
                        },
                        new
                        {
                            Id = 1508,
                            Codigo = 821420,
                            Nome = "Operador de bobinadeira de tiras a quente, no acabamento de chapas e metais"
                        },
                        new
                        {
                            Id = 1509,
                            Codigo = 715410,
                            Nome = "Operador de bomba de concreto"
                        },
                        new
                        {
                            Id = 1510,
                            Codigo = 831110,
                            Nome = "Operador de branqueador de pasta para fabricação de papel"
                        },
                        new
                        {
                            Id = 1511,
                            Codigo = 811115,
                            Nome = "Operador de britadeira (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1512,
                            Codigo = 811605,
                            Nome = "Operador de britador de coque"
                        },
                        new
                        {
                            Id = 1513,
                            Codigo = 712120,
                            Nome = "Operador de britador de mandíbulas"
                        },
                        new
                        {
                            Id = 1514,
                            Codigo = 821425,
                            Nome = "Operador de cabine de laminação (fio-máquina)"
                        },
                        new
                        {
                            Id = 1515,
                            Codigo = 421125,
                            Nome = "Operador de caixa"
                        },
                        new
                        {
                            Id = 1516,
                            Codigo = 813110,
                            Nome = "Operador de calandra (química, petroquímica e afins)"
                        },
                        new
                        {
                            Id = 1517,
                            Codigo = 761415,
                            Nome = "Operador de calandras (tecidos)"
                        },
                        new
                        {
                            Id = 1518,
                            Codigo = 811205,
                            Nome = "Operador de calcinação (tratamento químico e afins)"
                        },
                        new
                        {
                            Id = 1519,
                            Codigo = 862120,
                            Nome = "Operador de caldeira"
                        },
                        new
                        {
                            Id = 1520,
                            Codigo = 841456,
                            Nome = "Operador de câmaras frias"
                        },
                        new
                        {
                            Id = 1521,
                            Codigo = 372115,
                            Nome = "Operador de câmera de televisão"
                        },
                        new
                        {
                            Id = 1522,
                            Codigo = 711205,
                            Nome = "Operador de caminhão (minas e pedreiras)"
                        },
                        new
                        {
                            Id = 1523,
                            Codigo = 761220,
                            Nome = "Operador de cardas"
                        },
                        new
                        {
                            Id = 1524,
                            Codigo = 711210,
                            Nome = "Operador de carregadeira"
                        },
                        new
                        {
                            Id = 1525,
                            Codigo = 811610,
                            Nome = "Operador de carro de apagamento e coque"
                        },
                        new
                        {
                            Id = 1526,
                            Codigo = 992215,
                            Nome = "Operador de ceifadeira na conservação de vias permanentes"
                        },
                        new
                        {
                            Id = 1527,
                            Codigo = 715415,
                            Nome = "Operador de central de concreto"
                        },
                        new
                        {
                            Id = 1528,
                            Codigo = 861105,
                            Nome = "Operador de central hidrelétrica"
                        },
                        new
                        {
                            Id = 1529,
                            Codigo = 861115,
                            Nome = "Operador de central termoelétrica"
                        },
                        new
                        {
                            Id = 1530,
                            Codigo = 811305,
                            Nome = "Operador de centrifugadora (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1531,
                            Codigo = 821105,
                            Nome = "Operador de centro de controle"
                        },
                        new
                        {
                            Id = 1532,
                            Codigo = 342410,
                            Nome = "Operador de centro de controle (ferrovia e metrô)"
                        },
                        new
                        {
                            Id = 1533,
                            Codigo = 721405,
                            Nome = "Operador de centro de usinagem com comando numérico"
                        },
                        new
                        {
                            Id = 1534,
                            Codigo = 773505,
                            Nome = "Operador de centro de usinagem de madeira (cnc)"
                        },
                        new
                        {
                            Id = 1535,
                            Codigo = 761420,
                            Nome = "Operador de chamuscadeira de tecidos"
                        },
                        new
                        {
                            Id = 1536,
                            Codigo = 413230,
                            Nome = "Operador de cobrança bancária"
                        },
                        new
                        {
                            Id = 1537,
                            Codigo = 642005,
                            Nome = "Operador de colhedor florestal"
                        },
                        new
                        {
                            Id = 1538,
                            Codigo = 641005,
                            Nome = "Operador de colheitadeira"
                        },
                        new
                        {
                            Id = 1539,
                            Codigo = 715110,
                            Nome = "Operador de compactadora de solos"
                        },
                        new
                        {
                            Id = 1540,
                            Codigo = 862130,
                            Nome = "Operador de compressor de ar"
                        },
                        new
                        {
                            Id = 1541,
                            Codigo = 317205,
                            Nome = "Operador de computador"
                        },
                        new
                        {
                            Id = 1542,
                            Codigo = 811120,
                            Nome = "Operador de concentração"
                        },
                        new
                        {
                            Id = 1543,
                            Codigo = 761225,
                            Nome = "Operador de conicaleira"
                        },
                        new
                        {
                            Id = 1544,
                            Codigo = 373135,
                            Nome = "Operador de controle mestre"
                        },
                        new
                        {
                            Id = 1545,
                            Codigo = 832110,
                            Nome = "Operador de cortadeira de papel"
                        },
                        new
                        {
                            Id = 1546,
                            Codigo = 841305,
                            Nome = "Operador de cristalização na refinação de açucar"
                        },
                        new
                        {
                            Id = 1547,
                            Codigo = 773305,
                            Nome = "Operador de desempenadeira na usinagem convencional de madeira"
                        },
                        new
                        {
                            Id = 1548,
                            Codigo = 821250,
                            Nome = "Operador de desgaseificação"
                        },
                        new
                        {
                            Id = 1549,
                            Codigo = 811615,
                            Nome = "Operador de destilação e subprodutos de coque"
                        },
                        new
                        {
                            Id = 1550,
                            Codigo = 831115,
                            Nome = "Operador de digestor de pasta para fabricação de papel"
                        },
                        new
                        {
                            Id = 1551,
                            Codigo = 782210,
                            Nome = "Operador de docagem"
                        },
                        new
                        {
                            Id = 1552,
                            Codigo = 782105,
                            Nome = "Operador de draga"
                        },
                        new
                        {
                            Id = 1553,
                            Codigo = 782220,
                            Nome = "Operador de empilhadeira"
                        },
                        new
                        {
                            Id = 1554,
                            Codigo = 811620,
                            Nome = "Operador de enfornamento e desenfornamento de coque"
                        },
                        new
                        {
                            Id = 1555,
                            Codigo = 761348,
                            Nome = "Operador de engomadeira de urdume"
                        },
                        new
                        {
                            Id = 1556,
                            Codigo = 773310,
                            Nome = "Operador de entalhadeira (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1557,
                            Codigo = 811425,
                            Nome = "Operador de equipamento de destilação de álcool"
                        },
                        new
                        {
                            Id = 1558,
                            Codigo = 723305,
                            Nome = "Operador de equipamento de secagem de pintura"
                        },
                        new
                        {
                            Id = 1559,
                            Codigo = 723115,
                            Nome = "Operador de equipamento para resfriamento"
                        },
                        new
                        {
                            Id = 1560,
                            Codigo = 722325,
                            Nome = "Operador de equipamentos de preparação de areia"
                        },
                        new
                        {
                            Id = 1561,
                            Codigo = 841310,
                            Nome = "Operador de equipamentos de refinação de açúcar (processo contínuo)"
                        },
                        new
                        {
                            Id = 1562,
                            Codigo = 715115,
                            Nome = "Operador de escavadeira"
                        },
                        new
                        {
                            Id = 1563,
                            Codigo = 821430,
                            Nome = "Operador de escória e sucata"
                        },
                        new
                        {
                            Id = 1564,
                            Codigo = 752420,
                            Nome = "Operador de esmaltadeira"
                        },
                        new
                        {
                            Id = 1565,
                            Codigo = 752425,
                            Nome = "Operador de espelhamento"
                        },
                        new
                        {
                            Id = 1566,
                            Codigo = 712125,
                            Nome = "Operador de espessador"
                        },
                        new
                        {
                            Id = 1567,
                            Codigo = 761351,
                            Nome = "Operador de espuladeira"
                        },
                        new
                        {
                            Id = 1568,
                            Codigo = 862140,
                            Nome = "Operador de estação de bombeamento"
                        },
                        new
                        {
                            Id = 1569,
                            Codigo = 862205,
                            Nome = "Operador de estação de captação, tratamento e distribuição de água"
                        },
                        new
                        {
                            Id = 1570,
                            Codigo = 862305,
                            Nome = "Operador de estação de tratamento de água e efluentes"
                        },
                        new
                        {
                            Id = 1571,
                            Codigo = 811430,
                            Nome = "Operador de evaporador na destilação"
                        },
                        new
                        {
                            Id = 1572,
                            Codigo = 811625,
                            Nome = "Operador de exaustor (coqueria)"
                        },
                        new
                        {
                            Id = 1573,
                            Codigo = 811310,
                            Nome = "Operador de exploração de petróleo"
                        },
                        new
                        {
                            Id = 1574,
                            Codigo = 841620,
                            Nome = "Operador de extração de café solúvel"
                        },
                        new
                        {
                            Id = 1575,
                            Codigo = 813115,
                            Nome = "Operador de extrusora (química, petroquímica e afins)"
                        },
                        new
                        {
                            Id = 1576,
                            Codigo = 761230,
                            Nome = "Operador de filatório"
                        },
                        new
                        {
                            Id = 1577,
                            Codigo = 811315,
                            Nome = "Operador de filtro de secagem (mineração)"
                        },
                        new
                        {
                            Id = 1578,
                            Codigo = 811320,
                            Nome = "Operador de filtro de tambor rotativo (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1579,
                            Codigo = 811325,
                            Nome = "Operador de filtro-esteira (mineração)"
                        },
                        new
                        {
                            Id = 1580,
                            Codigo = 811330,
                            Nome = "Operador de filtro-prensa (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1581,
                            Codigo = 811335,
                            Nome = "Operador de filtros de parafina (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1582,
                            Codigo = 841805,
                            Nome = "Operador de forno (fabricação de pães, biscoitos e similares)"
                        },
                        new
                        {
                            Id = 1583,
                            Codigo = 516605,
                            Nome = "Operador de forno (serviços funerários)"
                        },
                        new
                        {
                            Id = 1584,
                            Codigo = 862310,
                            Nome = "Operador de forno de incineração no tratamento de água, efluentes e resíduos industriais"
                        },
                        new
                        {
                            Id = 1585,
                            Codigo = 723120,
                            Nome = "Operador de forno de tratamento térmico de metais"
                        },
                        new
                        {
                            Id = 1586,
                            Codigo = 773315,
                            Nome = "Operador de fresadora (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1587,
                            Codigo = 721410,
                            Nome = "Operador de fresadora com comando numérico"
                        },
                        new
                        {
                            Id = 1588,
                            Codigo = 766320,
                            Nome = "Operador de guilhotina (corte de papel)"
                        },
                        new
                        {
                            Id = 1589,
                            Codigo = 782110,
                            Nome = "Operador de guindaste (fixo)"
                        },
                        new
                        {
                            Id = 1590,
                            Codigo = 782115,
                            Nome = "Operador de guindaste móvel"
                        },
                        new
                        {
                            Id = 1591,
                            Codigo = 761425,
                            Nome = "Operador de impermeabilizador de tecidos"
                        },
                        new
                        {
                            Id = 1592,
                            Codigo = 623315,
                            Nome = "Operador de incubadora"
                        },
                        new
                        {
                            Id = 1593,
                            Codigo = 391215,
                            Nome = "Operador de inspeção de qualidade"
                        },
                        new
                        {
                            Id = 1594,
                            Codigo = 862515,
                            Nome = "Operador de instalação de ar-condicionado"
                        },
                        new
                        {
                            Id = 1595,
                            Codigo = 862405,
                            Nome = "Operador de instalação de extração, processamento, envasamento e distribuição de gases"
                        },
                        new
                        {
                            Id = 1596,
                            Codigo = 862505,
                            Nome = "Operador de instalação de refrigeração"
                        },
                        new
                        {
                            Id = 1597,
                            Codigo = 821435,
                            Nome = "Operador de jato abrasivo"
                        },
                        new
                        {
                            Id = 1598,
                            Codigo = 712130,
                            Nome = "Operador de jig (minas)"
                        },
                        new
                        {
                            Id = 1599,
                            Codigo = 724605,
                            Nome = "Operador de laços de cabos de aço"
                        },
                        new
                        {
                            Id = 1600,
                            Codigo = 761235,
                            Nome = "Operador de laminadeira e reunideira"
                        },
                        new
                        {
                            Id = 1601,
                            Codigo = 821305,
                            Nome = "Operador de laminador"
                        },
                        new
                        {
                            Id = 1602,
                            Codigo = 821310,
                            Nome = "Operador de laminador de barras a frio"
                        },
                        new
                        {
                            Id = 1603,
                            Codigo = 821315,
                            Nome = "Operador de laminador de barras a quente"
                        },
                        new
                        {
                            Id = 1604,
                            Codigo = 821320,
                            Nome = "Operador de laminador de metais não-ferrosos"
                        },
                        new
                        {
                            Id = 1605,
                            Codigo = 821325,
                            Nome = "Operador de laminador de tubos"
                        },
                        new
                        {
                            Id = 1606,
                            Codigo = 831120,
                            Nome = "Operador de lavagem e depuração de pasta para fabricação de papel"
                        },
                        new
                        {
                            Id = 1607,
                            Codigo = 731175,
                            Nome = "Operador de linha de montagem (aparelhos elétricos)"
                        },
                        new
                        {
                            Id = 1608,
                            Codigo = 731180,
                            Nome = "Operador de linha de montagem (aparelhos eletrônicos)"
                        },
                        new
                        {
                            Id = 1609,
                            Codigo = 773320,
                            Nome = "Operador de lixadeira (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1610,
                            Codigo = 761240,
                            Nome = "Operador de maçaroqueira"
                        },
                        new
                        {
                            Id = 1611,
                            Codigo = 721415,
                            Nome = "Operador de mandriladora com comando numérico"
                        },
                        new
                        {
                            Id = 1612,
                            Codigo = 842125,
                            Nome = "Operador de máquina (fabricação de cigarros)"
                        },
                        new
                        {
                            Id = 1613,
                            Codigo = 773405,
                            Nome = "Operador de máquina bordatriz"
                        },
                        new
                        {
                            Id = 1614,
                            Codigo = 415130,
                            Nome = "Operador de máquina copiadora (exceto operador de gráfica rápida)"
                        },
                        new
                        {
                            Id = 1615,
                            Codigo = 711215,
                            Nome = "Operador de máquina cortadora (minas e pedreiras)"
                        },
                        new
                        {
                            Id = 1616,
                            Codigo = 715120,
                            Nome = "Operador de máquina de abrir valas"
                        },
                        new
                        {
                            Id = 1617,
                            Codigo = 724505,
                            Nome = "Operador de máquina de cilindrar chapas"
                        },
                        new
                        {
                            Id = 1618,
                            Codigo = 761354,
                            Nome = "Operador de máquina de cordoalha"
                        },
                        new
                        {
                            Id = 1619,
                            Codigo = 833120,
                            Nome = "Operador de máquina de cortar e dobrar papelão"
                        },
                        new
                        {
                            Id = 1620,
                            Codigo = 773410,
                            Nome = "Operador de máquina de cortina d´água (produção de móveis)"
                        },
                        new
                        {
                            Id = 1621,
                            Codigo = 763320,
                            Nome = "Operador de máquina de costura de acabamento"
                        },
                        new
                        {
                            Id = 1622,
                            Codigo = 724510,
                            Nome = "Operador de máquina de dobrar chapas"
                        },
                        new
                        {
                            Id = 1623,
                            Codigo = 721205,
                            Nome = "Operador de máquina de eletroerosão"
                        },
                        new
                        {
                            Id = 1624,
                            Codigo = 784120,
                            Nome = "Operador de máquina de envasar líquidos"
                        },
                        new
                        {
                            Id = 1625,
                            Codigo = 784115,
                            Nome = "Operador de máquina de etiquetar"
                        },
                        new
                        {
                            Id = 1626,
                            Codigo = 711220,
                            Nome = "Operador de máquina de extração contínua (minas de carvão)"
                        },
                        new
                        {
                            Id = 1627,
                            Codigo = 811815,
                            Nome = "Operador de máquina de fabricação de cosméticos"
                        },
                        new
                        {
                            Id = 1628,
                            Codigo = 811820,
                            Nome = "Operador de máquina de fabricação de produtos de higiene e limpeza (sabão, sabonete,fraldas e outros)"
                        },
                        new
                        {
                            Id = 1629,
                            Codigo = 842210,
                            Nome = "Operador de máquina de fabricar charutos e cigarrilhas"
                        },
                        new
                        {
                            Id = 1630,
                            Codigo = 832115,
                            Nome = "Operador de máquina de fabricar papel  (fase úmida)"
                        },
                        new
                        {
                            Id = 1631,
                            Codigo = 832120,
                            Nome = "Operador de máquina de fabricar papel (fase seca)"
                        },
                        new
                        {
                            Id = 1632,
                            Codigo = 832125,
                            Nome = "Operador de máquina de fabricar papel e papelão"
                        },
                        new
                        {
                            Id = 1633,
                            Codigo = 722220,
                            Nome = "Operador de máquina de fundição"
                        },
                        new
                        {
                            Id = 1634,
                            Codigo = 722225,
                            Nome = "Operador de máquina de fundir sob pressão"
                        },
                        new
                        {
                            Id = 1635,
                            Codigo = 761430,
                            Nome = "Operador de máquina de lavar fios e tecidos"
                        },
                        new
                        {
                            Id = 1636,
                            Codigo = 722330,
                            Nome = "Operador de máquina de moldar automatizada"
                        },
                        new
                        {
                            Id = 1637,
                            Codigo = 842135,
                            Nome = "Operador de máquina de preparação de matéria prima para produção de cigarros"
                        },
                        new
                        {
                            Id = 1638,
                            Codigo = 811805,
                            Nome = "Operador de máquina de produtos farmacêuticos"
                        },
                        new
                        {
                            Id = 1639,
                            Codigo = 831125,
                            Nome = "Operador de máquina de secar celulose"
                        },
                        new
                        {
                            Id = 1640,
                            Codigo = 821110,
                            Nome = "Operador de máquina de sinterizar"
                        },
                        new
                        {
                            Id = 1641,
                            Codigo = 823240,
                            Nome = "Operador de máquina de soprar vidro"
                        },
                        new
                        {
                            Id = 1642,
                            Codigo = 773415,
                            Nome = "Operador de máquina de usinagem de madeira (produção em série)"
                        },
                        new
                        {
                            Id = 1643,
                            Codigo = 773325,
                            Nome = "Operador de máquina de usinagem madeira, em geral"
                        },
                        new
                        {
                            Id = 1644,
                            Codigo = 721420,
                            Nome = "Operador de máquina eletroerosão, à fio, com comando numérico"
                        },
                        new
                        {
                            Id = 1645,
                            Codigo = 823245,
                            Nome = "Operador de máquina extrusora de varetas e tubos de vidro"
                        },
                        new
                        {
                            Id = 1646,
                            Codigo = 773205,
                            Nome = "Operador de máquina intercaladora de placas (compensados)"
                        },
                        new
                        {
                            Id = 1647,
                            Codigo = 811110,
                            Nome = "Operador de máquina misturadeira (tratamentos químicos e afins)"
                        },
                        new
                        {
                            Id = 1648,
                            Codigo = 711225,
                            Nome = "Operador de máquina perfuradora (minas e pedreiras)"
                        },
                        new
                        {
                            Id = 1649,
                            Codigo = 711230,
                            Nome = "Operador de máquina perfuratriz"
                        },
                        new
                        {
                            Id = 1650,
                            Codigo = 723230,
                            Nome = "Operador de máquina recobridora de arame"
                        },
                        new
                        {
                            Id = 1651,
                            Codigo = 782120,
                            Nome = "Operador de máquina rodoferroviária"
                        },
                        new
                        {
                            Id = 1652,
                            Codigo = 641010,
                            Nome = "Operador de máquinas de beneficiamento de produtos agrícolas"
                        },
                        new
                        {
                            Id = 1653,
                            Codigo = 715125,
                            Nome = "Operador de máquinas de construção civil e mineração"
                        },
                        new
                        {
                            Id = 1654,
                            Codigo = 841815,
                            Nome = "Operador de máquinas de fabricação de chocolates e achocolatados"
                        },
                        new
                        {
                            Id = 1655,
                            Codigo = 841810,
                            Nome = "Operador de máquinas de fabricação de doces, salgados e massas alimentícias"
                        },
                        new
                        {
                            Id = 1656,
                            Codigo = 773510,
                            Nome = "Operador de máquinas de usinar madeira (cnc)"
                        },
                        new
                        {
                            Id = 1657,
                            Codigo = 762325,
                            Nome = "Operador de máquinas do acabamento de couros e peles"
                        },
                        new
                        {
                            Id = 1658,
                            Codigo = 991115,
                            Nome = "Operador de máquinas especiais em conservação de via permanente (trilhos)"
                        },
                        new
                        {
                            Id = 1659,
                            Codigo = 862150,
                            Nome = "Operador de máquinas fixas, em geral"
                        },
                        new
                        {
                            Id = 1660,
                            Codigo = 642010,
                            Nome = "Operador de máquinas florestais estáticas"
                        },
                        new
                        {
                            Id = 1661,
                            Codigo = 721210,
                            Nome = "Operador de máquinas operatrizes"
                        },
                        new
                        {
                            Id = 1662,
                            Codigo = 721215,
                            Nome = "Operador de máquinas-ferramenta convencionais"
                        },
                        new
                        {
                            Id = 1663,
                            Codigo = 717010,
                            Nome = "Operador de martelete"
                        },
                        new
                        {
                            Id = 1664,
                            Codigo = 412115,
                            Nome = "Operador de mensagens de telecomunicações (correios)"
                        },
                        new
                        {
                            Id = 1665,
                            Codigo = 373105,
                            Nome = "Operador de mídia audiovisual"
                        },
                        new
                        {
                            Id = 1666,
                            Codigo = 841315,
                            Nome = "Operador de moenda na fabricação de açúcar"
                        },
                        new
                        {
                            Id = 1667,
                            Codigo = 773330,
                            Nome = "Operador de molduradora (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1668,
                            Codigo = 782125,
                            Nome = "Operador de monta-cargas (construção civil)"
                        },
                        new
                        {
                            Id = 1669,
                            Codigo = 821330,
                            Nome = "Operador de montagem de cilindros e mancais"
                        },
                        new
                        {
                            Id = 1670,
                            Codigo = 715130,
                            Nome = "Operador de motoniveladora"
                        },
                        new
                        {
                            Id = 1671,
                            Codigo = 711235,
                            Nome = "Operador de motoniveladora (extração de minerais sólidos)"
                        },
                        new
                        {
                            Id = 1672,
                            Codigo = 632120,
                            Nome = "Operador de motosserra"
                        },
                        new
                        {
                            Id = 1673,
                            Codigo = 253225,
                            Nome = "Operador de negócios"
                        },
                        new
                        {
                            Id = 1674,
                            Codigo = 761245,
                            Nome = "Operador de open-end"
                        },
                        new
                        {
                            Id = 1675,
                            Codigo = 715135,
                            Nome = "Operador de pá carregadeira"
                        },
                        new
                        {
                            Id = 1676,
                            Codigo = 811630,
                            Nome = "Operador de painel de controle"
                        },
                        new
                        {
                            Id = 1677,
                            Codigo = 811505,
                            Nome = "Operador de painel de controle (refinação de petróleo)"
                        },
                        new
                        {
                            Id = 1678,
                            Codigo = 761250,
                            Nome = "Operador de passador (fiação)"
                        },
                        new
                        {
                            Id = 1679,
                            Codigo = 715140,
                            Nome = "Operador de pavimentadora (asfalto, concreto e materiais similares)"
                        },
                        new
                        {
                            Id = 1680,
                            Codigo = 712135,
                            Nome = "Operador de peneiras hidráulicas"
                        },
                        new
                        {
                            Id = 1681,
                            Codigo = 761255,
                            Nome = "Operador de penteadeira"
                        },
                        new
                        {
                            Id = 1682,
                            Codigo = 773335,
                            Nome = "Operador de plaina desengrossadeira"
                        },
                        new
                        {
                            Id = 1683,
                            Codigo = 782130,
                            Nome = "Operador de ponte rolante"
                        },
                        new
                        {
                            Id = 1684,
                            Codigo = 782135,
                            Nome = "Operador de pórtico rolante"
                        },
                        new
                        {
                            Id = 1685,
                            Codigo = 773420,
                            Nome = "Operador de prensa de alta freqüência na usinagem de madeira"
                        },
                        new
                        {
                            Id = 1686,
                            Codigo = 833125,
                            Nome = "Operador de prensa de embutir papelão"
                        },
                        new
                        {
                            Id = 1687,
                            Codigo = 784125,
                            Nome = "Operador de prensa de enfardamento"
                        },
                        new
                        {
                            Id = 1688,
                            Codigo = 519215,
                            Nome = "Operador de prensa de material reciclável"
                        },
                        new
                        {
                            Id = 1689,
                            Codigo = 823250,
                            Nome = "Operador de prensa de moldar vidro"
                        },
                        new
                        {
                            Id = 1690,
                            Codigo = 841460,
                            Nome = "Operador de preparação de grãos vegetais (óleos e gorduras)"
                        },
                        new
                        {
                            Id = 1691,
                            Codigo = 811635,
                            Nome = "Operador de preservação e controle térmico"
                        },
                        new
                        {
                            Id = 1692,
                            Codigo = 813120,
                            Nome = "Operador de processo (química, petroquímica e afins)"
                        },
                        new
                        {
                            Id = 1693,
                            Codigo = 841115,
                            Nome = "Operador de processo de moagem"
                        },
                        new
                        {
                            Id = 1694,
                            Codigo = 766150,
                            Nome = "Operador de processo de tratamento de imagem"
                        },
                        new
                        {
                            Id = 1695,
                            Codigo = 811005,
                            Nome = "Operador de processos químicos e petroquímicos"
                        },
                        new
                        {
                            Id = 1696,
                            Codigo = 813125,
                            Nome = "Operador de produção (química, petroquímica e afins)"
                        },
                        new
                        {
                            Id = 1697,
                            Codigo = 374305,
                            Nome = "Operador de projetor cinematográfico"
                        },
                        new
                        {
                            Id = 1698,
                            Codigo = 861110,
                            Nome = "Operador de quadro de distribuição de energia elétrica"
                        },
                        new
                        {
                            Id = 1699,
                            Codigo = 422220,
                            Nome = "Operador de rádio-chamada"
                        },
                        new
                        {
                            Id = 1700,
                            Codigo = 761435,
                            Nome = "Operador de rameuse"
                        },
                        new
                        {
                            Id = 1701,
                            Codigo = 811640,
                            Nome = "Operador de reator de coque de petróleo"
                        },
                        new
                        {
                            Id = 1702,
                            Codigo = 861120,
                            Nome = "Operador de reator nuclear"
                        },
                        new
                        {
                            Id = 1703,
                            Codigo = 832135,
                            Nome = "Operador de rebobinadeira na fabricação de papel e papelão"
                        },
                        new
                        {
                            Id = 1704,
                            Codigo = 372205,
                            Nome = "Operador de rede de teleprocessamento"
                        },
                        new
                        {
                            Id = 1705,
                            Codigo = 811645,
                            Nome = "Operador de refrigeração (coqueria)"
                        },
                        new
                        {
                            Id = 1706,
                            Codigo = 862510,
                            Nome = "Operador de refrigeração com amônia"
                        },
                        new
                        {
                            Id = 1707,
                            Codigo = 721425,
                            Nome = "Operador de retificadora com comando numérico"
                        },
                        new
                        {
                            Id = 1708,
                            Codigo = 761260,
                            Nome = "Operador de retorcedeira"
                        },
                        new
                        {
                            Id = 1709,
                            Codigo = 811010,
                            Nome = "Operador de sala de controle de instalações químicas, petroquímicas e afins"
                        },
                        new
                        {
                            Id = 1710,
                            Codigo = 711410,
                            Nome = "Operador de salina (sal marinho)"
                        },
                        new
                        {
                            Id = 1711,
                            Codigo = 711240,
                            Nome = "Operador de schutthecar"
                        },
                        new
                        {
                            Id = 1712,
                            Codigo = 773340,
                            Nome = "Operador de serras (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1713,
                            Codigo = 773110,
                            Nome = "Operador de serras no desdobramento de madeira"
                        },
                        new
                        {
                            Id = 1714,
                            Codigo = 811650,
                            Nome = "Operador de sistema de reversão (coqueria)"
                        },
                        new
                        {
                            Id = 1715,
                            Codigo = 766145,
                            Nome = "Operador de sistemas de prova (analógico e digital)"
                        },
                        new
                        {
                            Id = 1716,
                            Codigo = 711305,
                            Nome = "Operador de sonda de percussão"
                        },
                        new
                        {
                            Id = 1717,
                            Codigo = 711310,
                            Nome = "Operador de sonda rotativa"
                        },
                        new
                        {
                            Id = 1718,
                            Codigo = 861205,
                            Nome = "Operador de subestação"
                        },
                        new
                        {
                            Id = 1719,
                            Codigo = 782140,
                            Nome = "Operador de talha elétrica"
                        },
                        new
                        {
                            Id = 1720,
                            Codigo = 782630,
                            Nome = "Operador de teleférico (passageiros)"
                        },
                        new
                        {
                            Id = 1721,
                            Codigo = 422305,
                            Nome = "Operador de telemarketing ativo"
                        },
                        new
                        {
                            Id = 1722,
                            Codigo = 422310,
                            Nome = "Operador de telemarketing ativo e receptivo"
                        },
                        new
                        {
                            Id = 1723,
                            Codigo = 422315,
                            Nome = "Operador de telemarketing receptivo"
                        },
                        new
                        {
                            Id = 1724,
                            Codigo = 422320,
                            Nome = "Operador de telemarketing técnico"
                        },
                        new
                        {
                            Id = 1725,
                            Codigo = 821440,
                            Nome = "Operador de tesoura mecânica e máquina de corte, no acabamento de chapas e metais"
                        },
                        new
                        {
                            Id = 1726,
                            Codigo = 725510,
                            Nome = "Operador de time de montagem"
                        },
                        new
                        {
                            Id = 1727,
                            Codigo = 773345,
                            Nome = "Operador de torno automático (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1728,
                            Codigo = 721430,
                            Nome = "Operador de torno com comando numérico"
                        },
                        new
                        {
                            Id = 1729,
                            Codigo = 811510,
                            Nome = "Operador de transferência e estocagem - na refinação do petróleo"
                        },
                        new
                        {
                            Id = 1730,
                            Codigo = 342110,
                            Nome = "Operador de transporte multimodal"
                        },
                        new
                        {
                            Id = 1731,
                            Codigo = 841320,
                            Nome = "Operador de tratamento de calda na refinação de açúcar"
                        },
                        new
                        {
                            Id = 1732,
                            Codigo = 811215,
                            Nome = "Operador de tratamento químico de materiais radioativos"
                        },
                        new
                        {
                            Id = 1733,
                            Codigo = 711245,
                            Nome = "Operador de trator (minas e pedreiras)"
                        },
                        new
                        {
                            Id = 1734,
                            Codigo = 715145,
                            Nome = "Operador de trator de lâmina"
                        },
                        new
                        {
                            Id = 1735,
                            Codigo = 642015,
                            Nome = "Operador de trator florestal"
                        },
                        new
                        {
                            Id = 1736,
                            Codigo = 782605,
                            Nome = "Operador de trem de metrô"
                        },
                        new
                        {
                            Id = 1737,
                            Codigo = 415210,
                            Nome = "Operador de triagem e transbordo"
                        },
                        new
                        {
                            Id = 1738,
                            Codigo = 773350,
                            Nome = "Operador de tupia (usinagem de madeira)"
                        },
                        new
                        {
                            Id = 1739,
                            Codigo = 354810,
                            Nome = "Operador de turismo"
                        },
                        new
                        {
                            Id = 1740,
                            Codigo = 761357,
                            Nome = "Operador de urdideira"
                        },
                        new
                        {
                            Id = 1741,
                            Codigo = 721220,
                            Nome = "Operador de usinagem convencional por abrasão"
                        },
                        new
                        {
                            Id = 1742,
                            Codigo = 862155,
                            Nome = "Operador de utilidade (produção e distribuição de vapor, gás, óleo, combustível, energia, oxigênio)"
                        },
                        new
                        {
                            Id = 1743,
                            Codigo = 722230,
                            Nome = "Operador de vazamento (lingotamento)"
                        },
                        new
                        {
                            Id = 1744,
                            Codigo = 781305,
                            Nome = "Operador de veículos subaquáticos controlados remotamente"
                        },
                        new
                        {
                            Id = 1745,
                            Codigo = 723235,
                            Nome = "Operador de zincagem (processo eletrolítico)"
                        },
                        new
                        {
                            Id = 1746,
                            Codigo = 954125,
                            Nome = "Operador eletromecânico"
                        },
                        new
                        {
                            Id = 1747,
                            Codigo = 761005,
                            Nome = "Operador polivalente da indústria têxtil"
                        },
                        new
                        {
                            Id = 1748,
                            Codigo = 374310,
                            Nome = "Operador-mantenedor de projetor cinematográfico"
                        },
                        new
                        {
                            Id = 1749,
                            Codigo = 354820,
                            Nome = "Organizador de evento"
                        },
                        new
                        {
                            Id = 1750,
                            Codigo = 239410,
                            Nome = "Orientador educacional"
                        },
                        new
                        {
                            Id = 1751,
                            Codigo = 223910,
                            Nome = "Ortoptista"
                        },
                        new
                        {
                            Id = 1752,
                            Codigo = 226110,
                            Nome = "Osteopata"
                        },
                        new
                        {
                            Id = 1753,
                            Codigo = 751125,
                            Nome = "Ourives"
                        },
                        new
                        {
                            Id = 1754,
                            Codigo = 142340,
                            Nome = "Ouvidor"
                        },
                        new
                        {
                            Id = 1755,
                            Codigo = 724310,
                            Nome = "Oxicortador a mão e a  máquina"
                        },
                        new
                        {
                            Id = 1756,
                            Codigo = 723240,
                            Nome = "Oxidador"
                        },
                        new
                        {
                            Id = 1757,
                            Codigo = 848305,
                            Nome = "Padeiro"
                        },
                        new
                        {
                            Id = 1758,
                            Codigo = 768620,
                            Nome = "Paginador"
                        },
                        new
                        {
                            Id = 1759,
                            Codigo = 762335,
                            Nome = "Palecionador de couros e peles"
                        },
                        new
                        {
                            Id = 1760,
                            Codigo = 213430,
                            Nome = "Paleontólogo"
                        },
                        new
                        {
                            Id = 1761,
                            Codigo = 376245,
                            Nome = "Palhaço"
                        },
                        new
                        {
                            Id = 1762,
                            Codigo = 351815,
                            Nome = "Papiloscopista policial"
                        },
                        new
                        {
                            Id = 1763,
                            Codigo = 516810,
                            Nome = "Paranormal"
                        },
                        new
                        {
                            Id = 1764,
                            Codigo = 515115,
                            Nome = "Parteira leiga"
                        },
                        new
                        {
                            Id = 1765,
                            Codigo = 763325,
                            Nome = "Passadeira de peças confeccionadas"
                        },
                        new
                        {
                            Id = 1766,
                            Codigo = 516325,
                            Nome = "Passador de roupas em geral"
                        },
                        new
                        {
                            Id = 1767,
                            Codigo = 516415,
                            Nome = "Passador de roupas, à mão"
                        },
                        new
                        {
                            Id = 1768,
                            Codigo = 761360,
                            Nome = "Passamaneiro a  máquina"
                        },
                        new
                        {
                            Id = 1769,
                            Codigo = 848205,
                            Nome = "Pasteurizador"
                        },
                        new
                        {
                            Id = 1770,
                            Codigo = 716515,
                            Nome = "Pastilheiro"
                        },
                        new
                        {
                            Id = 1771,
                            Codigo = 341220,
                            Nome = "Patrão de pesca de alto-mar"
                        },
                        new
                        {
                            Id = 1772,
                            Codigo = 341225,
                            Nome = "Patrão de pesca na navegação interior"
                        },
                        new
                        {
                            Id = 1773,
                            Codigo = 239415,
                            Nome = "Pedagogo"
                        },
                        new
                        {
                            Id = 1774,
                            Codigo = 516140,
                            Nome = "Pedicure"
                        },
                        new
                        {
                            Id = 1775,
                            Codigo = 715210,
                            Nome = "Pedreiro"
                        },
                        new
                        {
                            Id = 1776,
                            Codigo = 715215,
                            Nome = "Pedreiro (chaminés industriais)"
                        },
                        new
                        {
                            Id = 1777,
                            Codigo = 715220,
                            Nome = "Pedreiro (material refratário)"
                        },
                        new
                        {
                            Id = 1778,
                            Codigo = 715225,
                            Nome = "Pedreiro (mineração)"
                        },
                        new
                        {
                            Id = 1779,
                            Codigo = 992220,
                            Nome = "Pedreiro de conservação de vias permanentes (exceto trilhos)"
                        },
                        new
                        {
                            Id = 1780,
                            Codigo = 715230,
                            Nome = "Pedreiro de edificações"
                        },
                        new
                        {
                            Id = 1781,
                            Codigo = 325015,
                            Nome = "Perfumista"
                        },
                        new
                        {
                            Id = 1782,
                            Codigo = 223570,
                            Nome = "Perfusionista"
                        },
                        new
                        {
                            Id = 1783,
                            Codigo = 252215,
                            Nome = "Perito contábil"
                        },
                        new
                        {
                            Id = 1784,
                            Codigo = 204105,
                            Nome = "Perito criminal"
                        },
                        new
                        {
                            Id = 1785,
                            Codigo = 631105,
                            Nome = "Pescador artesanal de água doce"
                        },
                        new
                        {
                            Id = 1786,
                            Codigo = 631015,
                            Nome = "Pescador artesanal de lagostas"
                        },
                        new
                        {
                            Id = 1787,
                            Codigo = 631020,
                            Nome = "Pescador artesanal de peixes e camarões"
                        },
                        new
                        {
                            Id = 1788,
                            Codigo = 631205,
                            Nome = "Pescador industrial"
                        },
                        new
                        {
                            Id = 1789,
                            Codigo = 631210,
                            Nome = "Pescador profissional"
                        },
                        new
                        {
                            Id = 1790,
                            Codigo = 203305,
                            Nome = "Pesquisador de clínica médica"
                        },
                        new
                        {
                            Id = 1791,
                            Codigo = 203205,
                            Nome = "Pesquisador de engenharia civil"
                        },
                        new
                        {
                            Id = 1792,
                            Codigo = 203210,
                            Nome = "Pesquisador de engenharia e tecnologia (outras áreas da engenharia)"
                        },
                        new
                        {
                            Id = 1793,
                            Codigo = 203215,
                            Nome = "Pesquisador de engenharia elétrica e eletrônica"
                        },
                        new
                        {
                            Id = 1794,
                            Codigo = 203220,
                            Nome = "Pesquisador de engenharia mecânica"
                        },
                        new
                        {
                            Id = 1795,
                            Codigo = 203225,
                            Nome = "Pesquisador de engenharia metalúrgica, de minas e de materiais"
                        },
                        new
                        {
                            Id = 1796,
                            Codigo = 203230,
                            Nome = "Pesquisador de engenharia química"
                        },
                        new
                        {
                            Id = 1797,
                            Codigo = 203310,
                            Nome = "Pesquisador de medicina básica"
                        },
                        new
                        {
                            Id = 1798,
                            Codigo = 203005,
                            Nome = "Pesquisador em biologia ambiental"
                        },
                        new
                        {
                            Id = 1799,
                            Codigo = 203010,
                            Nome = "Pesquisador em biologia animal"
                        },
                        new
                        {
                            Id = 1800,
                            Codigo = 203015,
                            Nome = "Pesquisador em biologia de microorganismos e parasitas"
                        },
                        new
                        {
                            Id = 1801,
                            Codigo = 203020,
                            Nome = "Pesquisador em biologia humana"
                        },
                        new
                        {
                            Id = 1802,
                            Codigo = 203025,
                            Nome = "Pesquisador em biologia vegetal"
                        },
                        new
                        {
                            Id = 1803,
                            Codigo = 203405,
                            Nome = "Pesquisador em ciências agronômicas"
                        },
                        new
                        {
                            Id = 1804,
                            Codigo = 203105,
                            Nome = "Pesquisador em ciências da computação e informática"
                        },
                        new
                        {
                            Id = 1805,
                            Codigo = 203515,
                            Nome = "Pesquisador em ciências da educação"
                        },
                        new
                        {
                            Id = 1806,
                            Codigo = 203410,
                            Nome = "Pesquisador em ciências da pesca e aqüicultura"
                        },
                        new
                        {
                            Id = 1807,
                            Codigo = 203110,
                            Nome = "Pesquisador em ciências da terra e meio ambiente"
                        },
                        new
                        {
                            Id = 1808,
                            Codigo = 203415,
                            Nome = "Pesquisador em ciências da zootecnia"
                        },
                        new
                        {
                            Id = 1809,
                            Codigo = 203420,
                            Nome = "Pesquisador em ciências florestais"
                        },
                        new
                        {
                            Id = 1810,
                            Codigo = 203505,
                            Nome = "Pesquisador em ciências sociais e humanas"
                        },
                        new
                        {
                            Id = 1811,
                            Codigo = 203510,
                            Nome = "Pesquisador em economia"
                        },
                        new
                        {
                            Id = 1812,
                            Codigo = 203115,
                            Nome = "Pesquisador em física"
                        },
                        new
                        {
                            Id = 1813,
                            Codigo = 203520,
                            Nome = "Pesquisador em história"
                        },
                        new
                        {
                            Id = 1814,
                            Codigo = 203120,
                            Nome = "Pesquisador em matemática"
                        },
                        new
                        {
                            Id = 1815,
                            Codigo = 203315,
                            Nome = "Pesquisador em medicina veterinária"
                        },
                        new
                        {
                            Id = 1816,
                            Codigo = 201205,
                            Nome = "Pesquisador em metrologia"
                        },
                        new
                        {
                            Id = 1817,
                            Codigo = 203525,
                            Nome = "Pesquisador em psicologia"
                        },
                        new
                        {
                            Id = 1818,
                            Codigo = 203125,
                            Nome = "Pesquisador em química"
                        },
                        new
                        {
                            Id = 1819,
                            Codigo = 203320,
                            Nome = "Pesquisador em saúde coletiva"
                        },
                        new
                        {
                            Id = 1820,
                            Codigo = 213435,
                            Nome = "Petrógrafo"
                        },
                        new
                        {
                            Id = 1821,
                            Codigo = 761366,
                            Nome = "Picotador de cartões jacquard"
                        },
                        new
                        {
                            Id = 1822,
                            Codigo = 341120,
                            Nome = "Piloto agrícola"
                        },
                        new
                        {
                            Id = 1823,
                            Codigo = 341105,
                            Nome = "Piloto comercial (exceto linhas aéreas)"
                        },
                        new
                        {
                            Id = 1824,
                            Codigo = 341110,
                            Nome = "Piloto comercial de helicóptero (exceto linhas aéreas)"
                        },
                        new
                        {
                            Id = 1825,
                            Codigo = 215305,
                            Nome = "Piloto de aeronaves"
                        },
                        new
                        {
                            Id = 1826,
                            Codigo = 377135,
                            Nome = "Piloto de competição automobilística"
                        },
                        new
                        {
                            Id = 1827,
                            Codigo = 215310,
                            Nome = "Piloto de ensaios em vôo"
                        },
                        new
                        {
                            Id = 1828,
                            Codigo = 341230,
                            Nome = "Piloto fluvial"
                        },
                        new
                        {
                            Id = 1829,
                            Codigo = 723310,
                            Nome = "Pintor a pincel e rolo (exceto obras e estruturas metálicas)"
                        },
                        new
                        {
                            Id = 1830,
                            Codigo = 752430,
                            Nome = "Pintor de cerâmica, a  pincel"
                        },
                        new
                        {
                            Id = 1831,
                            Codigo = 723315,
                            Nome = "Pintor de estruturas metálicas"
                        },
                        new
                        {
                            Id = 1832,
                            Codigo = 768625,
                            Nome = "Pintor de letreiros"
                        },
                        new
                        {
                            Id = 1833,
                            Codigo = 716610,
                            Nome = "Pintor de obras"
                        },
                        new
                        {
                            Id = 1834,
                            Codigo = 723320,
                            Nome = "Pintor de veículos (fabricação)"
                        },
                        new
                        {
                            Id = 1835,
                            Codigo = 991315,
                            Nome = "Pintor de veículos (reparação)"
                        },
                        new
                        {
                            Id = 1836,
                            Codigo = 723325,
                            Nome = "Pintor por imersão"
                        },
                        new
                        {
                            Id = 1837,
                            Codigo = 723330,
                            Nome = "Pintor, a  pistola (exceto obras e estruturas metálicas)"
                        },
                        new
                        {
                            Id = 1838,
                            Codigo = 524310,
                            Nome = "Pipoqueiro ambulante"
                        },
                        new
                        {
                            Id = 1839,
                            Codigo = 812105,
                            Nome = "Pirotécnico"
                        },
                        new
                        {
                            Id = 1840,
                            Codigo = 513610,
                            Nome = "Pizzaiolo"
                        },
                        new
                        {
                            Id = 1841,
                            Codigo = 391120,
                            Nome = "Planejista"
                        },
                        new
                        {
                            Id = 1842,
                            Codigo = 711325,
                            Nome = "Plataformista (petróleo)"
                        },
                        new
                        {
                            Id = 1843,
                            Codigo = 717015,
                            Nome = "Poceiro (edificações)"
                        },
                        new
                        {
                            Id = 1844,
                            Codigo = 322110,
                            Nome = "Podólogo"
                        },
                        new
                        {
                            Id = 1845,
                            Codigo = 261525,
                            Nome = "Poeta"
                        },
                        new
                        {
                            Id = 1846,
                            Codigo = 517225,
                            Nome = "Policial legislativo"
                        },
                        new
                        {
                            Id = 1847,
                            Codigo = 517210,
                            Nome = "Policial rodoviário federal"
                        },
                        new
                        {
                            Id = 1848,
                            Codigo = 721325,
                            Nome = "Polidor de metais"
                        },
                        new
                        {
                            Id = 1849,
                            Codigo = 712220,
                            Nome = "Polidor de pedras"
                        },
                        new
                        {
                            Id = 1850,
                            Codigo = 517405,
                            Nome = "Porteiro (hotel)"
                        },
                        new
                        {
                            Id = 1851,
                            Codigo = 517410,
                            Nome = "Porteiro de edifícios"
                        },
                        new
                        {
                            Id = 1852,
                            Codigo = 10305,
                            Nome = "Praça da aeronáutica"
                        },
                        new
                        {
                            Id = 1853,
                            Codigo = 10315,
                            Nome = "Praça da marinha"
                        },
                        new
                        {
                            Id = 1854,
                            Codigo = 10310,
                            Nome = "Praça do exército"
                        },
                        new
                        {
                            Id = 1855,
                            Codigo = 215145,
                            Nome = "Prático de portos da marinha mercante"
                        },
                        new
                        {
                            Id = 1856,
                            Codigo = 111250,
                            Nome = "Prefeito"
                        },
                        new
                        {
                            Id = 1857,
                            Codigo = 762330,
                            Nome = "Prensador de couros e peles"
                        },
                        new
                        {
                            Id = 1858,
                            Codigo = 841464,
                            Nome = "Prensador de frutas (exceto oleaginosas)"
                        },
                        new
                        {
                            Id = 1859,
                            Codigo = 724515,
                            Nome = "Prensista (operador de prensa)"
                        },
                        new
                        {
                            Id = 1860,
                            Codigo = 773210,
                            Nome = "Prensista de aglomerados"
                        },
                        new
                        {
                            Id = 1861,
                            Codigo = 773215,
                            Nome = "Prensista de compensados"
                        },
                        new
                        {
                            Id = 1862,
                            Codigo = 823130,
                            Nome = "Preparador de aditivos"
                        },
                        new
                        {
                            Id = 1863,
                            Codigo = 773220,
                            Nome = "Preparador de aglomerantes"
                        },
                        new
                        {
                            Id = 1864,
                            Codigo = 224115,
                            Nome = "Preparador de atleta"
                        },
                        new
                        {
                            Id = 1865,
                            Codigo = 823120,
                            Nome = "Preparador de barbotina"
                        },
                        new
                        {
                            Id = 1866,
                            Codigo = 764115,
                            Nome = "Preparador de calçados"
                        },
                        new
                        {
                            Id = 1867,
                            Codigo = 762340,
                            Nome = "Preparador de couros curtidos"
                        },
                        new
                        {
                            Id = 1868,
                            Codigo = 823125,
                            Nome = "Preparador de esmaltes (cerâmica)"
                        },
                        new
                        {
                            Id = 1869,
                            Codigo = 724220,
                            Nome = "Preparador de estruturas metálicas"
                        },
                        new
                        {
                            Id = 1870,
                            Codigo = 842205,
                            Nome = "Preparador de fumo na fabricação de charutos"
                        },
                        new
                        {
                            Id = 1871,
                            Codigo = 721225,
                            Nome = "Preparador de máquinas-ferramenta"
                        },
                        new
                        {
                            Id = 1872,
                            Codigo = 823105,
                            Nome = "Preparador de massa (fabricação de abrasivos)"
                        },
                        new
                        {
                            Id = 1873,
                            Codigo = 823110,
                            Nome = "Preparador de massa (fabricação de vidro)"
                        },
                        new
                        {
                            Id = 1874,
                            Codigo = 823115,
                            Nome = "Preparador de massa de argila"
                        },
                        new
                        {
                            Id = 1875,
                            Codigo = 766325,
                            Nome = "Preparador de matrizes de corte e vinco"
                        },
                        new
                        {
                            Id = 1876,
                            Codigo = 842105,
                            Nome = "Preparador de melado e essência de fumo"
                        },
                        new
                        {
                            Id = 1877,
                            Codigo = 722235,
                            Nome = "Preparador de panelas (lingotamento)"
                        },
                        new
                        {
                            Id = 1878,
                            Codigo = 841468,
                            Nome = "Preparador de rações"
                        },
                        new
                        {
                            Id = 1879,
                            Codigo = 764120,
                            Nome = "Preparador de solas e palmilhas"
                        },
                        new
                        {
                            Id = 1880,
                            Codigo = 821445,
                            Nome = "Preparador de sucata e aparas"
                        },
                        new
                        {
                            Id = 1881,
                            Codigo = 311715,
                            Nome = "Preparador de tintas"
                        },
                        new
                        {
                            Id = 1882,
                            Codigo = 311720,
                            Nome = "Preparador de tintas (fábrica de tecidos)"
                        },
                        new
                        {
                            Id = 1883,
                            Codigo = 224120,
                            Nome = "Preparador físico"
                        },
                        new
                        {
                            Id = 1884,
                            Codigo = 111205,
                            Nome = "Presidente da república"
                        },
                        new
                        {
                            Id = 1885,
                            Codigo = 215210,
                            Nome = "Primeiro oficial de máquinas da marinha mercante"
                        },
                        new
                        {
                            Id = 1886,
                            Codigo = 20305,
                            Nome = "Primeiro tenente de polícia militar"
                        },
                        new
                        {
                            Id = 1887,
                            Codigo = 842110,
                            Nome = "Processador de fumo"
                        },
                        new
                        {
                            Id = 1888,
                            Codigo = 241210,
                            Nome = "Procurador autárquico"
                        },
                        new
                        {
                            Id = 1889,
                            Codigo = 242410,
                            Nome = "Procurador da assistência judiciária"
                        },
                        new
                        {
                            Id = 1890,
                            Codigo = 241215,
                            Nome = "Procurador da fazenda nacional"
                        },
                        new
                        {
                            Id = 1891,
                            Codigo = 242205,
                            Nome = "Procurador da república"
                        },
                        new
                        {
                            Id = 1892,
                            Codigo = 242210,
                            Nome = "Procurador de justiça"
                        },
                        new
                        {
                            Id = 1893,
                            Codigo = 242215,
                            Nome = "Procurador de justiça militar"
                        },
                        new
                        {
                            Id = 1894,
                            Codigo = 241220,
                            Nome = "Procurador do estado"
                        },
                        new
                        {
                            Id = 1895,
                            Codigo = 241225,
                            Nome = "Procurador do município"
                        },
                        new
                        {
                            Id = 1896,
                            Codigo = 242220,
                            Nome = "Procurador do trabalho"
                        },
                        new
                        {
                            Id = 1897,
                            Codigo = 241230,
                            Nome = "Procurador federal"
                        },
                        new
                        {
                            Id = 1898,
                            Codigo = 241235,
                            Nome = "Procurador fundacional"
                        },
                        new
                        {
                            Id = 1899,
                            Codigo = 242225,
                            Nome = "Procurador regional da república"
                        },
                        new
                        {
                            Id = 1900,
                            Codigo = 242230,
                            Nome = "Procurador regional do trabalho"
                        },
                        new
                        {
                            Id = 1901,
                            Codigo = 612005,
                            Nome = "Produtor agrícola polivalente"
                        },
                        new
                        {
                            Id = 1902,
                            Codigo = 611005,
                            Nome = "Produtor agropecuário, em geral"
                        },
                        new
                        {
                            Id = 1903,
                            Codigo = 262110,
                            Nome = "Produtor cinematográfico"
                        },
                        new
                        {
                            Id = 1904,
                            Codigo = 262105,
                            Nome = "Produtor cultural"
                        },
                        new
                        {
                            Id = 1905,
                            Codigo = 612705,
                            Nome = "Produtor da cultura de amendoim"
                        },
                        new
                        {
                            Id = 1906,
                            Codigo = 612710,
                            Nome = "Produtor da cultura de canola"
                        },
                        new
                        {
                            Id = 1907,
                            Codigo = 612715,
                            Nome = "Produtor da cultura de coco-da-baia"
                        },
                        new
                        {
                            Id = 1908,
                            Codigo = 612720,
                            Nome = "Produtor da cultura de dendê"
                        },
                        new
                        {
                            Id = 1909,
                            Codigo = 612725,
                            Nome = "Produtor da cultura de girassol"
                        },
                        new
                        {
                            Id = 1910,
                            Codigo = 612730,
                            Nome = "Produtor da cultura de linho"
                        },
                        new
                        {
                            Id = 1911,
                            Codigo = 612735,
                            Nome = "Produtor da cultura de mamona"
                        },
                        new
                        {
                            Id = 1912,
                            Codigo = 612740,
                            Nome = "Produtor da cultura de soja"
                        },
                        new
                        {
                            Id = 1913,
                            Codigo = 612205,
                            Nome = "Produtor de algodão"
                        },
                        new
                        {
                            Id = 1914,
                            Codigo = 612105,
                            Nome = "Produtor de arroz"
                        },
                        new
                        {
                            Id = 1915,
                            Codigo = 612505,
                            Nome = "Produtor de árvores frutíferas"
                        },
                        new
                        {
                            Id = 1916,
                            Codigo = 612610,
                            Nome = "Produtor de cacau"
                        },
                        new
                        {
                            Id = 1917,
                            Codigo = 612110,
                            Nome = "Produtor de cana-de-açúcar"
                        },
                        new
                        {
                            Id = 1918,
                            Codigo = 612115,
                            Nome = "Produtor de cereais de inverno"
                        },
                        new
                        {
                            Id = 1919,
                            Codigo = 612210,
                            Nome = "Produtor de curauá"
                        },
                        new
                        {
                            Id = 1920,
                            Codigo = 612615,
                            Nome = "Produtor de erva-mate"
                        },
                        new
                        {
                            Id = 1921,
                            Codigo = 612805,
                            Nome = "Produtor de especiarias"
                        },
                        new
                        {
                            Id = 1922,
                            Codigo = 612510,
                            Nome = "Produtor de espécies frutíferas rasteiras"
                        },
                        new
                        {
                            Id = 1923,
                            Codigo = 612515,
                            Nome = "Produtor de espécies frutíferas trepadeiras"
                        },
                        new
                        {
                            Id = 1924,
                            Codigo = 612405,
                            Nome = "Produtor de flores de corte"
                        },
                        new
                        {
                            Id = 1925,
                            Codigo = 612410,
                            Nome = "Produtor de flores em vaso"
                        },
                        new
                        {
                            Id = 1926,
                            Codigo = 612415,
                            Nome = "Produtor de forrações"
                        },
                        new
                        {
                            Id = 1927,
                            Codigo = 612620,
                            Nome = "Produtor de fumo"
                        },
                        new
                        {
                            Id = 1928,
                            Codigo = 612120,
                            Nome = "Produtor de gramíneas forrageiras"
                        },
                        new
                        {
                            Id = 1929,
                            Codigo = 612625,
                            Nome = "Produtor de guaraná"
                        },
                        new
                        {
                            Id = 1930,
                            Codigo = 612215,
                            Nome = "Produtor de juta"
                        },
                        new
                        {
                            Id = 1931,
                            Codigo = 612125,
                            Nome = "Produtor de milho e sorgo"
                        },
                        new
                        {
                            Id = 1932,
                            Codigo = 375125,
                            Nome = "Produtor de moda"
                        },
                        new
                        {
                            Id = 1933,
                            Codigo = 612810,
                            Nome = "Produtor de plantas aromáticas e medicinais"
                        },
                        new
                        {
                            Id = 1934,
                            Codigo = 612420,
                            Nome = "Produtor de plantas ornamentais"
                        },
                        new
                        {
                            Id = 1935,
                            Codigo = 262115,
                            Nome = "Produtor de rádio"
                        },
                        new
                        {
                            Id = 1936,
                            Codigo = 612220,
                            Nome = "Produtor de rami"
                        },
                        new
                        {
                            Id = 1937,
                            Codigo = 612225,
                            Nome = "Produtor de sisal"
                        },
                        new
                        {
                            Id = 1938,
                            Codigo = 262120,
                            Nome = "Produtor de teatro"
                        },
                        new
                        {
                            Id = 1939,
                            Codigo = 262125,
                            Nome = "Produtor de televisão"
                        },
                        new
                        {
                            Id = 1940,
                            Codigo = 261130,
                            Nome = "Produtor de texto"
                        },
                        new
                        {
                            Id = 1941,
                            Codigo = 612320,
                            Nome = "Produtor na olericultura de frutos e sementes"
                        },
                        new
                        {
                            Id = 1942,
                            Codigo = 612305,
                            Nome = "Produtor na olericultura de legumes"
                        },
                        new
                        {
                            Id = 1943,
                            Codigo = 612310,
                            Nome = "Produtor na olericultura de raízes, bulbos e tubérculos"
                        },
                        new
                        {
                            Id = 1944,
                            Codigo = 612315,
                            Nome = "Produtor na olericultura de talos, folhas e flores"
                        },
                        new
                        {
                            Id = 1945,
                            Codigo = 631415,
                            Nome = "Proeiro"
                        },
                        new
                        {
                            Id = 1946,
                            Codigo = 231205,
                            Nome = "Professor da  educação de jovens e adultos do ensino fundamental (primeira a quarta série)"
                        },
                        new
                        {
                            Id = 1947,
                            Codigo = 233105,
                            Nome = "Professor da área de meio ambiente"
                        },
                        new
                        {
                            Id = 1948,
                            Codigo = 234810,
                            Nome = "Professor de administração"
                        },
                        new
                        {
                            Id = 1949,
                            Codigo = 239205,
                            Nome = "Professor de alunos com deficiência auditiva e surdos"
                        },
                        new
                        {
                            Id = 1950,
                            Codigo = 239210,
                            Nome = "Professor de alunos com deficiência física"
                        },
                        new
                        {
                            Id = 1951,
                            Codigo = 239215,
                            Nome = "Professor de alunos com deficiência mental"
                        },
                        new
                        {
                            Id = 1952,
                            Codigo = 239220,
                            Nome = "Professor de alunos com deficiência múltipla"
                        },
                        new
                        {
                            Id = 1953,
                            Codigo = 239225,
                            Nome = "Professor de alunos com deficiência visual"
                        },
                        new
                        {
                            Id = 1954,
                            Codigo = 234705,
                            Nome = "Professor de antropologia do ensino superior"
                        },
                        new
                        {
                            Id = 1955,
                            Codigo = 234305,
                            Nome = "Professor de arquitetura"
                        },
                        new
                        {
                            Id = 1956,
                            Codigo = 234710,
                            Nome = "Professor de arquivologia do ensino superior"
                        },
                        new
                        {
                            Id = 1957,
                            Codigo = 234905,
                            Nome = "Professor de artes do espetáculo no ensino superior"
                        },
                        new
                        {
                            Id = 1958,
                            Codigo = 232105,
                            Nome = "Professor de artes no ensino médio"
                        },
                        new
                        {
                            Id = 1959,
                            Codigo = 234910,
                            Nome = "Professor de artes visuais no ensino superior (artes plásticas e multimídia)"
                        },
                        new
                        {
                            Id = 1960,
                            Codigo = 234215,
                            Nome = "Professor de astronomia (ensino superior)"
                        },
                        new
                        {
                            Id = 1961,
                            Codigo = 234715,
                            Nome = "Professor de biblioteconomia do ensino superior"
                        },
                        new
                        {
                            Id = 1962,
                            Codigo = 232110,
                            Nome = "Professor de biologia no ensino médio"
                        },
                        new
                        {
                            Id = 1963,
                            Codigo = 234720,
                            Nome = "Professor de ciência política do ensino superior"
                        },
                        new
                        {
                            Id = 1964,
                            Codigo = 234405,
                            Nome = "Professor de ciências biológicas do ensino superior"
                        },
                        new
                        {
                            Id = 1965,
                            Codigo = 231305,
                            Nome = "Professor de ciências exatas e naturais do ensino fundamental"
                        },
                        new
                        {
                            Id = 1966,
                            Codigo = 234120,
                            Nome = "Professor de computação (no ensino superior)"
                        },
                        new
                        {
                            Id = 1967,
                            Codigo = 234725,
                            Nome = "Professor de comunicação social do ensino superior"
                        },
                        new
                        {
                            Id = 1968,
                            Codigo = 234815,
                            Nome = "Professor de contabilidade"
                        },
                        new
                        {
                            Id = 1969,
                            Codigo = 262830,
                            Nome = "Professor de dança"
                        },
                        new
                        {
                            Id = 1970,
                            Codigo = 233110,
                            Nome = "Professor de desenho técnico"
                        },
                        new
                        {
                            Id = 1971,
                            Codigo = 234730,
                            Nome = "Professor de direito do ensino superior"
                        },
                        new
                        {
                            Id = 1972,
                            Codigo = 232115,
                            Nome = "Professor de disciplinas pedagógicas no ensino médio"
                        },
                        new
                        {
                            Id = 1973,
                            Codigo = 234805,
                            Nome = "Professor de economia"
                        },
                        new
                        {
                            Id = 1974,
                            Codigo = 231310,
                            Nome = "Professor de educação artística do ensino fundamental"
                        },
                        new
                        {
                            Id = 1975,
                            Codigo = 231315,
                            Nome = "Professor de educação física do ensino fundamental"
                        },
                        new
                        {
                            Id = 1976,
                            Codigo = 232120,
                            Nome = "Professor de educação física no ensino médio"
                        },
                        new
                        {
                            Id = 1977,
                            Codigo = 234410,
                            Nome = "Professor de educação física no ensino superior"
                        },
                        new
                        {
                            Id = 1978,
                            Codigo = 234415,
                            Nome = "Professor de enfermagem do ensino superior"
                        },
                        new
                        {
                            Id = 1979,
                            Codigo = 234310,
                            Nome = "Professor de engenharia"
                        },
                        new
                        {
                            Id = 1980,
                            Codigo = 234505,
                            Nome = "Professor de ensino superior na área de didática"
                        },
                        new
                        {
                            Id = 1981,
                            Codigo = 234510,
                            Nome = "Professor de ensino superior na área de orientação educacional"
                        },
                        new
                        {
                            Id = 1982,
                            Codigo = 234515,
                            Nome = "Professor de ensino superior na área de pesquisa educacional"
                        },
                        new
                        {
                            Id = 1983,
                            Codigo = 234520,
                            Nome = "Professor de ensino superior na área de prática de ensino"
                        },
                        new
                        {
                            Id = 1984,
                            Codigo = 234115,
                            Nome = "Professor de estatística (no ensino superior)"
                        },
                        new
                        {
                            Id = 1985,
                            Codigo = 234420,
                            Nome = "Professor de farmácia e bioquímica"
                        },
                        new
                        {
                            Id = 1986,
                            Codigo = 234676,
                            Nome = "Professor de filologia e crítica textual"
                        },
                        new
                        {
                            Id = 1987,
                            Codigo = 234735,
                            Nome = "Professor de filosofia do ensino superior"
                        },
                        new
                        {
                            Id = 1988,
                            Codigo = 232125,
                            Nome = "Professor de filosofia no ensino médio"
                        },
                        new
                        {
                            Id = 1989,
                            Codigo = 234205,
                            Nome = "Professor de física (ensino superior)"
                        },
                        new
                        {
                            Id = 1990,
                            Codigo = 232130,
                            Nome = "Professor de física no ensino médio"
                        },
                        new
                        {
                            Id = 1991,
                            Codigo = 234425,
                            Nome = "Professor de fisioterapia"
                        },
                        new
                        {
                            Id = 1992,
                            Codigo = 234430,
                            Nome = "Professor de fonoaudiologia"
                        },
                        new
                        {
                            Id = 1993,
                            Codigo = 234315,
                            Nome = "Professor de geofísica"
                        },
                        new
                        {
                            Id = 1994,
                            Codigo = 231320,
                            Nome = "Professor de geografia do ensino fundamental"
                        },
                        new
                        {
                            Id = 1995,
                            Codigo = 234740,
                            Nome = "Professor de geografia do ensino superior"
                        },
                        new
                        {
                            Id = 1996,
                            Codigo = 232135,
                            Nome = "Professor de geografia no ensino médio"
                        },
                        new
                        {
                            Id = 1997,
                            Codigo = 234320,
                            Nome = "Professor de geologia"
                        },
                        new
                        {
                            Id = 1998,
                            Codigo = 231325,
                            Nome = "Professor de história do ensino fundamental"
                        },
                        new
                        {
                            Id = 1999,
                            Codigo = 234745,
                            Nome = "Professor de história do ensino superior"
                        },
                        new
                        {
                            Id = 2000,
                            Codigo = 232140,
                            Nome = "Professor de história no ensino médio"
                        },
                        new
                        {
                            Id = 2001,
                            Codigo = 234750,
                            Nome = "Professor de jornalismo"
                        },
                        new
                        {
                            Id = 2002,
                            Codigo = 234604,
                            Nome = "Professor de língua alemã"
                        },
                        new
                        {
                            Id = 2003,
                            Codigo = 232145,
                            Nome = "Professor de língua e literatura brasileira no ensino médio"
                        },
                        new
                        {
                            Id = 2004,
                            Codigo = 234620,
                            Nome = "Professor de língua espanhola"
                        },
                        new
                        {
                            Id = 2005,
                            Codigo = 231330,
                            Nome = "Professor de língua estrangeira moderna do ensino fundamental"
                        },
                        new
                        {
                            Id = 2006,
                            Codigo = 232150,
                            Nome = "Professor de língua estrangeira moderna no ensino médio"
                        },
                        new
                        {
                            Id = 2007,
                            Codigo = 234612,
                            Nome = "Professor de língua francesa"
                        },
                        new
                        {
                            Id = 2008,
                            Codigo = 234616,
                            Nome = "Professor de língua inglesa"
                        },
                        new
                        {
                            Id = 2009,
                            Codigo = 234608,
                            Nome = "Professor de língua italiana"
                        },
                        new
                        {
                            Id = 2010,
                            Codigo = 234624,
                            Nome = "Professor de língua portuguesa"
                        },
                        new
                        {
                            Id = 2011,
                            Codigo = 231335,
                            Nome = "Professor de língua portuguesa do ensino fundamental"
                        },
                        new
                        {
                            Id = 2012,
                            Codigo = 234668,
                            Nome = "Professor de línguas estrangeiras modernas"
                        },
                        new
                        {
                            Id = 2013,
                            Codigo = 234672,
                            Nome = "Professor de lingüística e lingüística aplicada"
                        },
                        new
                        {
                            Id = 2014,
                            Codigo = 234636,
                            Nome = "Professor de literatura alemã"
                        },
                        new
                        {
                            Id = 2015,
                            Codigo = 234628,
                            Nome = "Professor de literatura brasileira"
                        },
                        new
                        {
                            Id = 2016,
                            Codigo = 234640,
                            Nome = "Professor de literatura comparada"
                        },
                        new
                        {
                            Id = 2017,
                            Codigo = 234660,
                            Nome = "Professor de literatura de línguas estrangeiras modernas"
                        },
                        new
                        {
                            Id = 2018,
                            Codigo = 234644,
                            Nome = "Professor de literatura espanhola"
                        },
                        new
                        {
                            Id = 2019,
                            Codigo = 234648,
                            Nome = "Professor de literatura francesa"
                        },
                        new
                        {
                            Id = 2020,
                            Codigo = 234652,
                            Nome = "Professor de literatura inglesa"
                        },
                        new
                        {
                            Id = 2021,
                            Codigo = 234656,
                            Nome = "Professor de literatura italiana"
                        },
                        new
                        {
                            Id = 2022,
                            Codigo = 234632,
                            Nome = "Professor de literatura portuguesa"
                        },
                        new
                        {
                            Id = 2023,
                            Codigo = 234105,
                            Nome = "Professor de matemática aplicada (no ensino superior)"
                        },
                        new
                        {
                            Id = 2024,
                            Codigo = 231340,
                            Nome = "Professor de matemática do ensino fundamental"
                        },
                        new
                        {
                            Id = 2025,
                            Codigo = 232155,
                            Nome = "Professor de matemática no ensino médio"
                        },
                        new
                        {
                            Id = 2026,
                            Codigo = 234110,
                            Nome = "Professor de matemática pura (no ensino superior)"
                        },
                        new
                        {
                            Id = 2027,
                            Codigo = 234435,
                            Nome = "Professor de medicina"
                        },
                        new
                        {
                            Id = 2028,
                            Codigo = 234440,
                            Nome = "Professor de medicina veterinária"
                        },
                        new
                        {
                            Id = 2029,
                            Codigo = 234755,
                            Nome = "Professor de museologia do ensino superior"
                        },
                        new
                        {
                            Id = 2030,
                            Codigo = 234915,
                            Nome = "Professor de música no ensino superior"
                        },
                        new
                        {
                            Id = 2031,
                            Codigo = 331105,
                            Nome = "Professor de nível médio na educação infantil"
                        },
                        new
                        {
                            Id = 2032,
                            Codigo = 331205,
                            Nome = "Professor de nível médio no ensino fundamental"
                        },
                        new
                        {
                            Id = 2033,
                            Codigo = 331305,
                            Nome = "Professor de nível médio no ensino profissionalizante"
                        },
                        new
                        {
                            Id = 2034,
                            Codigo = 231210,
                            Nome = "Professor de nível superior do ensino fundamental (primeira a quarta série)"
                        },
                        new
                        {
                            Id = 2035,
                            Codigo = 231105,
                            Nome = "Professor de nível superior na educação infantil (quatro a seis anos)"
                        },
                        new
                        {
                            Id = 2036,
                            Codigo = 231110,
                            Nome = "Professor de nível superior na educação infantil (zero a três anos)"
                        },
                        new
                        {
                            Id = 2037,
                            Codigo = 234445,
                            Nome = "Professor de nutrição"
                        },
                        new
                        {
                            Id = 2038,
                            Codigo = 234450,
                            Nome = "Professor de odontologia"
                        },
                        new
                        {
                            Id = 2039,
                            Codigo = 234664,
                            Nome = "Professor de outras línguas e literaturas"
                        },
                        new
                        {
                            Id = 2040,
                            Codigo = 234125,
                            Nome = "Professor de pesquisa operacional (no ensino superior)"
                        },
                        new
                        {
                            Id = 2041,
                            Codigo = 234760,
                            Nome = "Professor de psicologia do ensino superior"
                        },
                        new
                        {
                            Id = 2042,
                            Codigo = 232160,
                            Nome = "Professor de psicologia no ensino médio"
                        },
                        new
                        {
                            Id = 2043,
                            Codigo = 234210,
                            Nome = "Professor de química (ensino superior)"
                        },
                        new
                        {
                            Id = 2044,
                            Codigo = 232165,
                            Nome = "Professor de química no ensino médio"
                        },
                        new
                        {
                            Id = 2045,
                            Codigo = 234680,
                            Nome = "Professor de semiótica"
                        },
                        new
                        {
                            Id = 2046,
                            Codigo = 234765,
                            Nome = "Professor de serviço social do ensino superior"
                        },
                        new
                        {
                            Id = 2047,
                            Codigo = 234770,
                            Nome = "Professor de sociologia do ensino superior"
                        },
                        new
                        {
                            Id = 2048,
                            Codigo = 232170,
                            Nome = "Professor de sociologia no ensino médio"
                        },
                        new
                        {
                            Id = 2049,
                            Codigo = 233115,
                            Nome = "Professor de técnicas agrícolas"
                        },
                        new
                        {
                            Id = 2050,
                            Codigo = 233120,
                            Nome = "Professor de técnicas comerciais e secretariais"
                        },
                        new
                        {
                            Id = 2051,
                            Codigo = 233125,
                            Nome = "Professor de técnicas de enfermagem"
                        },
                        new
                        {
                            Id = 2052,
                            Codigo = 239420,
                            Nome = "Professor de técnicas e recursos audiovisuais"
                        },
                        new
                        {
                            Id = 2053,
                            Codigo = 233130,
                            Nome = "Professor de técnicas industriais"
                        },
                        new
                        {
                            Id = 2054,
                            Codigo = 233135,
                            Nome = "Professor de tecnologia e cálculo técnico"
                        },
                        new
                        {
                            Id = 2055,
                            Codigo = 234684,
                            Nome = "Professor de teoria da literatura"
                        },
                        new
                        {
                            Id = 2056,
                            Codigo = 234455,
                            Nome = "Professor de terapia ocupacional"
                        },
                        new
                        {
                            Id = 2057,
                            Codigo = 234460,
                            Nome = "Professor de zootecnia do ensino superior"
                        },
                        new
                        {
                            Id = 2058,
                            Codigo = 233220,
                            Nome = "Professor instrutor de ensino e aprendizagem agroflorestal"
                        },
                        new
                        {
                            Id = 2059,
                            Codigo = 233225,
                            Nome = "Professor instrutor de ensino e aprendizagem em serviços"
                        },
                        new
                        {
                            Id = 2060,
                            Codigo = 332105,
                            Nome = "Professor leigo no ensino fundamental"
                        },
                        new
                        {
                            Id = 2061,
                            Codigo = 332205,
                            Nome = "Professor prático no ensino profissionalizante"
                        },
                        new
                        {
                            Id = 2062,
                            Codigo = 333115,
                            Nome = "Professores de cursos livres"
                        },
                        new
                        {
                            Id = 2063,
                            Codigo = 377140,
                            Nome = "Profissional de atletismo"
                        },
                        new
                        {
                            Id = 2064,
                            Codigo = 224140,
                            Nome = "Profissional de educação física na saúde"
                        },
                        new
                        {
                            Id = 2065,
                            Codigo = 252550,
                            Nome = "Profissional de relações com investidores"
                        },
                        new
                        {
                            Id = 2066,
                            Codigo = 142345,
                            Nome = "Profissional de relações institucionais e governamentais"
                        },
                        new
                        {
                            Id = 2067,
                            Codigo = 519805,
                            Nome = "Profissional do sexo"
                        },
                        new
                        {
                            Id = 2068,
                            Codigo = 142350,
                            Nome = "Profissonal de relações internacionais"
                        },
                        new
                        {
                            Id = 2069,
                            Codigo = 317115,
                            Nome = "Programador de máquinas - ferramenta com comando numérico"
                        },
                        new
                        {
                            Id = 2070,
                            Codigo = 766155,
                            Nome = "Programador visual gráfico"
                        },
                        new
                        {
                            Id = 2071,
                            Codigo = 318805,
                            Nome = "Projetista de móveis"
                        },
                        new
                        {
                            Id = 2072,
                            Codigo = 374135,
                            Nome = "Projetista de sistemas de áudio"
                        },
                        new
                        {
                            Id = 2073,
                            Codigo = 374120,
                            Nome = "Projetista de som"
                        },
                        new
                        {
                            Id = 2074,
                            Codigo = 242235,
                            Nome = "Promotor de justiça"
                        },
                        new
                        {
                            Id = 2075,
                            Codigo = 521115,
                            Nome = "Promotor de vendas"
                        },
                        new
                        {
                            Id = 2076,
                            Codigo = 354130,
                            Nome = "Promotor de vendas especializado"
                        },
                        new
                        {
                            Id = 2077,
                            Codigo = 354150,
                            Nome = "Propagandista de produtos famacêuticos"
                        },
                        new
                        {
                            Id = 2078,
                            Codigo = 322410,
                            Nome = "Protético dentário"
                        },
                        new
                        {
                            Id = 2079,
                            Codigo = 251550,
                            Nome = "Psicanalista"
                        },
                        new
                        {
                            Id = 2080,
                            Codigo = 251555,
                            Nome = "Psicólogo acupunturista"
                        },
                        new
                        {
                            Id = 2081,
                            Codigo = 251510,
                            Nome = "Psicólogo clínico"
                        },
                        new
                        {
                            Id = 2082,
                            Codigo = 251515,
                            Nome = "Psicólogo do esporte"
                        },
                        new
                        {
                            Id = 2083,
                            Codigo = 251540,
                            Nome = "Psicólogo do trabalho"
                        },
                        new
                        {
                            Id = 2084,
                            Codigo = 251535,
                            Nome = "Psicólogo do trânsito"
                        },
                        new
                        {
                            Id = 2085,
                            Codigo = 251505,
                            Nome = "Psicólogo educacional"
                        },
                        new
                        {
                            Id = 2086,
                            Codigo = 251520,
                            Nome = "Psicólogo hospitalar"
                        },
                        new
                        {
                            Id = 2087,
                            Codigo = 251525,
                            Nome = "Psicólogo jurídico"
                        },
                        new
                        {
                            Id = 2088,
                            Codigo = 251530,
                            Nome = "Psicólogo social"
                        },
                        new
                        {
                            Id = 2089,
                            Codigo = 223915,
                            Nome = "Psicomotricista"
                        },
                        new
                        {
                            Id = 2090,
                            Codigo = 239425,
                            Nome = "Psicopedagogo"
                        },
                        new
                        {
                            Id = 2091,
                            Codigo = 253115,
                            Nome = "Publicitário"
                        },
                        new
                        {
                            Id = 2092,
                            Codigo = 377145,
                            Nome = "Pugilista"
                        },
                        new
                        {
                            Id = 2093,
                            Codigo = 848210,
                            Nome = "Queijeiro na fabricação de laticínio"
                        },
                        new
                        {
                            Id = 2094,
                            Codigo = 213205,
                            Nome = "Químico"
                        },
                        new
                        {
                            Id = 2095,
                            Codigo = 213210,
                            Nome = "Químico industrial"
                        },
                        new
                        {
                            Id = 2096,
                            Codigo = 226105,
                            Nome = "Quiropraxista"
                        },
                        new
                        {
                            Id = 2097,
                            Codigo = 762125,
                            Nome = "Rachador de couros e peles"
                        },
                        new
                        {
                            Id = 2098,
                            Codigo = 372210,
                            Nome = "Radiotelegrafista"
                        },
                        new
                        {
                            Id = 2099,
                            Codigo = 632010,
                            Nome = "Raizeiro"
                        },
                        new
                        {
                            Id = 2100,
                            Codigo = 762220,
                            Nome = "Rebaixador de couros"
                        },
                        new
                        {
                            Id = 2101,
                            Codigo = 821450,
                            Nome = "Rebarbador de metal"
                        },
                        new
                        {
                            Id = 2102,
                            Codigo = 724215,
                            Nome = "Rebitador a  martelo pneumático"
                        },
                        new
                        {
                            Id = 2103,
                            Codigo = 724230,
                            Nome = "Rebitador, a  mão"
                        },
                        new
                        {
                            Id = 2104,
                            Codigo = 421205,
                            Nome = "Recebedor de apostas (loteria)"
                        },
                        new
                        {
                            Id = 2105,
                            Codigo = 421210,
                            Nome = "Recebedor de apostas (turfe)"
                        },
                        new
                        {
                            Id = 2106,
                            Codigo = 422125,
                            Nome = "Recepcionista de banco"
                        },
                        new
                        {
                            Id = 2107,
                            Codigo = 519945,
                            Nome = "Recepcionista de casas de espetáculos"
                        },
                        new
                        {
                            Id = 2108,
                            Codigo = 422110,
                            Nome = "Recepcionista de consultório médico ou dentário"
                        },
                        new
                        {
                            Id = 2109,
                            Codigo = 422120,
                            Nome = "Recepcionista de hotel"
                        },
                        new
                        {
                            Id = 2110,
                            Codigo = 422115,
                            Nome = "Recepcionista de seguro saúde"
                        },
                        new
                        {
                            Id = 2111,
                            Codigo = 422105,
                            Nome = "Recepcionista, em geral"
                        },
                        new
                        {
                            Id = 2112,
                            Codigo = 371410,
                            Nome = "Recreador"
                        },
                        new
                        {
                            Id = 2113,
                            Codigo = 371405,
                            Nome = "Recreador de acantonamento"
                        },
                        new
                        {
                            Id = 2114,
                            Codigo = 821335,
                            Nome = "Recuperador de guias e cilindros"
                        },
                        new
                        {
                            Id = 2115,
                            Codigo = 253110,
                            Nome = "Redator de publicidade"
                        },
                        new
                        {
                            Id = 2116,
                            Codigo = 261530,
                            Nome = "Redator de textos técnicos"
                        },
                        new
                        {
                            Id = 2117,
                            Codigo = 768120,
                            Nome = "Redeiro"
                        },
                        new
                        {
                            Id = 2118,
                            Codigo = 631420,
                            Nome = "Redeiro (pesca)"
                        },
                        new
                        {
                            Id = 2119,
                            Codigo = 841472,
                            Nome = "Refinador de óleo e gordura"
                        },
                        new
                        {
                            Id = 2120,
                            Codigo = 841210,
                            Nome = "Refinador de sal"
                        },
                        new
                        {
                            Id = 2121,
                            Codigo = 415305,
                            Nome = "Registrador de câncer"
                        },
                        new
                        {
                            Id = 2122,
                            Codigo = 716540,
                            Nome = "Rejuntador de revestimentos"
                        },
                        new
                        {
                            Id = 2123,
                            Codigo = 142325,
                            Nome = "Relações públicas"
                        },
                        new
                        {
                            Id = 2124,
                            Codigo = 741120,
                            Nome = "Relojoeiro (fabricação)"
                        },
                        new
                        {
                            Id = 2125,
                            Codigo = 741125,
                            Nome = "Relojoeiro (reparação)"
                        },
                        new
                        {
                            Id = 2126,
                            Codigo = 761363,
                            Nome = "Remetedor de fios"
                        },
                        new
                        {
                            Id = 2127,
                            Codigo = 731330,
                            Nome = "Reparador de aparelhos de telecomunicações em laboratório"
                        },
                        new
                        {
                            Id = 2128,
                            Codigo = 954205,
                            Nome = "Reparador de aparelhos eletrodomésticos (exceto imagem e som)"
                        },
                        new
                        {
                            Id = 2129,
                            Codigo = 954305,
                            Nome = "Reparador de equipamentos de escritório"
                        },
                        new
                        {
                            Id = 2130,
                            Codigo = 915405,
                            Nome = "Reparador de equipamentos fotográficos"
                        },
                        new
                        {
                            Id = 2131,
                            Codigo = 915210,
                            Nome = "Reparador de instrumentos musicais"
                        },
                        new
                        {
                            Id = 2132,
                            Codigo = 954210,
                            Nome = "Reparador de rádio, tv e som"
                        },
                        new
                        {
                            Id = 2133,
                            Codigo = 261135,
                            Nome = "Repórter (exclusive rádio e televisão)"
                        },
                        new
                        {
                            Id = 2134,
                            Codigo = 261730,
                            Nome = "Repórter de mídias audiovisuais"
                        },
                        new
                        {
                            Id = 2135,
                            Codigo = 261820,
                            Nome = "Repórter fotográfico"
                        },
                        new
                        {
                            Id = 2136,
                            Codigo = 521125,
                            Nome = "Repositor de mercadorias"
                        },
                        new
                        {
                            Id = 2137,
                            Codigo = 354705,
                            Nome = "Representante comercial autônomo"
                        },
                        new
                        {
                            Id = 2138,
                            Codigo = 915205,
                            Nome = "Restaurador de instrumentos musicais (exceto cordas arcadas)"
                        },
                        new
                        {
                            Id = 2139,
                            Codigo = 768710,
                            Nome = "Restaurador de livros"
                        },
                        new
                        {
                            Id = 2140,
                            Codigo = 848525,
                            Nome = "Retalhador de carne"
                        },
                        new
                        {
                            Id = 2141,
                            Codigo = 766415,
                            Nome = "Revelador de filmes fotográficos, em cores"
                        },
                        new
                        {
                            Id = 2142,
                            Codigo = 766410,
                            Nome = "Revelador de filmes fotográficos, em preto e branco"
                        },
                        new
                        {
                            Id = 2143,
                            Codigo = 716615,
                            Nome = "Revestidor de interiores (papel, material plástico e emborrachados)"
                        },
                        new
                        {
                            Id = 2144,
                            Codigo = 716110,
                            Nome = "Revestidor de superfícies de concreto"
                        },
                        new
                        {
                            Id = 2145,
                            Codigo = 761810,
                            Nome = "Revisor de fios (produção têxtil)"
                        },
                        new
                        {
                            Id = 2146,
                            Codigo = 761815,
                            Nome = "Revisor de tecidos acabados"
                        },
                        new
                        {
                            Id = 2147,
                            Codigo = 761820,
                            Nome = "Revisor de tecidos crus"
                        },
                        new
                        {
                            Id = 2148,
                            Codigo = 261140,
                            Nome = "Revisor de texto"
                        },
                        new
                        {
                            Id = 2149,
                            Codigo = 724225,
                            Nome = "Riscador de estruturas metálicas"
                        },
                        new
                        {
                            Id = 2150,
                            Codigo = 763120,
                            Nome = "Riscador de roupas"
                        },
                        new
                        {
                            Id = 2151,
                            Codigo = 514115,
                            Nome = "Sacristão"
                        },
                        new
                        {
                            Id = 2152,
                            Codigo = 848110,
                            Nome = "Salgador de alimentos"
                        },
                        new
                        {
                            Id = 2153,
                            Codigo = 848115,
                            Nome = "Salsicheiro (fabricação de lingüiça, salsicha e produtos similares)"
                        },
                        new
                        {
                            Id = 2154,
                            Codigo = 517115,
                            Nome = "Salva-vidas"
                        },
                        new
                        {
                            Id = 2155,
                            Codigo = 131225,
                            Nome = "Sanitarista"
                        },
                        new
                        {
                            Id = 2156,
                            Codigo = 768320,
                            Nome = "Sapateiro (calçados sob medida)"
                        },
                        new
                        {
                            Id = 2157,
                            Codigo = 31110,
                            Nome = "Sargento bombeiro militar"
                        },
                        new
                        {
                            Id = 2158,
                            Codigo = 21110,
                            Nome = "Sargento da policia militar"
                        },
                        new
                        {
                            Id = 2159,
                            Codigo = 772115,
                            Nome = "Secador de madeira"
                        },
                        new
                        {
                            Id = 2160,
                            Codigo = 252315,
                            Nome = "Secretária trilíngüe"
                        },
                        new
                        {
                            Id = 2161,
                            Codigo = 252305,
                            Nome = "Secretária(o) executiva(o)"
                        },
                        new
                        {
                            Id = 2162,
                            Codigo = 252310,
                            Nome = "Secretário  bilíngüe"
                        },
                        new
                        {
                            Id = 2163,
                            Codigo = 111220,
                            Nome = "Secretário - executivo"
                        },
                        new
                        {
                            Id = 2164,
                            Codigo = 215215,
                            Nome = "Segundo oficial de máquinas da marinha mercante"
                        },
                        new
                        {
                            Id = 2165,
                            Codigo = 20310,
                            Nome = "Segundo tenente de polícia militar"
                        },
                        new
                        {
                            Id = 2166,
                            Codigo = 519210,
                            Nome = "Selecionador de material reciclável"
                        },
                        new
                        {
                            Id = 2167,
                            Codigo = 768325,
                            Nome = "Seleiro"
                        },
                        new
                        {
                            Id = 2168,
                            Codigo = 111105,
                            Nome = "Senador"
                        },
                        new
                        {
                            Id = 2169,
                            Codigo = 516610,
                            Nome = "Sepultador"
                        },
                        new
                        {
                            Id = 2170,
                            Codigo = 613420,
                            Nome = "Sericultor"
                        },
                        new
                        {
                            Id = 2171,
                            Codigo = 632205,
                            Nome = "Seringueiro"
                        },
                        new
                        {
                            Id = 2172,
                            Codigo = 773115,
                            Nome = "Serrador de bordas no desdobramento de madeira"
                        },
                        new
                        {
                            Id = 2173,
                            Codigo = 773120,
                            Nome = "Serrador de madeira"
                        },
                        new
                        {
                            Id = 2174,
                            Codigo = 773125,
                            Nome = "Serrador de madeira (serra circular múltipla)"
                        },
                        new
                        {
                            Id = 2175,
                            Codigo = 773130,
                            Nome = "Serrador de madeira (serra de fita múltipla)"
                        },
                        new
                        {
                            Id = 2176,
                            Codigo = 724440,
                            Nome = "Serralheiro"
                        },
                        new
                        {
                            Id = 2177,
                            Codigo = 717020,
                            Nome = "Servente de obras"
                        },
                        new
                        {
                            Id = 2178,
                            Codigo = 623325,
                            Nome = "Sexador"
                        },
                        new
                        {
                            Id = 2179,
                            Codigo = 782145,
                            Nome = "Sinaleiro (ponte-rolante)"
                        },
                        new
                        {
                            Id = 2180,
                            Codigo = 515325,
                            Nome = "Sócioeducador"
                        },
                        new
                        {
                            Id = 2181,
                            Codigo = 251120,
                            Nome = "Sociólogo"
                        },
                        new
                        {
                            Id = 2182,
                            Codigo = 515135,
                            Nome = "Socorrista (exceto médicos e enfermeiros)"
                        },
                        new
                        {
                            Id = 2183,
                            Codigo = 31210,
                            Nome = "Soldado bombeiro militar"
                        },
                        new
                        {
                            Id = 2184,
                            Codigo = 21210,
                            Nome = "Soldado da polícia militar"
                        },
                        new
                        {
                            Id = 2185,
                            Codigo = 724315,
                            Nome = "Soldador"
                        },
                        new
                        {
                            Id = 2186,
                            Codigo = 724320,
                            Nome = "Soldador a  oxigás"
                        },
                        new
                        {
                            Id = 2187,
                            Codigo = 991120,
                            Nome = "Soldador aluminotérmico em conservação de trilhos"
                        },
                        new
                        {
                            Id = 2188,
                            Codigo = 724325,
                            Nome = "Soldador elétrico"
                        },
                        new
                        {
                            Id = 2189,
                            Codigo = 711315,
                            Nome = "Sondador (poços de petróleo e gás)"
                        },
                        new
                        {
                            Id = 2190,
                            Codigo = 711320,
                            Nome = "Sondador de poços (exceto de petróleo e gás)"
                        },
                        new
                        {
                            Id = 2191,
                            Codigo = 374150,
                            Nome = "Sonoplasta"
                        },
                        new
                        {
                            Id = 2192,
                            Codigo = 821255,
                            Nome = "Soprador de convertedor"
                        },
                        new
                        {
                            Id = 2193,
                            Codigo = 752115,
                            Nome = "Soprador de vidro"
                        },
                        new
                        {
                            Id = 2194,
                            Codigo = 242240,
                            Nome = "Subprocurador de justiça militar"
                        },
                        new
                        {
                            Id = 2195,
                            Codigo = 242245,
                            Nome = "Subprocurador-geral da república"
                        },
                        new
                        {
                            Id = 2196,
                            Codigo = 242250,
                            Nome = "Subprocurador-geral do trabalho"
                        },
                        new
                        {
                            Id = 2197,
                            Codigo = 31105,
                            Nome = "Subtenente bombeiro militar"
                        },
                        new
                        {
                            Id = 2198,
                            Codigo = 21105,
                            Nome = "Subtenente da policia militar"
                        },
                        new
                        {
                            Id = 2199,
                            Codigo = 215220,
                            Nome = "Superintendente técnico no transporte aquaviário"
                        },
                        new
                        {
                            Id = 2200,
                            Codigo = 760405,
                            Nome = "Supervisor  (indústria de calçados e artefatos de couro)"
                        },
                        new
                        {
                            Id = 2201,
                            Codigo = 410105,
                            Nome = "Supervisor administrativo"
                        },
                        new
                        {
                            Id = 2202,
                            Codigo = 342540,
                            Nome = "Supervisor da administração de aeroportos"
                        },
                        new
                        {
                            Id = 2203,
                            Codigo = 630105,
                            Nome = "Supervisor da aqüicultura"
                        },
                        new
                        {
                            Id = 2204,
                            Codigo = 630110,
                            Nome = "Supervisor da área florestal"
                        },
                        new
                        {
                            Id = 2205,
                            Codigo = 760505,
                            Nome = "Supervisor da confecção de artefatos de tecidos, couros e afins"
                        },
                        new
                        {
                            Id = 2206,
                            Codigo = 840110,
                            Nome = "Supervisor da indústria de bebidas"
                        },
                        new
                        {
                            Id = 2207,
                            Codigo = 840115,
                            Nome = "Supervisor da indústria de fumo"
                        },
                        new
                        {
                            Id = 2208,
                            Codigo = 750205,
                            Nome = "Supervisor da indústria de minerais não metálicos (exceto os derivados de petróleo e carvão)"
                        },
                        new
                        {
                            Id = 2209,
                            Codigo = 910205,
                            Nome = "Supervisor da manutenção e reparação de veículos leves"
                        },
                        new
                        {
                            Id = 2210,
                            Codigo = 910210,
                            Nome = "Supervisor da manutenção e reparação de veículos pesados"
                        },
                        new
                        {
                            Id = 2211,
                            Codigo = 740105,
                            Nome = "Supervisor da mecânica de precisão"
                        },
                        new
                        {
                            Id = 2212,
                            Codigo = 760605,
                            Nome = "Supervisor das artes gráficas  (indústria editorial e gráfica)"
                        },
                        new
                        {
                            Id = 2213,
                            Codigo = 410205,
                            Nome = "Supervisor de almoxarifado"
                        },
                        new
                        {
                            Id = 2214,
                            Codigo = 510115,
                            Nome = "Supervisor de andar"
                        },
                        new
                        {
                            Id = 2215,
                            Codigo = 710105,
                            Nome = "Supervisor de apoio operacional na mineração"
                        },
                        new
                        {
                            Id = 2216,
                            Codigo = 510305,
                            Nome = "Supervisor de bombeiros"
                        },
                        new
                        {
                            Id = 2217,
                            Codigo = 420105,
                            Nome = "Supervisor de caixas e bilheteiros (exceto caixa de banco)"
                        },
                        new
                        {
                            Id = 2218,
                            Codigo = 410210,
                            Nome = "Supervisor de câmbio"
                        },
                        new
                        {
                            Id = 2219,
                            Codigo = 342315,
                            Nome = "Supervisor de carga e descarga"
                        },
                        new
                        {
                            Id = 2220,
                            Codigo = 420110,
                            Nome = "Supervisor de cobrança"
                        },
                        new
                        {
                            Id = 2221,
                            Codigo = 420115,
                            Nome = "Supervisor de coletadores de apostas e de jogos"
                        },
                        new
                        {
                            Id = 2222,
                            Codigo = 354210,
                            Nome = "Supervisor de compras"
                        },
                        new
                        {
                            Id = 2223,
                            Codigo = 410215,
                            Nome = "Supervisor de contas a pagar"
                        },
                        new
                        {
                            Id = 2224,
                            Codigo = 720160,
                            Nome = "Supervisor de controle de tratamento térmico"
                        },
                        new
                        {
                            Id = 2225,
                            Codigo = 410220,
                            Nome = "Supervisor de controle patrimonial"
                        },
                        new
                        {
                            Id = 2226,
                            Codigo = 410225,
                            Nome = "Supervisor de crédito e cobrança"
                        },
                        new
                        {
                            Id = 2227,
                            Codigo = 760205,
                            Nome = "Supervisor de curtimento"
                        },
                        new
                        {
                            Id = 2228,
                            Codigo = 412120,
                            Nome = "Supervisor de digitação e operação"
                        },
                        new
                        {
                            Id = 2229,
                            Codigo = 780105,
                            Nome = "Supervisor de embalagem e etiquetagem"
                        },
                        new
                        {
                            Id = 2230,
                            Codigo = 342545,
                            Nome = "Supervisor de empresa aérea em aeroportos"
                        },
                        new
                        {
                            Id = 2231,
                            Codigo = 239430,
                            Nome = "Supervisor de ensino"
                        },
                        new
                        {
                            Id = 2232,
                            Codigo = 420120,
                            Nome = "Supervisor de entrevistadores e recenseadores"
                        },
                        new
                        {
                            Id = 2233,
                            Codigo = 620105,
                            Nome = "Supervisor de exploração agrícola"
                        },
                        new
                        {
                            Id = 2234,
                            Codigo = 620110,
                            Nome = "Supervisor de exploração agropecuária"
                        },
                        new
                        {
                            Id = 2235,
                            Codigo = 620115,
                            Nome = "Supervisor de exploração pecuária"
                        },
                        new
                        {
                            Id = 2236,
                            Codigo = 710110,
                            Nome = "Supervisor de extração de sal"
                        },
                        new
                        {
                            Id = 2237,
                            Codigo = 740110,
                            Nome = "Supervisor de fabricação de instrumentos musicais"
                        },
                        new
                        {
                            Id = 2238,
                            Codigo = 820205,
                            Nome = "Supervisor de fabricação de produtos cerâmicos, porcelanatos e afins"
                        },
                        new
                        {
                            Id = 2239,
                            Codigo = 820210,
                            Nome = "Supervisor de fabricação de produtos de vidro"
                        },
                        new
                        {
                            Id = 2240,
                            Codigo = 750105,
                            Nome = "Supervisor de joalheria"
                        },
                        new
                        {
                            Id = 2241,
                            Codigo = 510205,
                            Nome = "Supervisor de lavanderia"
                        },
                        new
                        {
                            Id = 2242,
                            Codigo = 410240,
                            Nome = "Supervisor de logística"
                        },
                        new
                        {
                            Id = 2243,
                            Codigo = 910110,
                            Nome = "Supervisor de manutenção de aparelhos térmicos, de climatização e de refrigeração"
                        },
                        new
                        {
                            Id = 2244,
                            Codigo = 910115,
                            Nome = "Supervisor de manutenção de bombas, motores, compressores e equipamentos de transmissão"
                        },
                        new
                        {
                            Id = 2245,
                            Codigo = 910120,
                            Nome = "Supervisor de manutenção de máquinas gráficas"
                        },
                        new
                        {
                            Id = 2246,
                            Codigo = 910125,
                            Nome = "Supervisor de manutenção de máquinas industriais têxteis"
                        },
                        new
                        {
                            Id = 2247,
                            Codigo = 910130,
                            Nome = "Supervisor de manutenção de máquinas operatrizes e de usinagem"
                        },
                        new
                        {
                            Id = 2248,
                            Codigo = 910910,
                            Nome = "Supervisor de manutenção de vias férreas"
                        },
                        new
                        {
                            Id = 2249,
                            Codigo = 950105,
                            Nome = "Supervisor de manutenção elétrica de alta tensão industrial"
                        },
                        new
                        {
                            Id = 2250,
                            Codigo = 950305,
                            Nome = "Supervisor de manutenção eletromecânica"
                        },
                        new
                        {
                            Id = 2251,
                            Codigo = 860105,
                            Nome = "Supervisor de manutenção eletromecânica (utilidades)"
                        },
                        new
                        {
                            Id = 2252,
                            Codigo = 950110,
                            Nome = "Supervisor de manutenção eletromecânica industrial, comercial e predial"
                        },
                        new
                        {
                            Id = 2253,
                            Codigo = 730105,
                            Nome = "Supervisor de montagem e instalação eletroeletrônica"
                        },
                        new
                        {
                            Id = 2254,
                            Codigo = 860110,
                            Nome = "Supervisor de operação de fluidos (distribuição, captação, tratamento de água, gases, vapor)"
                        },
                        new
                        {
                            Id = 2255,
                            Codigo = 860115,
                            Nome = "Supervisor de operação elétrica (geração, transmissão e distribuição de energia elétrica)"
                        },
                        new
                        {
                            Id = 2256,
                            Codigo = 373225,
                            Nome = "Supervisor de operações (mídias audiovisuais)"
                        },
                        new
                        {
                            Id = 2257,
                            Codigo = 342610,
                            Nome = "Supervisor de operações portuárias"
                        },
                        new
                        {
                            Id = 2258,
                            Codigo = 410230,
                            Nome = "Supervisor de orçamento"
                        },
                        new
                        {
                            Id = 2259,
                            Codigo = 710115,
                            Nome = "Supervisor de perfuração e desmonte"
                        },
                        new
                        {
                            Id = 2260,
                            Codigo = 840105,
                            Nome = "Supervisor de produção da indústria alimentícia"
                        },
                        new
                        {
                            Id = 2261,
                            Codigo = 710120,
                            Nome = "Supervisor de produção na mineração"
                        },
                        new
                        {
                            Id = 2262,
                            Codigo = 420125,
                            Nome = "Supervisor de recepcionistas"
                        },
                        new
                        {
                            Id = 2263,
                            Codigo = 910905,
                            Nome = "Supervisor de reparos linhas férreas"
                        },
                        new
                        {
                            Id = 2264,
                            Codigo = 420130,
                            Nome = "Supervisor de telefonistas"
                        },
                        new
                        {
                            Id = 2265,
                            Codigo = 420135,
                            Nome = "Supervisor de telemarketing e atendimento"
                        },
                        new
                        {
                            Id = 2266,
                            Codigo = 410235,
                            Nome = "Supervisor de tesouraria"
                        },
                        new
                        {
                            Id = 2267,
                            Codigo = 710125,
                            Nome = "Supervisor de transporte na mineração"
                        },
                        new
                        {
                            Id = 2268,
                            Codigo = 510105,
                            Nome = "Supervisor de transportes"
                        },
                        new
                        {
                            Id = 2269,
                            Codigo = 710220,
                            Nome = "Supervisor de usina de concreto"
                        },
                        new
                        {
                            Id = 2270,
                            Codigo = 520110,
                            Nome = "Supervisor de vendas comercial"
                        },
                        new
                        {
                            Id = 2271,
                            Codigo = 520105,
                            Nome = "Supervisor de vendas de serviços"
                        },
                        new
                        {
                            Id = 2272,
                            Codigo = 510310,
                            Nome = "Supervisor de vigilantes"
                        },
                        new
                        {
                            Id = 2273,
                            Codigo = 373230,
                            Nome = "Supervisor técnico (mídias audiovisuais)"
                        },
                        new
                        {
                            Id = 2274,
                            Codigo = 373220,
                            Nome = "Supervisor técnico operacional de sistemas de televisão e produtoras de vídeo"
                        },
                        new
                        {
                            Id = 2275,
                            Codigo = 752235,
                            Nome = "Surfassagista"
                        },
                        new
                        {
                            Id = 2276,
                            Codigo = 513615,
                            Nome = "Sushiman"
                        },
                        new
                        {
                            Id = 2277,
                            Codigo = 241335,
                            Nome = "Tabelião de notas"
                        },
                        new
                        {
                            Id = 2278,
                            Codigo = 241340,
                            Nome = "Tabelião de protestos"
                        },
                        new
                        {
                            Id = 2279,
                            Codigo = 511115,
                            Nome = "Taifeiro (exceto militares)"
                        },
                        new
                        {
                            Id = 2280,
                            Codigo = 771120,
                            Nome = "Tanoeiro"
                        },
                        new
                        {
                            Id = 2281,
                            Codigo = 765240,
                            Nome = "Tapeceiro de autos"
                        },
                        new
                        {
                            Id = 2282,
                            Codigo = 716535,
                            Nome = "Taqueiro"
                        },
                        new
                        {
                            Id = 2283,
                            Codigo = 351510,
                            Nome = "Taquígrafo"
                        },
                        new
                        {
                            Id = 2284,
                            Codigo = 328110,
                            Nome = "Taxidermista"
                        },
                        new
                        {
                            Id = 2285,
                            Codigo = 761303,
                            Nome = "Tecelão (redes)"
                        },
                        new
                        {
                            Id = 2286,
                            Codigo = 761306,
                            Nome = "Tecelão (rendas e bordados)"
                        },
                        new
                        {
                            Id = 2287,
                            Codigo = 761309,
                            Nome = "Tecelão (tear automático)"
                        },
                        new
                        {
                            Id = 2288,
                            Codigo = 761312,
                            Nome = "Tecelão (tear jacquard)"
                        },
                        new
                        {
                            Id = 2289,
                            Codigo = 768105,
                            Nome = "Tecelão (tear manual)"
                        },
                        new
                        {
                            Id = 2290,
                            Codigo = 761315,
                            Nome = "Tecelão (tear mecânico de maquineta)"
                        },
                        new
                        {
                            Id = 2291,
                            Codigo = 761318,
                            Nome = "Tecelão (tear mecânico de xadrez)"
                        },
                        new
                        {
                            Id = 2292,
                            Codigo = 761321,
                            Nome = "Tecelão (tear mecânico liso)"
                        },
                        new
                        {
                            Id = 2293,
                            Codigo = 761324,
                            Nome = "Tecelão (tear mecânico, exceto jacquard)"
                        },
                        new
                        {
                            Id = 2294,
                            Codigo = 761330,
                            Nome = "Tecelão de malhas (máquina circular)"
                        },
                        new
                        {
                            Id = 2295,
                            Codigo = 761333,
                            Nome = "Tecelão de malhas (máquina retilínea)"
                        },
                        new
                        {
                            Id = 2296,
                            Codigo = 761327,
                            Nome = "Tecelão de malhas, a  máquina"
                        },
                        new
                        {
                            Id = 2297,
                            Codigo = 761339,
                            Nome = "Tecelão de meias (máquina circular)"
                        },
                        new
                        {
                            Id = 2298,
                            Codigo = 761342,
                            Nome = "Tecelão de meias (máquina retilínea)"
                        },
                        new
                        {
                            Id = 2299,
                            Codigo = 761336,
                            Nome = "Tecelão de meias, a  máquina"
                        },
                        new
                        {
                            Id = 2300,
                            Codigo = 768110,
                            Nome = "Tecelão de tapetes, a  mão"
                        },
                        new
                        {
                            Id = 2301,
                            Codigo = 761345,
                            Nome = "Tecelão de tapetes, a  máquina"
                        },
                        new
                        {
                            Id = 2302,
                            Codigo = 321105,
                            Nome = "Técnico agrícola"
                        },
                        new
                        {
                            Id = 2303,
                            Codigo = 321110,
                            Nome = "Técnico agropecuário"
                        },
                        new
                        {
                            Id = 2304,
                            Codigo = 254110,
                            Nome = "Técnico da receita federal"
                        },
                        new
                        {
                            Id = 2305,
                            Codigo = 314705,
                            Nome = "Técnico de acabamento em siderurgia"
                        },
                        new
                        {
                            Id = 2306,
                            Codigo = 314710,
                            Nome = "Técnico de aciaria em siderurgia"
                        },
                        new
                        {
                            Id = 2307,
                            Codigo = 325205,
                            Nome = "Técnico de alimentos"
                        },
                        new
                        {
                            Id = 2308,
                            Codigo = 301205,
                            Nome = "Técnico de apoio à bioengenharia"
                        },
                        new
                        {
                            Id = 2309,
                            Codigo = 395105,
                            Nome = "Técnico de apoio em pesquisa e desenvolvimento (exceto agropecuário e florestal)"
                        },
                        new
                        {
                            Id = 2310,
                            Codigo = 395110,
                            Nome = "Técnico de apoio em pesquisa e desenvolvimento agropecuário florestal"
                        },
                        new
                        {
                            Id = 2311,
                            Codigo = 311110,
                            Nome = "Técnico de celulose e papel"
                        },
                        new
                        {
                            Id = 2312,
                            Codigo = 313305,
                            Nome = "Técnico de comunicação de dados"
                        },
                        new
                        {
                            Id = 2313,
                            Codigo = 351105,
                            Nome = "Técnico de contabilidade"
                        },
                        new
                        {
                            Id = 2314,
                            Codigo = 311505,
                            Nome = "Técnico de controle de meio ambiente"
                        },
                        new
                        {
                            Id = 2315,
                            Codigo = 224125,
                            Nome = "Técnico de desporto individual e coletivo (exceto futebol)"
                        },
                        new
                        {
                            Id = 2316,
                            Codigo = 322205,
                            Nome = "Técnico de enfermagem"
                        },
                        new
                        {
                            Id = 2317,
                            Codigo = 322245,
                            Nome = "Técnico de enfermagem da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 2318,
                            Codigo = 322210,
                            Nome = "Técnico de enfermagem de terapia intensiva"
                        },
                        new
                        {
                            Id = 2319,
                            Codigo = 322215,
                            Nome = "Técnico de enfermagem do trabalho"
                        },
                        new
                        {
                            Id = 2320,
                            Codigo = 322220,
                            Nome = "Técnico de enfermagem psiquiátrica"
                        },
                        new
                        {
                            Id = 2321,
                            Codigo = 312205,
                            Nome = "Técnico de estradas"
                        },
                        new
                        {
                            Id = 2322,
                            Codigo = 314715,
                            Nome = "Técnico de fundição em siderurgia"
                        },
                        new
                        {
                            Id = 2323,
                            Codigo = 391210,
                            Nome = "Técnico de garantia da qualidade"
                        },
                        new
                        {
                            Id = 2324,
                            Codigo = 322605,
                            Nome = "Técnico de imobilização ortopédica"
                        },
                        new
                        {
                            Id = 2325,
                            Codigo = 301110,
                            Nome = "Técnico de laboratório de análises físico-químicas (materiais de construção)"
                        },
                        new
                        {
                            Id = 2326,
                            Codigo = 224130,
                            Nome = "Técnico de laboratório e fiscalização desportiva"
                        },
                        new
                        {
                            Id = 2327,
                            Codigo = 301105,
                            Nome = "Técnico de laboratório industrial"
                        },
                        new
                        {
                            Id = 2328,
                            Codigo = 314720,
                            Nome = "Técnico de laminação em siderurgia"
                        },
                        new
                        {
                            Id = 2329,
                            Codigo = 314405,
                            Nome = "Técnico de manutenção de sistemas e instrumentos"
                        },
                        new
                        {
                            Id = 2330,
                            Codigo = 313120,
                            Nome = "Técnico de manutenção elétrica"
                        },
                        new
                        {
                            Id = 2331,
                            Codigo = 313125,
                            Nome = "Técnico de manutenção elétrica de máquina"
                        },
                        new
                        {
                            Id = 2332,
                            Codigo = 313205,
                            Nome = "Técnico de manutenção eletrônica"
                        },
                        new
                        {
                            Id = 2333,
                            Codigo = 313210,
                            Nome = "Técnico de manutenção eletrônica (circuitos de máquinas com comando numérico)"
                        },
                        new
                        {
                            Id = 2334,
                            Codigo = 391135,
                            Nome = "Técnico de matéria-prima e material"
                        },
                        new
                        {
                            Id = 2335,
                            Codigo = 311510,
                            Nome = "Técnico de meteorologia"
                        },
                        new
                        {
                            Id = 2336,
                            Codigo = 316305,
                            Nome = "Técnico de mineração"
                        },
                        new
                        {
                            Id = 2337,
                            Codigo = 316310,
                            Nome = "Técnico de mineração (óleo e petróleo)"
                        },
                        new
                        {
                            Id = 2338,
                            Codigo = 312105,
                            Nome = "Técnico de obras civis"
                        },
                        new
                        {
                            Id = 2339,
                            Codigo = 813130,
                            Nome = "Técnico de operação (química, petroquímica e afins)"
                        },
                        new
                        {
                            Id = 2340,
                            Codigo = 353205,
                            Nome = "Técnico de operações e serviços bancários - câmbio"
                        },
                        new
                        {
                            Id = 2341,
                            Codigo = 353210,
                            Nome = "Técnico de operações e serviços bancários - crédito imobiliário"
                        },
                        new
                        {
                            Id = 2342,
                            Codigo = 353215,
                            Nome = "Técnico de operações e serviços bancários - crédito rural"
                        },
                        new
                        {
                            Id = 2343,
                            Codigo = 353220,
                            Nome = "Técnico de operações e serviços bancários - leasing"
                        },
                        new
                        {
                            Id = 2344,
                            Codigo = 353225,
                            Nome = "Técnico de operações e serviços bancários - renda fixa e variável"
                        },
                        new
                        {
                            Id = 2345,
                            Codigo = 322505,
                            Nome = "Técnico de ortopedia"
                        },
                        new
                        {
                            Id = 2346,
                            Codigo = 391220,
                            Nome = "Técnico de painel de controle"
                        },
                        new
                        {
                            Id = 2347,
                            Codigo = 391125,
                            Nome = "Técnico de planejamento de produção"
                        },
                        new
                        {
                            Id = 2348,
                            Codigo = 391130,
                            Nome = "Técnico de planejamento e programação da manutenção"
                        },
                        new
                        {
                            Id = 2349,
                            Codigo = 316325,
                            Nome = "Técnico de produção em refino de petróleo"
                        },
                        new
                        {
                            Id = 2350,
                            Codigo = 313310,
                            Nome = "Técnico de rede (telecomunicações)"
                        },
                        new
                        {
                            Id = 2351,
                            Codigo = 314725,
                            Nome = "Técnico de redução na siderurgia (primeira fusão)"
                        },
                        new
                        {
                            Id = 2352,
                            Codigo = 314730,
                            Nome = "Técnico de refratário em siderurgia"
                        },
                        new
                        {
                            Id = 2353,
                            Codigo = 351735,
                            Nome = "Técnico de resseguros"
                        },
                        new
                        {
                            Id = 2354,
                            Codigo = 312210,
                            Nome = "Técnico de saneamento"
                        },
                        new
                        {
                            Id = 2355,
                            Codigo = 351740,
                            Nome = "Técnico de seguros"
                        },
                        new
                        {
                            Id = 2356,
                            Codigo = 373130,
                            Nome = "Técnico de sistemas audiovisuais"
                        },
                        new
                        {
                            Id = 2357,
                            Codigo = 317210,
                            Nome = "Técnico de suporte ao usuário de tecnologia da informação"
                        },
                        new
                        {
                            Id = 2358,
                            Codigo = 313315,
                            Nome = "Técnico de telecomunicações (telefonia)"
                        },
                        new
                        {
                            Id = 2359,
                            Codigo = 313320,
                            Nome = "Técnico de transmissão (telecomunicações)"
                        },
                        new
                        {
                            Id = 2360,
                            Codigo = 254415,
                            Nome = "Técnico de tributos estadual"
                        },
                        new
                        {
                            Id = 2361,
                            Codigo = 254420,
                            Nome = "Técnico de tributos municipal"
                        },
                        new
                        {
                            Id = 2362,
                            Codigo = 311515,
                            Nome = "Técnico de utilidade (produção e distribuição de vapor, gases, óleos, combustíveis, energia)"
                        },
                        new
                        {
                            Id = 2363,
                            Codigo = 354135,
                            Nome = "Técnico de vendas"
                        },
                        new
                        {
                            Id = 2364,
                            Codigo = 319205,
                            Nome = "Técnico do mobiliário"
                        },
                        new
                        {
                            Id = 2365,
                            Codigo = 313130,
                            Nome = "Técnico eletricista"
                        },
                        new
                        {
                            Id = 2366,
                            Codigo = 313215,
                            Nome = "Técnico eletrônico"
                        },
                        new
                        {
                            Id = 2367,
                            Codigo = 322105,
                            Nome = "Técnico em acupuntura"
                        },
                        new
                        {
                            Id = 2368,
                            Codigo = 351305,
                            Nome = "Técnico em administração"
                        },
                        new
                        {
                            Id = 2369,
                            Codigo = 351310,
                            Nome = "Técnico em administração de comércio exterior"
                        },
                        new
                        {
                            Id = 2370,
                            Codigo = 312305,
                            Nome = "Técnico em agrimensura"
                        },
                        new
                        {
                            Id = 2371,
                            Codigo = 354140,
                            Nome = "Técnico em atendimento e vendas"
                        },
                        new
                        {
                            Id = 2372,
                            Codigo = 314305,
                            Nome = "Técnico em automobilística"
                        },
                        new
                        {
                            Id = 2373,
                            Codigo = 371110,
                            Nome = "Técnico em biblioteconomia"
                        },
                        new
                        {
                            Id = 2374,
                            Codigo = 325305,
                            Nome = "Técnico em biotecnologia"
                        },
                        new
                        {
                            Id = 2375,
                            Codigo = 320105,
                            Nome = "Técnico em bioterismo"
                        },
                        new
                        {
                            Id = 2376,
                            Codigo = 311405,
                            Nome = "Técnico em borracha"
                        },
                        new
                        {
                            Id = 2377,
                            Codigo = 319105,
                            Nome = "Técnico em calçados e artefatos de couro"
                        },
                        new
                        {
                            Id = 2378,
                            Codigo = 314610,
                            Nome = "Técnico em caldeiraria"
                        },
                        new
                        {
                            Id = 2379,
                            Codigo = 313405,
                            Nome = "Técnico em calibração"
                        },
                        new
                        {
                            Id = 2380,
                            Codigo = 321310,
                            Nome = "Técnico em carcinicultura"
                        },
                        new
                        {
                            Id = 2381,
                            Codigo = 319110,
                            Nome = "Técnico em confecções do vestuário"
                        },
                        new
                        {
                            Id = 2382,
                            Codigo = 311115,
                            Nome = "Técnico em curtimento"
                        },
                        new
                        {
                            Id = 2383,
                            Codigo = 352420,
                            Nome = "Técnico em direitos autorais"
                        },
                        new
                        {
                            Id = 2384,
                            Codigo = 300305,
                            Nome = "Técnico em eletromecânica"
                        },
                        new
                        {
                            Id = 2385,
                            Codigo = 324130,
                            Nome = "Técnico em espirometria"
                        },
                        new
                        {
                            Id = 2386,
                            Codigo = 314615,
                            Nome = "Técnico em estruturas metálicas"
                        },
                        new
                        {
                            Id = 2387,
                            Codigo = 325115,
                            Nome = "Técnico em farmácia"
                        },
                        new
                        {
                            Id = 2388,
                            Codigo = 313505,
                            Nome = "Técnico em fotônica"
                        },
                        new
                        {
                            Id = 2389,
                            Codigo = 312310,
                            Nome = "Técnico em geodésia e cartografia"
                        },
                        new
                        {
                            Id = 2390,
                            Codigo = 316105,
                            Nome = "Técnico em geofísica"
                        },
                        new
                        {
                            Id = 2391,
                            Codigo = 316110,
                            Nome = "Técnico em geologia"
                        },
                        new
                        {
                            Id = 2392,
                            Codigo = 316115,
                            Nome = "Técnico em geoquímica"
                        },
                        new
                        {
                            Id = 2393,
                            Codigo = 316120,
                            Nome = "Técnico em geotecnia"
                        },
                        new
                        {
                            Id = 2394,
                            Codigo = 374105,
                            Nome = "Técnico em gravação de áudio"
                        },
                        new
                        {
                            Id = 2395,
                            Codigo = 324220,
                            Nome = "Técnico em hemoterapia"
                        },
                        new
                        {
                            Id = 2396,
                            Codigo = 312315,
                            Nome = "Técnico em hidrografia"
                        },
                        new
                        {
                            Id = 2397,
                            Codigo = 351610,
                            Nome = "Técnico em higiene ocupacional"
                        },
                        new
                        {
                            Id = 2398,
                            Codigo = 320110,
                            Nome = "Técnico em histologia"
                        },
                        new
                        {
                            Id = 2399,
                            Codigo = 325310,
                            Nome = "Técnico em imunobiológicos"
                        },
                        new
                        {
                            Id = 2400,
                            Codigo = 374110,
                            Nome = "Técnico em instalação de equipamentos de áudio"
                        },
                        new
                        {
                            Id = 2401,
                            Codigo = 313410,
                            Nome = "Técnico em instrumentação"
                        },
                        new
                        {
                            Id = 2402,
                            Codigo = 325110,
                            Nome = "Técnico em laboratório de farmácia"
                        },
                        new
                        {
                            Id = 2403,
                            Codigo = 321205,
                            Nome = "Técnico em madeira"
                        },
                        new
                        {
                            Id = 2404,
                            Codigo = 915115,
                            Nome = "Técnico em manutenção de balanças"
                        },
                        new
                        {
                            Id = 2405,
                            Codigo = 313220,
                            Nome = "Técnico em manutenção de equipamentos de informática"
                        },
                        new
                        {
                            Id = 2406,
                            Codigo = 915305,
                            Nome = "Técnico em manutenção de equipamentos e instrumentos médico-hospitalares"
                        },
                        new
                        {
                            Id = 2407,
                            Codigo = 915110,
                            Nome = "Técnico em manutenção de hidrômetros"
                        },
                        new
                        {
                            Id = 2408,
                            Codigo = 915105,
                            Nome = "Técnico em manutenção de instrumentos de medição e precisão"
                        },
                        new
                        {
                            Id = 2409,
                            Codigo = 314410,
                            Nome = "Técnico em manutenção de máquinas"
                        },
                        new
                        {
                            Id = 2410,
                            Codigo = 374115,
                            Nome = "Técnico em masterização de áudio"
                        },
                        new
                        {
                            Id = 2411,
                            Codigo = 311305,
                            Nome = "Técnico em materiais, produtos cerâmicos e vidros"
                        },
                        new
                        {
                            Id = 2412,
                            Codigo = 314105,
                            Nome = "Técnico em mecânica de precisão"
                        },
                        new
                        {
                            Id = 2413,
                            Codigo = 300105,
                            Nome = "Técnico em mecatrônica - automação da manufatura"
                        },
                        new
                        {
                            Id = 2414,
                            Codigo = 300110,
                            Nome = "Técnico em mecatrônica - robótica"
                        },
                        new
                        {
                            Id = 2415,
                            Codigo = 324105,
                            Nome = "Técnico em métodos eletrográficos em encefalografia"
                        },
                        new
                        {
                            Id = 2416,
                            Codigo = 324110,
                            Nome = "Técnico em métodos gráficos em cardiologia"
                        },
                        new
                        {
                            Id = 2417,
                            Codigo = 321315,
                            Nome = "Técnico em mitilicultura"
                        },
                        new
                        {
                            Id = 2418,
                            Codigo = 374130,
                            Nome = "Técnico em mixagem de áudio"
                        },
                        new
                        {
                            Id = 2419,
                            Codigo = 371210,
                            Nome = "Técnico em museologia"
                        },
                        new
                        {
                            Id = 2420,
                            Codigo = 325210,
                            Nome = "Técnico em nutrição e dietética"
                        },
                        new
                        {
                            Id = 2421,
                            Codigo = 322305,
                            Nome = "Técnico em óptica e optometria"
                        },
                        new
                        {
                            Id = 2422,
                            Codigo = 324205,
                            Nome = "Técnico em patologia clínica"
                        },
                        new
                        {
                            Id = 2423,
                            Codigo = 323105,
                            Nome = "Técnico em pecuária"
                        },
                        new
                        {
                            Id = 2424,
                            Codigo = 316320,
                            Nome = "Técnico em pesquisa mineral"
                        },
                        new
                        {
                            Id = 2425,
                            Codigo = 311205,
                            Nome = "Técnico em petroquímica"
                        },
                        new
                        {
                            Id = 2426,
                            Codigo = 321305,
                            Nome = "Técnico em piscicultura"
                        },
                        new
                        {
                            Id = 2427,
                            Codigo = 316330,
                            Nome = "Técnico em planejamento de lavra de minas"
                        },
                        new
                        {
                            Id = 2428,
                            Codigo = 311410,
                            Nome = "Técnico em plástico"
                        },
                        new
                        {
                            Id = 2429,
                            Codigo = 324135,
                            Nome = "Técnico em polissonografia"
                        },
                        new
                        {
                            Id = 2430,
                            Codigo = 316315,
                            Nome = "Técnico em processamento mineral (exceto petróleo)"
                        },
                        new
                        {
                            Id = 2431,
                            Codigo = 371305,
                            Nome = "Técnico em programação visual"
                        },
                        new
                        {
                            Id = 2432,
                            Codigo = 322115,
                            Nome = "Técnico em quiropraxia"
                        },
                        new
                        {
                            Id = 2433,
                            Codigo = 324115,
                            Nome = "Técnico em radiologia e imagenologia"
                        },
                        new
                        {
                            Id = 2434,
                            Codigo = 321320,
                            Nome = "Técnico em ranicultura"
                        },
                        new
                        {
                            Id = 2435,
                            Codigo = 322405,
                            Nome = "Técnico em saúde bucal"
                        },
                        new
                        {
                            Id = 2436,
                            Codigo = 322425,
                            Nome = "Técnico em saúde bucal da estratégia de saúde da família"
                        },
                        new
                        {
                            Id = 2437,
                            Codigo = 351505,
                            Nome = "Técnico em secretariado"
                        },
                        new
                        {
                            Id = 2438,
                            Codigo = 351605,
                            Nome = "Técnico em segurança do trabalho"
                        },
                        new
                        {
                            Id = 2439,
                            Codigo = 341245,
                            Nome = "Técnico em sinais navais"
                        },
                        new
                        {
                            Id = 2440,
                            Codigo = 341235,
                            Nome = "Técnico em sinalização náutica"
                        },
                        new
                        {
                            Id = 2441,
                            Codigo = 314620,
                            Nome = "Técnico em soldagem"
                        },
                        new
                        {
                            Id = 2442,
                            Codigo = 374125,
                            Nome = "Técnico em sonorização"
                        },
                        new
                        {
                            Id = 2443,
                            Codigo = 311520,
                            Nome = "Técnico em tratamento de efluentes"
                        },
                        new
                        {
                            Id = 2444,
                            Codigo = 354805,
                            Nome = "Técnico em turismo"
                        },
                        new
                        {
                            Id = 2445,
                            Codigo = 321210,
                            Nome = "Técnico florestal"
                        },
                        new
                        {
                            Id = 2446,
                            Codigo = 371310,
                            Nome = "Técnico gráfico"
                        },
                        new
                        {
                            Id = 2447,
                            Codigo = 314110,
                            Nome = "Técnico mecânico"
                        },
                        new
                        {
                            Id = 2448,
                            Codigo = 314310,
                            Nome = "Técnico mecânico (aeronaves)"
                        },
                        new
                        {
                            Id = 2449,
                            Codigo = 314115,
                            Nome = "Técnico mecânico (calefação, ventilação e refrigeração)"
                        },
                        new
                        {
                            Id = 2450,
                            Codigo = 314315,
                            Nome = "Técnico mecânico (embarcações)"
                        },
                        new
                        {
                            Id = 2451,
                            Codigo = 314120,
                            Nome = "Técnico mecânico (máquinas)"
                        },
                        new
                        {
                            Id = 2452,
                            Codigo = 314125,
                            Nome = "Técnico mecânico (motores)"
                        },
                        new
                        {
                            Id = 2453,
                            Codigo = 314205,
                            Nome = "Técnico mecânico na fabricação de ferramentas"
                        },
                        new
                        {
                            Id = 2454,
                            Codigo = 314210,
                            Nome = "Técnico mecânico na manutenção de ferramentas"
                        },
                        new
                        {
                            Id = 2455,
                            Codigo = 391230,
                            Nome = "Técnico operacional de serviços de correios"
                        },
                        new
                        {
                            Id = 2456,
                            Codigo = 311105,
                            Nome = "Técnico químico"
                        },
                        new
                        {
                            Id = 2457,
                            Codigo = 301115,
                            Nome = "Técnico químico de petróleo"
                        },
                        new
                        {
                            Id = 2458,
                            Codigo = 311605,
                            Nome = "Técnico têxtil"
                        },
                        new
                        {
                            Id = 2459,
                            Codigo = 311610,
                            Nome = "Técnico têxtil (tratamentos químicos)"
                        },
                        new
                        {
                            Id = 2460,
                            Codigo = 311615,
                            Nome = "Técnico têxtil de fiação"
                        },
                        new
                        {
                            Id = 2461,
                            Codigo = 311620,
                            Nome = "Técnico têxtil de malharia"
                        },
                        new
                        {
                            Id = 2462,
                            Codigo = 311625,
                            Nome = "Técnico têxtil de tecelagem"
                        },
                        new
                        {
                            Id = 2463,
                            Codigo = 341240,
                            Nome = "Técnicos em manobras em equipamentos de convés"
                        },
                        new
                        {
                            Id = 2464,
                            Codigo = 222215,
                            Nome = "Tecnólogo em alimentos"
                        },
                        new
                        {
                            Id = 2465,
                            Codigo = 202120,
                            Nome = "Tecnólogo em automação industrial"
                        },
                        new
                        {
                            Id = 2466,
                            Codigo = 214280,
                            Nome = "Tecnólogo em construção civil"
                        },
                        new
                        {
                            Id = 2467,
                            Codigo = 214360,
                            Nome = "Tecnólogo em eletricidade"
                        },
                        new
                        {
                            Id = 2468,
                            Codigo = 214365,
                            Nome = "Tecnólogo em eletrônica"
                        },
                        new
                        {
                            Id = 2469,
                            Codigo = 214435,
                            Nome = "Tecnólogo em fabricação mecânica"
                        },
                        new
                        {
                            Id = 2470,
                            Codigo = 271110,
                            Nome = "Tecnólogo em gastronomia"
                        },
                        new
                        {
                            Id = 2471,
                            Codigo = 142120,
                            Nome = "Tecnólogo em gestão administrativo- financeira"
                        },
                        new
                        {
                            Id = 2472,
                            Codigo = 142535,
                            Nome = "Tecnólogo em gestão da tecnologia da informação"
                        },
                        new
                        {
                            Id = 2473,
                            Codigo = 131215,
                            Nome = "Tecnólogo em gestão hospitalar"
                        },
                        new
                        {
                            Id = 2474,
                            Codigo = 342125,
                            Nome = "Tecnólogo em logística de transporte"
                        },
                        new
                        {
                            Id = 2475,
                            Codigo = 202115,
                            Nome = "Tecnólogo em mecatrônica"
                        },
                        new
                        {
                            Id = 2476,
                            Codigo = 214010,
                            Nome = "Tecnólogo em meio ambiente"
                        },
                        new
                        {
                            Id = 2477,
                            Codigo = 214615,
                            Nome = "Tecnólogo em metalurgia"
                        },
                        new
                        {
                            Id = 2478,
                            Codigo = 214745,
                            Nome = "Tecnólogo em petróleo e gás"
                        },
                        new
                        {
                            Id = 2479,
                            Codigo = 213215,
                            Nome = "Tecnólogo em processos químicos"
                        },
                        new
                        {
                            Id = 2480,
                            Codigo = 262135,
                            Nome = "Tecnólogo em produção audiovisual"
                        },
                        new
                        {
                            Id = 2481,
                            Codigo = 262130,
                            Nome = "Tecnólogo em produção fonográfica"
                        },
                        new
                        {
                            Id = 2482,
                            Codigo = 214930,
                            Nome = "Tecnólogo em produção industrial"
                        },
                        new
                        {
                            Id = 2483,
                            Codigo = 214535,
                            Nome = "Tecnólogo em produção sulcroalcooleira"
                        },
                        new
                        {
                            Id = 2484,
                            Codigo = 324120,
                            Nome = "Tecnólogo em radiologia"
                        },
                        new
                        {
                            Id = 2485,
                            Codigo = 214750,
                            Nome = "Tecnólogo em rochas ornamentais"
                        },
                        new
                        {
                            Id = 2486,
                            Codigo = 252320,
                            Nome = "Tecnólogo em secretariado escolar"
                        },
                        new
                        {
                            Id = 2487,
                            Codigo = 214935,
                            Nome = "Tecnólogo em segurança do trabalho"
                        },
                        new
                        {
                            Id = 2488,
                            Codigo = 142710,
                            Nome = "Tecnólogo em sistemas biomédicos"
                        },
                        new
                        {
                            Id = 2489,
                            Codigo = 314625,
                            Nome = "Tecnólogo em soldagem"
                        },
                        new
                        {
                            Id = 2490,
                            Codigo = 214370,
                            Nome = "Tecnólogo em telecomunicações"
                        },
                        new
                        {
                            Id = 2491,
                            Codigo = 324125,
                            Nome = "Tecnólogo oftálmico"
                        },
                        new
                        {
                            Id = 2492,
                            Codigo = 422330,
                            Nome = "Teleatendente de emergência"
                        },
                        new
                        {
                            Id = 2493,
                            Codigo = 422205,
                            Nome = "Telefonista"
                        },
                        new
                        {
                            Id = 2494,
                            Codigo = 422210,
                            Nome = "Teleoperador"
                        },
                        new
                        {
                            Id = 2495,
                            Codigo = 716205,
                            Nome = "Telhador (telhas de argila e materiais similares)"
                        },
                        new
                        {
                            Id = 2496,
                            Codigo = 716210,
                            Nome = "Telhador (telhas de cimento-amianto)"
                        },
                        new
                        {
                            Id = 2497,
                            Codigo = 716215,
                            Nome = "Telhador (telhas metálicas)"
                        },
                        new
                        {
                            Id = 2498,
                            Codigo = 716220,
                            Nome = "Telhador (telhas plásticas)"
                        },
                        new
                        {
                            Id = 2499,
                            Codigo = 723125,
                            Nome = "Temperador de metais e de compósitos"
                        },
                        new
                        {
                            Id = 2500,
                            Codigo = 823255,
                            Nome = "Temperador de vidro"
                        },
                        new
                        {
                            Id = 2501,
                            Codigo = 30305,
                            Nome = "Tenente do corpo de bombeiros militar"
                        },
                        new
                        {
                            Id = 2502,
                            Codigo = 30115,
                            Nome = "Tenente-coronel bombeiro militar"
                        },
                        new
                        {
                            Id = 2503,
                            Codigo = 20110,
                            Nome = "Tenente-coronel da polícia militar"
                        },
                        new
                        {
                            Id = 2504,
                            Codigo = 263115,
                            Nome = "Teólogo"
                        },
                        new
                        {
                            Id = 2505,
                            Codigo = 322125,
                            Nome = "Terapeuta holístico"
                        },
                        new
                        {
                            Id = 2506,
                            Codigo = 223905,
                            Nome = "Terapeuta ocupacional"
                        },
                        new
                        {
                            Id = 2507,
                            Codigo = 353230,
                            Nome = "Tesoureiro de banco"
                        },
                        new
                        {
                            Id = 2508,
                            Codigo = 311725,
                            Nome = "Tingidor de couros e peles"
                        },
                        new
                        {
                            Id = 2509,
                            Codigo = 516330,
                            Nome = "Tingidor de roupas"
                        },
                        new
                        {
                            Id = 2510,
                            Codigo = 768605,
                            Nome = "Tipógrafo"
                        },
                        new
                        {
                            Id = 2511,
                            Codigo = 376250,
                            Nome = "Titeriteiro"
                        },
                        new
                        {
                            Id = 2512,
                            Codigo = 312320,
                            Nome = "Topógrafo"
                        },
                        new
                        {
                            Id = 2513,
                            Codigo = 712225,
                            Nome = "Torneiro (lavra de pedra)"
                        },
                        new
                        {
                            Id = 2514,
                            Codigo = 773355,
                            Nome = "Torneiro na usinagem convencional de madeira"
                        },
                        new
                        {
                            Id = 2515,
                            Codigo = 841625,
                            Nome = "Torrador de cacau"
                        },
                        new
                        {
                            Id = 2516,
                            Codigo = 841610,
                            Nome = "Torrador de café"
                        },
                        new
                        {
                            Id = 2517,
                            Codigo = 711330,
                            Nome = "Torrista (petróleo)"
                        },
                        new
                        {
                            Id = 2518,
                            Codigo = 519320,
                            Nome = "Tosador de animais domésticos"
                        },
                        new
                        {
                            Id = 2519,
                            Codigo = 621005,
                            Nome = "Trabalhador agropecuário em geral"
                        },
                        new
                        {
                            Id = 2520,
                            Codigo = 623305,
                            Nome = "Trabalhador da avicultura de corte"
                        },
                        new
                        {
                            Id = 2521,
                            Codigo = 623310,
                            Nome = "Trabalhador da avicultura de postura"
                        },
                        new
                        {
                            Id = 2522,
                            Codigo = 623205,
                            Nome = "Trabalhador da caprinocultura"
                        },
                        new
                        {
                            Id = 2523,
                            Codigo = 622205,
                            Nome = "Trabalhador da cultura de algodão"
                        },
                        new
                        {
                            Id = 2524,
                            Codigo = 622105,
                            Nome = "Trabalhador da cultura de arroz"
                        },
                        new
                        {
                            Id = 2525,
                            Codigo = 622605,
                            Nome = "Trabalhador da cultura de cacau"
                        },
                        new
                        {
                            Id = 2526,
                            Codigo = 622610,
                            Nome = "Trabalhador da cultura de café"
                        },
                        new
                        {
                            Id = 2527,
                            Codigo = 622110,
                            Nome = "Trabalhador da cultura de cana-de-açúcar"
                        },
                        new
                        {
                            Id = 2528,
                            Codigo = 622615,
                            Nome = "Trabalhador da cultura de erva-mate"
                        },
                        new
                        {
                            Id = 2529,
                            Codigo = 622805,
                            Nome = "Trabalhador da cultura de especiarias"
                        },
                        new
                        {
                            Id = 2530,
                            Codigo = 622620,
                            Nome = "Trabalhador da cultura de fumo"
                        },
                        new
                        {
                            Id = 2531,
                            Codigo = 622625,
                            Nome = "Trabalhador da cultura de guaraná"
                        },
                        new
                        {
                            Id = 2532,
                            Codigo = 622115,
                            Nome = "Trabalhador da cultura de milho e sorgo"
                        },
                        new
                        {
                            Id = 2533,
                            Codigo = 622810,
                            Nome = "Trabalhador da cultura de plantas aromáticas e medicinais"
                        },
                        new
                        {
                            Id = 2534,
                            Codigo = 622210,
                            Nome = "Trabalhador da cultura de sisal"
                        },
                        new
                        {
                            Id = 2535,
                            Codigo = 622120,
                            Nome = "Trabalhador da cultura de trigo, aveia, cevada e triticale"
                        },
                        new
                        {
                            Id = 2536,
                            Codigo = 622215,
                            Nome = "Trabalhador da cultura do rami"
                        },
                        new
                        {
                            Id = 2537,
                            Codigo = 623320,
                            Nome = "Trabalhador da cunicultura"
                        },
                        new
                        {
                            Id = 2538,
                            Codigo = 823320,
                            Nome = "Trabalhador da elaboração de pré-fabricados (cimento amianto)"
                        },
                        new
                        {
                            Id = 2539,
                            Codigo = 823325,
                            Nome = "Trabalhador da elaboração de pré-fabricados (concreto armado)"
                        },
                        new
                        {
                            Id = 2540,
                            Codigo = 632405,
                            Nome = "Trabalhador da exploração de açaí"
                        },
                        new
                        {
                            Id = 2541,
                            Codigo = 632305,
                            Nome = "Trabalhador da exploração de andiroba"
                        },
                        new
                        {
                            Id = 2542,
                            Codigo = 632505,
                            Nome = "Trabalhador da exploração de árvores e arbustos produtores de substâncias aromát., Medic. E tóxicas"
                        },
                        new
                        {
                            Id = 2543,
                            Codigo = 632310,
                            Nome = "Trabalhador da exploração de babaçu"
                        },
                        new
                        {
                            Id = 2544,
                            Codigo = 632315,
                            Nome = "Trabalhador da exploração de bacaba"
                        },
                        new
                        {
                            Id = 2545,
                            Codigo = 632320,
                            Nome = "Trabalhador da exploração de buriti"
                        },
                        new
                        {
                            Id = 2546,
                            Codigo = 632325,
                            Nome = "Trabalhador da exploração de carnaúba"
                        },
                        new
                        {
                            Id = 2547,
                            Codigo = 632410,
                            Nome = "Trabalhador da exploração de castanha"
                        },
                        new
                        {
                            Id = 2548,
                            Codigo = 632510,
                            Nome = "Trabalhador da exploração de cipós produtores de substâncias aromáticas, medicinais e tóxicas"
                        },
                        new
                        {
                            Id = 2549,
                            Codigo = 632330,
                            Nome = "Trabalhador da exploração de coco-da-praia"
                        },
                        new
                        {
                            Id = 2550,
                            Codigo = 632335,
                            Nome = "Trabalhador da exploração de copaíba"
                        },
                        new
                        {
                            Id = 2551,
                            Codigo = 632210,
                            Nome = "Trabalhador da exploração de espécies produtoras de gomas não elásticas"
                        },
                        new
                        {
                            Id = 2552,
                            Codigo = 632515,
                            Nome = "Trabalhador da exploração de madeiras tanantes"
                        },
                        new
                        {
                            Id = 2553,
                            Codigo = 632340,
                            Nome = "Trabalhador da exploração de malva (pãina)"
                        },
                        new
                        {
                            Id = 2554,
                            Codigo = 632345,
                            Nome = "Trabalhador da exploração de murumuru"
                        },
                        new
                        {
                            Id = 2555,
                            Codigo = 632350,
                            Nome = "Trabalhador da exploração de oiticica"
                        },
                        new
                        {
                            Id = 2556,
                            Codigo = 632355,
                            Nome = "Trabalhador da exploração de ouricuri"
                        },
                        new
                        {
                            Id = 2557,
                            Codigo = 632360,
                            Nome = "Trabalhador da exploração de pequi"
                        },
                        new
                        {
                            Id = 2558,
                            Codigo = 632365,
                            Nome = "Trabalhador da exploração de piaçava"
                        },
                        new
                        {
                            Id = 2559,
                            Codigo = 632415,
                            Nome = "Trabalhador da exploração de pinhão"
                        },
                        new
                        {
                            Id = 2560,
                            Codigo = 632420,
                            Nome = "Trabalhador da exploração de pupunha"
                        },
                        new
                        {
                            Id = 2561,
                            Codigo = 632520,
                            Nome = "Trabalhador da exploração de raízes produtoras de substâncias aromáticas, medicinais e tóxicas"
                        },
                        new
                        {
                            Id = 2562,
                            Codigo = 632215,
                            Nome = "Trabalhador da exploração de resinas"
                        },
                        new
                        {
                            Id = 2563,
                            Codigo = 632370,
                            Nome = "Trabalhador da exploração de tucum"
                        },
                        new
                        {
                            Id = 2564,
                            Codigo = 632525,
                            Nome = "Trabalhador da extração de substâncias aromáticas, medicinais e tóxicas, em geral"
                        },
                        new
                        {
                            Id = 2565,
                            Codigo = 812110,
                            Nome = "Trabalhador da fabricação de munição e explosivos"
                        },
                        new
                        {
                            Id = 2566,
                            Codigo = 823330,
                            Nome = "Trabalhador da fabricação de pedras artificiais"
                        },
                        new
                        {
                            Id = 2567,
                            Codigo = 811125,
                            Nome = "Trabalhador da fabricação de resinas e vernizes"
                        },
                        new
                        {
                            Id = 2568,
                            Codigo = 514325,
                            Nome = "Trabalhador da manutenção de edificações"
                        },
                        new
                        {
                            Id = 2569,
                            Codigo = 623210,
                            Nome = "Trabalhador da ovinocultura"
                        },
                        new
                        {
                            Id = 2570,
                            Codigo = 623105,
                            Nome = "Trabalhador da pecuária (asininos e muares)"
                        },
                        new
                        {
                            Id = 2571,
                            Codigo = 623110,
                            Nome = "Trabalhador da pecuária (bovinos corte)"
                        },
                        new
                        {
                            Id = 2572,
                            Codigo = 623115,
                            Nome = "Trabalhador da pecuária (bovinos leite)"
                        },
                        new
                        {
                            Id = 2573,
                            Codigo = 623120,
                            Nome = "Trabalhador da pecuária (bubalinos)"
                        },
                        new
                        {
                            Id = 2574,
                            Codigo = 623125,
                            Nome = "Trabalhador da pecuária (eqüinos)"
                        },
                        new
                        {
                            Id = 2575,
                            Codigo = 623215,
                            Nome = "Trabalhador da suinocultura"
                        },
                        new
                        {
                            Id = 2576,
                            Codigo = 632125,
                            Nome = "Trabalhador de extração florestal, em geral"
                        },
                        new
                        {
                            Id = 2577,
                            Codigo = 841476,
                            Nome = "Trabalhador de fabricação de margarina"
                        },
                        new
                        {
                            Id = 2578,
                            Codigo = 848325,
                            Nome = "Trabalhador de fabricação de sorvete"
                        },
                        new
                        {
                            Id = 2579,
                            Codigo = 811130,
                            Nome = "Trabalhador de fabricação de tintas"
                        },
                        new
                        {
                            Id = 2580,
                            Codigo = 841720,
                            Nome = "Trabalhador de fabricação de vinhos"
                        },
                        new
                        {
                            Id = 2581,
                            Codigo = 623015,
                            Nome = "Trabalhador de pecuária polivalente"
                        },
                        new
                        {
                            Id = 2582,
                            Codigo = 841484,
                            Nome = "Trabalhador de preparação de pescados (limpeza)"
                        },
                        new
                        {
                            Id = 2583,
                            Codigo = 514225,
                            Nome = "Trabalhador de serviços de limpeza e conservação de áreas públicas"
                        },
                        new
                        {
                            Id = 2584,
                            Codigo = 841505,
                            Nome = "Trabalhador de tratamento do leite e fabricação de laticínios e afins"
                        },
                        new
                        {
                            Id = 2585,
                            Codigo = 765405,
                            Nome = "Trabalhador do acabamento de artefatos de tecidos e couros"
                        },
                        new
                        {
                            Id = 2586,
                            Codigo = 848605,
                            Nome = "Trabalhador do beneficiamento de fumo"
                        },
                        new
                        {
                            Id = 2587,
                            Codigo = 623405,
                            Nome = "Trabalhador em criatórios de animais produtores de veneno"
                        },
                        new
                        {
                            Id = 2588,
                            Codigo = 623410,
                            Nome = "Trabalhador na apicultura"
                        },
                        new
                        {
                            Id = 2589,
                            Codigo = 622705,
                            Nome = "Trabalhador na cultura de amendoim"
                        },
                        new
                        {
                            Id = 2590,
                            Codigo = 622710,
                            Nome = "Trabalhador na cultura de canola"
                        },
                        new
                        {
                            Id = 2591,
                            Codigo = 622715,
                            Nome = "Trabalhador na cultura de coco-da-baía"
                        },
                        new
                        {
                            Id = 2592,
                            Codigo = 622720,
                            Nome = "Trabalhador na cultura de dendê"
                        },
                        new
                        {
                            Id = 2593,
                            Codigo = 622725,
                            Nome = "Trabalhador na cultura de mamona"
                        },
                        new
                        {
                            Id = 2594,
                            Codigo = 622730,
                            Nome = "Trabalhador na cultura de soja"
                        },
                        new
                        {
                            Id = 2595,
                            Codigo = 622735,
                            Nome = "Trabalhador na cultura do girassol"
                        },
                        new
                        {
                            Id = 2596,
                            Codigo = 622740,
                            Nome = "Trabalhador na cultura do linho"
                        },
                        new
                        {
                            Id = 2597,
                            Codigo = 823265,
                            Nome = "Trabalhador na fabricação de produtos abrasivos"
                        },
                        new
                        {
                            Id = 2598,
                            Codigo = 623415,
                            Nome = "Trabalhador na minhocultura"
                        },
                        new
                        {
                            Id = 2599,
                            Codigo = 622305,
                            Nome = "Trabalhador na olericultura (frutos e sementes)"
                        },
                        new
                        {
                            Id = 2600,
                            Codigo = 622310,
                            Nome = "Trabalhador na olericultura (legumes)"
                        },
                        new
                        {
                            Id = 2601,
                            Codigo = 622315,
                            Nome = "Trabalhador na olericultura (raízes, bulbos e tubérculos)"
                        },
                        new
                        {
                            Id = 2602,
                            Codigo = 622320,
                            Nome = "Trabalhador na olericultura (talos, folhas e flores)"
                        },
                        new
                        {
                            Id = 2603,
                            Codigo = 643005,
                            Nome = "Trabalhador na operação de sistema de irrigação localizada (microaspersão e gotejamento)"
                        },
                        new
                        {
                            Id = 2604,
                            Codigo = 643010,
                            Nome = "Trabalhador na operação de sistema de irrigação por aspersão (pivô central)"
                        },
                        new
                        {
                            Id = 2605,
                            Codigo = 643015,
                            Nome = "Trabalhador na operação de sistemas convencionais de irrigação por aspersão"
                        },
                        new
                        {
                            Id = 2606,
                            Codigo = 643020,
                            Nome = "Trabalhador na operação de sistemas de irrigação e aspersão (alto propelido)"
                        },
                        new
                        {
                            Id = 2607,
                            Codigo = 643025,
                            Nome = "Trabalhador na operação de sistemas de irrigação por superfície e drenagem"
                        },
                        new
                        {
                            Id = 2608,
                            Codigo = 622015,
                            Nome = "Trabalhador na produção de mudas e sementes"
                        },
                        new
                        {
                            Id = 2609,
                            Codigo = 623420,
                            Nome = "Trabalhador na sericicultura"
                        },
                        new
                        {
                            Id = 2610,
                            Codigo = 622505,
                            Nome = "Trabalhador no cultivo de árvores frutíferas"
                        },
                        new
                        {
                            Id = 2611,
                            Codigo = 622510,
                            Nome = "Trabalhador no cultivo de espécies frutíferas rasteiras"
                        },
                        new
                        {
                            Id = 2612,
                            Codigo = 622405,
                            Nome = "Trabalhador no cultivo de flores e folhagens de corte"
                        },
                        new
                        {
                            Id = 2613,
                            Codigo = 622410,
                            Nome = "Trabalhador no cultivo de flores em vaso"
                        },
                        new
                        {
                            Id = 2614,
                            Codigo = 622415,
                            Nome = "Trabalhador no cultivo de forrações"
                        },
                        new
                        {
                            Id = 2615,
                            Codigo = 622420,
                            Nome = "Trabalhador no cultivo de mudas"
                        },
                        new
                        {
                            Id = 2616,
                            Codigo = 622425,
                            Nome = "Trabalhador no cultivo de plantas ornamentais"
                        },
                        new
                        {
                            Id = 2617,
                            Codigo = 622515,
                            Nome = "Trabalhador no cultivo de trepadeiras frutíferas"
                        },
                        new
                        {
                            Id = 2618,
                            Codigo = 764005,
                            Nome = "Trabalhador polivalente da confecção de calçados"
                        },
                        new
                        {
                            Id = 2619,
                            Codigo = 762005,
                            Nome = "Trabalhador polivalente do curtimento de couros e peles"
                        },
                        new
                        {
                            Id = 2620,
                            Codigo = 783235,
                            Nome = "Trabalhador portuário de capatazia"
                        },
                        new
                        {
                            Id = 2621,
                            Codigo = 622020,
                            Nome = "Trabalhador volante da agricultura"
                        },
                        new
                        {
                            Id = 2622,
                            Codigo = 712230,
                            Nome = "Traçador de pedras"
                        },
                        new
                        {
                            Id = 2623,
                            Codigo = 261420,
                            Nome = "Tradutor"
                        },
                        new
                        {
                            Id = 2624,
                            Codigo = 724610,
                            Nome = "Trançador de cabos de aço"
                        },
                        new
                        {
                            Id = 2625,
                            Codigo = 752120,
                            Nome = "Transformador de tubos de vidro"
                        },
                        new
                        {
                            Id = 2626,
                            Codigo = 376255,
                            Nome = "Trapezista"
                        },
                        new
                        {
                            Id = 2627,
                            Codigo = 623020,
                            Nome = "Tratador de animais"
                        },
                        new
                        {
                            Id = 2628,
                            Codigo = 641015,
                            Nome = "Tratorista agrícola"
                        },
                        new
                        {
                            Id = 2629,
                            Codigo = 751130,
                            Nome = "Trefilador (joalheria e ourivesaria)"
                        },
                        new
                        {
                            Id = 2630,
                            Codigo = 811775,
                            Nome = "Trefilador de borracha"
                        },
                        new
                        {
                            Id = 2631,
                            Codigo = 722415,
                            Nome = "Trefilador de metais, à máquina"
                        },
                        new
                        {
                            Id = 2632,
                            Codigo = 224135,
                            Nome = "Treinador profissional de futebol"
                        },
                        new
                        {
                            Id = 2633,
                            Codigo = 768115,
                            Nome = "Tricoteiro, à mão"
                        },
                        new
                        {
                            Id = 2634,
                            Codigo = 782810,
                            Nome = "Tropeiro"
                        },
                        new
                        {
                            Id = 2635,
                            Codigo = 122520,
                            Nome = "Turismólogo"
                        },
                        new
                        {
                            Id = 2636,
                            Codigo = 214130,
                            Nome = "Urbanista"
                        },
                        new
                        {
                            Id = 2637,
                            Codigo = 762345,
                            Nome = "Vaqueador de couros e peles"
                        },
                        new
                        {
                            Id = 2638,
                            Codigo = 514215,
                            Nome = "Varredor de rua"
                        },
                        new
                        {
                            Id = 2639,
                            Codigo = 776430,
                            Nome = "Vassoureiro"
                        },
                        new
                        {
                            Id = 2640,
                            Codigo = 524215,
                            Nome = "Vendedor  permissionário"
                        },
                        new
                        {
                            Id = 2641,
                            Codigo = 524305,
                            Nome = "Vendedor ambulante"
                        },
                        new
                        {
                            Id = 2642,
                            Codigo = 521110,
                            Nome = "Vendedor de comércio varejista"
                        },
                        new
                        {
                            Id = 2643,
                            Codigo = 521105,
                            Nome = "Vendedor em comércio atacadista"
                        },
                        new
                        {
                            Id = 2644,
                            Codigo = 524105,
                            Nome = "Vendedor em domicílio"
                        },
                        new
                        {
                            Id = 2645,
                            Codigo = 354145,
                            Nome = "Vendedor pracista"
                        },
                        new
                        {
                            Id = 2646,
                            Codigo = 111120,
                            Nome = "Vereador"
                        },
                        new
                        {
                            Id = 2647,
                            Codigo = 717025,
                            Nome = "Vibradorista"
                        },
                        new
                        {
                            Id = 2648,
                            Codigo = 111240,
                            Nome = "Vice-governador de estado"
                        },
                        new
                        {
                            Id = 2649,
                            Codigo = 111245,
                            Nome = "Vice-governador do distrito federal"
                        },
                        new
                        {
                            Id = 2650,
                            Codigo = 111255,
                            Nome = "Vice-prefeito"
                        },
                        new
                        {
                            Id = 2651,
                            Codigo = 111210,
                            Nome = "Vice-presidente da república"
                        },
                        new
                        {
                            Id = 2652,
                            Codigo = 716305,
                            Nome = "Vidraceiro"
                        },
                        new
                        {
                            Id = 2653,
                            Codigo = 716310,
                            Nome = "Vidraceiro (edificações)"
                        },
                        new
                        {
                            Id = 2654,
                            Codigo = 716315,
                            Nome = "Vidraceiro (vitrais)"
                        },
                        new
                        {
                            Id = 2655,
                            Codigo = 517420,
                            Nome = "Vigia"
                        },
                        new
                        {
                            Id = 2656,
                            Codigo = 517320,
                            Nome = "Vigia florestal"
                        },
                        new
                        {
                            Id = 2657,
                            Codigo = 517325,
                            Nome = "Vigia portuário"
                        },
                        new
                        {
                            Id = 2658,
                            Codigo = 517330,
                            Nome = "Vigilante"
                        },
                        new
                        {
                            Id = 2659,
                            Codigo = 841740,
                            Nome = "Vinagreiro"
                        },
                        new
                        {
                            Id = 2660,
                            Codigo = 515120,
                            Nome = "Visitador sanitário"
                        },
                        new
                        {
                            Id = 2661,
                            Codigo = 215150,
                            Nome = "Vistoriador naval"
                        },
                        new
                        {
                            Id = 2662,
                            Codigo = 375115,
                            Nome = "Visual merchandiser"
                        },
                        new
                        {
                            Id = 2663,
                            Codigo = 632015,
                            Nome = "Viveirista florestal"
                        },
                        new
                        {
                            Id = 2664,
                            Codigo = 841745,
                            Nome = "Xaropeiro"
                        },
                        new
                        {
                            Id = 2665,
                            Codigo = 514120,
                            Nome = "Zelador de edifício"
                        },
                        new
                        {
                            Id = 2666,
                            Codigo = 223310,
                            Nome = "Zootecnista"
                        },
                        new
                        {
                            Id = 2667,
                            Codigo = 999999,
                            Nome = "Balconista"
                        },
                        new
                        {
                            Id = 2668,
                            Codigo = 999998,
                            Nome = "Aposentado"
                        },
                        new
                        {
                            Id = 2669,
                            Codigo = 999997,
                            Nome = "Pensionista"
                        },
                        new
                        {
                            Id = 2670,
                            Codigo = 999996,
                            Nome = "Autônomo"
                        },
                        new
                        {
                            Id = 2671,
                            Codigo = 999995,
                            Nome = "Do Lar"
                        },
                        new
                        {
                            Id = 2672,
                            Codigo = 999994,
                            Nome = "Auxiliar de serviços gerais"
                        },
                        new
                        {
                            Id = 2673,
                            Codigo = 999993,
                            Nome = "Servidor Público"
                        },
                        new
                        {
                            Id = 2674,
                            Codigo = 999992,
                            Nome = "Estagiário"
                        },
                        new
                        {
                            Id = 2675,
                            Codigo = 999991,
                            Nome = "Militar"
                        },
                        new
                        {
                            Id = 2676,
                            Codigo = 999990,
                            Nome = "Empresário"
                        },
                        new
                        {
                            Id = 2677,
                            Codigo = 999989,
                            Nome = "Professor"
                        },
                        new
                        {
                            Id = 2678,
                            Codigo = 999988,
                            Nome = "Comerciante"
                        },
                        new
                        {
                            Id = 2679,
                            Codigo = 999987,
                            Nome = "Outros"
                        },
                        new
                        {
                            Id = 2680,
                            Codigo = 999986,
                            Nome = "Pecuarista"
                        },
                        new
                        {
                            Id = 2681,
                            Codigo = 999985,
                            Nome = "Gerente de custo"
                        },
                        new
                        {
                            Id = 2682,
                            Codigo = 999984,
                            Nome = "AuxiliarDeProdução"
                        },
                        new
                        {
                            Id = 2683,
                            Codigo = 999983,
                            Nome = "Mecânico de Diesel"
                        },
                        new
                        {
                            Id = 2684,
                            Codigo = 999982,
                            Nome = "Preparador de coquetel"
                        },
                        new
                        {
                            Id = 2685,
                            Codigo = 999981,
                            Nome = "Bancário"
                        },
                        new
                        {
                            Id = 2686,
                            Codigo = 999980,
                            Nome = "Devops"
                        },
                        new
                        {
                            Id = 2687,
                            Codigo = 999979,
                            Nome = "Programador"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Seguradora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CodigoSeguradora")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Susep")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("TipoPessoaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoPessoaId");

                    b.ToTable("seguradora", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.SeguradoraContato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ramal")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("SeguradoraId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.HasIndex("SeguradoraId");

                    b.ToTable("seguradora_contato", "loteamento");

                    b.HasDiscriminator().HasValue("SeguradoraContato");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Sexo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("sexo", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Feminino"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.SituacaoFrete", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("situacaofrete", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Incluso"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Separado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sem Frete"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.TipoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoempresa", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Incorporadora"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "SPE"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "SCP"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Construtora"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Incorporadora e Construtora"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Outros"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.TipoEscolaridade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoescolaridade", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Fundamental - Incompleto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fundamental - Completo"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Médio - Incompleto"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Médio - Completo"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Superior - Incompleto"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Superior - Completo"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Sem Escolaridade"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Mestrado"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Doutorado"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Pós-graduação - Incompleto"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Pós-graduação - Completo"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.TipoOrigem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("tipoorigem", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Manual"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Requisição"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Pedido"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Inventário"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.TipoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipopessoa", "geral");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Física"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Jurídica"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.TipoProcessoJudicial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoprocessojudicial", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AssinanteId")
                        .HasColumnType("integer");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<int[]>("Permissoes")
                        .HasColumnType("integer[]");

                    b.Property<bool>("PrimeiroAcesso")
                        .HasColumnType("boolean");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<bool>("TemaEscuro")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("usuario", "geral");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ClasseComposicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Sigla")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("classecomposicao", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.Composicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("ClasseId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("OrigemId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("composicao", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ComposicaoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Coeficiente")
                        .HasColumnType("numeric");

                    b.Property<int?>("ComposicaoAuxiliarId")
                        .HasColumnType("integer");

                    b.Property<int>("ComposicaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComposicaoAuxiliarId");

                    b.HasIndex("ComposicaoId");

                    b.HasIndex("InsumoId");

                    b.ToTable("composicaoitem", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrigemId");

                    b.HasIndex("TipoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("insumo", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("ModeloEtapaPaiId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ModeloEtapaPaiId");

                    b.ToTable("modeloorcamentoetapa", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ModeloEtapaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ModeloEtapaId");

                    b.ToTable("modeloorcamentoetapaitem", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("EtapaPaiId")
                        .HasColumnType("integer");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EtapaPaiId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("orcamentoetapa", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComposicaoId")
                        .HasColumnType("integer");

                    b.Property<int>("EtapaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ComposicaoId");

                    b.HasIndex("EtapaId");

                    b.ToTable("orcamentoetapaitem", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoObras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataHoraAtualizacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<bool>("EncargosDesonerados")
                        .HasColumnType("boolean");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("OrigemId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PercentualBDI")
                        .HasColumnType("numeric");

                    b.Property<string>("Referencia")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("OrigemId");

                    b.ToTable("orcamentoobras", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrigemDados", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("origemdados", "orcamentoobras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Manual"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Sinapi"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.TipoComposicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("Sigla")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("tipocomposicao", "orcamentoobras");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.TipoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("tipoinsumo", "orcamentoobras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Administração"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aluguel"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Equipamento"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Equipamento para Aquisição Permanente"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Mão de Obra"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Material"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Outros"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Taxas"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Verba"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CentroCustoId")
                        .HasColumnType("integer");

                    b.Property<int>("ContaGerencialId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PrazoFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PrazoGarantiaFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PrazoGarantiaInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("PrazoInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("TipoId");

                    b.ToTable("ContratoFornecedor", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoFornecedorId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoFornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContratoFornecedorDocumento", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Caucao")
                        .HasColumnType("numeric");

                    b.Property<int>("ContratoFornecedorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EtapaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContratoFornecedorId");

                    b.HasIndex("EtapaId");

                    b.ToTable("ContratoFornecedorItem", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorObservacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoFornecedorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoFornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContratoFornecedorObservacao", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int?>("EtapaPaiId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int?>("TipoEmpreendimentoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EtapaPaiId");

                    b.HasIndex("TipoEmpreendimentoId");

                    b.ToTable("etapa", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Execucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MedicaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ContratoItemId");

                    b.HasIndex("MedicaoId");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Execucao", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ExecucaoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Dados")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("ExecucaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("Tamanho")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExecucaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ExecucaoDocumento", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ExecucaoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExecucaoId")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExecucaoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("ExecucaoUnidade", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Medicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContratoFornecedorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DespesaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContratoFornecedorId");

                    b.HasIndex("DespesaId");

                    b.ToTable("Medicao", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Orcado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("integer");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("orcado", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.OrcadoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EtapaId")
                        .HasColumnType("integer");

                    b.Property<int>("OrcadoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.HasIndex("OrcadoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("orcadoitem", "projeto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.TipoContratoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("TipoContratoFornecedor", "projeto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Produto"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Serviço e Produto"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Serviço"
                        });
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.AlmoxarifadoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", "Almoxarifado")
                        .WithMany("Itens")
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany("AlmoxarifadoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.GrupoProduto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Inventario", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almoxarifado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.InventarioItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Inventario", "Inventario")
                        .WithMany("Itens")
                        .HasForeignKey("InventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Movimentacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.AlmoxarifadoItem", "AlmoxarifadoItem")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "EmpreendimentoConsumidor")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoConsumidorId");

                    b.HasOne("SCAE.Domain.Entities.Projeto.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId");

                    b.HasOne("SCAE.Domain.Entities.Compras.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId");

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.TipoMovimentacao", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.TipoOrigem", "TipoOrigem")
                        .WithMany()
                        .HasForeignKey("TipoOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlmoxarifadoItem");

                    b.Navigation("EmpreendimentoConsumidor");

                    b.Navigation("Etapa");

                    b.Navigation("Pedido");

                    b.Navigation("Tipo");

                    b.Navigation("TipoOrigem");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Produto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.GrupoProduto", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.TipoProduto", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "UltimaCompraFornecedor")
                        .WithMany()
                        .HasForeignKey("UltimaCompraFornecedorId");

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Grupo");

                    b.Navigation("Tipo");

                    b.Navigation("UltimaCompraFornecedor");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Produto+ProdutoFornecedor", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany("Fornecedores")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Requisicao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId");

                    b.Navigation("Almoxarifado");

                    b.Navigation("Empreendimento");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.RequisicaoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Requisicao", "Requisicao")
                        .WithMany("Itens")
                        .HasForeignKey("RequisicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeMedidaId");

                    b.Navigation("Etapa");

                    b.Navigation("Produto");

                    b.Navigation("Requisicao");

                    b.Navigation("UnidadeMedida");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.Contrato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "ContratoAnteriorAditado")
                        .WithMany()
                        .HasForeignKey("ContratoAnteriorAditadoId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.IntervaloReajuste", "IntervaloReajuste")
                        .WithMany()
                        .HasForeignKey("IntervaloReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.SituacaoContrato", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.TipoAditamentoContrato", "TipoAditamento")
                        .WithMany()
                        .HasForeignKey("TipoAditamentoId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoAmortizacao", "TipoAmortizacao")
                        .WithMany()
                        .HasForeignKey("TipoAmortizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.TipoContrato", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoIndice", "TipoIndice")
                        .WithMany()
                        .HasForeignKey("TipoIndiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.TipoProcessoJudicial", "TipoProcessoJudicial")
                        .WithMany()
                        .HasForeignKey("TipoProcessoJudicialId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.TipoProdutoContrato", "TipoProduto")
                        .WithMany()
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "UnidadePrincipal")
                        .WithMany()
                        .HasForeignKey("UnidadePrincipalId");

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("ContratoId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("ContratoId");

                            b1.ToTable("contrato", "clientes");

                            b1.WithOwner()
                                .HasForeignKey("ContratoId");
                        });

                    b.Navigation("ContaCorrente");

                    b.Navigation("ContratoAnteriorAditado");

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("IntervaloReajuste");

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");

                    b.Navigation("TipoAditamento");

                    b.Navigation("TipoAmortizacao");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoIndice");

                    b.Navigation("TipoOperacao");

                    b.Navigation("TipoProcessoJudicial");

                    b.Navigation("TipoProduto");

                    b.Navigation("UnidadePrincipal");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoCliente", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Clientes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoCorretor", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Corretores")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Corretor")
                        .WithMany()
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Corretor");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigital", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("ContratosDigitais")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SituacaoContratoDigital", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.TipoContratoDigital", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigitalDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigital", "ContratoDigital")
                        .WithOne("Documento")
                        .HasForeignKey("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigitalDocumento", "ContratoDigitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ContratoDigital");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ModeloContratoDigital", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.TipoContratoDigital", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ModeloContratoDigitalEmpreendimento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("ModelosDeContrato")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ModeloContratoDigital", "ModeloContratoDigital")
                        .WithMany()
                        .HasForeignKey("ModeloContratoDigitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("ModeloContratoDigital");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SignatarioContratoDigital", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigital", "ContratoDigital")
                        .WithMany("Signatarios")
                        .HasForeignKey("ContratoDigitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.SituacaoEmailSignatario", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.TipoAssinatura", "TipoAssinatura")
                        .WithMany()
                        .HasForeignKey("TipoAssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ContratoDigital");

                    b.Navigation("Situacao");

                    b.Navigation("TipoAssinatura");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Documentos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Contrato");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoObservacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Observacoes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoUnidadeAdicional", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("UnidadesAdicionais")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoVistoria", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Vistorias")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoVistoriaFoto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.ContratoVistoria", "ContratoVistoria")
                        .WithMany("Fotos")
                        .HasForeignKey("ContratoVistoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ContratoVistoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.HistoricoSituacaoContrato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("HistoricoSituacoes")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Clientes.SituacaoContrato", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Contrato");

                    b.Navigation("Situacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.TipoContrato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.TipoOperacaoContrato", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOperacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Orcamento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.TipoProduto", "Classificacao")
                        .WithMany()
                        .HasForeignKey("ClassificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.SituacaoOrcamento", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Compras.OrcamentoAprovacao", "Aprovacao", b1 =>
                        {
                            b1.Property<int>("OrcamentoId")
                                .HasColumnType("integer");

                            b1.Property<bool>("Aprovado")
                                .HasColumnType("boolean");

                            b1.Property<DateTime?>("DataHora")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<int?>("UsuarioId")
                                .HasColumnType("integer");

                            b1.HasKey("OrcamentoId");

                            b1.ToTable("orcamento", "compras");

                            b1.WithOwner()
                                .HasForeignKey("OrcamentoId");
                        });

                    b.Navigation("Aprovacao");

                    b.Navigation("Classificacao");

                    b.Navigation("Empresa");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Compras.Orcamento", null)
                        .WithMany("Documentos")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoFornecedor", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.Orcamento", null)
                        .WithMany("Fornecedores")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPagamento");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Compras.Orcamento", "Orcamento")
                        .WithMany("Itens")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoItemFornecedor", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.OrcamentoItem", null)
                        .WithMany("ItemFornecedores")
                        .HasForeignKey("OrcamentoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Parametro", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", "AlmoxarifadoPadrao")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoPadraoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlmoxarifadoPadrao");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Pedido", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Despesa", "Despesa")
                        .WithMany("Pedidos")
                        .HasForeignKey("DespesaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.Orcamento", "Orcamento")
                        .WithMany()
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.SituacaoFrete", "SituacaoFrete")
                        .WithMany()
                        .HasForeignKey("SituacaoFreteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.TipoProduto", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("Orcamento");

                    b.Navigation("SituacaoFrete");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoClassificacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCusto")
                        .WithMany()
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencial")
                        .WithMany()
                        .HasForeignKey("ContaGerencialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.Pedido", "Pedido")
                        .WithMany("Classificacoes")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("ContaGerencial");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Compras.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Compras.SituacaoPedidoItem", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.PedidoXMLArquivo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Compras.Pedido", "Pedido")
                        .WithMany("ArquivosXML")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.Hidrometro", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Receita", "Receita")
                        .WithMany()
                        .HasForeignKey("ReceitaId");

                    b.Navigation("Contrato");

                    b.Navigation("Pessoa");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.HidrometroUnidade", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.ControleAgua.Hidrometro", "Hidrometro")
                        .WithMany("Unidades")
                        .HasForeignKey("HidrometroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hidrometro");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.MarcacaoAgua", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.ControleAgua.Hidrometro", "Hidrometro")
                        .WithMany("Marcacoes")
                        .HasForeignKey("HidrometroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Parcela")
                        .WithMany()
                        .HasForeignKey("ParcelaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hidrometro");

                    b.Navigation("Parcela");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.QualidadeAgua", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.OwnsOne("SCAE.Domain.Entities.ControleAgua.DadosAgua", "AmostraRealizada", b1 =>
                        {
                            b1.Property<int>("QualidadeAguaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Cloro")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Cor")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Fluoreto")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("PH")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Turbidez")
                                .HasColumnType("numeric");

                            b1.HasKey("QualidadeAguaId");

                            b1.ToTable("qualidadeagua", "controleagua");

                            b1.WithOwner()
                                .HasForeignKey("QualidadeAguaId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.ControleAgua.DadosAgua", "MaximoExigido", b1 =>
                        {
                            b1.Property<int>("QualidadeAguaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Cloro")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Cor")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Fluoreto")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("PH")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Turbidez")
                                .HasColumnType("numeric");

                            b1.HasKey("QualidadeAguaId");

                            b1.ToTable("qualidadeagua", "controleagua");

                            b1.WithOwner()
                                .HasForeignKey("QualidadeAguaId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.ControleAgua.QualidadeAguaDocumento", "Documento", b1 =>
                        {
                            b1.Property<int>("QualidadeAguaId")
                                .HasColumnType("integer");

                            b1.Property<byte[]>("Dados")
                                .HasColumnType("bytea");

                            b1.Property<DateTime?>("DataEmissao")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Descricao")
                                .HasColumnType("text");

                            b1.Property<string>("Nome")
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.Property<decimal>("Tamanho")
                                .HasColumnType("numeric");

                            b1.Property<string>("Tipo")
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.Property<int?>("UsuarioId")
                                .HasColumnType("integer");

                            b1.HasKey("QualidadeAguaId");

                            b1.HasIndex("UsuarioId");

                            b1.ToTable("qualidadeagua", "controleagua");

                            b1.WithOwner()
                                .HasForeignKey("QualidadeAguaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                                .WithMany()
                                .HasForeignKey("UsuarioId");

                            b1.Navigation("Usuario");
                        });

                    b.Navigation("AmostraRealizada");

                    b.Navigation("Documento");

                    b.Navigation("MaximoExigido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.TabelaValorConsumoAguaItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.ControleAgua.TabelaValorConsumoAgua", "Tabela")
                        .WithMany("Itens")
                        .HasForeignKey("TabelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tabela");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.ConfrontanteAdicional", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany("ConfrontantesAdicionais")
                        .HasForeignKey("UnidadeId");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Empreendimento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "EmpresaAdministradora")
                        .WithMany()
                        .HasForeignKey("EmpresaAdministradoraId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoModelo", "PlanoPagamento")
                        .WithMany()
                        .HasForeignKey("PlanoPagamentoModeloId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoEmpreendimento", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("EmpreendimentoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(9)
                                .HasColumnType("character varying(9)");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<int?>("EstadoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int?>("MunicipioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Numero")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.HasKey("EmpreendimentoId");

                            b1.HasIndex("EstadoId");

                            b1.HasIndex("MunicipioId");

                            b1.ToTable("empreendimento", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("EmpreendimentoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                .WithMany()
                                .HasForeignKey("EstadoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                .WithMany()
                                .HasForeignKey("MunicipioId");

                            b1.Navigation("Estado");

                            b1.Navigation("Municipio");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.EmpreendimentoInfraestrutura", "Infraestrutura", b1 =>
                        {
                            b1.Property<int>("EmpreendimentoId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("AreaOutras")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AreaPrefeitura")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AreaReservadoProprietario")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AreaRua")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AreaUnidade")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("AreaVerde")
                                .HasColumnType("numeric");

                            b1.Property<string>("Descricao")
                                .HasColumnType("text");

                            b1.HasKey("EmpreendimentoId");

                            b1.ToTable("empreendimento", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("EmpreendimentoId");

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.DimensaoLote", "DimensaoLotePadrao", b2 =>
                                {
                                    b2.Property<int>("EmpreendimentoInfraestruturaEmpreendimentoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("AreaTotal")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("Curva")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("Frente")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("Fundo")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("LadoDireito")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("LadoEsquerdo")
                                        .HasColumnType("numeric");

                                    b2.HasKey("EmpreendimentoInfraestruturaEmpreendimentoId");

                                    b2.ToTable("empreendimento", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpreendimentoInfraestruturaEmpreendimentoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Shared.InfraestruturaLazer", "Lazer", b2 =>
                                {
                                    b2.Property<int>("EmpreendimentoInfraestruturaEmpreendimentoId")
                                        .HasColumnType("integer");

                                    b2.Property<bool>("Academia")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Churrasqueira")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Hidromassagem")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("HomeCinema")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Piscina")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Playground")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("QuadraPoliesportiva")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("QuadraTenis")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaMassagem")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaoFesta")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaoJogos")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Sauna")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Wifi")
                                        .HasColumnType("boolean");

                                    b2.HasKey("EmpreendimentoInfraestruturaEmpreendimentoId");

                                    b2.ToTable("empreendimento", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpreendimentoInfraestruturaEmpreendimentoId");
                                });

                            b1.Navigation("DimensaoLotePadrao");

                            b1.Navigation("Lazer");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.LegalizacaoEmpreendimento", "Legalizacao", b1 =>
                        {
                            b1.Property<int>("EmpreendimentoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CartorioId")
                                .HasColumnType("integer");

                            b1.Property<string>("EscrituraLavrada")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("IncricaoCadastral")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<string>("LivroNumero")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("Matricula")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("NumeroProcesso")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Observacao")
                                .HasColumnType("text");

                            b1.Property<string>("OrgaoEmissor")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Rgi")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.HasKey("EmpreendimentoId");

                            b1.HasIndex("CartorioId");

                            b1.ToTable("empreendimento", "empreendimento");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Cartorio", "Cartorio")
                                .WithMany()
                                .HasForeignKey("CartorioId");

                            b1.WithOwner()
                                .HasForeignKey("EmpreendimentoId");

                            b1.Navigation("Cartorio");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.MapaInterativo", "MapaInterativo", b1 =>
                        {
                            b1.Property<int>("EmpreendimentoId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Altura")
                                .HasColumnType("numeric");

                            b1.Property<byte[]>("Imagem")
                                .HasColumnType("bytea");

                            b1.Property<decimal>("Largura")
                                .HasColumnType("numeric");

                            b1.HasKey("EmpreendimentoId");

                            b1.ToTable("empreendimento", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("EmpreendimentoId");
                        });

                    b.Navigation("Empresa");

                    b.Navigation("EmpresaAdministradora");

                    b.Navigation("Endereco");

                    b.Navigation("Infraestrutura");

                    b.Navigation("Legalizacao");

                    b.Navigation("MapaInterativo");

                    b.Navigation("PlanoPagamento");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("Documentos")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Empreendimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoFoto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("Fotos")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Empreendimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpreendimentoProprietario", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("Proprietarios")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Proprietario")
                        .WithMany()
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.EmpresaArquivo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany("Documentos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Grupo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("Grupos")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Imovel", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Seguradora")
                        .WithMany()
                        .HasForeignKey("SeguradoraId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoImovel", "TipoImovel")
                        .WithMany()
                        .HasForeignKey("TipoImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithOne("Imovel")
                        .HasForeignKey("SCAE.Domain.Entities.Empreendimento.Imovel", "UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.InfraestruturaImovel", "Infraestrutura", b1 =>
                        {
                            b1.Property<int>("ImovelId")
                                .HasColumnType("integer");

                            b1.Property<string>("Observacao")
                                .HasColumnType("text");

                            b1.HasKey("ImovelId");

                            b1.ToTable("imovel", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("ImovelId");

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.InfraestruturaImovelDimensao", "Dimensao", b2 =>
                                {
                                    b2.Property<int>("InfraestruturaImovelImovelId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("AreaImovel")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("AreaTerreno")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("CoeficienteAproveitamento")
                                        .HasColumnType("numeric");

                                    b2.Property<int>("QuantidadeBanheiro")
                                        .HasColumnType("integer");

                                    b2.Property<int>("QuantidadeQuarto")
                                        .HasColumnType("integer");

                                    b2.Property<int>("QuantidadeVagas")
                                        .HasColumnType("integer");

                                    b2.Property<int>("ZonaUso")
                                        .HasColumnType("integer");

                                    b2.HasKey("InfraestruturaImovelImovelId");

                                    b2.ToTable("imovel", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("InfraestruturaImovelImovelId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.InfraestruturaImovelExterna", "Externa", b2 =>
                                {
                                    b2.Property<int>("InfraestruturaImovelImovelId")
                                        .HasColumnType("integer");

                                    b2.Property<bool>("AguaIndividual")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Alarme")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("AquecimentoGas")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("AquecimentoSolar")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("AquiecimentoEletrico")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("BoxDespejo")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("CercaEletrica")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Cftv")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Elevador")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("GasCanalizado")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Interfone")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Jardim")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Lavanderia")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("PortaoEletrico")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Portaria24Hrs")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("VagaGaragem")
                                        .HasColumnType("boolean");

                                    b2.HasKey("InfraestruturaImovelImovelId");

                                    b2.ToTable("imovel", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("InfraestruturaImovelImovelId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.InfraestruturaImovelInterna", "Interna", b2 =>
                                {
                                    b2.Property<int>("InfraestruturaImovelImovelId")
                                        .HasColumnType("integer");

                                    b2.Property<bool>("ArCondicionado")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("AreaPrivativa")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("AreaServico")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("ArmarioBanheiro")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("ArmarioCozinha")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("ArmarioQuarto")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("BoxBanheiro")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Closet")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Dce")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Dispensa")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Escritorio")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Lavabo")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Mobiliado")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Rouparia")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SolManha")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("VarandaGourmet")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("VistaMar")
                                        .HasColumnType("boolean");

                                    b2.HasKey("InfraestruturaImovelImovelId");

                                    b2.ToTable("imovel", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("InfraestruturaImovelImovelId");
                                });

                            b1.Navigation("Dimensao");

                            b1.Navigation("Externa");

                            b1.Navigation("Interna");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.TaxaImovel", "Taxa", b1 =>
                        {
                            b1.Property<int>("ImovelId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("ApoliceSeguro")
                                .HasColumnType("numeric");

                            b1.Property<string>("CodigoAgua")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoEnergia")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoGas")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoHidrometro")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoLixo")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoSequencial")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoSpu")
                                .HasColumnType("text");

                            b1.Property<string>("Descricao")
                                .HasColumnType("text");

                            b1.Property<decimal>("ValorCaucao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorCondominio")
                                .HasColumnType("numeric");

                            b1.HasKey("ImovelId");

                            b1.ToTable("imovel", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("ImovelId");

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.TaxaCmb", "Cmb", b2 =>
                                {
                                    b2.Property<int>("TaxaImovelImovelId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("Multa")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("NumeroRegistro")
                                        .HasColumnType("text");

                                    b2.Property<decimal>("Valor")
                                        .HasColumnType("numeric");

                                    b2.Property<DateTime?>("Vencimento")
                                        .HasColumnType("timestamp without time zone");

                                    b2.HasKey("TaxaImovelImovelId");

                                    b2.ToTable("imovel", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("TaxaImovelImovelId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Empreendimento.TaxaIptu", "Iptu", b2 =>
                                {
                                    b2.Property<int>("TaxaImovelImovelId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("NumeroRegistro")
                                        .HasColumnType("text");

                                    b2.Property<decimal>("ValorRealImposto")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorTaxas")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorTotal")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorVenal")
                                        .HasColumnType("numeric");

                                    b2.HasKey("TaxaImovelImovelId");

                                    b2.ToTable("imovel", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("TaxaImovelImovelId");
                                });

                            b1.Navigation("Cmb");

                            b1.Navigation("Iptu");
                        });

                    b.Navigation("Infraestrutura")
                        .IsRequired();

                    b.Navigation("Seguradora");

                    b.Navigation("Taxa");

                    b.Navigation("TipoImovel");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Jazigo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithOne("Jazigo")
                        .HasForeignKey("SCAE.Domain.Entities.Empreendimento.Jazigo", "UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.LadoAdicional", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("LadosAdicionaisPadroes")
                        .HasForeignKey("EmpreendimentoId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Lote", "Lote")
                        .WithMany("LadosAdicionais")
                        .HasForeignKey("LoteId");

                    b.Navigation("Empreendimento");

                    b.Navigation("Lote");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Lote", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithOne("Lote")
                        .HasForeignKey("SCAE.Domain.Entities.Empreendimento.Lote", "UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.ConfrontanteLote", "Confrontante", b1 =>
                        {
                            b1.Property<int>("LoteId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Frente")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Fundo")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("LadoDireito")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("LadoEsquerdo")
                                .HasColumnType("numeric");

                            b1.HasKey("LoteId");

                            b1.ToTable("lote", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("LoteId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.InfraestruturaLote", "Infraestrutura", b1 =>
                        {
                            b1.Property<int>("LoteId")
                                .HasColumnType("integer");

                            b1.Property<string>("Observacao")
                                .HasColumnType("text");

                            b1.HasKey("LoteId");

                            b1.ToTable("lote", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("LoteId");

                            b1.OwnsOne("SCAE.Domain.Entities.Shared.InfraestruturaLazer", "Lazer", b2 =>
                                {
                                    b2.Property<int>("InfraestruturaLoteLoteId")
                                        .HasColumnType("integer");

                                    b2.Property<bool>("Academia")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Churrasqueira")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Hidromassagem")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("HomeCinema")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Piscina")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Playground")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("QuadraPoliesportiva")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("QuadraTenis")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaMassagem")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaoFesta")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("SalaoJogos")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Sauna")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("Wifi")
                                        .HasColumnType("boolean");

                                    b2.HasKey("InfraestruturaLoteLoteId");

                                    b2.ToTable("lote", "empreendimento");

                                    b2.WithOwner()
                                        .HasForeignKey("InfraestruturaLoteLoteId");
                                });

                            b1.Navigation("Lazer");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.LegalizacaoLote", "Legalizacao", b1 =>
                        {
                            b1.Property<int>("LoteId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CartorioId")
                                .HasColumnType("integer");

                            b1.Property<string>("EscrituraLavrada")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("IncricaoCadastral")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<string>("LivroNumero")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("Matricula")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("NumeroProcesso")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Observacao")
                                .HasColumnType("text");

                            b1.Property<string>("OrgaoEmissor")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Rgi")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.HasKey("LoteId");

                            b1.HasIndex("CartorioId");

                            b1.ToTable("lote", "empreendimento");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Cartorio", "Cartorio")
                                .WithMany()
                                .HasForeignKey("CartorioId");

                            b1.WithOwner()
                                .HasForeignKey("LoteId");

                            b1.Navigation("Cartorio");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.DimensaoLote", "Dimensao", b1 =>
                        {
                            b1.Property<int>("LoteId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("AreaTotal")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Curva")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Frente")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Fundo")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("LadoDireito")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("LadoEsquerdo")
                                .HasColumnType("numeric");

                            b1.HasKey("LoteId");

                            b1.ToTable("lote", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("LoteId");
                        });

                    b.Navigation("Confrontante");

                    b.Navigation("Dimensao");

                    b.Navigation("Infraestrutura")
                        .IsRequired();

                    b.Navigation("Legalizacao");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Reserva", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", "ColunaFunil")
                        .WithMany("Reservas")
                        .HasForeignKey("ColunaFunilId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithOne("Reserva")
                        .HasForeignKey("SCAE.Domain.Entities.Empreendimento.Reserva", "ContratoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Corretor")
                        .WithMany("Reservas")
                        .HasForeignKey("CorretorId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.Lead", "Lead")
                        .WithMany("Reservas")
                        .HasForeignKey("LeadId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.MotivoCancelamentoReserva", "MotivoCancelamentoReserva")
                        .WithMany()
                        .HasForeignKey("MotivoCancelamentoReservaId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.SituacaoReserva", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoReserva", "TipoReserva")
                        .WithMany()
                        .HasForeignKey("TipoReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany("Reservas")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColunaFunil");

                    b.Navigation("Contrato");

                    b.Navigation("Corretor");

                    b.Navigation("Lead");

                    b.Navigation("MotivoCancelamentoReserva");

                    b.Navigation("Situacao");

                    b.Navigation("TipoReserva");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.ReservaObservacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Reserva", "Reserva")
                        .WithMany("Observacoes")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Reserva");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Unidade", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Administradora")
                        .WithMany()
                        .HasForeignKey("AdministradoraId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Construtora")
                        .WithMany()
                        .HasForeignKey("ConstrutoraId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Grupo", "Grupo")
                        .WithMany("Unidades")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoModelo", "ModeloPlanoPagamento")
                        .WithMany()
                        .HasForeignKey("ModeloPlanoPagamentoId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.SituacaoUnidade", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoUnidade", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.ConfrontanteUnidade", "Confrontante", b1 =>
                        {
                            b1.Property<int>("UnidadeId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Frente")
                                .HasColumnType("numeric");

                            b1.Property<string>("FrenteNome")
                                .HasColumnType("text");

                            b1.Property<decimal>("Fundo")
                                .HasColumnType("numeric");

                            b1.Property<string>("FundoNome")
                                .HasColumnType("text");

                            b1.Property<decimal>("LadoDireito")
                                .HasColumnType("numeric");

                            b1.Property<string>("LadoDireitoNome")
                                .HasColumnType("text");

                            b1.Property<decimal>("LadoEsquerdo")
                                .HasColumnType("numeric");

                            b1.Property<string>("LadoEsquerdoNome")
                                .HasColumnType("text");

                            b1.HasKey("UnidadeId");

                            b1.ToTable("unidade", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.DisponibilidadeOperaoUnidade", "DisponibilidadeOperacao", b1 =>
                        {
                            b1.Property<int>("UnidadeId")
                                .HasColumnType("integer");

                            b1.Property<bool>("Locacao")
                                .HasColumnType("boolean");

                            b1.Property<bool>("Venda")
                                .HasColumnType("boolean");

                            b1.HasKey("UnidadeId");

                            b1.ToTable("unidade", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.LegalizacaoUnidade", "Legalizacao", b1 =>
                        {
                            b1.Property<int>("UnidadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CartorioId")
                                .HasColumnType("integer");

                            b1.Property<string>("EscrituraLavrada")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("IncricaoCadastral")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<string>("LivroNumero")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("Matricula")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.Property<string>("NumeroProcesso")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Observacao")
                                .HasColumnType("text");

                            b1.Property<string>("OrgaoEmissor")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Rgi")
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)");

                            b1.HasKey("UnidadeId");

                            b1.HasIndex("CartorioId");

                            b1.ToTable("unidade", "empreendimento");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Cartorio", "Cartorio")
                                .WithMany()
                                .HasForeignKey("CartorioId");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");

                            b1.Navigation("Cartorio");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Empreendimento.MapaCoordenada", "MapaCoordenada", b1 =>
                        {
                            b1.Property<int>("UnidadeId")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("X")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("Y")
                                .HasColumnType("numeric");

                            b1.HasKey("UnidadeId");

                            b1.ToTable("unidade", "empreendimento");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");
                        });

                    b.OwnsOne("SCAE.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("UnidadeId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(9)
                                .HasColumnType("character varying(9)");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<int?>("EstadoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int?>("MunicipioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Numero")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.HasKey("UnidadeId");

                            b1.HasIndex("EstadoId");

                            b1.HasIndex("MunicipioId");

                            b1.ToTable("unidade", "empreendimento");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                .WithMany()
                                .HasForeignKey("EstadoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                .WithMany()
                                .HasForeignKey("MunicipioId");

                            b1.WithOwner()
                                .HasForeignKey("UnidadeId");

                            b1.Navigation("Estado");

                            b1.Navigation("Municipio");
                        });

                    b.Navigation("Administradora");

                    b.Navigation("Confrontante");

                    b.Navigation("Construtora");

                    b.Navigation("DisponibilidadeOperacao");

                    b.Navigation("Endereco");

                    b.Navigation("Grupo");

                    b.Navigation("Legalizacao");

                    b.Navigation("MapaCoordenada");

                    b.Navigation("ModeloPlanoPagamento");

                    b.Navigation("Situacao");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeFoto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany("Fotos")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Unidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeProprietario", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Proprietario")
                        .WithMany()
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany("Proprietarios")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietario");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.UnidadeVicio", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany("Vicios")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Vicio", "Vicio")
                        .WithMany()
                        .HasForeignKey("VicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");

                    b.Navigation("Vicio");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Vicio", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoUnidade", "TipoUnidade")
                        .WithMany()
                        .HasForeignKey("TipoUnidadeId");

                    b.Navigation("Empresa");

                    b.Navigation("TipoUnidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Parcela")
                        .WithOne("AntecipacaoAmortizacao")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacao", "ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoAntecipacao", "TipoAntecipacao")
                        .WithMany()
                        .HasForeignKey("TipoAntecipacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");

                    b.Navigation("TipoAntecipacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacaoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacao", "AntecipacaoAmortizacao")
                        .WithMany("Itens")
                        .HasForeignKey("AntecipacaoAmortizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Parcela")
                        .WithMany()
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.DadosParcelaPreAmortizacao", "DadosParcelaPreAmortizacao", b1 =>
                        {
                            b1.Property<int>("AntecipacaoAmortizacaoItemId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Amortizacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Juros")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("SaldoAmortizacaoFimPeriodo")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("SaldoAmortizacaoInicioPeriodo")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorDFI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorMPI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorParcela")
                                .HasColumnType("numeric");

                            b1.HasKey("AntecipacaoAmortizacaoItemId");

                            b1.ToTable("antecipacaoamortizacaoitem", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("AntecipacaoAmortizacaoItemId");
                        });

                    b.Navigation("AntecipacaoAmortizacao");

                    b.Navigation("DadosParcelaPreAmortizacao");

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoComprovante", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "ReceitaParcela")
                        .WithOne("AntecipacaoComprovante")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.AntecipacaoComprovante", "ReceitaParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoContrato", b1 =>
                        {
                            b1.Property<int>("AntecipacaoComprovanteId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("AntecipacaoComprovanteId");

                            b1.ToTable("antecipacaocomprovante", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("AntecipacaoComprovanteId");
                        });

                    b.Navigation("EncargoContrato");

                    b.Navigation("ReceitaParcela");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ArquivoRemessaDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Remessa", null)
                        .WithOne("Documento")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.ArquivoRemessaDocumento", "RemessaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Banco", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CentroCusto", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCustoPai")
                        .WithMany()
                        .HasForeignKey("CentroCustoPaiId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroCustoPai");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CertificadoBanco", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "corrente")
                        .WithMany("Certificados")
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("corrente");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.CondicaoPagamento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrente", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("ContaCorrenteId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("ContaCorrenteId");

                            b1.ToTable("contacorrente", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ContaCorrenteId");
                        });

                    b.Navigation("Banco");

                    b.Navigation("Empresa");

                    b.Navigation("EncargoFinanceiro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrenteGateway", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany("Gateways")
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");

                    b.Navigation("TipoGateway");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrenteSplit", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ParametroGatway", "ParametroGateway")
                        .WithMany("ContasCorrentesSplit")
                        .HasForeignKey("ParametroGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");

                    b.Navigation("ParametroGateway");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaGerencial", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencialPai")
                        .WithMany()
                        .HasForeignKey("ContaGerencialPaiId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaGerencialPai");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Despesa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Despesas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.OrigemDespesa", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoDespesa", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("Origem");

                    b.Navigation("Tipo");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaBaixa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.DespesaParcela", "Parcela")
                        .WithMany("Baixas")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ContaCorrente");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Parcela");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaBaixaComprovante", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.DespesaBaixa", "DespesaBaixa")
                        .WithOne("Comprovante")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.DespesaBaixaComprovante", "DespesaBaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("DespesaBaixa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaClassificacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCusto")
                        .WithMany()
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencial")
                        .WithMany()
                        .HasForeignKey("ContaGerencialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Despesa", "Despesa")
                        .WithMany("Classificacoes")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("ContaGerencial");

                    b.Navigation("Despesa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Despesa", null)
                        .WithMany("Documentos")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaParcela", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Despesa", "Despesa")
                        .WithMany("Parcelas")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.SituacaoDespesaParcela", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("Situacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.FormaPagamento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Indice", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoIndice", "TipoIndice")
                        .WithMany()
                        .HasForeignKey("TipoIndiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoIndice");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Parametro", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCustoReceita")
                        .WithMany()
                        .HasForeignKey("CentroCustoReceitaId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencialReceita")
                        .WithMany()
                        .HasForeignKey("ContaGerencialReceitaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoAmortizacao", "TipoAmortizacao")
                        .WithMany()
                        .HasForeignKey("TipoAmortizacaoId");

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.ValoresAdicionais", "ValoresAdicionaisParcela", b1 =>
                        {
                            b1.Property<int>("ParametroId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoIndice")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Gestao")
                                .HasColumnType("numeric");

                            b1.Property<bool>("IsDFIFixo")
                                .HasColumnType("boolean");

                            b1.Property<string>("NomeTaxaAdicional")
                                .HasColumnType("text");

                            b1.Property<decimal>("PercentualDFI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("PercentualMPI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("TaxaBoleto")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorDFI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorFixoTaxaAdicional")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorMPI")
                                .HasColumnType("numeric");

                            b1.HasKey("ParametroId");

                            b1.ToTable("parametro", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.ParametroCRMVendas", "ParametroCRMVendas", b1 =>
                        {
                            b1.Property<int>("ParametroId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CentroCustoComissaoCorretorId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ContaGerencialComissaoCorretorId")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasExpiracaoPreReserva")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasExpiracaoReajusteProposta")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasExpiracaoReserva")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasMinimosEntreReservaMesmoLead")
                                .HasColumnType("integer");

                            b1.Property<decimal>("PercentualComissaoCorretor")
                                .HasColumnType("numeric");

                            b1.HasKey("ParametroId");

                            b1.HasIndex("CentroCustoComissaoCorretorId");

                            b1.HasIndex("ContaGerencialComissaoCorretorId");

                            b1.ToTable("parametro", "financeiro");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCustoComissaoCorretor")
                                .WithMany()
                                .HasForeignKey("CentroCustoComissaoCorretorId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencialComissaoCorretor")
                                .WithMany()
                                .HasForeignKey("ContaGerencialComissaoCorretorId");

                            b1.WithOwner()
                                .HasForeignKey("ParametroId");

                            b1.Navigation("CentroCustoComissaoCorretor");

                            b1.Navigation("ContaGerencialComissaoCorretor");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.ParametroControleAgua", "ParametroControleAgua", b1 =>
                        {
                            b1.Property<int>("ParametroId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CentroCustoControleAguaId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ContaCorrenteId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ContaGerencialControleAguaId")
                                .HasColumnType("integer");

                            b1.Property<bool>("EmpresaPadraoBoletoAgua")
                                .HasColumnType("boolean");

                            b1.Property<int?>("TipoGatewayId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoOperacaoId")
                                .HasColumnType("integer");

                            b1.HasKey("ParametroId");

                            b1.HasIndex("CentroCustoControleAguaId");

                            b1.HasIndex("ContaCorrenteId");

                            b1.HasIndex("ContaGerencialControleAguaId");

                            b1.HasIndex("TipoGatewayId");

                            b1.HasIndex("TipoOperacaoId");

                            b1.ToTable("parametro", "financeiro");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCustoControleAgua")
                                .WithMany()
                                .HasForeignKey("CentroCustoControleAguaId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                                .WithMany()
                                .HasForeignKey("ContaCorrenteId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencialControleAgua")
                                .WithMany()
                                .HasForeignKey("ContaGerencialControleAguaId");

                            b1.WithOwner()
                                .HasForeignKey("ParametroId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                                .WithMany()
                                .HasForeignKey("TipoGatewayId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                                .WithMany()
                                .HasForeignKey("TipoOperacaoId");

                            b1.Navigation("CentroCustoControleAgua");

                            b1.Navigation("ContaCorrente");

                            b1.Navigation("ContaGerencialControleAgua");

                            b1.Navigation("TipoGateway");

                            b1.Navigation("TipoOperacao");
                        });

                    b.Navigation("CentroCustoReceita");

                    b.Navigation("ContaGerencialReceita");

                    b.Navigation("Empresa");

                    b.Navigation("ParametroCRMVendas");

                    b.Navigation("ParametroControleAgua");

                    b.Navigation("TipoAmortizacao");

                    b.Navigation("ValoresAdicionaisParcela");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ParametroCobranca", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.LayoutCobranca", "LayoutCobranca")
                        .WithMany()
                        .HasForeignKey("LayoutCobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Parametro", "Parametro")
                        .WithMany("Cobrancas")
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LayoutCobranca");

                    b.Navigation("Parametro");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ParametroGatway", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Parametro", "Parametro")
                        .WithMany("Gatways")
                        .HasForeignKey("ParametroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.GatewayAsaas", "Asaas", b1 =>
                        {
                            b1.Property<int>("ParametroGatwayId")
                                .HasColumnType("integer");

                            b1.Property<string>("AccessToken")
                                .HasColumnType("text");

                            b1.HasKey("ParametroGatwayId");

                            b1.ToTable("parametrogatway", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroGatwayId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.GatewayContapay", "ContaPay", b1 =>
                        {
                            b1.Property<int>("ParametroGatwayId")
                                .HasColumnType("integer");

                            b1.Property<string>("AccessToken")
                                .HasColumnType("text");

                            b1.Property<string>("email")
                                .HasColumnType("text");

                            b1.HasKey("ParametroGatwayId");

                            b1.ToTable("parametrogatway", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroGatwayId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.GatewayGalaxPay", "GalaxPay", b1 =>
                        {
                            b1.Property<int>("ParametroGatwayId")
                                .HasColumnType("integer");

                            b1.Property<string>("Hash")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<string>("Id")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<bool>("isSubconta")
                                .HasColumnType("boolean");

                            b1.Property<bool>("isSubcontaAtiva")
                                .HasColumnType("boolean");

                            b1.HasKey("ParametroGatwayId");

                            b1.ToTable("parametrogatway", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroGatwayId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.GatewaySafra", "Safra", b1 =>
                        {
                            b1.Property<int>("ParametroGatwayId")
                                .HasColumnType("integer");

                            b1.Property<string>("Agencia")
                                .HasColumnType("text");

                            b1.Property<string>("ClientId")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<string>("Conta")
                                .HasColumnType("text");

                            b1.Property<string>("NossoNumeroInicial")
                                .HasColumnType("text");

                            b1.Property<string>("Senha")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.Property<string>("Usuario")
                                .HasMaxLength(25)
                                .HasColumnType("character varying(25)");

                            b1.HasKey("ParametroGatwayId");

                            b1.ToTable("parametrogatway", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroGatwayId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("ParametroGatwayId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("ParametroGatwayId");

                            b1.ToTable("parametrogatway", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ParametroGatwayId");
                        });

                    b.Navigation("Asaas");

                    b.Navigation("ContaPay");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("GalaxPay");

                    b.Navigation("Parametro");

                    b.Navigation("Safra");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoModelo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.IntervaloReajuste", "IntervaloReajuste")
                        .WithMany()
                        .HasForeignKey("IntervaloReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoAmortizacao", "TipoAmortizacao")
                        .WithMany()
                        .HasForeignKey("TipoAmortizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoAnoInicioReajuste", "TipoAnoInicioReajuste")
                        .WithMany()
                        .HasForeignKey("TipoAnoInicioReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoIndice", "TipoIndice")
                        .WithMany()
                        .HasForeignKey("TipoIndiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoMesReajuste", "TipoMesReajuste")
                        .WithMany()
                        .HasForeignKey("TipoMesReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "TipoValorTotal")
                        .WithMany()
                        .HasForeignKey("TipoValorTotalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoModeloId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoModeloId");

                            b1.ToTable("planopagamentomodelo", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoModeloId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Entrada", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoModeloId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoModeloId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentomodelo", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoModeloId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Financiamento", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoModeloId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoModeloId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentomodelo", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoModeloId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Intermediaria", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoModeloId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoModeloId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentomodelo", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoModeloId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.Navigation("ContaCorrente");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("Entrada");

                    b.Navigation("Financiamento");

                    b.Navigation("Intermediaria");

                    b.Navigation("IntervaloReajuste");

                    b.Navigation("TipoAmortizacao");

                    b.Navigation("TipoAnoInicioReajuste");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoIndice");

                    b.Navigation("TipoMesReajuste");

                    b.Navigation("TipoOperacao");

                    b.Navigation("TipoValorTotal");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoUnidade", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.IntervaloReajuste", "IntervaloReajuste")
                        .WithMany()
                        .HasForeignKey("IntervaloReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoAmortizacao", "TipoAmortizacao")
                        .WithMany()
                        .HasForeignKey("TipoAmortizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoAnoInicioReajuste", "TipoAnoInicioReajuste")
                        .WithMany()
                        .HasForeignKey("TipoAnoInicioReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoIndice", "TipoIndice")
                        .WithMany()
                        .HasForeignKey("TipoIndiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoMesReajuste", "TipoMesReajuste")
                        .WithMany()
                        .HasForeignKey("TipoMesReajusteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "TipoValorTotal")
                        .WithMany()
                        .HasForeignKey("TipoValorTotalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithOne("PlanoPagamento")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.PlanoPagamentoUnidade", "UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoUnidadeId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoUnidadeId");

                            b1.ToTable("planopagamentounidade", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoUnidadeId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Entrada", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoUnidadeId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoUnidadeId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentounidade", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoUnidadeId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Financiamento", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoUnidadeId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoUnidadeId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentounidade", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoUnidadeId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.ReceitaPlanoPagamento", "Intermediaria", b1 =>
                        {
                            b1.Property<int>("PlanoPagamentoUnidadeId")
                                .HasColumnType("integer");

                            b1.Property<bool>("GerarFinanciamentoComIntermediaria")
                                .HasColumnType("boolean");

                            b1.Property<bool>("GerarFinanciamentoPosEntrada")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsReajustavel")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("PorcentagemValorTotal")
                                .HasColumnType("numeric");

                            b1.Property<int>("Prazo")
                                .HasColumnType("integer");

                            b1.Property<List<int>>("PrazosDisponiveis")
                                .HasColumnType("integer[]");

                            b1.Property<int?>("TipoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoIntervaloParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric");

                            b1.HasKey("PlanoPagamentoUnidadeId");

                            b1.HasIndex("TipoId");

                            b1.HasIndex("TipoIntervaloParcelaId");

                            b1.ToTable("planopagamentounidade", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("PlanoPagamentoUnidadeId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoPlanoPagamento", "Tipo")
                                .WithMany()
                                .HasForeignKey("TipoId");

                            b1.HasOne("SCAE.Domain.Entities.Financeiro.PlanoDePagamento.TipoIntervaloParcela", "TipoIntervaloParcela")
                                .WithMany()
                                .HasForeignKey("TipoIntervaloParcelaId");

                            b1.Navigation("Tipo");

                            b1.Navigation("TipoIntervaloParcela");
                        });

                    b.Navigation("ContaCorrente");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("Entrada");

                    b.Navigation("Financiamento");

                    b.Navigation("Intermediaria");

                    b.Navigation("IntervaloReajuste");

                    b.Navigation("TipoAmortizacao");

                    b.Navigation("TipoAnoInicioReajuste");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoIndice");

                    b.Navigation("TipoMesReajuste");

                    b.Navigation("TipoOperacao");

                    b.Navigation("TipoValorTotal");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Receita", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Clientes.Contrato", "Contrato")
                        .WithMany("Receitas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoReceita", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ContaCorrente");

                    b.Navigation("Contrato");

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");

                    b.Navigation("Tipo");

                    b.Navigation("TipoDocumento");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoOperacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaBaixa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Parcela")
                        .WithMany("Baixas")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaTransacao", "Transacao")
                        .WithMany("Baixas")
                        .HasForeignKey("TransacaoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ContaCorrente");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Parcela");

                    b.Navigation("TipoOperacao");

                    b.Navigation("Transacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaBaixaComprovante", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaBaixa", "ReceitaBaixa")
                        .WithOne("ReceitaBaixaComprovante")
                        .HasForeignKey("SCAE.Domain.Entities.Financeiro.ReceitaBaixaComprovante", "ReceitaBaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceitaBaixa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaClassificacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.CentroCusto", "CentroCusto")
                        .WithMany()
                        .HasForeignKey("CentroCustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaGerencial", "ContaGerencial")
                        .WithMany()
                        .HasForeignKey("ContaGerencialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Receita", "Receita")
                        .WithMany("Classificacoes")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("ContaGerencial");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.Receita", null)
                        .WithMany("Documentos")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaParcela", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Agrupador")
                        .WithMany()
                        .HasForeignKey("AgrupadorId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Receita", "Receita")
                        .WithMany("Parcelas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.SituacaoReceitaParcela", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoServicoParcela", "TipoServico")
                        .WithMany()
                        .HasForeignKey("TipoServicoId");

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("ReceitaParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("ReceitaParcelaId");

                            b1.ToTable("receitaparcela", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ReceitaParcelaId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.ValoresAdicionais", "ValoresAdicionais", b1 =>
                        {
                            b1.Property<int>("ReceitaParcelaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoIndice")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Gestao")
                                .HasColumnType("numeric");

                            b1.Property<bool>("IsDFIFixo")
                                .HasColumnType("boolean");

                            b1.Property<string>("NomeTaxaAdicional")
                                .HasColumnType("text");

                            b1.Property<decimal>("PercentualDFI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("PercentualMPI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("TaxaBoleto")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorDFI")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorFixoTaxaAdicional")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorMPI")
                                .HasColumnType("numeric");

                            b1.HasKey("ReceitaParcelaId");

                            b1.ToTable("receitaparcela", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ReceitaParcelaId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.SplitParcela", "SplitPagamento", b1 =>
                        {
                            b1.Property<int>("ReceitaParcelaId")
                                .HasColumnType("integer");

                            b1.Property<int>("GalaxyPayId")
                                .HasColumnType("integer");

                            b1.Property<string>("TipoSplit")
                                .HasColumnType("text");

                            b1.Property<int>("Valor")
                                .HasColumnType("integer");

                            b1.HasKey("ReceitaParcelaId");

                            b1.ToTable("receitaparcela", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ReceitaParcelaId");
                        });

                    b.Navigation("Agrupador");

                    b.Navigation("ContaCorrente");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("Receita");

                    b.Navigation("Situacao");

                    b.Navigation("SplitPagamento");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoOperacao");

                    b.Navigation("TipoServico");

                    b.Navigation("ValoresAdicionais");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaTransacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReceitaParcela", "Parcela")
                        .WithMany("Transacoes")
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Remessa", "Remessa")
                        .WithMany("Transacoes")
                        .HasForeignKey("RemessaId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.SituacaoReceitaParcela", "Situacao")
                        .WithMany()
                        .HasForeignKey("SituacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId");

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoOperacaoFinanceira", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoStatusTransacao", "TipoStatusTransacao")
                        .WithMany()
                        .HasForeignKey("TipoStatusTransacaoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "UsuarioBoletoGerado")
                        .WithMany()
                        .HasForeignKey("UsuarioBoletoGeradoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "UsuarioTransacao")
                        .WithMany()
                        .HasForeignKey("UsuarioTransacaoId");

                    b.OwnsOne("SCAE.Domain.Entities.Financeiro.Encargo", "EncargoFinanceiro", b1 =>
                        {
                            b1.Property<int>("ReceitaTransacaoId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("CorrecaoMonetaria")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoAntecipacao")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("DescontoVencimento")
                                .HasColumnType("numeric");

                            b1.Property<int>("DiasAposVencimentoNaoReceber")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasDescontoVencimento")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasNegativacao")
                                .HasColumnType("integer");

                            b1.Property<int>("DiasProtesto")
                                .HasColumnType("integer");

                            b1.Property<bool>("IsDescontoVencimentoPercentual")
                                .HasColumnType("boolean");

                            b1.Property<decimal>("JurosDia")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("Multa")
                                .HasColumnType("numeric");

                            b1.HasKey("ReceitaTransacaoId");

                            b1.ToTable("receitatransacao", "financeiro");

                            b1.WithOwner()
                                .HasForeignKey("ReceitaTransacaoId");
                        });

                    b.Navigation("ContaCorrente");

                    b.Navigation("EncargoFinanceiro");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Parcela");

                    b.Navigation("Remessa");

                    b.Navigation("Situacao");

                    b.Navigation("TipoGateway");

                    b.Navigation("TipoOperacao");

                    b.Navigation("TipoStatusTransacao");

                    b.Navigation("UsuarioBoletoGerado");

                    b.Navigation("UsuarioTransacao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReguaCobrancaEtapa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ReguaCobranca", null)
                        .WithMany("Etapas")
                        .HasForeignKey("ReguaCobrancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Remessa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Financeiro.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoRemessa", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.TipoDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.Atendimento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Corretor")
                        .WithMany("Atendimentos")
                        .HasForeignKey("CorretorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.Lead", "Lead")
                        .WithMany("Atendimentos")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.TipoAtendimento", "TipoAtendimento")
                        .WithMany()
                        .HasForeignKey("TipoAtendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corretor");

                    b.Navigation("Lead");

                    b.Navigation("TipoAtendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", "ColunaFunilPai")
                        .WithMany()
                        .HasForeignKey("ColunaFunilPaiId");

                    b.Navigation("ColunaFunilPai");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.HistoricoLead", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", "ColunaFunil")
                        .WithMany()
                        .HasForeignKey("ColunaFunilId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.Lead", "Lead")
                        .WithMany("Historicos")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColunaFunil");

                    b.Navigation("Lead");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.Lead", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", "ColunaFunil")
                        .WithMany("Leads")
                        .HasForeignKey("ColunaFunilId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ComoLeadContactou", "ComoLeadContactou")
                        .WithMany()
                        .HasForeignKey("ComoLeadContactouId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.ComoLeadNosEncontrou", "ComoLeadNosEncontrou")
                        .WithMany()
                        .HasForeignKey("ComoLeadNosEncontrouId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "CorretorResponsavel")
                        .WithMany()
                        .HasForeignKey("CorretorResponsavelId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.GrauInteresse", "GrauInteresse")
                        .WithMany()
                        .HasForeignKey("GrauInteresseId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.HasOne("SCAE.Domain.Entities.Geral.CRMVendas.OrigemLead", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColunaFunil");

                    b.Navigation("ComoLeadContactou");

                    b.Navigation("ComoLeadNosEncontrou");

                    b.Navigation("CorretorResponsavel");

                    b.Navigation("Estado");

                    b.Navigation("GrauInteresse");

                    b.Navigation("Municipio");

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Cartorio", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpreendimentoPessoa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany("EmpreendimentosPessoas")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany("EmpreendimentosPessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Empresa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", "ContratoSocialLtda")
                        .WithMany()
                        .HasForeignKey("ContratoSocialLtdaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", "FotoDocumentoResponsavel")
                        .WithMany()
                        .HasForeignKey("FotoDocumentoResponsavelId");

                    b.HasOne("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", "SelfieResponsavel")
                        .WithMany()
                        .HasForeignKey("SelfieResponsavelId");

                    b.HasOne("SCAE.Domain.Entities.Geral.TipoEmpresa", "TipoEmpresa")
                        .WithMany()
                        .HasForeignKey("TipoEmpresaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", "VersoDocumentoResponsavel")
                        .WithMany()
                        .HasForeignKey("VersoDocumentoResponsavelId");

                    b.OwnsOne("SCAE.Domain.Entities.Shared.BancoInfo", "BancoInfoEmpresa", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Agencia")
                                .HasColumnType("text");

                            b1.Property<string>("ChavePix")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoBanco")
                                .HasColumnType("text");

                            b1.Property<string>("NumeroConta")
                                .HasColumnType("text");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("empresa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");
                        });

                    b.OwnsOne("SCAE.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(9)
                                .HasColumnType("character varying(9)");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<int?>("EstadoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int?>("MunicipioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Numero")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.HasKey("EmpresaId");

                            b1.HasIndex("EstadoId");

                            b1.HasIndex("MunicipioId");

                            b1.ToTable("empresa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                .WithMany()
                                .HasForeignKey("EstadoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                .WithMany()
                                .HasForeignKey("MunicipioId");

                            b1.Navigation("Estado");

                            b1.Navigation("Municipio");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaDocumento", "Documento", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .HasColumnType("integer");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("empresa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");

                            b1.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaDocumentoItem", "ComprovanteAtividade", b2 =>
                                {
                                    b2.Property<int>("EmpresaDocumentoEmpresaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("CodigoZoop")
                                        .HasMaxLength(45)
                                        .HasColumnType("character varying(45)");

                                    b2.Property<byte[]>("Dados")
                                        .HasColumnType("bytea");

                                    b2.Property<DateTime?>("DataEmissao")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<string>("Descricao")
                                        .HasColumnType("text");

                                    b2.Property<string>("Nome")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<decimal>("Tamanho")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Tipo")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<int?>("UsuarioId")
                                        .HasColumnType("integer");

                                    b2.HasKey("EmpresaDocumentoEmpresaId");

                                    b2.HasIndex("UsuarioId");

                                    b2.ToTable("empresa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpresaDocumentoEmpresaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                                        .WithMany()
                                        .HasForeignKey("UsuarioId");

                                    b2.Navigation("Usuario");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaDocumentoItem", "ComprovanteResidencial", b2 =>
                                {
                                    b2.Property<int>("EmpresaDocumentoEmpresaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("CodigoZoop")
                                        .HasMaxLength(45)
                                        .HasColumnType("character varying(45)");

                                    b2.Property<byte[]>("Dados")
                                        .HasColumnType("bytea");

                                    b2.Property<DateTime?>("DataEmissao")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<string>("Descricao")
                                        .HasColumnType("text");

                                    b2.Property<string>("Nome")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<decimal>("Tamanho")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Tipo")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<int?>("UsuarioId")
                                        .HasColumnType("integer");

                                    b2.HasKey("EmpresaDocumentoEmpresaId");

                                    b2.HasIndex("UsuarioId");

                                    b2.ToTable("empresa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpresaDocumentoEmpresaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                                        .WithMany()
                                        .HasForeignKey("UsuarioId");

                                    b2.Navigation("Usuario");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaDocumentoItem", "Identificacao", b2 =>
                                {
                                    b2.Property<int>("EmpresaDocumentoEmpresaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("CodigoZoop")
                                        .HasMaxLength(45)
                                        .HasColumnType("character varying(45)");

                                    b2.Property<byte[]>("Dados")
                                        .HasColumnType("bytea");

                                    b2.Property<DateTime?>("DataEmissao")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<string>("Descricao")
                                        .HasColumnType("text");

                                    b2.Property<string>("Nome")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<decimal>("Tamanho")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Tipo")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<int?>("UsuarioId")
                                        .HasColumnType("integer");

                                    b2.HasKey("EmpresaDocumentoEmpresaId");

                                    b2.HasIndex("UsuarioId");

                                    b2.ToTable("empresa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpresaDocumentoEmpresaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                                        .WithMany()
                                        .HasForeignKey("UsuarioId");

                                    b2.Navigation("Usuario");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaDocumentoItem", "IdentificacaoCnpj", b2 =>
                                {
                                    b2.Property<int>("EmpresaDocumentoEmpresaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("CodigoZoop")
                                        .HasMaxLength(45)
                                        .HasColumnType("character varying(45)");

                                    b2.Property<byte[]>("Dados")
                                        .HasColumnType("bytea");

                                    b2.Property<DateTime?>("DataEmissao")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<string>("Descricao")
                                        .HasColumnType("text");

                                    b2.Property<string>("Nome")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<decimal>("Tamanho")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Tipo")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)");

                                    b2.Property<int?>("UsuarioId")
                                        .HasColumnType("integer");

                                    b2.HasKey("EmpresaDocumentoEmpresaId");

                                    b2.HasIndex("UsuarioId");

                                    b2.ToTable("empresa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpresaDocumentoEmpresaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                                        .WithMany()
                                        .HasForeignKey("UsuarioId");

                                    b2.Navigation("Usuario");
                                });

                            b1.Navigation("ComprovanteAtividade");

                            b1.Navigation("ComprovanteResidencial");

                            b1.Navigation("Identificacao");

                            b1.Navigation("IdentificacaoCnpj");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Geral.EmpresaResponsavel", "Responsavel", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .HasColumnType("integer");

                            b1.Property<string>("CategoriaComerciante")
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int>("CodigoCategoriaComerciante")
                                .HasColumnType("integer");

                            b1.Property<string>("CodigoZoop")
                                .HasMaxLength(45)
                                .HasColumnType("character varying(45)");

                            b1.Property<string>("Cpf")
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)");

                            b1.Property<DateTime>("DataNascimento")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Email")
                                .HasColumnType("text");

                            b1.Property<string>("Nome")
                                .HasMaxLength(120)
                                .HasColumnType("character varying(120)");

                            b1.Property<string>("NomeDaMae")
                                .HasColumnType("text");

                            b1.Property<string>("Sobrenome")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<string>("Telefone")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("empresa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");

                            b1.OwnsOne("SCAE.Domain.Endereco", "Endereco", b2 =>
                                {
                                    b2.Property<int>("EmpresaResponsavelEmpresaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Bairro")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Cep")
                                        .HasMaxLength(9)
                                        .HasColumnType("character varying(9)");

                                    b2.Property<string>("Complemento")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.Property<int?>("EstadoId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Logradouro")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("character varying(80)");

                                    b2.Property<int?>("MunicipioId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Numero")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.HasKey("EmpresaResponsavelEmpresaId");

                                    b2.HasIndex("EstadoId");

                                    b2.HasIndex("MunicipioId");

                                    b2.ToTable("empresa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("EmpresaResponsavelEmpresaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                        .WithMany()
                                        .HasForeignKey("EstadoId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                        .WithMany()
                                        .HasForeignKey("MunicipioId");

                                    b2.Navigation("Estado");

                                    b2.Navigation("Municipio");
                                });

                            b1.Navigation("Endereco");
                        });

                    b.Navigation("BancoInfoEmpresa");

                    b.Navigation("ContratoSocialLtda");

                    b.Navigation("Documento")
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("FotoDocumentoResponsavel");

                    b.Navigation("Responsavel");

                    b.Navigation("SelfieResponsavel");

                    b.Navigation("TipoEmpresa");

                    b.Navigation("VersoDocumentoResponsavel");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpresaArquivoUnico", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.EmpresaGateway", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany("Gateways")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("TipoGateway");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Log", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraContato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.PessoaPrefeitura", "PessoaPrefeitura")
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaPrefeituraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaPrefeitura");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.PessoaPrefeitura", "PessoaPrefeitura")
                        .WithMany("Documentos")
                        .HasForeignKey("PessoaPrefeituraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("PessoaPrefeitura");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraFamiliar", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                        .WithMany()
                        .HasForeignKey("EscolaridadeId");

                    b.HasOne("SCAE.Domain.Entities.Geral.GrauParentesco", "GrauParentesco")
                        .WithMany()
                        .HasForeignKey("GrauParentescoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.PessoaPrefeitura", "PessoaPrefeitura")
                        .WithMany("Familiares")
                        .HasForeignKey("PessoaPrefeituraId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                        .WithMany()
                        .HasForeignKey("ProfissaoId");

                    b.Navigation("Escolaridade");

                    b.Navigation("GrauParentesco");

                    b.Navigation("PessoaPrefeitura");

                    b.Navigation("Profissao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.ModuloPrefeitura.PessoaPrefeituraGateway", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.PessoaPrefeitura", "PessoaPrefeitura")
                        .WithMany("Gateways")
                        .HasForeignKey("PessoaPrefeituraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("PessoaPrefeitura");

                    b.Navigation("TipoGateway");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Municipio", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Pessoa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.TipoPessoa", "TipoPessoa")
                        .WithMany()
                        .HasForeignKey("TipoPessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("SCAE.Domain.Entities.Geral.Pessoa", "UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.OwnsOne("SCAE.Domain.Bancario", "Bancario", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Agencia")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("AgenciaDigito")
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)");

                            b1.Property<string>("Banco")
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)");

                            b1.Property<string>("Conta")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("ContaDigito")
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)");

                            b1.Property<string>("Pix")
                                .HasColumnType("text");

                            b1.HasKey("PessoaId");

                            b1.ToTable("pessoa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Shared.BancoInfo", "BancoInfoPessoa", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Agencia")
                                .HasColumnType("text");

                            b1.Property<string>("ChavePix")
                                .HasColumnType("text");

                            b1.Property<string>("CodigoBanco")
                                .HasColumnType("text");

                            b1.Property<string>("NumeroConta")
                                .HasColumnType("text");

                            b1.HasKey("PessoaId");

                            b1.ToTable("pessoa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("SCAE.Domain.Conjuge", "Conjuge", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Cpf")
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)");

                            b1.Property<DateTime?>("DataEmissaoRg")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime?>("DataNascimento")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("Dependente")
                                .HasColumnType("boolean");

                            b1.Property<string>("Nome")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("NomeMae")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("NomePai")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("OrgaoExpedidor")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<decimal?>("RendaBruta")
                                .HasColumnType("numeric");

                            b1.Property<string>("Rg")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<int?>("SexoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Telefone")
                                .HasColumnType("text");

                            b1.HasKey("PessoaId");

                            b1.HasIndex("SexoId");

                            b1.ToTable("pessoa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Sexo", "Sexo")
                                .WithMany()
                                .HasForeignKey("SexoId");

                            b1.OwnsOne("SCAE.Domain.Qualificacao", "Qualificacao", b2 =>
                                {
                                    b2.Property<int>("ConjugePessoaId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EscolaridadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EstadoCivilId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NacionalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NaturalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("ProfissaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("RendaBruta")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RendaLiquida")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Susep")
                                        .HasColumnType("text");

                                    b2.HasKey("ConjugePessoaId");

                                    b2.HasIndex("EscolaridadeId");

                                    b2.HasIndex("EstadoCivilId");

                                    b2.HasIndex("NacionalidadeId");

                                    b2.HasIndex("NaturalidadeId");

                                    b2.HasIndex("ProfissaoId");

                                    b2.ToTable("pessoa", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("ConjugePessoaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                                        .WithMany()
                                        .HasForeignKey("EscolaridadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.EstadoCivil", "EstadoCivil")
                                        .WithMany()
                                        .HasForeignKey("EstadoCivilId")
                                        .OnDelete(DeleteBehavior.SetNull);

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Nacionalidade", "Nacionalidade")
                                        .WithMany()
                                        .HasForeignKey("NacionalidadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Naturalidade")
                                        .WithMany()
                                        .HasForeignKey("NaturalidadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                                        .WithMany()
                                        .HasForeignKey("ProfissaoId");

                                    b2.Navigation("Escolaridade");

                                    b2.Navigation("EstadoCivil");

                                    b2.Navigation("Nacionalidade");

                                    b2.Navigation("Naturalidade");

                                    b2.Navigation("Profissao");
                                });

                            b1.Navigation("Qualificacao");

                            b1.Navigation("Sexo");
                        });

                    b.OwnsOne("SCAE.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(9)
                                .HasColumnType("character varying(9)");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<int?>("EstadoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int?>("MunicipioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Numero")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.HasKey("PessoaId");

                            b1.HasIndex("EstadoId");

                            b1.HasIndex("MunicipioId");

                            b1.ToTable("pessoa", "geral");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                .WithMany()
                                .HasForeignKey("EstadoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                .WithMany()
                                .HasForeignKey("MunicipioId");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");

                            b1.Navigation("Estado");

                            b1.Navigation("Municipio");
                        });

                    b.OwnsOne("SCAE.Domain.Qualificacao", "Qualificacao", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<int?>("EscolaridadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("EstadoCivilId")
                                .HasColumnType("integer");

                            b1.Property<int?>("NacionalidadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("NaturalidadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ProfissaoId")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("RendaBruta")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("RendaLiquida")
                                .HasColumnType("numeric");

                            b1.Property<string>("Susep")
                                .HasColumnType("text");

                            b1.HasKey("PessoaId");

                            b1.HasIndex("EscolaridadeId");

                            b1.HasIndex("EstadoCivilId");

                            b1.HasIndex("NacionalidadeId");

                            b1.HasIndex("NaturalidadeId");

                            b1.HasIndex("ProfissaoId");

                            b1.ToTable("pessoa", "geral");

                            b1.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                                .WithMany()
                                .HasForeignKey("EscolaridadeId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.EstadoCivil", "EstadoCivil")
                                .WithMany()
                                .HasForeignKey("EstadoCivilId")
                                .OnDelete(DeleteBehavior.SetNull);

                            b1.HasOne("SCAE.Domain.Entities.Geral.Nacionalidade", "Nacionalidade")
                                .WithMany()
                                .HasForeignKey("NacionalidadeId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Naturalidade")
                                .WithMany()
                                .HasForeignKey("NaturalidadeId");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                                .WithMany()
                                .HasForeignKey("ProfissaoId");

                            b1.Navigation("Escolaridade");

                            b1.Navigation("EstadoCivil");

                            b1.Navigation("Nacionalidade");

                            b1.Navigation("Naturalidade");

                            b1.Navigation("Profissao");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Geral.PessoaJuridicaResponsavel", "JuridicaResponsavel", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("integer");

                            b1.Property<string>("CnpjCpf")
                                .HasMaxLength(18)
                                .HasColumnType("character varying(18)");

                            b1.Property<DateTime?>("DataExpedicao")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime?>("DataNascimento")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("Email")
                                .HasMaxLength(120)
                                .HasColumnType("character varying(120)");

                            b1.Property<string>("Nome")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("OrgaoExpedido")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("Rg")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<int?>("SexoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Telefone")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.HasKey("PessoaId");

                            b1.HasIndex("SexoId");

                            b1.ToTable("pessoa", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Sexo", "Sexo")
                                .WithMany()
                                .HasForeignKey("SexoId");

                            b1.OwnsOne("SCAE.Domain.Endereco", "Endereco", b2 =>
                                {
                                    b2.Property<int>("PessoaJuridicaResponsavelPessoaId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Bairro")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Cep")
                                        .HasMaxLength(9)
                                        .HasColumnType("character varying(9)");

                                    b2.Property<string>("Complemento")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.Property<int?>("EstadoId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Logradouro")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("character varying(80)");

                                    b2.Property<int?>("MunicipioId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Numero")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.HasKey("PessoaJuridicaResponsavelPessoaId");

                                    b2.HasIndex("EstadoId");

                                    b2.HasIndex("MunicipioId");

                                    b2.ToTable("pessoa", "geral");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                        .WithMany()
                                        .HasForeignKey("EstadoId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                        .WithMany()
                                        .HasForeignKey("MunicipioId");

                                    b2.WithOwner()
                                        .HasForeignKey("PessoaJuridicaResponsavelPessoaId");

                                    b2.Navigation("Estado");

                                    b2.Navigation("Municipio");
                                });

                            b1.OwnsOne("SCAE.Domain.Qualificacao", "Qualificacao", b2 =>
                                {
                                    b2.Property<int>("PessoaJuridicaResponsavelPessoaId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EscolaridadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EstadoCivilId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NacionalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NaturalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("ProfissaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("RendaBruta")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RendaLiquida")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Susep")
                                        .HasColumnType("text");

                                    b2.HasKey("PessoaJuridicaResponsavelPessoaId");

                                    b2.HasIndex("EscolaridadeId");

                                    b2.HasIndex("EstadoCivilId");

                                    b2.HasIndex("NacionalidadeId");

                                    b2.HasIndex("NaturalidadeId");

                                    b2.HasIndex("ProfissaoId");

                                    b2.ToTable("pessoa", "geral");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                                        .WithMany()
                                        .HasForeignKey("EscolaridadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.EstadoCivil", "EstadoCivil")
                                        .WithMany()
                                        .HasForeignKey("EstadoCivilId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Nacionalidade", "Nacionalidade")
                                        .WithMany()
                                        .HasForeignKey("NacionalidadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Naturalidade")
                                        .WithMany()
                                        .HasForeignKey("NaturalidadeId");

                                    b2.WithOwner()
                                        .HasForeignKey("PessoaJuridicaResponsavelPessoaId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                                        .WithMany()
                                        .HasForeignKey("ProfissaoId");

                                    b2.Navigation("Escolaridade");

                                    b2.Navigation("EstadoCivil");

                                    b2.Navigation("Nacionalidade");

                                    b2.Navigation("Naturalidade");

                                    b2.Navigation("Profissao");
                                });

                            b1.Navigation("Endereco");

                            b1.Navigation("Qualificacao");

                            b1.Navigation("Sexo");
                        });

                    b.Navigation("Bancario");

                    b.Navigation("BancoInfoPessoa");

                    b.Navigation("Conjuge")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Endereco");

                    b.Navigation("JuridicaResponsavel")
                        .IsRequired();

                    b.Navigation("Qualificacao");

                    b.Navigation("Sexo");

                    b.Navigation("TipoPessoa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaContato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany("Contatos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany("Documentos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Pessoa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaFamiliar", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                        .WithMany()
                        .HasForeignKey("EscolaridadeId");

                    b.HasOne("SCAE.Domain.Entities.Geral.GrauParentesco", "GrauParentesco")
                        .WithMany()
                        .HasForeignKey("GrauParentescoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany("Familiares")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                        .WithMany()
                        .HasForeignKey("ProfissaoId");

                    b.Navigation("Escolaridade");

                    b.Navigation("GrauParentesco");

                    b.Navigation("Pessoa");

                    b.Navigation("Profissao");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaGateway", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Pessoa")
                        .WithMany("Gateways")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.TipoGateway", "TipoGateway")
                        .WithMany()
                        .HasForeignKey("TipoGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Pessoa");

                    b.Navigation("TipoGateway");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaPrefeitura", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Sexo", "Sexo")
                        .WithMany()
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoMoradiaNova", "TipoMoradiaNova")
                        .WithMany()
                        .HasForeignKey("TipoMoradiaNovaId");

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.OwnsOne("SCAE.Domain.Bancario", "Bancario", b1 =>
                        {
                            b1.Property<int>("PessoaPrefeituraId")
                                .HasColumnType("integer");

                            b1.Property<string>("Agencia")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("AgenciaDigito")
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)");

                            b1.Property<string>("Banco")
                                .HasMaxLength(40)
                                .HasColumnType("character varying(40)");

                            b1.Property<string>("Conta")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("ContaDigito")
                                .HasMaxLength(2)
                                .HasColumnType("character varying(2)");

                            b1.Property<string>("Pix")
                                .HasColumnType("text");

                            b1.HasKey("PessoaPrefeituraId");

                            b1.ToTable("pessoaprefeitura", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaPrefeituraId");
                        });

                    b.OwnsOne("SCAE.Domain.Conjuge", "Conjuge", b1 =>
                        {
                            b1.Property<int>("PessoaPrefeituraId")
                                .HasColumnType("integer");

                            b1.Property<string>("Cpf")
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)");

                            b1.Property<DateTime?>("DataEmissaoRg")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime?>("DataNascimento")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool?>("Dependente")
                                .HasColumnType("boolean");

                            b1.Property<string>("Nome")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("NomeMae")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("NomePai")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("OrgaoExpedidor")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<decimal?>("RendaBruta")
                                .HasColumnType("numeric");

                            b1.Property<string>("Rg")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<int?>("SexoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Telefone")
                                .HasColumnType("text");

                            b1.HasKey("PessoaPrefeituraId");

                            b1.HasIndex("SexoId");

                            b1.ToTable("pessoaprefeitura", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaPrefeituraId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Sexo", "Sexo")
                                .WithMany()
                                .HasForeignKey("SexoId");

                            b1.OwnsOne("SCAE.Domain.Qualificacao", "Qualificacao", b2 =>
                                {
                                    b2.Property<int>("ConjugePessoaPrefeituraId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EscolaridadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("EstadoCivilId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NacionalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("NaturalidadeId")
                                        .HasColumnType("integer");

                                    b2.Property<int?>("ProfissaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal?>("RendaBruta")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal?>("RendaLiquida")
                                        .HasColumnType("numeric");

                                    b2.Property<string>("Susep")
                                        .HasColumnType("text");

                                    b2.HasKey("ConjugePessoaPrefeituraId");

                                    b2.HasIndex("EscolaridadeId");

                                    b2.HasIndex("EstadoCivilId");

                                    b2.HasIndex("NacionalidadeId");

                                    b2.HasIndex("NaturalidadeId");

                                    b2.HasIndex("ProfissaoId");

                                    b2.ToTable("pessoaprefeitura", "geral");

                                    b2.WithOwner()
                                        .HasForeignKey("ConjugePessoaPrefeituraId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                                        .WithMany()
                                        .HasForeignKey("EscolaridadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.EstadoCivil", "EstadoCivil")
                                        .WithMany()
                                        .HasForeignKey("EstadoCivilId")
                                        .OnDelete(DeleteBehavior.SetNull);

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Nacionalidade", "Nacionalidade")
                                        .WithMany()
                                        .HasForeignKey("NacionalidadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Naturalidade")
                                        .WithMany()
                                        .HasForeignKey("NaturalidadeId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                                        .WithMany()
                                        .HasForeignKey("ProfissaoId");

                                    b2.Navigation("Escolaridade");

                                    b2.Navigation("EstadoCivil");

                                    b2.Navigation("Nacionalidade");

                                    b2.Navigation("Naturalidade");

                                    b2.Navigation("Profissao");
                                });

                            b1.Navigation("Qualificacao");

                            b1.Navigation("Sexo");
                        });

                    b.OwnsOne("SCAE.Domain.Qualificacao", "Qualificacao", b1 =>
                        {
                            b1.Property<int>("PessoaPrefeituraId")
                                .HasColumnType("integer");

                            b1.Property<int?>("EscolaridadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("EstadoCivilId")
                                .HasColumnType("integer");

                            b1.Property<int?>("NacionalidadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("NaturalidadeId")
                                .HasColumnType("integer");

                            b1.Property<int?>("ProfissaoId")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("RendaBruta")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("RendaLiquida")
                                .HasColumnType("numeric");

                            b1.Property<string>("Susep")
                                .HasColumnType("text");

                            b1.HasKey("PessoaPrefeituraId");

                            b1.HasIndex("EscolaridadeId");

                            b1.HasIndex("EstadoCivilId");

                            b1.HasIndex("NacionalidadeId");

                            b1.HasIndex("NaturalidadeId");

                            b1.HasIndex("ProfissaoId");

                            b1.ToTable("pessoaprefeitura", "geral");

                            b1.HasOne("SCAE.Domain.Entities.Geral.TipoEscolaridade", "Escolaridade")
                                .WithMany()
                                .HasForeignKey("EscolaridadeId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.EstadoCivil", "EstadoCivil")
                                .WithMany()
                                .HasForeignKey("EstadoCivilId")
                                .OnDelete(DeleteBehavior.SetNull);

                            b1.HasOne("SCAE.Domain.Entities.Geral.Nacionalidade", "Nacionalidade")
                                .WithMany()
                                .HasForeignKey("NacionalidadeId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Naturalidade")
                                .WithMany()
                                .HasForeignKey("NaturalidadeId");

                            b1.WithOwner()
                                .HasForeignKey("PessoaPrefeituraId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Profissao", "Profissao")
                                .WithMany()
                                .HasForeignKey("ProfissaoId");

                            b1.Navigation("Escolaridade");

                            b1.Navigation("EstadoCivil");

                            b1.Navigation("Nacionalidade");

                            b1.Navigation("Naturalidade");

                            b1.Navigation("Profissao");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Geral.RegistroImportacao", "RegistroImportacao", b1 =>
                        {
                            b1.Property<int>("PessoaPrefeituraId")
                                .HasColumnType("integer");

                            b1.Property<int?>("CodOrigem")
                                .HasColumnType("integer");

                            b1.Property<DateTime?>("DataImportacao")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("NomePlanilha")
                                .HasColumnType("text");

                            b1.HasKey("PessoaPrefeituraId");

                            b1.ToTable("pessoaprefeitura", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaPrefeituraId");
                        });

                    b.OwnsOne("SCAE.Domain.Entities.Shared.Moradia", "Moradia", b1 =>
                        {
                            b1.Property<int>("PessoaPrefeituraId")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("AreaMetroQuadrado")
                                .HasColumnType("numeric");

                            b1.Property<bool?>("BeneficiarioRegularizacaoFundiaria")
                                .HasColumnType("boolean");

                            b1.Property<string>("DominioImovel")
                                .HasColumnType("text");

                            b1.Property<string>("Edificacao")
                                .HasColumnType("text");

                            b1.Property<string>("FinalidadeImovel")
                                .HasColumnType("text");

                            b1.Property<string>("FormaAquisicao")
                                .HasColumnType("text");

                            b1.Property<string>("IPTU")
                                .HasColumnType("text");

                            b1.Property<int?>("NumeroBanheiros")
                                .HasColumnType("integer");

                            b1.Property<int?>("NumeroComodos")
                                .HasColumnType("integer");

                            b1.Property<int?>("NumeroFamiliasImovel")
                                .HasColumnType("integer");

                            b1.Property<int?>("NumeroOcupacoes")
                                .HasColumnType("integer");

                            b1.Property<int?>("NumeroQuartos")
                                .HasColumnType("integer");

                            b1.Property<bool?>("PossuiCaixaDagua")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("PossuiDocumentacaoImovel")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("PossuiEscoamentoSanitario")
                                .HasColumnType("boolean");

                            b1.Property<bool?>("SituacaoRiscoImovel")
                                .HasColumnType("boolean");

                            b1.Property<int?>("TipoAbastecimentoAguaId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoColetaLixoId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoCondicaoMoradiaId")
                                .HasColumnType("integer");

                            b1.Property<string>("TipoDocumentoImovel")
                                .HasColumnType("text");

                            b1.Property<int?>("TipoEdificacaoMoradiaId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoEnergiaMoradiaId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoEsgotamentoSanitarioId")
                                .HasColumnType("integer");

                            b1.Property<int?>("TipoMoradiaId")
                                .HasColumnType("integer");

                            b1.HasKey("PessoaPrefeituraId");

                            b1.HasIndex("TipoAbastecimentoAguaId");

                            b1.HasIndex("TipoColetaLixoId");

                            b1.HasIndex("TipoCondicaoMoradiaId");

                            b1.HasIndex("TipoEdificacaoMoradiaId");

                            b1.HasIndex("TipoEnergiaMoradiaId");

                            b1.HasIndex("TipoEsgotamentoSanitarioId");

                            b1.HasIndex("TipoMoradiaId");

                            b1.ToTable("pessoaprefeitura", "geral");

                            b1.WithOwner()
                                .HasForeignKey("PessoaPrefeituraId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoAbastecimentoAgua", "TipoAbastecimentoAgua")
                                .WithMany()
                                .HasForeignKey("TipoAbastecimentoAguaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoColetaLixo", "TipoColetaLixo")
                                .WithMany()
                                .HasForeignKey("TipoColetaLixoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoCondicaoMoradia", "TipoCondicaoMoradia")
                                .WithMany()
                                .HasForeignKey("TipoCondicaoMoradiaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEdificacaoMoradia", "TipoEdificacaoMoradia")
                                .WithMany()
                                .HasForeignKey("TipoEdificacaoMoradiaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEnergiaMoradia", "TipoEnergiaMoradia")
                                .WithMany()
                                .HasForeignKey("TipoEnergiaMoradiaId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoEsgotamentoSanitario", "TipoEsgotamentoSanitario")
                                .WithMany()
                                .HasForeignKey("TipoEsgotamentoSanitarioId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.ModuloPrefeitura.TipoMoradia", "TipoMoradia")
                                .WithMany()
                                .HasForeignKey("TipoMoradiaId");

                            b1.OwnsOne("SCAE.Domain.Endereco", "Endereco", b2 =>
                                {
                                    b2.Property<int>("MoradiaPessoaPrefeituraId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Bairro")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.Property<string>("Cep")
                                        .HasMaxLength(9)
                                        .HasColumnType("character varying(9)");

                                    b2.Property<string>("Complemento")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.Property<int?>("EstadoId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Logradouro")
                                        .IsRequired()
                                        .HasMaxLength(80)
                                        .HasColumnType("character varying(80)");

                                    b2.Property<int?>("MunicipioId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Numero")
                                        .HasMaxLength(60)
                                        .HasColumnType("character varying(60)");

                                    b2.HasKey("MoradiaPessoaPrefeituraId");

                                    b2.HasIndex("EstadoId");

                                    b2.HasIndex("MunicipioId");

                                    b2.ToTable("pessoaprefeitura", "geral");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                        .WithMany()
                                        .HasForeignKey("EstadoId");

                                    b2.WithOwner()
                                        .HasForeignKey("MoradiaPessoaPrefeituraId");

                                    b2.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                        .WithMany()
                                        .HasForeignKey("MunicipioId");

                                    b2.Navigation("Estado");

                                    b2.Navigation("Municipio");
                                });

                            b1.Navigation("Endereco");

                            b1.Navigation("TipoAbastecimentoAgua");

                            b1.Navigation("TipoColetaLixo");

                            b1.Navigation("TipoCondicaoMoradia");

                            b1.Navigation("TipoEdificacaoMoradia");

                            b1.Navigation("TipoEnergiaMoradia");

                            b1.Navigation("TipoEsgotamentoSanitario");

                            b1.Navigation("TipoMoradia");
                        });

                    b.Navigation("Bancario");

                    b.Navigation("Conjuge")
                        .IsRequired();

                    b.Navigation("Moradia")
                        .IsRequired();

                    b.Navigation("Qualificacao");

                    b.Navigation("RegistroImportacao");

                    b.Navigation("Sexo");

                    b.Navigation("TipoMoradiaNova");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Seguradora", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.TipoPessoa", "TipoPessoa")
                        .WithMany()
                        .HasForeignKey("TipoPessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("SeguradoraId")
                                .HasColumnType("integer");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Cep")
                                .HasMaxLength(9)
                                .HasColumnType("character varying(9)");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.Property<int?>("EstadoId")
                                .HasColumnType("integer");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("character varying(80)");

                            b1.Property<int?>("MunicipioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Numero")
                                .HasMaxLength(60)
                                .HasColumnType("character varying(60)");

                            b1.HasKey("SeguradoraId");

                            b1.HasIndex("EstadoId");

                            b1.HasIndex("MunicipioId");

                            b1.ToTable("seguradora", "geral");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                                .WithMany()
                                .HasForeignKey("EstadoId");

                            b1.HasOne("SCAE.Domain.Entities.Geral.Municipio", "Municipio")
                                .WithMany()
                                .HasForeignKey("MunicipioId");

                            b1.WithOwner()
                                .HasForeignKey("SeguradoraId");

                            b1.Navigation("Estado");

                            b1.Navigation("Municipio");
                        });

                    b.Navigation("Empresa");

                    b.Navigation("Endereco");

                    b.Navigation("TipoPessoa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.SeguradoraContato", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Seguradora", null)
                        .WithMany("Contatos")
                        .HasForeignKey("SeguradoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Usuario", b =>
                {
                    b.OwnsOne("SCAE.Domain.Entities.Shared.Contato", "Complementar", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("integer");

                            b1.Property<string>("Celular")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.Property<string>("Email")
                                .HasColumnType("text");

                            b1.Property<string>("Nome")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<string>("Ramal")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)");

                            b1.Property<string>("Telefone")
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("usuario", "geral");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Complementar");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.Composicao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.ClasseComposicao", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrigemDados", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.TipoComposicao", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstado", "Estado", b1 =>
                        {
                            b1.Property<int>("ComposicaoId")
                                .HasColumnType("integer");

                            b1.HasKey("ComposicaoId");

                            b1.ToTable("composicao", "orcamentoobras");

                            b1.WithOwner()
                                .HasForeignKey("ComposicaoId");

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Acre", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Alagoas", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Amapa", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Amazonas", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Bahia", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Ceara", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "DistritoFederal", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "EspiritoSanto", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Goias", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Maranhao", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MatoGrosso", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MatoGrossoDoSul", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MinasGerais", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Para", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Paraiba", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Parana", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Pernambuco", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Piaui", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioDeJaneiro", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioGrandeDoNorte", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioGrandeDoSul", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Rondonia", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Roraima", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "SantaCatarina", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "SaoPaulo", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Sergipe", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Tocantins", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoComposicaoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoComposicaoId");

                                    b2.ToTable("composicao", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoComposicaoId");
                                });

                            b1.Navigation("Acre");

                            b1.Navigation("Alagoas");

                            b1.Navigation("Amapa");

                            b1.Navigation("Amazonas");

                            b1.Navigation("Bahia");

                            b1.Navigation("Ceara");

                            b1.Navigation("DistritoFederal");

                            b1.Navigation("EspiritoSanto");

                            b1.Navigation("Goias");

                            b1.Navigation("Maranhao");

                            b1.Navigation("MatoGrosso");

                            b1.Navigation("MatoGrossoDoSul");

                            b1.Navigation("MinasGerais");

                            b1.Navigation("Para");

                            b1.Navigation("Paraiba");

                            b1.Navigation("Parana");

                            b1.Navigation("Pernambuco");

                            b1.Navigation("Piaui");

                            b1.Navigation("RioDeJaneiro");

                            b1.Navigation("RioGrandeDoNorte");

                            b1.Navigation("RioGrandeDoSul");

                            b1.Navigation("Rondonia");

                            b1.Navigation("Roraima");

                            b1.Navigation("SantaCatarina");

                            b1.Navigation("SaoPaulo");

                            b1.Navigation("Sergipe");

                            b1.Navigation("Tocantins");
                        });

                    b.Navigation("Classe");

                    b.Navigation("Estado")
                        .IsRequired();

                    b.Navigation("Origem");

                    b.Navigation("Tipo");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ComposicaoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.Composicao", "ComposicaoAuxiliar")
                        .WithMany()
                        .HasForeignKey("ComposicaoAuxiliarId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.Composicao", "Composicao")
                        .WithMany("Itens")
                        .HasForeignKey("ComposicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Composicao");

                    b.Navigation("ComposicaoAuxiliar");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.Insumo", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrigemDados", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.TipoInsumo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstado", "Estado", b1 =>
                        {
                            b1.Property<int>("InsumoId")
                                .HasColumnType("integer");

                            b1.HasKey("InsumoId");

                            b1.ToTable("insumo", "orcamentoobras");

                            b1.WithOwner()
                                .HasForeignKey("InsumoId");

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Acre", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Alagoas", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Amapa", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Amazonas", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Bahia", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Ceara", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "DistritoFederal", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "EspiritoSanto", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Goias", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Maranhao", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MatoGrosso", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MatoGrossoDoSul", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "MinasGerais", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Para", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Paraiba", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Parana", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Pernambuco", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Piaui", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioDeJaneiro", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioGrandeDoNorte", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "RioGrandeDoSul", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Rondonia", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Roraima", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "SantaCatarina", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "SaoPaulo", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Sergipe", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.InsumoEstadoValor", "Tocantins", b2 =>
                                {
                                    b2.Property<int>("InsumoEstadoInsumoId")
                                        .HasColumnType("integer");

                                    b2.Property<decimal>("ValorDesonerado")
                                        .HasColumnType("numeric");

                                    b2.Property<decimal>("ValorNaoDesonerado")
                                        .HasColumnType("numeric");

                                    b2.HasKey("InsumoEstadoInsumoId");

                                    b2.ToTable("insumo", "orcamentoobras");

                                    b2.WithOwner()
                                        .HasForeignKey("InsumoEstadoInsumoId");
                                });

                            b1.Navigation("Acre");

                            b1.Navigation("Alagoas");

                            b1.Navigation("Amapa");

                            b1.Navigation("Amazonas");

                            b1.Navigation("Bahia");

                            b1.Navigation("Ceara");

                            b1.Navigation("DistritoFederal");

                            b1.Navigation("EspiritoSanto");

                            b1.Navigation("Goias");

                            b1.Navigation("Maranhao");

                            b1.Navigation("MatoGrosso");

                            b1.Navigation("MatoGrossoDoSul");

                            b1.Navigation("MinasGerais");

                            b1.Navigation("Para");

                            b1.Navigation("Paraiba");

                            b1.Navigation("Parana");

                            b1.Navigation("Pernambuco");

                            b1.Navigation("Piaui");

                            b1.Navigation("RioDeJaneiro");

                            b1.Navigation("RioGrandeDoNorte");

                            b1.Navigation("RioGrandeDoSul");

                            b1.Navigation("Rondonia");

                            b1.Navigation("Roraima");

                            b1.Navigation("SantaCatarina");

                            b1.Navigation("SaoPaulo");

                            b1.Navigation("Sergipe");

                            b1.Navigation("Tocantins");
                        });

                    b.Navigation("Estado")
                        .IsRequired();

                    b.Navigation("Origem");

                    b.Navigation("Tipo");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapa", "ModeloEtapaPai")
                        .WithMany()
                        .HasForeignKey("ModeloEtapaPaiId");

                    b.Navigation("ModeloEtapaPai");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapaItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapa", "ModeloEtapa")
                        .WithMany("Itens")
                        .HasForeignKey("ModeloEtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("SCAE.Domain.Entities.OrcamentoObras.ModeloComposicao", "Composicao", b1 =>
                        {
                            b1.Property<int>("ModeloOrcamentoEtapaItemId")
                                .HasColumnType("integer");

                            b1.Property<int>("Ano")
                                .HasColumnType("integer");

                            b1.Property<int>("ClasseId")
                                .HasColumnType("integer");

                            b1.Property<string>("Codigo")
                                .HasColumnType("text");

                            b1.Property<string>("Descricao")
                                .HasColumnType("text");

                            b1.Property<int>("Mes")
                                .HasColumnType("integer");

                            b1.Property<int>("OrigemId")
                                .HasColumnType("integer");

                            b1.Property<int>("UnidadeMedidaId")
                                .HasColumnType("integer");

                            b1.Property<decimal>("ValorOriginalDesonerado")
                                .HasColumnType("numeric");

                            b1.Property<decimal>("ValorOriginalNaoDesonerado")
                                .HasColumnType("numeric");

                            b1.HasKey("ModeloOrcamentoEtapaItemId");

                            b1.HasIndex("ClasseId");

                            b1.HasIndex("OrigemId");

                            b1.HasIndex("UnidadeMedidaId");

                            b1.ToTable("modeloorcamentoetapaitem", "orcamentoobras");

                            b1.HasOne("SCAE.Domain.Entities.OrcamentoObras.ClasseComposicao", "Classe")
                                .WithMany()
                                .HasForeignKey("ClasseId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("ModeloOrcamentoEtapaItemId");

                            b1.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrigemDados", "Origem")
                                .WithMany()
                                .HasForeignKey("OrigemId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("SCAE.Domain.Entities.Almoxarifado.UnidadeMedida", "UnidadeMedida")
                                .WithMany()
                                .HasForeignKey("UnidadeMedidaId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Classe");

                            b1.Navigation("Origem");

                            b1.Navigation("UnidadeMedida");
                        });

                    b.Navigation("Composicao");

                    b.Navigation("ModeloEtapa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapa", "EtapaPai")
                        .WithMany()
                        .HasForeignKey("EtapaPaiId");

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrcamentoObras", "Orcamento")
                        .WithMany("Etapas")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EtapaPai");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapaItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.Composicao", "Composicao")
                        .WithMany()
                        .HasForeignKey("ComposicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapa", "Etapa")
                        .WithMany("Itens")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Composicao");

                    b.Navigation("Etapa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoObras", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.OrcamentoObras.OrigemDados", "Origem")
                        .WithMany()
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");

                    b.Navigation("Estado");

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedor", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Projeto.TipoContratoFornecedor", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");

                    b.Navigation("Fornecedor");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.ContratoFornecedor", "ContratoFornecedor")
                        .WithMany("Documentos")
                        .HasForeignKey("ContratoFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("ContratoFornecedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.ContratoFornecedor", "ContratoFornecedor")
                        .WithMany("Itens")
                        .HasForeignKey("ContratoFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Projeto.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoFornecedor");

                    b.Navigation("Etapa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedorObservacao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.ContratoFornecedor", "ContratoFornecedor")
                        .WithMany("Observacoes")
                        .HasForeignKey("ContratoFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoFornecedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Etapa", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Projeto.Etapa", "EtapaPai")
                        .WithMany()
                        .HasForeignKey("EtapaPaiId");

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.TipoEmpreendimento", "TipoEmpreendimento")
                        .WithMany()
                        .HasForeignKey("TipoEmpreendimentoId");

                    b.Navigation("Empresa");

                    b.Navigation("EtapaPai");

                    b.Navigation("TipoEmpreendimento");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Execucao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.ContratoFornecedorItem", "ContratoItem")
                        .WithMany()
                        .HasForeignKey("ContratoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Projeto.Medicao", "Medicao")
                        .WithMany("Execucoes")
                        .HasForeignKey("MedicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoItem");

                    b.Navigation("Medicao");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ExecucaoDocumento", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.Execucao", "Execucao")
                        .WithMany("Documentos")
                        .HasForeignKey("ExecucaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Execucao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ExecucaoUnidade", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.Execucao", "Execucao")
                        .WithMany("Unidades")
                        .HasForeignKey("ExecucaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Execucao");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Medicao", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.ContratoFornecedor", "ContratoFornecedor")
                        .WithMany()
                        .HasForeignKey("ContratoFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Financeiro.Despesa", "Despesa")
                        .WithMany()
                        .HasForeignKey("DespesaId");

                    b.Navigation("ContratoFornecedor");

                    b.Navigation("Despesa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Orcado", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Empreendimento.Empreendimento", "Empreendimento")
                        .WithMany()
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Geral.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empreendimento");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.OrcadoItem", b =>
                {
                    b.HasOne("SCAE.Domain.Entities.Projeto.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Projeto.Orcado", "Orcado")
                        .WithMany("Itens")
                        .HasForeignKey("OrcadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SCAE.Domain.Entities.Almoxarifado.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etapa");

                    b.Navigation("Orcado");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Almoxarifado", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Inventario", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Produto", b =>
                {
                    b.Navigation("AlmoxarifadoItens");

                    b.Navigation("Fornecedores");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Almoxarifado.Requisicao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.Contrato", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("ContratosDigitais");

                    b.Navigation("Corretores");

                    b.Navigation("Despesas");

                    b.Navigation("Documentos");

                    b.Navigation("HistoricoSituacoes");

                    b.Navigation("Observacoes");

                    b.Navigation("Receitas");

                    b.Navigation("Reserva");

                    b.Navigation("UnidadesAdicionais");

                    b.Navigation("Vistorias");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoDigitalNS.ContratoDigital", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Signatarios");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Clientes.ContratoVistoria", b =>
                {
                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Orcamento", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Fornecedores");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.OrcamentoItem", b =>
                {
                    b.Navigation("ItemFornecedores");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Compras.Pedido", b =>
                {
                    b.Navigation("ArquivosXML");

                    b.Navigation("Classificacoes");

                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.Hidrometro", b =>
                {
                    b.Navigation("Marcacoes");

                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.ControleAgua.TabelaValorConsumoAgua", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Empreendimento", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("EmpreendimentosPessoas");

                    b.Navigation("Fotos");

                    b.Navigation("Grupos");

                    b.Navigation("LadosAdicionaisPadroes");

                    b.Navigation("ModelosDeContrato");

                    b.Navigation("Proprietarios");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Grupo", b =>
                {
                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Lote", b =>
                {
                    b.Navigation("LadosAdicionais");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Reserva", b =>
                {
                    b.Navigation("Observacoes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Empreendimento.Unidade", b =>
                {
                    b.Navigation("ConfrontantesAdicionais");

                    b.Navigation("Fotos");

                    b.Navigation("Imovel");

                    b.Navigation("Jazigo");

                    b.Navigation("Lote");

                    b.Navigation("PlanoPagamento");

                    b.Navigation("Proprietarios");

                    b.Navigation("Reservas");

                    b.Navigation("Vicios");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.AntecipacaoAmortizacao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ContaCorrente", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Gateways");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Despesa", b =>
                {
                    b.Navigation("Classificacoes");

                    b.Navigation("Documentos");

                    b.Navigation("Parcelas");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaBaixa", b =>
                {
                    b.Navigation("Comprovante");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.DespesaParcela", b =>
                {
                    b.Navigation("Baixas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Parametro", b =>
                {
                    b.Navigation("Cobrancas");

                    b.Navigation("Gatways");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ParametroGatway", b =>
                {
                    b.Navigation("ContasCorrentesSplit");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Receita", b =>
                {
                    b.Navigation("Classificacoes");

                    b.Navigation("Documentos");

                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaBaixa", b =>
                {
                    b.Navigation("ReceitaBaixaComprovante");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaParcela", b =>
                {
                    b.Navigation("AntecipacaoAmortizacao");

                    b.Navigation("AntecipacaoComprovante");

                    b.Navigation("Baixas");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReceitaTransacao", b =>
                {
                    b.Navigation("Baixas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.ReguaCobranca", b =>
                {
                    b.Navigation("Etapas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Financeiro.Remessa", b =>
                {
                    b.Navigation("Documento");

                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.ColunaFunil", b =>
                {
                    b.Navigation("Leads");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.CRMVendas.Lead", b =>
                {
                    b.Navigation("Atendimentos");

                    b.Navigation("Historicos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Empresa", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Gateways");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Pessoa", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Documentos");

                    b.Navigation("EmpreendimentosPessoas");

                    b.Navigation("Familiares");

                    b.Navigation("Gateways");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.PessoaPrefeitura", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Documentos");

                    b.Navigation("Familiares");

                    b.Navigation("Gateways");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Seguradora", b =>
                {
                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Geral.Usuario", b =>
                {
                    b.Navigation("Atendimentos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.Composicao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.ModeloOrcamentoEtapa", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoEtapa", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.OrcamentoObras.OrcamentoObras", b =>
                {
                    b.Navigation("Etapas");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.ContratoFornecedor", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Itens");

                    b.Navigation("Observacoes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Execucao", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Unidades");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Medicao", b =>
                {
                    b.Navigation("Execucoes");
                });

            modelBuilder.Entity("SCAE.Domain.Entities.Projeto.Orcado", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
